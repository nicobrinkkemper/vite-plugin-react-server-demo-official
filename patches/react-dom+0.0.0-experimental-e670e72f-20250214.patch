diff --git a/node_modules/react-dom/cjs/react-dom-client.development.js b/node_modules/react-dom/cjs/react-dom-client.development.js
index b3ce771..af9cc6d 100644
--- a/node_modules/react-dom/cjs/react-dom-client.development.js
+++ b/node_modules/react-dom/cjs/react-dom-client.development.js
@@ -419,7 +419,11 @@
           break;
         default:
           if (
-            ((nextRootContext = nextRootInstance.tagName),
+            ((nextRootInstance =
+              8 === nextRootContext
+                ? nextRootInstance.parentNode
+                : nextRootInstance),
+            (nextRootContext = nextRootInstance.tagName),
             (nextRootInstance = nextRootInstance.namespaceURI))
           )
             (nextRootInstance = getOwnHostContext(nextRootInstance)),
@@ -582,7 +586,6 @@
         case 64:
           return 64;
         case 128:
-          return 128;
         case 256:
         case 512:
         case 1024:
@@ -597,7 +600,7 @@
         case 524288:
         case 1048576:
         case 2097152:
-          return lanes & 4194048;
+          return lanes & 4194176;
         case 4194304:
         case 8388608:
         case 16777216:
@@ -659,7 +662,7 @@
             ((suspendedLanes = nextLanes & -nextLanes),
             (rootHasPendingCommit = wipLanes & -wipLanes),
             suspendedLanes >= rootHasPendingCommit ||
-              (32 === suspendedLanes && 0 !== (rootHasPendingCommit & 4194048)))
+              (32 === suspendedLanes && 0 !== (rootHasPendingCommit & 4194176)))
           ? wipLanes
           : nextLanes;
     }
@@ -677,10 +680,10 @@
         case 2:
         case 4:
         case 8:
-        case 64:
           return currentTime + 250;
         case 16:
         case 32:
+        case 64:
         case 128:
         case 256:
         case 512:
@@ -720,7 +723,7 @@
     function claimNextTransitionLane() {
       var lane = nextTransitionLane;
       nextTransitionLane <<= 1;
-      0 === (nextTransitionLane & 4194048) && (nextTransitionLane = 256);
+      0 === (nextTransitionLane & 4194176) && (nextTransitionLane = 128);
       return lane;
     }
     function claimNextRetryLane() {
@@ -796,7 +799,7 @@
       root.entanglements[spawnedLaneIndex] =
         root.entanglements[spawnedLaneIndex] |
         1073741824 |
-        (entangledLanes & 4194090);
+        (entangledLanes & 4194218);
     }
     function markRootEntangled(root, entangledLanes) {
       var rootEntangledLanes = (root.entangledLanes |= entangledLanes);
@@ -819,6 +822,7 @@
         case 32:
           lane = 16;
           break;
+        case 128:
         case 256:
         case 512:
         case 1024:
@@ -837,7 +841,7 @@
         case 8388608:
         case 16777216:
         case 33554432:
-          lane = 128;
+          lane = 64;
           break;
         case 268435456:
           lane = 134217728;
@@ -1461,7 +1465,10 @@
     }
     function runWithFiberInDEV(fiber, callback, arg0, arg1, arg2, arg3, arg4) {
       var previousFiber = current;
-      setCurrentFiber(fiber);
+      ReactSharedInternals.getCurrentStack =
+        null === fiber ? null : getCurrentFiberStackInDev;
+      isRendering = !1;
+      current = fiber;
       try {
         return null !== fiber && fiber._debugTask
           ? fiber._debugTask.run(
@@ -1469,18 +1476,12 @@
             )
           : callback(arg0, arg1, arg2, arg3, arg4);
       } finally {
-        setCurrentFiber(previousFiber);
+        current = previousFiber;
       }
       throw Error(
         "runWithFiberInDEV should never be called in production. This is a bug in React."
       );
     }
-    function setCurrentFiber(fiber) {
-      ReactSharedInternals.getCurrentStack =
-        null === fiber ? null : getCurrentFiberStackInDev;
-      isRendering = !1;
-      current = fiber;
-    }
     function getToStringValue(value) {
       switch (typeof value) {
         case "bigint":
@@ -2306,41 +2307,33 @@
       return null !== node ? describeDiff(node).replaceAll(/^[+-]/gm, ">") : "";
     }
     function updatedAncestorInfoDev(oldInfo, tag) {
-      var ancestorInfo = assign({}, oldInfo || emptyAncestorInfoDev),
-        info = { tag: tag };
+      oldInfo = assign({}, oldInfo || emptyAncestorInfoDev);
+      var info = { tag: tag };
       -1 !== inScopeTags.indexOf(tag) &&
-        ((ancestorInfo.aTagInScope = null),
-        (ancestorInfo.buttonTagInScope = null),
-        (ancestorInfo.nobrTagInScope = null));
-      -1 !== buttonScopeTags.indexOf(tag) &&
-        (ancestorInfo.pTagInButtonScope = null);
+        ((oldInfo.aTagInScope = null),
+        (oldInfo.buttonTagInScope = null),
+        (oldInfo.nobrTagInScope = null));
+      -1 !== buttonScopeTags.indexOf(tag) && (oldInfo.pTagInButtonScope = null);
       -1 !== specialTags.indexOf(tag) &&
         "address" !== tag &&
         "div" !== tag &&
         "p" !== tag &&
-        ((ancestorInfo.listItemTagAutoclosing = null),
-        (ancestorInfo.dlItemTagAutoclosing = null));
-      ancestorInfo.current = info;
-      "form" === tag && (ancestorInfo.formTag = info);
-      "a" === tag && (ancestorInfo.aTagInScope = info);
-      "button" === tag && (ancestorInfo.buttonTagInScope = info);
-      "nobr" === tag && (ancestorInfo.nobrTagInScope = info);
-      "p" === tag && (ancestorInfo.pTagInButtonScope = info);
-      "li" === tag && (ancestorInfo.listItemTagAutoclosing = info);
-      if ("dd" === tag || "dt" === tag)
-        ancestorInfo.dlItemTagAutoclosing = info;
+        ((oldInfo.listItemTagAutoclosing = null),
+        (oldInfo.dlItemTagAutoclosing = null));
+      oldInfo.current = info;
+      "form" === tag && (oldInfo.formTag = info);
+      "a" === tag && (oldInfo.aTagInScope = info);
+      "button" === tag && (oldInfo.buttonTagInScope = info);
+      "nobr" === tag && (oldInfo.nobrTagInScope = info);
+      "p" === tag && (oldInfo.pTagInButtonScope = info);
+      "li" === tag && (oldInfo.listItemTagAutoclosing = info);
+      if ("dd" === tag || "dt" === tag) oldInfo.dlItemTagAutoclosing = info;
       "#document" === tag || "html" === tag
-        ? (ancestorInfo.containerTagInScope = null)
-        : ancestorInfo.containerTagInScope ||
-          (ancestorInfo.containerTagInScope = info);
-      null !== oldInfo ||
-      ("#document" !== tag && "html" !== tag && "body" !== tag)
-        ? !0 === ancestorInfo.implicitRootScope &&
-          (ancestorInfo.implicitRootScope = !1)
-        : (ancestorInfo.implicitRootScope = !0);
-      return ancestorInfo;
-    }
-    function isTagValidWithParent(tag, parentTag, implicitRootScope) {
+        ? (oldInfo.containerTagInScope = null)
+        : oldInfo.containerTagInScope || (oldInfo.containerTagInScope = info);
+      return oldInfo;
+    }
+    function isTagValidWithParent(tag, parentTag) {
       switch (parentTag) {
         case "select":
           return (
@@ -2400,12 +2393,11 @@
             "template" === tag
           );
         case "html":
-          if (implicitRootScope) break;
           return "head" === tag || "body" === tag || "frameset" === tag;
         case "frameset":
           return "frame" === tag;
         case "#document":
-          if (!implicitRootScope) return "html" === tag;
+          return "html" === tag;
       }
       switch (tag) {
         case "h1":
@@ -2425,11 +2417,14 @@
         case "rp":
         case "rt":
           return -1 === impliedEndTags.indexOf(parentTag);
+        case "body":
         case "caption":
         case "col":
         case "colgroup":
         case "frameset":
         case "frame":
+        case "head":
+        case "html":
         case "tbody":
         case "td":
         case "tfoot":
@@ -2437,19 +2432,6 @@
         case "thead":
         case "tr":
           return null == parentTag;
-        case "head":
-          return implicitRootScope || null === parentTag;
-        case "html":
-          return (
-            (implicitRootScope && "#document" === parentTag) ||
-            null === parentTag
-          );
-        case "body":
-          return (
-            (implicitRootScope &&
-              ("#document" === parentTag || "html" === parentTag)) ||
-            null === parentTag
-          );
       }
       return !0;
     }
@@ -2524,8 +2506,7 @@
       var parentInfo = ancestorInfo.current;
       ancestorInfo = (parentInfo = isTagValidWithParent(
         childTag,
-        parentInfo && parentInfo.tag,
-        ancestorInfo.implicitRootScope
+        parentInfo && parentInfo.tag
       )
         ? null
         : parentInfo)
@@ -2579,33 +2560,32 @@
           }));
       return !1;
     }
-    function validateTextNesting(childText, parentTag, implicitRootScope) {
-      if (implicitRootScope || isTagValidWithParent("#text", parentTag, !1))
-        return !0;
-      implicitRootScope = "#text|" + parentTag;
-      if (didWarn[implicitRootScope]) return !1;
-      didWarn[implicitRootScope] = !0;
-      var ancestor = (implicitRootScope = current)
-        ? findAncestor(implicitRootScope, parentTag)
+    function validateTextNesting(childText, parentTag) {
+      if (isTagValidWithParent("#text", parentTag)) return !0;
+      var warnKey = "#text|" + parentTag;
+      if (didWarn[warnKey]) return !1;
+      didWarn[warnKey] = !0;
+      var ancestor = (warnKey = current)
+        ? findAncestor(warnKey, parentTag)
         : null;
-      implicitRootScope =
-        null !== implicitRootScope && null !== ancestor
+      warnKey =
+        null !== warnKey && null !== ancestor
           ? describeAncestors(
               ancestor,
-              implicitRootScope,
-              6 !== implicitRootScope.tag ? { children: null } : null
+              warnKey,
+              6 !== warnKey.tag ? { children: null } : null
             )
           : "";
       /\S/.test(childText)
         ? console.error(
             "In HTML, text nodes cannot be a child of <%s>.\nThis will cause a hydration error.%s",
             parentTag,
-            implicitRootScope
+            warnKey
           )
         : console.error(
             "In HTML, whitespace text nodes cannot be a child of <%s>. Make sure you don't have any extra whitespace between tags on each line of your source code.\nThis will cause a hydration error.%s",
             parentTag,
-            implicitRootScope
+            warnKey
           );
       return !1;
     }
@@ -3773,11 +3753,6 @@
       enqueueUpdate$1(fiber, null, null, lane);
       return getRootForUpdatedFiber(fiber);
     }
-    function enqueueGestureRender(fiber) {
-      fiber = markUpdateLaneFromFiberToRoot(fiber, null, 64);
-      null !== fiber && markRootUpdated$1(fiber, 64);
-      return fiber;
-    }
     function markUpdateLaneFromFiberToRoot(sourceFiber, update, lane) {
       sourceFiber.lanes |= lane;
       var alternate = sourceFiber.alternate;
@@ -3793,19 +3768,17 @@
               (isHidden = !0)),
           (sourceFiber = parent),
           (parent = parent.return);
-      return 3 === sourceFiber.tag
-        ? ((parent = sourceFiber.stateNode),
-          isHidden &&
-            null !== update &&
-            ((isHidden = 31 - clz32(lane)),
-            (sourceFiber = parent.hiddenUpdates),
-            (alternate = sourceFiber[isHidden]),
-            null === alternate
-              ? (sourceFiber[isHidden] = [update])
-              : alternate.push(update),
-            (update.lane = lane | 536870912)),
-          parent)
-        : null;
+      isHidden &&
+        null !== update &&
+        3 === sourceFiber.tag &&
+        ((parent = sourceFiber.stateNode),
+        (isHidden = 31 - clz32(lane)),
+        (parent = parent.hiddenUpdates),
+        (sourceFiber = parent[isHidden]),
+        null === sourceFiber
+          ? (parent[isHidden] = [update])
+          : sourceFiber.push(update),
+        (update.lane = lane | 536870912));
     }
     function getRootForUpdatedFiber(sourceFiber) {
       if (nestedUpdateCount > NESTED_UPDATE_LIMIT)
@@ -3971,7 +3944,7 @@
           (blockingEventTime = lane),
           (blockingEventType = JSCompiler_temp));
       else if (
-        0 !== (lane & 4194048) &&
+        0 !== (lane & 4194176) &&
         0 > transitionUpdateTime &&
         ((transitionUpdateTime = now()), 0 > transitionStartTime)
       ) {
@@ -4064,9 +4037,9 @@
     }
     function setCurrentTrackFromLanes(lanes) {
       reusableLaneDevToolDetails.track =
-        lanes & 127
+        lanes & 63
           ? "Blocking"
-          : lanes & 4194176
+          : lanes & 4194240
             ? "Transition"
             : lanes & 62914560
               ? "Suspense"
@@ -4183,13 +4156,13 @@
     function logRenderPhase(startTime, endTime, lanes) {
       supportsUserTiming &&
         ((reusableLaneDevToolDetails.color =
-          (lanes & 738197653) === lanes ? "tertiary-dark" : "primary-dark"),
+          (lanes & 738197589) === lanes ? "tertiary-dark" : "primary-dark"),
         (reusableLaneOptions.start = startTime),
         (reusableLaneOptions.end = endTime),
         performance.measure(
           (lanes & 536870912) === lanes
             ? "Prepared"
-            : (lanes & 201326741) === lanes
+            : (lanes & 201326677) === lanes
               ? "Hydrated"
               : "Render",
           reusableLaneOptions
@@ -4198,7 +4171,7 @@
     function logSuspendedRenderPhase(startTime, endTime, lanes) {
       supportsUserTiming &&
         ((reusableLaneDevToolDetails.color =
-          (lanes & 738197653) === lanes ? "tertiary-dark" : "primary-dark"),
+          (lanes & 738197589) === lanes ? "tertiary-dark" : "primary-dark"),
         (reusableLaneOptions.start = startTime),
         (reusableLaneOptions.end = endTime),
         performance.measure("Prewarm", reusableLaneOptions));
@@ -4206,7 +4179,7 @@
     function logSuspendedWithDelayPhase(startTime, endTime, lanes) {
       supportsUserTiming &&
         ((reusableLaneDevToolDetails.color =
-          (lanes & 738197653) === lanes ? "tertiary-dark" : "primary-dark"),
+          (lanes & 738197589) === lanes ? "tertiary-dark" : "primary-dark"),
         (reusableLaneOptions.start = startTime),
         (reusableLaneOptions.end = endTime),
         performance.measure("Suspended", reusableLaneOptions));
@@ -4626,7 +4599,7 @@
     }
     function entangleTransitions(root, fiber, lane) {
       fiber = fiber.updateQueue;
-      if (null !== fiber && ((fiber = fiber.shared), 0 !== (lane & 4194048))) {
+      if (null !== fiber && ((fiber = fiber.shared), 0 !== (lane & 4194176))) {
         var queueLanes = fiber.lanes;
         queueLanes &= root.pendingLanes;
         lane |= queueLanes;
@@ -5221,28 +5194,6 @@
         ? null
         : { parent: CacheContext._currentValue, pool: cacheFromPool };
     }
-    function scheduleGesture(root, provider) {
-      for (var prev = root.gestures; null !== prev; ) {
-        if (prev.provider === provider) return prev.count++, prev;
-        var next = prev.next;
-        if (null === next) break;
-        prev = next;
-      }
-      provider = { provider: provider, count: 1, prev: prev, next: null };
-      null === prev ? (root.gestures = provider) : (prev.next = provider);
-      ensureRootIsScheduled(root);
-      return provider;
-    }
-    function deleteScheduledGesture(root, gesture) {
-      null === gesture.prev
-        ? root.gestures === gesture &&
-          ((root.gestures = gesture.next),
-          null === root.gestures && (root.pendingLanes &= -65))
-        : ((gesture.prev.next = gesture.next),
-          null !== gesture.next && (gesture.next.prev = gesture.prev),
-          (gesture.prev = null),
-          (gesture.next = null));
-    }
     function mountHookTypesDev() {
       var hookName = currentHookNameInDev;
       null === hookTypesDev
@@ -5837,7 +5788,7 @@
           throw Error(
             "Expected a work-in-progress root. This is a bug in React. Please file an issue."
           );
-        0 !== (workInProgressRootRenderLanes & 124) ||
+        0 !== (workInProgressRootRenderLanes & 60) ||
           pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
       }
       hook.memoizedState = nextSnapshot;
@@ -5920,7 +5871,7 @@
             "Expected a work-in-progress root. This is a bug in React. Please file an issue."
           );
         isHydrating$jscomp$0 ||
-          0 !== (renderLanes & 124) ||
+          0 !== (renderLanes & 60) ||
           pushStoreConsistencyCheck(fiber, getSnapshot, getServerSnapshot);
       }
       return getServerSnapshot;
@@ -6118,7 +6069,7 @@
           ),
           node.isTransition ||
             console.error(
-              "An async function with useActionState was called outside of a transition. This is likely not what you intended (for example, isPending will not update correctly). Either call the returned function inside startTransition, or pass it to an `action` or `formAction` prop."
+              "An async function was passed to useActionState, but it was dispatched outside of an action context. This is likely not what you intended. Either pass the dispatch function to an `action` prop, or dispatch manually inside `startTransition`"
             ))
         : onActionSuccess(actionQueue, node, returnValue);
     }
@@ -6299,14 +6250,8 @@
       currentStateHook.memoizedState = action;
       return [stateHook, dispatch, !1];
     }
-    function pushSimpleEffect(tag, inst, create, createDeps) {
-      tag = {
-        tag: tag,
-        create: create,
-        deps: createDeps,
-        inst: inst,
-        next: null
-      };
+    function pushSimpleEffect(tag, inst, create, deps) {
+      tag = { tag: tag, create: create, deps: deps, inst: inst, next: null };
       inst = currentlyRenderingFiber.updateQueue;
       null === inst &&
         ((inst = createFunctionComponentUpdateQueue()),
@@ -6314,9 +6259,9 @@
       create = inst.lastEffect;
       null === create
         ? (inst.lastEffect = tag.next = tag)
-        : ((createDeps = create.next),
+        : ((deps = create.next),
           (create.next = tag),
-          (tag.next = createDeps),
+          (tag.next = deps),
           (inst.lastEffect = tag));
       return tag;
     }
@@ -6328,15 +6273,15 @@
       initialValue = { current: initialValue };
       return (hook.memoizedState = initialValue);
     }
-    function mountEffectImpl(fiberFlags, hookFlags, create, createDeps) {
+    function mountEffectImpl(fiberFlags, hookFlags, create, deps) {
       var hook = mountWorkInProgressHook();
-      createDeps = void 0 === createDeps ? null : createDeps;
+      deps = void 0 === deps ? null : deps;
       currentlyRenderingFiber.flags |= fiberFlags;
       hook.memoizedState = pushSimpleEffect(
         HasEffect | hookFlags,
         createEffectInstance(),
         create,
-        createDeps
+        deps
       );
     }
     function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
@@ -6355,11 +6300,11 @@
             deps
           )));
     }
-    function mountEffect(create, createDeps) {
+    function mountEffect(create, deps) {
       (currentlyRenderingFiber.mode & StrictEffectsMode) !== NoMode &&
       (currentlyRenderingFiber.mode & NoStrictPassiveEffectsMode) === NoMode
-        ? mountEffectImpl(276826112, Passive, create, createDeps)
-        : mountEffectImpl(8390656, Passive, create, createDeps);
+        ? mountEffectImpl(276826112, Passive, create, deps)
+        : mountEffectImpl(8390656, Passive, create, deps);
     }
     function useEffectEventImpl(payload) {
       currentlyRenderingFiber.flags |= 4;
@@ -6894,7 +6839,7 @@
       queue.pending = update;
     }
     function entangleTransitionUpdate(root, queue, lane) {
-      if (0 !== (lane & 4194048)) {
+      if (0 !== (lane & 4194176)) {
         var queueLanes = queue.lanes;
         queueLanes &= root.pendingLanes;
         lane |= queueLanes;
@@ -6902,61 +6847,6 @@
         markRootEntangled(root, lane);
       }
     }
-    function startGesture(fiber, queue, gestureProvider) {
-      var root = enqueueGestureRender(fiber);
-      if (null === root) return function () {};
-      var update = {
-        gesture: scheduleGesture(root, gestureProvider),
-        prev: null,
-        next: queue.pending
-      };
-      null !== queue.pending && (queue.pending.prev = update);
-      queue.pending = update;
-      return function () {
-        if (null === update.prev)
-          if (queue.pending === update) queue.pending = update.next;
-          else return;
-        else
-          (update.prev.next = update.next),
-            null !== update.next && (update.next.prev = update.prev),
-            (update.prev = null),
-            (update.next = null);
-        var gesture = update.gesture;
-        gesture.count--;
-        0 === gesture.count && deleteScheduledGesture(root, gesture);
-      };
-    }
-    function mountSwipeTransition(previous, current) {
-      previous = { pending: null, dispatch: null };
-      var startGestureOnHook = (previous.dispatch = startGesture.bind(
-        null,
-        currentlyRenderingFiber,
-        previous
-      ));
-      mountWorkInProgressHook().queue = previous;
-      return [current, startGestureOnHook];
-    }
-    function updateSwipeTransition(previous, current) {
-      var queue = updateWorkInProgressHook().queue,
-        startGestureOnHook = queue.dispatch;
-      if (64 === workInProgressRootRenderLanes) {
-        var root = workInProgressRoot;
-        if (null === root)
-          throw Error(
-            "Expected a work-in-progress root. This is a bug in React. Please file an issue."
-          );
-        root = root.gestures;
-        for (var update = queue.pending; null !== update; ) {
-          if (root === update.gesture) {
-            current = previous;
-            break;
-          }
-          update = update.next;
-        }
-      }
-      null !== queue.pending && (currentlyRenderingFiber.lanes |= 64);
-      return [current, startGestureOnHook];
-    }
     function pushDebugInfo(debugInfo) {
       var previousDebugInfo = currentDebugInfo;
       null != debugInfo &&
@@ -8831,7 +8721,7 @@
       return workInProgress.child;
     }
     function updateClassComponent(
-      current,
+      current$jscomp$0,
       workInProgress,
       Component,
       nextProps,
@@ -9147,7 +9037,7 @@
         (workInProgress.mode & StrictEffectsMode) !== NoMode &&
           (workInProgress.flags |= 134217728);
         _instance = !0;
-      } else if (null === current) {
+      } else if (null === current$jscomp$0) {
         _instance = workInProgress.stateNode;
         var unresolvedOldProps = workInProgress.memoizedProps;
         lane = resolveClassComponentProps(Component, unresolvedOldProps);
@@ -9227,7 +9117,7 @@
             (_instance = !1));
       } else {
         _instance = workInProgress.stateNode;
-        cloneUpdateQueue(current, workInProgress);
+        cloneUpdateQueue(current$jscomp$0, workInProgress);
         state = workInProgress.memoizedProps;
         foundWillUpdateName = resolveClassComponentProps(Component, state);
         _instance.props = foundWillUpdateName;
@@ -9260,9 +9150,9 @@
         state !== newApiName ||
         oldState !== newState ||
         hasForceUpdate ||
-        (null !== current &&
-          null !== current.dependencies &&
-          checkIfContextChanged(current.dependencies))
+        (null !== current$jscomp$0 &&
+          null !== current$jscomp$0.dependencies &&
+          checkIfContextChanged(current$jscomp$0.dependencies))
           ? ("function" === typeof unresolvedOldProps &&
               (applyDerivedStateFromProps(
                 workInProgress,
@@ -9282,9 +9172,9 @@
                 newState,
                 lane
               ) ||
-              (null !== current &&
-                null !== current.dependencies &&
-                checkIfContextChanged(current.dependencies)))
+              (null !== current$jscomp$0 &&
+                null !== current$jscomp$0.dependencies &&
+                checkIfContextChanged(current$jscomp$0.dependencies)))
               ? (oldContext ||
                   ("function" !== typeof _instance.UNSAFE_componentWillUpdate &&
                     "function" !== typeof _instance.componentWillUpdate) ||
@@ -9301,12 +9191,12 @@
                 "function" === typeof _instance.getSnapshotBeforeUpdate &&
                   (workInProgress.flags |= 1024))
               : ("function" !== typeof _instance.componentDidUpdate ||
-                  (state === current.memoizedProps &&
-                    oldState === current.memoizedState) ||
+                  (state === current$jscomp$0.memoizedProps &&
+                    oldState === current$jscomp$0.memoizedState) ||
                   (workInProgress.flags |= 4),
                 "function" !== typeof _instance.getSnapshotBeforeUpdate ||
-                  (state === current.memoizedProps &&
-                    oldState === current.memoizedState) ||
+                  (state === current$jscomp$0.memoizedProps &&
+                    oldState === current$jscomp$0.memoizedState) ||
                   (workInProgress.flags |= 1024),
                 (workInProgress.memoizedProps = nextProps),
                 (workInProgress.memoizedState = newState)),
@@ -9315,21 +9205,24 @@
             (_instance.context = lane),
             (_instance = foundWillUpdateName))
           : ("function" !== typeof _instance.componentDidUpdate ||
-              (state === current.memoizedProps &&
-                oldState === current.memoizedState) ||
+              (state === current$jscomp$0.memoizedProps &&
+                oldState === current$jscomp$0.memoizedState) ||
               (workInProgress.flags |= 4),
             "function" !== typeof _instance.getSnapshotBeforeUpdate ||
-              (state === current.memoizedProps &&
-                oldState === current.memoizedState) ||
+              (state === current$jscomp$0.memoizedProps &&
+                oldState === current$jscomp$0.memoizedState) ||
               (workInProgress.flags |= 1024),
             (_instance = !1));
       }
       lane = _instance;
-      markRef(current, workInProgress);
+      markRef(current$jscomp$0, workInProgress);
       state = 0 !== (workInProgress.flags & 128);
       if (lane || state) {
         lane = workInProgress.stateNode;
-        setCurrentFiber(workInProgress);
+        ReactSharedInternals.getCurrentStack =
+          null === workInProgress ? null : getCurrentFiberStackInDev;
+        isRendering = !1;
+        current = workInProgress;
         if (state && "function" !== typeof Component.getDerivedStateFromError)
           (Component = null), (profilerStartTime = -1);
         else if (
@@ -9344,10 +9237,10 @@
           }
         }
         workInProgress.flags |= 1;
-        null !== current && state
+        null !== current$jscomp$0 && state
           ? ((workInProgress.child = reconcileChildFibers(
               workInProgress,
-              current.child,
+              current$jscomp$0.child,
               null,
               renderLanes
             )),
@@ -9357,12 +9250,17 @@
               Component,
               renderLanes
             )))
-          : reconcileChildren(current, workInProgress, Component, renderLanes);
+          : reconcileChildren(
+              current$jscomp$0,
+              workInProgress,
+              Component,
+              renderLanes
+            );
         workInProgress.memoizedState = lane.state;
-        current = workInProgress.child;
+        current$jscomp$0 = workInProgress.child;
       } else
-        current = bailoutOnAlreadyFinishedWork(
-          current,
+        current$jscomp$0 = bailoutOnAlreadyFinishedWork(
+          current$jscomp$0,
           workInProgress,
           renderLanes
         );
@@ -9375,7 +9273,7 @@
             getComponentNameFromFiber(workInProgress) || "a component"
           ),
         (didWarnAboutReassigningProps = !0));
-      return current;
+      return current$jscomp$0;
     }
     function mountHostRootWithoutHydrating(
       current,
@@ -9427,33 +9325,33 @@
       return current;
     }
     function updateSuspenseComponent(current, workInProgress, renderLanes) {
-      var JSCompiler_object_inline_componentStack_2581;
-      var JSCompiler_object_inline_stack_2580 = workInProgress.pendingProps;
+      var JSCompiler_object_inline_componentStack_2552;
+      var JSCompiler_object_inline_stack_2551 = workInProgress.pendingProps;
       shouldSuspendImpl(workInProgress) && (workInProgress.flags |= 128);
-      var JSCompiler_object_inline_message_2578 = !1;
+      var JSCompiler_object_inline_message_2549 = !1;
       var didSuspend = 0 !== (workInProgress.flags & 128);
-      (JSCompiler_object_inline_componentStack_2581 = didSuspend) ||
-        (JSCompiler_object_inline_componentStack_2581 =
+      (JSCompiler_object_inline_componentStack_2552 = didSuspend) ||
+        (JSCompiler_object_inline_componentStack_2552 =
           null !== current && null === current.memoizedState
             ? !1
             : 0 !== (suspenseStackCursor.current & ForceSuspenseFallback));
-      JSCompiler_object_inline_componentStack_2581 &&
-        ((JSCompiler_object_inline_message_2578 = !0),
+      JSCompiler_object_inline_componentStack_2552 &&
+        ((JSCompiler_object_inline_message_2549 = !0),
         (workInProgress.flags &= -129));
-      JSCompiler_object_inline_componentStack_2581 =
+      JSCompiler_object_inline_componentStack_2552 =
         0 !== (workInProgress.flags & 32);
       workInProgress.flags &= -33;
       if (null === current) {
         if (isHydrating) {
-          JSCompiler_object_inline_message_2578
+          JSCompiler_object_inline_message_2549
             ? pushPrimaryTreeSuspenseHandler(workInProgress)
             : reuseSuspenseHandlerOnStack(workInProgress);
           if (isHydrating) {
-            var JSCompiler_object_inline_digest_2579 = nextHydratableInstance;
+            var JSCompiler_object_inline_digest_2550 = nextHydratableInstance;
             var JSCompiler_temp;
-            if (!(JSCompiler_temp = !JSCompiler_object_inline_digest_2579)) {
+            if (!(JSCompiler_temp = !JSCompiler_object_inline_digest_2550)) {
               c: {
-                var instance = JSCompiler_object_inline_digest_2579;
+                var instance = JSCompiler_object_inline_digest_2550;
                 for (
                   JSCompiler_temp = rootOrSingletonContext;
                   8 !== instance.nodeType;
@@ -9495,87 +9393,87 @@
             JSCompiler_temp &&
               (warnNonHydratedInstance(
                 workInProgress,
-                JSCompiler_object_inline_digest_2579
+                JSCompiler_object_inline_digest_2550
               ),
               throwOnHydrationMismatch(workInProgress));
           }
-          JSCompiler_object_inline_digest_2579 = workInProgress.memoizedState;
+          JSCompiler_object_inline_digest_2550 = workInProgress.memoizedState;
           if (
-            null !== JSCompiler_object_inline_digest_2579 &&
-            ((JSCompiler_object_inline_digest_2579 =
-              JSCompiler_object_inline_digest_2579.dehydrated),
-            null !== JSCompiler_object_inline_digest_2579)
+            null !== JSCompiler_object_inline_digest_2550 &&
+            ((JSCompiler_object_inline_digest_2550 =
+              JSCompiler_object_inline_digest_2550.dehydrated),
+            null !== JSCompiler_object_inline_digest_2550)
           )
             return (
-              isSuspenseInstanceFallback(JSCompiler_object_inline_digest_2579)
+              isSuspenseInstanceFallback(JSCompiler_object_inline_digest_2550)
                 ? (workInProgress.lanes = 32)
                 : (workInProgress.lanes = 536870912),
               null
             );
           popSuspenseHandler(workInProgress);
         }
-        JSCompiler_object_inline_digest_2579 =
-          JSCompiler_object_inline_stack_2580.children;
-        JSCompiler_temp = JSCompiler_object_inline_stack_2580.fallback;
-        if (JSCompiler_object_inline_message_2578)
+        JSCompiler_object_inline_digest_2550 =
+          JSCompiler_object_inline_stack_2551.children;
+        JSCompiler_temp = JSCompiler_object_inline_stack_2551.fallback;
+        if (JSCompiler_object_inline_message_2549)
           return (
             reuseSuspenseHandlerOnStack(workInProgress),
-            (JSCompiler_object_inline_stack_2580 =
+            (JSCompiler_object_inline_stack_2551 =
               mountSuspenseFallbackChildren(
                 workInProgress,
-                JSCompiler_object_inline_digest_2579,
+                JSCompiler_object_inline_digest_2550,
                 JSCompiler_temp,
                 renderLanes
               )),
-            (JSCompiler_object_inline_message_2578 = workInProgress.child),
-            (JSCompiler_object_inline_message_2578.memoizedState =
+            (JSCompiler_object_inline_message_2549 = workInProgress.child),
+            (JSCompiler_object_inline_message_2549.memoizedState =
               mountSuspenseOffscreenState(renderLanes)),
-            (JSCompiler_object_inline_message_2578.childLanes =
+            (JSCompiler_object_inline_message_2549.childLanes =
               getRemainingWorkInPrimaryTree(
                 current,
-                JSCompiler_object_inline_componentStack_2581,
+                JSCompiler_object_inline_componentStack_2552,
                 renderLanes
               )),
             (workInProgress.memoizedState = SUSPENDED_MARKER),
-            JSCompiler_object_inline_stack_2580
+            JSCompiler_object_inline_stack_2551
           );
         if (
           "number" ===
-          typeof JSCompiler_object_inline_stack_2580.unstable_expectedLoadTime
+          typeof JSCompiler_object_inline_stack_2551.unstable_expectedLoadTime
         )
           return (
             reuseSuspenseHandlerOnStack(workInProgress),
-            (JSCompiler_object_inline_stack_2580 =
+            (JSCompiler_object_inline_stack_2551 =
               mountSuspenseFallbackChildren(
                 workInProgress,
-                JSCompiler_object_inline_digest_2579,
+                JSCompiler_object_inline_digest_2550,
                 JSCompiler_temp,
                 renderLanes
               )),
-            (JSCompiler_object_inline_message_2578 = workInProgress.child),
-            (JSCompiler_object_inline_message_2578.memoizedState =
+            (JSCompiler_object_inline_message_2549 = workInProgress.child),
+            (JSCompiler_object_inline_message_2549.memoizedState =
               mountSuspenseOffscreenState(renderLanes)),
-            (JSCompiler_object_inline_message_2578.childLanes =
+            (JSCompiler_object_inline_message_2549.childLanes =
               getRemainingWorkInPrimaryTree(
                 current,
-                JSCompiler_object_inline_componentStack_2581,
+                JSCompiler_object_inline_componentStack_2552,
                 renderLanes
               )),
             (workInProgress.memoizedState = SUSPENDED_MARKER),
             (workInProgress.lanes = 4194304),
-            JSCompiler_object_inline_stack_2580
+            JSCompiler_object_inline_stack_2551
           );
         pushPrimaryTreeSuspenseHandler(workInProgress);
         return mountSuspensePrimaryChildren(
           workInProgress,
-          JSCompiler_object_inline_digest_2579
+          JSCompiler_object_inline_digest_2550
         );
       }
       var prevState = current.memoizedState;
       if (
         null !== prevState &&
-        ((JSCompiler_object_inline_digest_2579 = prevState.dehydrated),
-        null !== JSCompiler_object_inline_digest_2579)
+        ((JSCompiler_object_inline_digest_2550 = prevState.dehydrated),
+        null !== JSCompiler_object_inline_digest_2550)
       ) {
         if (didSuspend)
           workInProgress.flags & 256
@@ -9592,94 +9490,94 @@
                 (workInProgress.flags |= 128),
                 (workInProgress = null))
               : (reuseSuspenseHandlerOnStack(workInProgress),
-                (JSCompiler_object_inline_message_2578 =
-                  JSCompiler_object_inline_stack_2580.fallback),
-                (JSCompiler_object_inline_digest_2579 = workInProgress.mode),
-                (JSCompiler_object_inline_stack_2580 =
+                (JSCompiler_object_inline_message_2549 =
+                  JSCompiler_object_inline_stack_2551.fallback),
+                (JSCompiler_object_inline_digest_2550 = workInProgress.mode),
+                (JSCompiler_object_inline_stack_2551 =
                   mountWorkInProgressOffscreenFiber(
                     {
                       mode: "visible",
-                      children: JSCompiler_object_inline_stack_2580.children
+                      children: JSCompiler_object_inline_stack_2551.children
                     },
-                    JSCompiler_object_inline_digest_2579
+                    JSCompiler_object_inline_digest_2550
                   )),
-                (JSCompiler_object_inline_message_2578 =
+                (JSCompiler_object_inline_message_2549 =
                   createFiberFromFragment(
-                    JSCompiler_object_inline_message_2578,
-                    JSCompiler_object_inline_digest_2579,
+                    JSCompiler_object_inline_message_2549,
+                    JSCompiler_object_inline_digest_2550,
                     renderLanes,
                     null
                   )),
-                (JSCompiler_object_inline_message_2578.flags |= 2),
-                (JSCompiler_object_inline_stack_2580.return = workInProgress),
-                (JSCompiler_object_inline_message_2578.return = workInProgress),
-                (JSCompiler_object_inline_stack_2580.sibling =
-                  JSCompiler_object_inline_message_2578),
-                (workInProgress.child = JSCompiler_object_inline_stack_2580),
+                (JSCompiler_object_inline_message_2549.flags |= 2),
+                (JSCompiler_object_inline_stack_2551.return = workInProgress),
+                (JSCompiler_object_inline_message_2549.return = workInProgress),
+                (JSCompiler_object_inline_stack_2551.sibling =
+                  JSCompiler_object_inline_message_2549),
+                (workInProgress.child = JSCompiler_object_inline_stack_2551),
                 reconcileChildFibers(
                   workInProgress,
                   current.child,
                   null,
                   renderLanes
                 ),
-                (JSCompiler_object_inline_stack_2580 = workInProgress.child),
-                (JSCompiler_object_inline_stack_2580.memoizedState =
+                (JSCompiler_object_inline_stack_2551 = workInProgress.child),
+                (JSCompiler_object_inline_stack_2551.memoizedState =
                   mountSuspenseOffscreenState(renderLanes)),
-                (JSCompiler_object_inline_stack_2580.childLanes =
+                (JSCompiler_object_inline_stack_2551.childLanes =
                   getRemainingWorkInPrimaryTree(
                     current,
-                    JSCompiler_object_inline_componentStack_2581,
+                    JSCompiler_object_inline_componentStack_2552,
                     renderLanes
                   )),
                 (workInProgress.memoizedState = SUSPENDED_MARKER),
-                (workInProgress = JSCompiler_object_inline_message_2578));
+                (workInProgress = JSCompiler_object_inline_message_2549));
         else if (
           (pushPrimaryTreeSuspenseHandler(workInProgress),
           isHydrating &&
             console.error(
               "We should not be hydrating here. This is a bug in React. Please file a bug."
             ),
-          isSuspenseInstanceFallback(JSCompiler_object_inline_digest_2579))
+          isSuspenseInstanceFallback(JSCompiler_object_inline_digest_2550))
         ) {
-          JSCompiler_object_inline_componentStack_2581 =
-            JSCompiler_object_inline_digest_2579.nextSibling &&
-            JSCompiler_object_inline_digest_2579.nextSibling.dataset;
-          if (JSCompiler_object_inline_componentStack_2581) {
-            JSCompiler_temp = JSCompiler_object_inline_componentStack_2581.dgst;
-            var message = JSCompiler_object_inline_componentStack_2581.msg;
-            instance = JSCompiler_object_inline_componentStack_2581.stck;
+          JSCompiler_object_inline_componentStack_2552 =
+            JSCompiler_object_inline_digest_2550.nextSibling &&
+            JSCompiler_object_inline_digest_2550.nextSibling.dataset;
+          if (JSCompiler_object_inline_componentStack_2552) {
+            JSCompiler_temp = JSCompiler_object_inline_componentStack_2552.dgst;
+            var message = JSCompiler_object_inline_componentStack_2552.msg;
+            instance = JSCompiler_object_inline_componentStack_2552.stck;
             var componentStack =
-              JSCompiler_object_inline_componentStack_2581.cstck;
+              JSCompiler_object_inline_componentStack_2552.cstck;
           }
-          JSCompiler_object_inline_message_2578 = message;
-          JSCompiler_object_inline_digest_2579 = JSCompiler_temp;
-          JSCompiler_object_inline_stack_2580 = instance;
-          JSCompiler_temp = JSCompiler_object_inline_componentStack_2581 =
+          JSCompiler_object_inline_message_2549 = message;
+          JSCompiler_object_inline_digest_2550 = JSCompiler_temp;
+          JSCompiler_object_inline_stack_2551 = instance;
+          JSCompiler_temp = JSCompiler_object_inline_componentStack_2552 =
             componentStack;
-          "POSTPONE" !== JSCompiler_object_inline_digest_2579 &&
-            ((JSCompiler_object_inline_componentStack_2581 =
-              JSCompiler_object_inline_message_2578
-                ? Error(JSCompiler_object_inline_message_2578)
+          "POSTPONE" !== JSCompiler_object_inline_digest_2550 &&
+            ((JSCompiler_object_inline_componentStack_2552 =
+              JSCompiler_object_inline_message_2549
+                ? Error(JSCompiler_object_inline_message_2549)
                 : Error(
                     "The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering."
                   )),
-            (JSCompiler_object_inline_componentStack_2581.stack =
-              JSCompiler_object_inline_stack_2580 || ""),
-            (JSCompiler_object_inline_componentStack_2581.digest =
-              JSCompiler_object_inline_digest_2579),
-            (JSCompiler_object_inline_stack_2580 =
+            (JSCompiler_object_inline_componentStack_2552.stack =
+              JSCompiler_object_inline_stack_2551 || ""),
+            (JSCompiler_object_inline_componentStack_2552.digest =
+              JSCompiler_object_inline_digest_2550),
+            (JSCompiler_object_inline_stack_2551 =
               void 0 === JSCompiler_temp ? null : JSCompiler_temp),
-            (JSCompiler_object_inline_message_2578 = {
-              value: JSCompiler_object_inline_componentStack_2581,
+            (JSCompiler_object_inline_message_2549 = {
+              value: JSCompiler_object_inline_componentStack_2552,
               source: null,
-              stack: JSCompiler_object_inline_stack_2580
+              stack: JSCompiler_object_inline_stack_2551
             }),
-            "string" === typeof JSCompiler_object_inline_stack_2580 &&
+            "string" === typeof JSCompiler_object_inline_stack_2551 &&
               CapturedStacks.set(
-                JSCompiler_object_inline_componentStack_2581,
-                JSCompiler_object_inline_message_2578
+                JSCompiler_object_inline_componentStack_2552,
+                JSCompiler_object_inline_message_2549
               ),
-            queueHydrationError(JSCompiler_object_inline_message_2578));
+            queueHydrationError(JSCompiler_object_inline_message_2549));
           workInProgress = retrySuspenseComponentWithoutHydrating(
             current,
             workInProgress,
@@ -9693,44 +9591,44 @@
               renderLanes,
               !1
             ),
-          (JSCompiler_object_inline_componentStack_2581 =
+          (JSCompiler_object_inline_componentStack_2552 =
             0 !== (renderLanes & current.childLanes)),
-          didReceiveUpdate || JSCompiler_object_inline_componentStack_2581)
+          didReceiveUpdate || JSCompiler_object_inline_componentStack_2552)
         ) {
-          JSCompiler_object_inline_componentStack_2581 = workInProgressRoot;
+          JSCompiler_object_inline_componentStack_2552 = workInProgressRoot;
           if (
-            null !== JSCompiler_object_inline_componentStack_2581 &&
-            ((JSCompiler_object_inline_stack_2580 = renderLanes & -renderLanes),
-            (JSCompiler_object_inline_stack_2580 =
-              0 !== (JSCompiler_object_inline_stack_2580 & 42)
+            null !== JSCompiler_object_inline_componentStack_2552 &&
+            ((JSCompiler_object_inline_stack_2551 = renderLanes & -renderLanes),
+            (JSCompiler_object_inline_stack_2551 =
+              0 !== (JSCompiler_object_inline_stack_2551 & 42)
                 ? 1
                 : getBumpedLaneForHydrationByLane(
-                    JSCompiler_object_inline_stack_2580
+                    JSCompiler_object_inline_stack_2551
                   )),
-            (JSCompiler_object_inline_stack_2580 =
+            (JSCompiler_object_inline_stack_2551 =
               0 !==
-              (JSCompiler_object_inline_stack_2580 &
-                (JSCompiler_object_inline_componentStack_2581.suspendedLanes |
+              (JSCompiler_object_inline_stack_2551 &
+                (JSCompiler_object_inline_componentStack_2552.suspendedLanes |
                   renderLanes))
                 ? 0
-                : JSCompiler_object_inline_stack_2580),
-            0 !== JSCompiler_object_inline_stack_2580 &&
-              JSCompiler_object_inline_stack_2580 !== prevState.retryLane)
+                : JSCompiler_object_inline_stack_2551),
+            0 !== JSCompiler_object_inline_stack_2551 &&
+              JSCompiler_object_inline_stack_2551 !== prevState.retryLane)
           )
             throw (
-              ((prevState.retryLane = JSCompiler_object_inline_stack_2580),
+              ((prevState.retryLane = JSCompiler_object_inline_stack_2551),
               enqueueConcurrentRenderForLane(
                 current,
-                JSCompiler_object_inline_stack_2580
+                JSCompiler_object_inline_stack_2551
               ),
               scheduleUpdateOnFiber(
-                JSCompiler_object_inline_componentStack_2581,
+                JSCompiler_object_inline_componentStack_2552,
                 current,
-                JSCompiler_object_inline_stack_2580
+                JSCompiler_object_inline_stack_2551
               ),
               SelectiveHydrationException)
             );
-          JSCompiler_object_inline_digest_2579.data ===
+          JSCompiler_object_inline_digest_2550.data ===
             SUSPENSE_PENDING_START_DATA || renderDidSuspendDelayIfPossible();
           workInProgress = retrySuspenseComponentWithoutHydrating(
             current,
@@ -9738,14 +9636,14 @@
             renderLanes
           );
         } else
-          JSCompiler_object_inline_digest_2579.data ===
+          JSCompiler_object_inline_digest_2550.data ===
           SUSPENSE_PENDING_START_DATA
             ? ((workInProgress.flags |= 192),
               (workInProgress.child = current.child),
               (workInProgress = null))
             : ((current = prevState.treeContext),
               (nextHydratableInstance = getNextHydratable(
-                JSCompiler_object_inline_digest_2579.nextSibling
+                JSCompiler_object_inline_digest_2550.nextSibling
               )),
               (hydrationParentFiber = workInProgress),
               (isHydrating = !0),
@@ -9763,54 +9661,54 @@
                 (treeContextProvider = workInProgress)),
               (workInProgress = mountSuspensePrimaryChildren(
                 workInProgress,
-                JSCompiler_object_inline_stack_2580.children
+                JSCompiler_object_inline_stack_2551.children
               )),
               (workInProgress.flags |= 4096));
         return workInProgress;
       }
-      if (JSCompiler_object_inline_message_2578)
+      if (JSCompiler_object_inline_message_2549)
         return (
           reuseSuspenseHandlerOnStack(workInProgress),
-          (JSCompiler_object_inline_message_2578 =
-            JSCompiler_object_inline_stack_2580.fallback),
-          (JSCompiler_object_inline_digest_2579 = workInProgress.mode),
+          (JSCompiler_object_inline_message_2549 =
+            JSCompiler_object_inline_stack_2551.fallback),
+          (JSCompiler_object_inline_digest_2550 = workInProgress.mode),
           (JSCompiler_temp = current.child),
           (instance = JSCompiler_temp.sibling),
-          (JSCompiler_object_inline_stack_2580 = createWorkInProgress(
+          (JSCompiler_object_inline_stack_2551 = createWorkInProgress(
             JSCompiler_temp,
             {
               mode: "hidden",
-              children: JSCompiler_object_inline_stack_2580.children
+              children: JSCompiler_object_inline_stack_2551.children
             }
           )),
-          (JSCompiler_object_inline_stack_2580.subtreeFlags =
+          (JSCompiler_object_inline_stack_2551.subtreeFlags =
             JSCompiler_temp.subtreeFlags & 65011712),
           null !== instance
-            ? (JSCompiler_object_inline_message_2578 = createWorkInProgress(
+            ? (JSCompiler_object_inline_message_2549 = createWorkInProgress(
                 instance,
-                JSCompiler_object_inline_message_2578
+                JSCompiler_object_inline_message_2549
               ))
-            : ((JSCompiler_object_inline_message_2578 = createFiberFromFragment(
-                JSCompiler_object_inline_message_2578,
-                JSCompiler_object_inline_digest_2579,
+            : ((JSCompiler_object_inline_message_2549 = createFiberFromFragment(
+                JSCompiler_object_inline_message_2549,
+                JSCompiler_object_inline_digest_2550,
                 renderLanes,
                 null
               )),
-              (JSCompiler_object_inline_message_2578.flags |= 2)),
-          (JSCompiler_object_inline_message_2578.return = workInProgress),
-          (JSCompiler_object_inline_stack_2580.return = workInProgress),
-          (JSCompiler_object_inline_stack_2580.sibling =
-            JSCompiler_object_inline_message_2578),
-          (workInProgress.child = JSCompiler_object_inline_stack_2580),
-          (JSCompiler_object_inline_stack_2580 =
-            JSCompiler_object_inline_message_2578),
-          (JSCompiler_object_inline_message_2578 = workInProgress.child),
-          (JSCompiler_object_inline_digest_2579 = current.child.memoizedState),
-          null === JSCompiler_object_inline_digest_2579
-            ? (JSCompiler_object_inline_digest_2579 =
+              (JSCompiler_object_inline_message_2549.flags |= 2)),
+          (JSCompiler_object_inline_message_2549.return = workInProgress),
+          (JSCompiler_object_inline_stack_2551.return = workInProgress),
+          (JSCompiler_object_inline_stack_2551.sibling =
+            JSCompiler_object_inline_message_2549),
+          (workInProgress.child = JSCompiler_object_inline_stack_2551),
+          (JSCompiler_object_inline_stack_2551 =
+            JSCompiler_object_inline_message_2549),
+          (JSCompiler_object_inline_message_2549 = workInProgress.child),
+          (JSCompiler_object_inline_digest_2550 = current.child.memoizedState),
+          null === JSCompiler_object_inline_digest_2550
+            ? (JSCompiler_object_inline_digest_2550 =
                 mountSuspenseOffscreenState(renderLanes))
             : ((JSCompiler_temp =
-                JSCompiler_object_inline_digest_2579.cachePool),
+                JSCompiler_object_inline_digest_2550.cachePool),
               null !== JSCompiler_temp
                 ? ((instance = CacheContext._currentValue),
                   (JSCompiler_temp =
@@ -9818,38 +9716,38 @@
                       ? { parent: instance, pool: instance }
                       : JSCompiler_temp))
                 : (JSCompiler_temp = getSuspendedCache()),
-              (JSCompiler_object_inline_digest_2579 = {
+              (JSCompiler_object_inline_digest_2550 = {
                 baseLanes:
-                  JSCompiler_object_inline_digest_2579.baseLanes | renderLanes,
+                  JSCompiler_object_inline_digest_2550.baseLanes | renderLanes,
                 cachePool: JSCompiler_temp
               })),
-          (JSCompiler_object_inline_message_2578.memoizedState =
-            JSCompiler_object_inline_digest_2579),
-          (JSCompiler_object_inline_message_2578.childLanes =
+          (JSCompiler_object_inline_message_2549.memoizedState =
+            JSCompiler_object_inline_digest_2550),
+          (JSCompiler_object_inline_message_2549.childLanes =
             getRemainingWorkInPrimaryTree(
               current,
-              JSCompiler_object_inline_componentStack_2581,
+              JSCompiler_object_inline_componentStack_2552,
               renderLanes
             )),
           (workInProgress.memoizedState = SUSPENDED_MARKER),
-          JSCompiler_object_inline_stack_2580
+          JSCompiler_object_inline_stack_2551
         );
       pushPrimaryTreeSuspenseHandler(workInProgress);
       renderLanes = current.child;
       current = renderLanes.sibling;
       renderLanes = createWorkInProgress(renderLanes, {
         mode: "visible",
-        children: JSCompiler_object_inline_stack_2580.children
+        children: JSCompiler_object_inline_stack_2551.children
       });
       renderLanes.return = workInProgress;
       renderLanes.sibling = null;
       null !== current &&
-        ((JSCompiler_object_inline_componentStack_2581 =
+        ((JSCompiler_object_inline_componentStack_2552 =
           workInProgress.deletions),
-        null === JSCompiler_object_inline_componentStack_2581
+        null === JSCompiler_object_inline_componentStack_2552
           ? ((workInProgress.deletions = [current]),
             (workInProgress.flags |= 16))
-          : JSCompiler_object_inline_componentStack_2581.push(current));
+          : JSCompiler_object_inline_componentStack_2552.push(current));
       workInProgress.child = renderLanes;
       workInProgress.memoizedState = null;
       return renderLanes;
@@ -10414,10 +10312,10 @@
               current.$$typeof === REACT_LAZY_TYPE &&
               (workInProgress =
                 " Did you wrap a component in React.lazy() more than once?");
-            renderLanes = getComponentNameFromType(current) || current;
+            current = getComponentNameFromType(current) || current;
             throw Error(
               "Element type is invalid. Received a promise that resolves to: " +
-                renderLanes +
+                current +
                 ". Lazy element type must resolve to a class or function." +
                 workInProgress
             );
@@ -10456,15 +10354,15 @@
               throw Error(
                 "Should have a current fiber. This is a bug in React."
               );
-            returnFiber = workInProgress.pendingProps;
-            var prevState = workInProgress.memoizedState;
-            prevSibling = prevState.element;
+            var nextProps = workInProgress.pendingProps;
+            prevSibling = workInProgress.memoizedState;
+            returnFiber = prevSibling.element;
             cloneUpdateQueue(current, workInProgress);
-            processUpdateQueue(workInProgress, returnFiber, null, renderLanes);
+            processUpdateQueue(workInProgress, nextProps, null, renderLanes);
             var nextState = workInProgress.memoizedState;
-            returnFiber = nextState.cache;
-            pushProvider(workInProgress, CacheContext, returnFiber);
-            returnFiber !== prevState.cache &&
+            nextProps = nextState.cache;
+            pushProvider(workInProgress, CacheContext, nextProps);
+            nextProps !== prevSibling.cache &&
               propagateContextChanges(
                 workInProgress,
                 [CacheContext],
@@ -10472,72 +10370,66 @@
                 !0
               );
             suspendIfUpdateReadFromEntangledAsyncAction();
-            returnFiber = nextState.element;
-            if (prevState.isDehydrated)
+            nextProps = nextState.element;
+            if (prevSibling.isDehydrated)
               if (
-                ((prevState = {
-                  element: returnFiber,
+                ((prevSibling = {
+                  element: nextProps,
                   isDehydrated: !1,
                   cache: nextState.cache
                 }),
-                (workInProgress.updateQueue.baseState = prevState),
-                (workInProgress.memoizedState = prevState),
+                (workInProgress.updateQueue.baseState = prevSibling),
+                (workInProgress.memoizedState = prevSibling),
                 workInProgress.flags & 256)
               ) {
                 workInProgress = mountHostRootWithoutHydrating(
                   current,
                   workInProgress,
-                  returnFiber,
+                  nextProps,
                   renderLanes
                 );
                 break a;
-              } else if (returnFiber !== prevSibling) {
-                prevSibling = createCapturedValueAtFiber(
+              } else if (nextProps !== returnFiber) {
+                returnFiber = createCapturedValueAtFiber(
                   Error(
                     "This root received an early update, before anything was able hydrate. Switched the entire root to client rendering."
                   ),
                   workInProgress
                 );
-                queueHydrationError(prevSibling);
+                queueHydrationError(returnFiber);
                 workInProgress = mountHostRootWithoutHydrating(
                   current,
                   workInProgress,
-                  returnFiber,
+                  nextProps,
                   renderLanes
                 );
                 break a;
-              } else {
-                current = workInProgress.stateNode.containerInfo;
-                switch (current.nodeType) {
-                  case 9:
-                    current = current.body;
-                    break;
-                  default:
-                    current =
-                      "HTML" === current.nodeName
-                        ? current.ownerDocument.body
-                        : current;
-                }
-                nextHydratableInstance = getNextHydratable(current.firstChild);
-                hydrationParentFiber = workInProgress;
-                isHydrating = !0;
-                hydrationErrors = null;
-                didSuspendOrErrorDEV = !1;
-                hydrationDiffRootDEV = null;
-                rootOrSingletonContext = !0;
-                renderLanes = mountChildFibers(
-                  workInProgress,
-                  null,
-                  returnFiber,
-                  renderLanes
-                );
-                for (workInProgress.child = renderLanes; renderLanes; )
-                  (renderLanes.flags = (renderLanes.flags & -3) | 4096),
-                    (renderLanes = renderLanes.sibling);
-              }
+              } else
+                for (
+                  nextHydratableInstance = getNextHydratable(
+                    workInProgress.stateNode.containerInfo.firstChild
+                  ),
+                    hydrationParentFiber = workInProgress,
+                    isHydrating = !0,
+                    hydrationErrors = null,
+                    didSuspendOrErrorDEV = !1,
+                    hydrationDiffRootDEV = null,
+                    rootOrSingletonContext = !0,
+                    current = mountChildFibers(
+                      workInProgress,
+                      null,
+                      nextProps,
+                      renderLanes
+                    ),
+                    workInProgress.child = current;
+                  current;
+
+                )
+                  (current.flags = (current.flags & -3) | 4096),
+                    (current = current.sibling);
             else {
               resetHydrationState();
-              if (returnFiber === prevSibling) {
+              if (nextProps === returnFiber) {
                 workInProgress = bailoutOnAlreadyFinishedWork(
                   current,
                   workInProgress,
@@ -10548,7 +10440,7 @@
               reconcileChildren(
                 current,
                 workInProgress,
-                returnFiber,
+                nextProps,
                 renderLanes
               );
             }
@@ -10559,26 +10451,26 @@
           return (
             markRef(current, workInProgress),
             null === current
-              ? (renderLanes = getResource(
+              ? (current = getResource(
                   workInProgress.type,
                   null,
                   workInProgress.pendingProps,
                   null
                 ))
-                ? (workInProgress.memoizedState = renderLanes)
+                ? (workInProgress.memoizedState = current)
                 : isHydrating ||
-                  ((renderLanes = workInProgress.type),
-                  (current = workInProgress.pendingProps),
+                  ((current = workInProgress.type),
+                  (renderLanes = workInProgress.pendingProps),
                   (returnFiber = requiredContext(
                     rootInstanceStackCursor.current
                   )),
                   (returnFiber =
                     getOwnerDocumentFromRootContainer(
                       returnFiber
-                    ).createElement(renderLanes)),
+                    ).createElement(current)),
                   (returnFiber[internalInstanceKey] = workInProgress),
-                  (returnFiber[internalPropsKey] = current),
-                  setInitialProperties(returnFiber, renderLanes, current),
+                  (returnFiber[internalPropsKey] = renderLanes),
+                  setInitialProperties(returnFiber, current, renderLanes),
                   markNodeAsHoistable(returnFiber),
                   (workInProgress.stateNode = returnFiber))
               : (workInProgress.memoizedState = getResource(
@@ -10594,53 +10486,56 @@
             pushHostContext(workInProgress),
             null === current &&
               isHydrating &&
-              ((returnFiber = requiredContext(rootInstanceStackCursor.current)),
-              (prevSibling = getHostContext()),
-              (returnFiber = workInProgress.stateNode =
+              ((prevSibling = requiredContext(rootInstanceStackCursor.current)),
+              (returnFiber = getHostContext()),
+              (prevSibling = workInProgress.stateNode =
                 resolveSingletonInstance(
                   workInProgress.type,
                   workInProgress.pendingProps,
-                  returnFiber,
                   prevSibling,
+                  returnFiber,
                   !1
                 )),
               didSuspendOrErrorDEV ||
-                ((prevSibling = diffHydratedProperties(
-                  returnFiber,
+                ((returnFiber = diffHydratedProperties(
+                  prevSibling,
                   workInProgress.type,
                   workInProgress.pendingProps,
-                  prevSibling
+                  returnFiber
                 )),
-                null !== prevSibling &&
+                null !== returnFiber &&
                   (buildHydrationDiffNode(workInProgress, 0).serverProps =
-                    prevSibling)),
+                    returnFiber)),
               (hydrationParentFiber = workInProgress),
               (rootOrSingletonContext = !0),
-              (prevSibling = nextHydratableInstance),
-              isSingletonScope(workInProgress.type)
-                ? ((previousHydratableOnEnteringScopedSingleton = prevSibling),
-                  (nextHydratableInstance = getNextHydratable(
-                    returnFiber.firstChild
-                  )))
-                : (nextHydratableInstance = prevSibling)),
-            reconcileChildren(
-              current,
-              workInProgress,
-              workInProgress.pendingProps.children,
-              renderLanes
-            ),
+              (nextHydratableInstance = getNextHydratable(
+                prevSibling.firstChild
+              ))),
+            (returnFiber = workInProgress.pendingProps.children),
+            null !== current || isHydrating
+              ? reconcileChildren(
+                  current,
+                  workInProgress,
+                  returnFiber,
+                  renderLanes
+                )
+              : (workInProgress.child = reconcileChildFibers(
+                  workInProgress,
+                  null,
+                  returnFiber,
+                  renderLanes
+                )),
             markRef(current, workInProgress),
-            null === current && (workInProgress.flags |= 4194304),
             workInProgress.child
           );
         case 5:
           return (
             null === current &&
               isHydrating &&
-              ((prevState = getHostContext()),
+              ((nextProps = getHostContext()),
               (returnFiber = validateDOMNesting(
                 workInProgress.type,
-                prevState.ancestorInfo
+                nextProps.ancestorInfo
               )),
               (prevSibling = nextHydratableInstance),
               (nextState = !prevSibling) ||
@@ -10653,33 +10548,33 @@
                 null !== nextState
                   ? ((workInProgress.stateNode = nextState),
                     didSuspendOrErrorDEV ||
-                      ((prevState = diffHydratedProperties(
+                      ((nextProps = diffHydratedProperties(
                         nextState,
                         workInProgress.type,
                         workInProgress.pendingProps,
-                        prevState
+                        nextProps
                       )),
-                      null !== prevState &&
+                      null !== nextProps &&
                         (buildHydrationDiffNode(workInProgress, 0).serverProps =
-                          prevState)),
+                          nextProps)),
                     (hydrationParentFiber = workInProgress),
                     (nextHydratableInstance = getNextHydratable(
                       nextState.firstChild
                     )),
                     (rootOrSingletonContext = !1),
-                    (prevState = !0))
-                  : (prevState = !1),
-                (nextState = !prevState)),
+                    (nextProps = !0))
+                  : (nextProps = !1),
+                (nextState = !nextProps)),
               nextState &&
                 (returnFiber &&
                   warnNonHydratedInstance(workInProgress, prevSibling),
                 throwOnHydrationMismatch(workInProgress))),
             pushHostContext(workInProgress),
             (prevSibling = workInProgress.type),
-            (prevState = workInProgress.pendingProps),
+            (nextProps = workInProgress.pendingProps),
             (nextState = null !== current ? current.memoizedProps : null),
-            (returnFiber = prevState.children),
-            shouldSetTextContent(prevSibling, prevState)
+            (returnFiber = nextProps.children),
+            shouldSetTextContent(prevSibling, nextProps)
               ? (returnFiber = null)
               : null !== nextState &&
                 shouldSetTextContent(prevSibling, nextState) &&
@@ -10707,21 +10602,16 @@
           return (
             null === current &&
               isHydrating &&
-              ((renderLanes = workInProgress.pendingProps),
-              (current = getHostContext()),
-              (returnFiber = current.ancestorInfo.current),
-              (renderLanes =
-                null != returnFiber
-                  ? validateTextNesting(
-                      renderLanes,
-                      returnFiber.tag,
-                      current.ancestorInfo.implicitRootScope
-                    )
+              ((current = workInProgress.pendingProps),
+              (renderLanes = getHostContext().ancestorInfo.current),
+              (current =
+                null != renderLanes
+                  ? validateTextNesting(current, renderLanes.tag)
                   : !0),
-              (current = nextHydratableInstance),
-              (returnFiber = !current) ||
+              (renderLanes = nextHydratableInstance),
+              (returnFiber = !renderLanes) ||
                 ((returnFiber = canHydrateTextInstance(
-                  current,
+                  renderLanes,
                   workInProgress.pendingProps,
                   rootOrSingletonContext
                 )),
@@ -10733,8 +10623,8 @@
                   : (returnFiber = !1),
                 (returnFiber = !returnFiber)),
               returnFiber &&
-                (renderLanes &&
-                  warnNonHydratedInstance(workInProgress, current),
+                (current &&
+                  warnNonHydratedInstance(workInProgress, renderLanes),
                 throwOnHydrationMismatch(workInProgress))),
             null
           );
@@ -10809,14 +10699,14 @@
           return (
             (returnFiber = workInProgress.type),
             (prevSibling = workInProgress.pendingProps),
-            (prevState = prevSibling.value),
+            (nextProps = prevSibling.value),
             "value" in prevSibling ||
               hasWarnedAboutUsingNoValuePropOnContextProvider ||
               ((hasWarnedAboutUsingNoValuePropOnContextProvider = !0),
               console.error(
                 "The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?"
               )),
-            pushProvider(workInProgress, returnFiber, prevState),
+            pushProvider(workInProgress, returnFiber, nextProps),
             reconcileChildren(
               current,
               workInProgress,
@@ -10881,12 +10771,12 @@
               ? ((prevSibling = peekCacheFromPool()),
                 null === prevSibling &&
                   ((prevSibling = workInProgressRoot),
-                  (prevState = createCache()),
-                  (prevSibling.pooledCache = prevState),
-                  retainCache(prevState),
-                  null !== prevState &&
+                  (nextProps = createCache()),
+                  (prevSibling.pooledCache = nextProps),
+                  retainCache(nextProps),
+                  null !== nextProps &&
                     (prevSibling.pooledCacheLanes |= renderLanes),
-                  (prevSibling = prevState)),
+                  (prevSibling = nextProps)),
                 (workInProgress.memoizedState = {
                   parent: returnFiber,
                   cache: prevSibling
@@ -10898,7 +10788,7 @@
                   processUpdateQueue(workInProgress, null, null, renderLanes),
                   suspendIfUpdateReadFromEntangledAsyncAction()),
                 (prevSibling = current.memoizedState),
-                (prevState = workInProgress.memoizedState),
+                (nextProps = workInProgress.memoizedState),
                 prevSibling.parent !== returnFiber
                   ? ((prevSibling = {
                       parent: returnFiber,
@@ -10910,7 +10800,7 @@
                         workInProgress.updateQueue.baseState =
                           prevSibling),
                     pushProvider(workInProgress, CacheContext, returnFiber))
-                  : ((returnFiber = prevState.cache),
+                  : ((returnFiber = nextProps.cache),
                     pushProvider(workInProgress, CacheContext, returnFiber),
                     returnFiber !== prevSibling.cache &&
                       propagateContextChanges(
@@ -10932,21 +10822,23 @@
             (returnFiber = workInProgress.pendingProps),
             (prevSibling = workInProgress.stateNode),
             null != returnFiber.name && "auto" !== returnFiber.name
-              ? (workInProgress.flags |= null === current ? 18882560 : 18874368)
+              ? ((workInProgress.flags |= 2097152),
+                null === current &&
+                  trackAppearingViewTransition(prevSibling, returnFiber.name))
               : null === prevSibling.autoName &&
-                ((prevState = workInProgressRoot.identifierPrefix),
+                ((nextProps = workInProgressRoot.identifierPrefix),
                 isHydrating
                   ? ((nextState = getTreeId()),
-                    (prevState =
-                      "\u00ab" + prevState + "T" + nextState + "\u00bb"))
+                    (nextProps =
+                      "\u00ab" + nextProps + "T" + nextState + "\u00bb"))
                   : ((nextState = globalClientIdCounter++),
-                    (prevState =
+                    (nextProps =
                       "\u00ab" +
-                      prevState +
+                      nextProps +
                       "t" +
                       nextState.toString(32) +
                       "\u00bb")),
-                (prevSibling.autoName = prevState)),
+                (prevSibling.autoName = nextProps)),
             null !== current && current.memoizedProps.name !== returnFiber.name
               ? (workInProgress.flags |= 4194816)
               : markRef(current, workInProgress),
@@ -11075,11 +10967,10 @@
                 ((inst.destroy = void 0),
                 (flags & Insertion) !== NoFlags &&
                   (isRunningInsertionEffect = !0),
-                (lastEffect = finishedWork),
                 runWithFiberInDEV(
-                  lastEffect,
+                  finishedWork,
                   callDestroyInDEV,
-                  lastEffect,
+                  finishedWork,
                   nearestMountedAncestor,
                   destroy
                 ),
@@ -11392,7 +11283,7 @@
         5 === fiber.tag ||
         3 === fiber.tag ||
         26 === fiber.tag ||
-        (27 === fiber.tag && isSingletonScope(fiber.type)) ||
+        27 === fiber.tag ||
         4 === fiber.tag
       );
     }
@@ -11405,10 +11296,12 @@
         fiber.sibling.return = fiber.return;
         for (
           fiber = fiber.sibling;
-          5 !== fiber.tag && 6 !== fiber.tag && 18 !== fiber.tag;
+          5 !== fiber.tag &&
+          6 !== fiber.tag &&
+          27 !== fiber.tag &&
+          18 !== fiber.tag;
 
         ) {
-          if (27 === fiber.tag && isSingletonScope(fiber.type)) continue a;
           if (fiber.flags & 2) continue a;
           if (null === fiber.child || 4 === fiber.tag) continue a;
           else (fiber.child.return = fiber), (fiber = fiber.child);
@@ -11421,32 +11314,19 @@
       if (5 === tag || 6 === tag)
         (node = node.stateNode),
           before
-            ? (9 === parent.nodeType
-                ? parent.body
-                : "HTML" === parent.nodeName
-                  ? parent.ownerDocument.body
-                  : parent
-              ).insertBefore(node, before)
-            : ((before =
-                9 === parent.nodeType
-                  ? parent.body
-                  : "HTML" === parent.nodeName
-                    ? parent.ownerDocument.body
-                    : parent),
-              before.appendChild(node),
+            ? 8 === parent.nodeType
+              ? parent.parentNode.insertBefore(node, before)
+              : parent.insertBefore(node, before)
+            : (8 === parent.nodeType
+                ? ((before = parent.parentNode),
+                  before.insertBefore(node, parent))
+                : ((before = parent), before.appendChild(node)),
               (parent = parent._reactRootContainer),
               (null !== parent && void 0 !== parent) ||
                 null !== before.onclick ||
                 (before.onclick = noop$1)),
           (viewTransitionMutationContext = !0);
-      else if (
-        4 !== tag &&
-        (27 === tag &&
-          isSingletonScope(node.type) &&
-          ((parent = node.stateNode), (before = null)),
-        (node = node.child),
-        null !== node)
-      )
+      else if (4 !== tag && 27 !== tag && ((node = node.child), null !== node))
         for (
           insertOrAppendPlacementNodeIntoContainer(node, before, parent),
             node = node.sibling;
@@ -11462,12 +11342,7 @@
         (node = node.stateNode),
           before ? parent.insertBefore(node, before) : parent.appendChild(node),
           (viewTransitionMutationContext = !0);
-      else if (
-        4 !== tag &&
-        (27 === tag && isSingletonScope(node.type) && (parent = node.stateNode),
-        (node = node.child),
-        null !== node)
-      )
+      else if (4 !== tag && 27 !== tag && ((node = node.child), null !== node))
         for (
           insertOrAppendPlacementNode(node, before, parent),
             node = node.sibling;
@@ -11478,64 +11353,55 @@
             (node = node.sibling);
     }
     function commitPlacement(finishedWork) {
-      a: {
-        for (var parent = finishedWork.return; null !== parent; ) {
-          if (isHostParent(parent)) {
-            var parentFiber = parent;
-            break a;
+      if (27 !== finishedWork.tag) {
+        a: {
+          for (var parent = finishedWork.return; null !== parent; ) {
+            if (isHostParent(parent)) {
+              var parentFiber = parent;
+              break a;
+            }
+            parent = parent.return;
           }
-          parent = parent.return;
-        }
-        throw Error(
-          "Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue."
-        );
-      }
-      switch (parentFiber.tag) {
-        case 27:
-          parent = parentFiber.stateNode;
-          parentFiber = getHostSibling(finishedWork);
-          insertOrAppendPlacementNode(finishedWork, parentFiber, parent);
-          break;
-        case 5:
-          parent = parentFiber.stateNode;
-          parentFiber.flags & 32 &&
-            (resetTextContent(parent), (parentFiber.flags &= -33));
-          parentFiber = getHostSibling(finishedWork);
-          insertOrAppendPlacementNode(finishedWork, parentFiber, parent);
-          break;
-        case 3:
-        case 4:
-          parent = parentFiber.stateNode.containerInfo;
-          parentFiber = getHostSibling(finishedWork);
-          insertOrAppendPlacementNodeIntoContainer(
-            finishedWork,
-            parentFiber,
-            parent
-          );
-          break;
-        default:
           throw Error(
-            "Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue."
+            "Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue."
           );
+        }
+        switch (parentFiber.tag) {
+          case 27:
+            parent = parentFiber.stateNode;
+            parentFiber = getHostSibling(finishedWork);
+            insertOrAppendPlacementNode(finishedWork, parentFiber, parent);
+            break;
+          case 5:
+            parent = parentFiber.stateNode;
+            parentFiber.flags & 32 &&
+              (resetTextContent(parent), (parentFiber.flags &= -33));
+            parentFiber = getHostSibling(finishedWork);
+            insertOrAppendPlacementNode(finishedWork, parentFiber, parent);
+            break;
+          case 3:
+          case 4:
+            parent = parentFiber.stateNode.containerInfo;
+            parentFiber = getHostSibling(finishedWork);
+            insertOrAppendPlacementNodeIntoContainer(
+              finishedWork,
+              parentFiber,
+              parent
+            );
+            break;
+          default:
+            throw Error(
+              "Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue."
+            );
+        }
       }
     }
-    function commitHostSingletonAcquisition(finishedWork) {
-      var singleton = finishedWork.stateNode,
-        props = finishedWork.memoizedProps;
-      try {
-        runWithFiberInDEV(
-          finishedWork,
-          acquireSingletonInstance,
-          finishedWork.type,
-          props,
-          singleton,
-          finishedWork
-        );
-      } catch (error) {
-        captureCommitPhaseError(finishedWork, finishedWork.return, error);
-      }
-    }
-    function commitBeforeMutationEffects(root, firstChild, committedLanes) {
+    function commitBeforeMutationEffects(
+      root,
+      firstChild,
+      committedLanes,
+      appearingViewTransitions
+    ) {
       root = root.containerInfo;
       eventsEnabled = _enabled;
       root = getActiveElementDeep(root);
@@ -11609,7 +11475,7 @@
         selectionRange: JSCompiler_temp
       };
       shouldStartViewTransition = _enabled = !1;
-      committedLanes = (committedLanes & 335544064) === committedLanes;
+      committedLanes = (committedLanes & 335544192) === committedLanes;
       nextEffect = firstChild;
       for (firstChild = committedLanes ? 9238 : 1028; null !== nextEffect; ) {
         root = nextEffect;
@@ -11623,7 +11489,10 @@
             anchorOffset++
           )
             committedLanes &&
-              commitExitViewTransitions(JSCompiler_temp[anchorOffset]);
+              commitExitViewTransitions(
+                JSCompiler_temp[anchorOffset],
+                appearingViewTransitions
+              );
         if (null === root.alternate && 0 !== (root.flags & 2))
           commitBeforeMutationEffects_complete(committedLanes);
         else {
@@ -11634,7 +11503,10 @@
               null !== JSCompiler_temp &&
                 null === JSCompiler_temp.memoizedState &&
                 committedLanes &&
-                commitExitViewTransitions(JSCompiler_temp);
+                commitExitViewTransitions(
+                  JSCompiler_temp,
+                  appearingViewTransitions
+                );
               commitBeforeMutationEffects_complete(committedLanes);
               continue;
             } else if (
@@ -11651,7 +11523,6 @@
               commitBeforeMutationEffects_complete(committedLanes));
         }
       }
-      appearingViewTransitions = null;
     }
     function commitBeforeMutationEffects_complete(
       isViewTransitionEligible$jscomp$0
@@ -11824,13 +11695,13 @@
       }
     }
     function commitAppearingPairViewTransitions(placement) {
-      if (0 !== (placement.subtreeFlags & 18874368))
+      if (0 !== (placement.subtreeFlags & 2097152))
         for (placement = placement.child; null !== placement; ) {
           if (22 !== placement.tag || null !== placement.memoizedState)
             if (
               (commitAppearingPairViewTransitions(placement),
               30 === placement.tag &&
-                0 !== (placement.flags & 18874368) &&
+                0 !== (placement.flags & 2097152) &&
                 placement.stateNode.paired)
             ) {
               var props = placement.memoizedProps;
@@ -11882,52 +11753,55 @@
             (placement = placement.sibling);
       else commitAppearingPairViewTransitions(placement);
     }
-    function commitDeletedPairViewTransitions(deletion) {
+    function commitDeletedPairViewTransitions(
+      deletion,
+      appearingViewTransitions
+    ) {
       if (
-        null !== appearingViewTransitions &&
-        0 !== appearingViewTransitions.size
-      ) {
-        var pairs = appearingViewTransitions;
-        if (0 !== (deletion.subtreeFlags & 18874368))
-          for (deletion = deletion.child; null !== deletion; ) {
-            if (22 !== deletion.tag || null !== deletion.memoizedState) {
-              if (30 === deletion.tag && 0 !== (deletion.flags & 18874368)) {
-                var props = deletion.memoizedProps,
-                  name = props.name;
-                if (null != name && "auto" !== name) {
-                  var pair = pairs.get(name);
-                  if (void 0 !== pair) {
-                    var className = getViewTransitionClassName(
-                      props.className,
-                      props.share
-                    );
-                    "none" !== className &&
-                      ((viewTransitionHostInstanceIdx = 0),
-                      applyViewTransitionToHostInstances(
-                        deletion.child,
-                        name,
-                        className,
-                        null,
-                        !1
-                      )
-                        ? ((pair.paired = deletion.stateNode),
-                          scheduleViewTransitionEvent(deletion, props.onShare))
-                        : restoreViewTransitionOnHostInstances(
-                            deletion.child,
-                            !1
-                          ));
-                    pairs.delete(name);
-                    if (0 === pairs.size) break;
-                  }
+        0 !== appearingViewTransitions.size &&
+        0 !== (deletion.subtreeFlags & 2097152)
+      )
+        for (deletion = deletion.child; null !== deletion; ) {
+          if (22 !== deletion.tag || null !== deletion.memoizedState) {
+            if (30 === deletion.tag && 0 !== (deletion.flags & 2097152)) {
+              var props = deletion.memoizedProps,
+                name = props.name;
+              if (null != name && "auto" !== name) {
+                var pair = appearingViewTransitions.get(name);
+                if (void 0 !== pair) {
+                  var className = getViewTransitionClassName(
+                    props.className,
+                    props.share
+                  );
+                  "none" !== className &&
+                    ((viewTransitionHostInstanceIdx = 0),
+                    applyViewTransitionToHostInstances(
+                      deletion.child,
+                      name,
+                      className,
+                      null,
+                      !1
+                    )
+                      ? ((pair.paired = deletion.stateNode),
+                        scheduleViewTransitionEvent(deletion, props.onShare))
+                      : restoreViewTransitionOnHostInstances(
+                          deletion.child,
+                          !1
+                        ));
+                  appearingViewTransitions.delete(name);
+                  if (0 === appearingViewTransitions.size) break;
                 }
               }
-              commitDeletedPairViewTransitions(deletion);
             }
-            deletion = deletion.sibling;
+            commitDeletedPairViewTransitions(
+              deletion,
+              appearingViewTransitions
+            );
           }
-      }
+          deletion = deletion.sibling;
+        }
     }
-    function commitExitViewTransitions(deletion) {
+    function commitExitViewTransitions(deletion, appearingViewTransitions) {
       if (30 === deletion.tag) {
         var props = deletion.memoizedProps,
           name = getViewTransitionName(props, deletion.stateNode),
@@ -11955,13 +11829,14 @@
               : scheduleViewTransitionEvent(deletion, props.onExit)
             : restoreViewTransitionOnHostInstances(deletion.child, !1));
         null !== appearingViewTransitions &&
-          commitDeletedPairViewTransitions(deletion);
+          commitDeletedPairViewTransitions(deletion, appearingViewTransitions);
       } else if (0 !== (deletion.subtreeFlags & 33554432))
         for (deletion = deletion.child; null !== deletion; )
-          commitExitViewTransitions(deletion), (deletion = deletion.sibling);
+          commitExitViewTransitions(deletion, appearingViewTransitions),
+            (deletion = deletion.sibling);
       else
         null !== appearingViewTransitions &&
-          commitDeletedPairViewTransitions(deletion);
+          commitDeletedPairViewTransitions(deletion, appearingViewTransitions);
     }
     function commitNestedViewTransitions(changedParent) {
       for (changedParent = changedParent.child; null !== changedParent; ) {
@@ -11985,10 +11860,10 @@
       }
     }
     function restorePairedViewTransitions(parent) {
-      if (0 !== (parent.subtreeFlags & 18874368))
+      if (0 !== (parent.subtreeFlags & 2097152))
         for (parent = parent.child; null !== parent; ) {
           if (22 !== parent.tag || null !== parent.memoizedState) {
-            if (30 === parent.tag && 0 !== (parent.flags & 18874368)) {
+            if (30 === parent.tag && 0 !== (parent.flags & 2097152)) {
               var instance = parent.stateNode;
               null !== instance.paired &&
                 ((instance.paired = null),
@@ -12290,11 +12165,11 @@
           }
           finishedRoot.effectDuration += popNestedEffectDurations(current);
           break;
-        case 27:
-          null === current &&
-            flags & 4 &&
-            commitHostSingletonAcquisition(finishedWork);
         case 26:
+          recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
+          flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);
+          break;
+        case 27:
         case 5:
           recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
           null === current && flags & 4 && commitHostMount(finishedWork);
@@ -12454,19 +12329,16 @@
             safelyDetachRef(deletedFiber, nearestMountedAncestor);
           var prevHostParent = hostParent,
             prevHostParentIsContainer = hostParentIsContainer;
-          isSingletonScope(deletedFiber.type) &&
-            ((hostParent = deletedFiber.stateNode),
-            (hostParentIsContainer = !1));
+          hostParent = deletedFiber.stateNode;
           recursivelyTraverseDeletionEffects(
             finishedRoot,
             nearestMountedAncestor,
             deletedFiber
           );
-          runWithFiberInDEV(
-            deletedFiber,
-            releaseSingletonInstance,
-            deletedFiber.stateNode
-          );
+          deletedFiber = deletedFiber.stateNode;
+          for (finishedRoot = deletedFiber.attributes; finishedRoot.length; )
+            deletedFiber.removeAttributeNode(finishedRoot[0]);
+          detachDeletedInstance(deletedFiber);
           hostParent = prevHostParent;
           hostParentIsContainer = prevHostParentIsContainer;
           break;
@@ -12522,14 +12394,11 @@
           null !== hostParent &&
             (hostParentIsContainer
               ? ((finishedRoot = hostParent),
-                clearSuspenseBoundary(
-                  9 === finishedRoot.nodeType
-                    ? finishedRoot.body
-                    : "HTML" === finishedRoot.nodeName
-                      ? finishedRoot.ownerDocument.body
-                      : finishedRoot,
-                  deletedFiber.stateNode
-                ),
+                (deletedFiber = deletedFiber.stateNode),
+                8 === finishedRoot.nodeType
+                  ? clearSuspenseBoundary(finishedRoot.parentNode, deletedFiber)
+                  : 1 === finishedRoot.nodeType &&
+                    clearSuspenseBoundary(finishedRoot, deletedFiber),
                 retryIfBlockedOn(finishedRoot))
               : clearSuspenseBoundary(hostParent, deletedFiber.stateNode));
           break;
@@ -12687,17 +12556,14 @@
           a: for (; null !== parent; ) {
             switch (parent.tag) {
               case 27:
-                if (isSingletonScope(parent.type)) {
-                  hostParent = parent.stateNode;
-                  hostParentIsContainer = !1;
-                  break a;
-                }
-                break;
               case 5:
                 hostParent = parent.stateNode;
                 hostParentIsContainer = !1;
                 break a;
               case 3:
+                hostParent = parent.stateNode.containerInfo;
+                hostParentIsContainer = !0;
+                break a;
               case 4:
                 hostParent = parent.stateNode.containerInfo;
                 hostParentIsContainer = !0;
@@ -12927,20 +12793,35 @@
                   );
           break;
         case 27:
-          recursivelyTraverseMutationEffects(root, finishedWork, lanes);
-          commitReconciliationEffects(finishedWork);
-          flags & 512 &&
-            (offscreenSubtreeWasHidden ||
-              null === current ||
-              safelyDetachRef(current, current.return));
-          null !== current &&
-            flags & 4 &&
-            commitHostUpdate(
-              finishedWork,
-              finishedWork.memoizedProps,
-              current.memoizedProps
-            );
-          break;
+          if (flags & 4 && null === finishedWork.alternate) {
+            hoistableRoot = finishedWork.stateNode;
+            i = finishedWork.memoizedProps;
+            try {
+              for (var node = hoistableRoot.firstChild; node; ) {
+                var nextNode = node.nextSibling,
+                  nodeName = node.nodeName;
+                node[internalHoistableMarker] ||
+                  "HEAD" === nodeName ||
+                  "BODY" === nodeName ||
+                  "SCRIPT" === nodeName ||
+                  "STYLE" === nodeName ||
+                  ("LINK" === nodeName &&
+                    "stylesheet" === node.rel.toLowerCase()) ||
+                  hoistableRoot.removeChild(node);
+                node = nextNode;
+              }
+              runWithFiberInDEV(
+                finishedWork,
+                acquireSingletonInstance,
+                finishedWork.type,
+                i,
+                hoistableRoot,
+                finishedWork
+              );
+            } catch (error) {
+              captureCommitPhaseError(finishedWork, finishedWork.return, error);
+            }
+          }
         case 5:
           recursivelyTraverseMutationEffects(root, finishedWork, lanes);
           commitReconciliationEffects(finishedWork);
@@ -13057,17 +12938,15 @@
             (offscreenSubtreeWasHidden ||
               null === current ||
               safelyDetachRef(current, current.return));
-          hoistableRoot = null !== finishedWork.memoizedState;
-          var wasHidden = null !== current && null !== current.memoizedState,
-            prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden,
-            prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
-          offscreenSubtreeIsHidden =
-            prevOffscreenSubtreeIsHidden || hoistableRoot;
-          offscreenSubtreeWasHidden =
-            prevOffscreenSubtreeWasHidden || wasHidden;
+          node = null !== finishedWork.memoizedState;
+          nextNode = null !== current && null !== current.memoizedState;
+          nodeName = offscreenSubtreeIsHidden;
+          var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
+          offscreenSubtreeIsHidden = nodeName || node;
+          offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || nextNode;
           recursivelyTraverseMutationEffects(root, finishedWork, lanes);
           offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
-          offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;
+          offscreenSubtreeIsHidden = nodeName;
           commitReconciliationEffects(finishedWork);
           root = finishedWork.stateNode;
           root._current = finishedWork;
@@ -13075,26 +12954,26 @@
           root._visibility |= root._pendingVisibility & OffscreenDetached;
           if (
             flags & 8192 &&
-            ((root._visibility = hoistableRoot
+            ((root._visibility = node
               ? root._visibility & ~OffscreenVisible
               : root._visibility | OffscreenVisible),
-            hoistableRoot &&
-              (null === current ||
-                wasHidden ||
-                offscreenSubtreeIsHidden ||
-                offscreenSubtreeWasHidden ||
+            node &&
+              ((root = offscreenSubtreeIsHidden || offscreenSubtreeWasHidden),
+              null === current ||
+                nextNode ||
+                root ||
                 recursivelyTraverseDisappearLayoutEffects(finishedWork)),
             null === finishedWork.memoizedProps ||
               "manual" !== finishedWork.memoizedProps.mode)
           )
             a: for (current = null, root = finishedWork; ; ) {
-              if (5 === root.tag || 26 === root.tag) {
+              if (5 === root.tag || 26 === root.tag || 27 === root.tag) {
                 if (null === current) {
                   lanes = current = root;
                   try {
-                    (i = lanes.stateNode),
-                      hoistableRoot
-                        ? runWithFiberInDEV(lanes, hideInstance, i)
+                    (hoistableRoot = lanes.stateNode),
+                      node
+                        ? runWithFiberInDEV(lanes, hideInstance, hoistableRoot)
                         : runWithFiberInDEV(
                             lanes,
                             unhideInstance,
@@ -13109,15 +12988,15 @@
                 if (null === current) {
                   lanes = root;
                   try {
-                    var instance = lanes.stateNode;
-                    hoistableRoot
-                      ? runWithFiberInDEV(lanes, hideTextInstance, instance)
-                      : runWithFiberInDEV(
-                          lanes,
-                          unhideTextInstance,
-                          instance,
-                          lanes.memoizedProps
-                        );
+                    (i = lanes.stateNode),
+                      node
+                        ? runWithFiberInDEV(lanes, hideTextInstance, i)
+                        : runWithFiberInDEV(
+                            lanes,
+                            unhideTextInstance,
+                            i,
+                            lanes.memoizedProps
+                          );
                   } catch (error) {
                     captureCommitPhaseError(lanes, lanes.return, error);
                   }
@@ -13169,7 +13048,7 @@
           viewTransitionMutationContext = !1;
           recursivelyTraverseMutationEffects(root, finishedWork, lanes);
           commitReconciliationEffects(finishedWork);
-          (lanes & 335544064) === lanes &&
+          (lanes & 335544192) === lanes &&
             null !== current &&
             viewTransitionMutationContext &&
             (finishedWork.flags |= 4);
@@ -13304,7 +13183,7 @@
                   ),
                   layoutClassName = getViewTransitionClassName(
                     root.className,
-                    root.layout
+                    root.update
                   );
                 if ("none" === updateClassName) {
                   if ("none" === layoutClassName) {
@@ -13400,13 +13279,8 @@
             );
           recursivelyTraverseDisappearLayoutEffects(finishedWork);
           break;
-        case 27:
-          runWithFiberInDEV(
-            finishedWork,
-            releaseSingletonInstance,
-            finishedWork.stateNode
-          );
         case 26:
+        case 27:
         case 5:
           safelyDetachRef(finishedWork, finishedWork.return);
           recursivelyTraverseDisappearLayoutEffects(finishedWork);
@@ -13493,9 +13367,8 @@
             commitClassCallbacks(finishedWork);
           safelyAttachRef(finishedWork, finishedWork.return);
           break;
-        case 27:
-          commitHostSingletonAcquisition(finishedWork);
         case 26:
+        case 27:
         case 5:
           recursivelyTraverseReappearLayoutEffects(
             finishedRoot,
@@ -13632,7 +13505,7 @@
       endTime
     ) {
       var isViewTransitionEligible =
-        (committedLanes & 335544064) === committedLanes;
+        (committedLanes & 335544192) === committedLanes;
       if (
         parentFiber.subtreeFlags & (isViewTransitionEligible ? 10262 : 10256) ||
         (0 !== parentFiber.actualDuration &&
@@ -13673,7 +13546,7 @@
           inHydratedSubtree
         );
       var isViewTransitionEligible =
-        (committedLanes & 335544064) === committedLanes;
+        (committedLanes & 335544192) === committedLanes;
       isViewTransitionEligible &&
         null === finishedWork.alternate &&
         null !== finishedWork.return &&
@@ -14170,20 +14043,6 @@
                 (suspenseyCommitFlag = previousHoistableRoot))
               : recursivelyAccumulateSuspenseyCommit(fiber));
           break;
-        case 30:
-          if (
-            0 !== (fiber.flags & suspenseyCommitFlag) &&
-            ((previousHoistableRoot = fiber.memoizedProps.name),
-            null != previousHoistableRoot && "auto" !== previousHoistableRoot)
-          ) {
-            null === appearingViewTransitions &&
-              (appearingViewTransitions = new Map());
-            var instance = fiber.stateNode;
-            instance.paired = null;
-            appearingViewTransitions.set(previousHoistableRoot, instance);
-          }
-          recursivelyAccumulateSuspenseyCommit(fiber);
-          break;
         default:
           recursivelyAccumulateSuspenseyCommit(fiber);
       }
@@ -14894,14 +14753,14 @@
     function popToNextHostParent(fiber) {
       for (hydrationParentFiber = fiber.return; hydrationParentFiber; )
         switch (hydrationParentFiber.tag) {
+          case 3:
+          case 27:
+            rootOrSingletonContext = !0;
+            return;
           case 5:
           case 13:
             rootOrSingletonContext = !1;
             return;
-          case 27:
-          case 3:
-            rootOrSingletonContext = !0;
-            return;
           default:
             hydrationParentFiber = hydrationParentFiber.return;
         }
@@ -14910,31 +14769,32 @@
       if (fiber !== hydrationParentFiber) return !1;
       if (!isHydrating)
         return popToNextHostParent(fiber), (isHydrating = !0), !1;
-      var tag = fiber.tag,
+      var shouldClear = !1,
         JSCompiler_temp;
-      if ((JSCompiler_temp = 3 !== tag && 27 !== tag)) {
-        if ((JSCompiler_temp = 5 === tag))
+      if ((JSCompiler_temp = 3 !== fiber.tag && 27 !== fiber.tag)) {
+        if ((JSCompiler_temp = 5 === fiber.tag))
           (JSCompiler_temp = fiber.type),
             (JSCompiler_temp =
               !("form" !== JSCompiler_temp && "button" !== JSCompiler_temp) ||
               shouldSetTextContent(fiber.type, fiber.memoizedProps));
         JSCompiler_temp = !JSCompiler_temp;
       }
-      if (JSCompiler_temp && nextHydratableInstance) {
-        for (JSCompiler_temp = nextHydratableInstance; JSCompiler_temp; ) {
-          var diffNode = buildHydrationDiffNode(fiber, 0),
-            description =
-              describeHydratableInstanceForDevWarnings(JSCompiler_temp);
-          diffNode.serverTail.push(description);
-          JSCompiler_temp =
+      JSCompiler_temp && (shouldClear = !0);
+      if (shouldClear && nextHydratableInstance) {
+        for (shouldClear = nextHydratableInstance; shouldClear; ) {
+          JSCompiler_temp = buildHydrationDiffNode(fiber, 0);
+          var description =
+            describeHydratableInstanceForDevWarnings(shouldClear);
+          JSCompiler_temp.serverTail.push(description);
+          shouldClear =
             "Suspense" === description.type
-              ? getNextHydratableInstanceAfterSuspenseInstance(JSCompiler_temp)
-              : getNextHydratable(JSCompiler_temp.nextSibling);
+              ? getNextHydratableInstanceAfterSuspenseInstance(shouldClear)
+              : getNextHydratable(shouldClear.nextSibling);
         }
         throwOnHydrationMismatch(fiber);
       }
       popToNextHostParent(fiber);
-      if (13 === tag) {
+      if (13 === fiber.tag) {
         fiber = fiber.memoizedState;
         fiber = null !== fiber ? fiber.dehydrated : null;
         if (!fiber)
@@ -14944,16 +14804,9 @@
         nextHydratableInstance =
           getNextHydratableInstanceAfterSuspenseInstance(fiber);
       } else
-        27 === tag
-          ? ((tag = nextHydratableInstance),
-            isSingletonScope(fiber.type)
-              ? ((fiber = previousHydratableOnEnteringScopedSingleton),
-                (previousHydratableOnEnteringScopedSingleton = null),
-                (nextHydratableInstance = fiber))
-              : (nextHydratableInstance = tag))
-          : (nextHydratableInstance = hydrationParentFiber
-              ? getNextHydratable(fiber.stateNode.nextSibling)
-              : null);
+        nextHydratableInstance = hydrationParentFiber
+          ? getNextHydratable(fiber.stateNode.nextSibling)
+          : null;
       return !0;
     }
     function resetHydrationState() {
@@ -14993,31 +14846,14 @@
         ? props.name
         : instance.autoName;
     }
-    function getClassNameByType(classByType) {
-      if (null == classByType || "string" === typeof classByType)
-        return classByType;
-      var className = null,
-        activeTypes = pendingTransitionTypes;
-      if (null !== activeTypes)
-        for (var i = 0; i < activeTypes.length; i++) {
-          var match = classByType[activeTypes[i]];
-          if (null != match) {
-            if ("none" === match) return "none";
-            className = null == className ? match : className + (" " + match);
-          }
-        }
-      return null == className ? classByType.default : className;
-    }
-    function getViewTransitionClassName(defaultClass, eventClass) {
-      defaultClass = getClassNameByType(defaultClass);
-      eventClass = getClassNameByType(eventClass);
-      return null == eventClass
-        ? defaultClass
-        : "none" === eventClass
-          ? eventClass
-          : null != defaultClass && "none" !== defaultClass
-            ? defaultClass + " " + eventClass
-            : eventClass;
+    function getViewTransitionClassName(className, eventClassName) {
+      return null == eventClassName
+        ? className
+        : "none" === eventClassName
+          ? eventClassName
+          : null != className
+            ? className + " " + eventClassName
+            : eventClassName;
     }
     function markUpdate(workInProgress) {
       workInProgress.flags |= 4;
@@ -15034,7 +14870,7 @@
         resource = suspenseHandlerStackCursor.current;
         if (
           null !== resource &&
-          ((workInProgressRootRenderLanes & 4194048) ===
+          ((workInProgressRootRenderLanes & 4194176) ===
           workInProgressRootRenderLanes
             ? null !== shellBoundary
             : ((workInProgressRootRenderLanes & 62914560) !==
@@ -15142,6 +14978,30 @@
       completedWork.childLanes = newChildLanes;
       return didBailout;
     }
+    function trackReappearingViewTransitions(workInProgress) {
+      if (0 !== (workInProgress.subtreeFlags & 2097152))
+        for (workInProgress = workInProgress.child; null !== workInProgress; ) {
+          if (
+            22 !== workInProgress.tag ||
+            null !== workInProgress.memoizedState
+          ) {
+            if (
+              30 === workInProgress.tag &&
+              0 !== (workInProgress.flags & 2097152)
+            ) {
+              var props = workInProgress.memoizedProps;
+              null != props.name &&
+                "auto" !== props.name &&
+                trackAppearingViewTransition(
+                  workInProgress.stateNode,
+                  props.name
+                );
+            }
+            trackReappearingViewTransitions(workInProgress);
+          }
+          workInProgress = workInProgress.sibling;
+        }
+    }
     function completeWork(current, workInProgress, renderLanes) {
       var newProps = workInProgress.pendingProps;
       popTreeContext(workInProgress);
@@ -15431,13 +15291,9 @@
                   : !1;
               current || throwOnHydrationMismatch(workInProgress);
             } else
-              (_type = renderLanes.ancestorInfo.current),
-                null != _type &&
-                  validateTextNesting(
-                    newProps,
-                    _type.tag,
-                    renderLanes.ancestorInfo.implicitRootScope
-                  ),
+              (renderLanes = renderLanes.ancestorInfo.current),
+                null != renderLanes &&
+                  validateTextNesting(newProps, renderLanes.tag),
                 (current =
                   getOwnerDocumentFromRootContainer(current).createTextNode(
                     newProps
@@ -15659,7 +15515,8 @@
             (newProps = null !== workInProgress.memoizedState),
             null !== current
               ? (null !== current.memoizedState) !== newProps &&
-                (workInProgress.flags |= 8192)
+                ((workInProgress.flags |= 8192),
+                newProps || trackReappearingViewTransitions(workInProgress))
               : newProps && (workInProgress.flags |= 8192),
             newProps
               ? 0 !== (renderLanes & 536870912) &&
@@ -15975,7 +15832,7 @@
       }
       yieldDuration = (forceSync =
         (!forceSync &&
-          0 === (lanes & 124) &&
+          0 === (lanes & 60) &&
           0 === (lanes & root.expiredLanes)) ||
         checkIfRootIsPrerendering(root, lanes))
         ? renderRootConcurrent(root, lanes)
@@ -16082,15 +15939,15 @@
               case RootFatalErrored:
                 throw Error("Root did not complete. This is a bug in React.");
               case RootSuspendedWithDelay:
-                if ((lanes & 4194048) !== lanes) break;
+                if ((lanes & 4194176) !== lanes) break;
               case RootSuspendedAtTheShell:
                 setCurrentTrackFromLanes(lanes);
                 logSuspendedRenderPhase(renderStartTime, startTime, lanes);
                 finalizeRender(lanes, startTime);
                 yieldEndTime = lanes;
-                0 !== (yieldEndTime & 3) || 0 !== (yieldEndTime & 124)
+                0 !== (yieldEndTime & 3) || 0 !== (yieldEndTime & 60)
                   ? (blockingSuspendedTime = startTime)
-                  : 0 !== (yieldEndTime & 4194048) &&
+                  : 0 !== (yieldEndTime & 4194176) &&
                     (transitionSuspendedTime = startTime);
                 markRootSuspended(
                   forceSync,
@@ -16115,6 +15972,7 @@
                 lanes,
                 workInProgressRootRecoverableErrors,
                 workInProgressTransitions,
+                workInProgressAppearingViewTransitions,
                 workInProgressRootDidIncludeRecursiveRenderUpdate,
                 workInProgressDeferredLane,
                 workInProgressRootInterleavedUpdatedLanes,
@@ -16147,6 +16005,7 @@
                     yieldEndTime,
                     workInProgressRootRecoverableErrors,
                     workInProgressTransitions,
+                    workInProgressAppearingViewTransitions,
                     workInProgressRootDidIncludeRecursiveRenderUpdate,
                     lanes,
                     workInProgressDeferredLane,
@@ -16167,6 +16026,7 @@
                 yieldEndTime,
                 workInProgressRootRecoverableErrors,
                 workInProgressTransitions,
+                workInProgressAppearingViewTransitions,
                 workInProgressRootDidIncludeRecursiveRenderUpdate,
                 lanes,
                 workInProgressDeferredLane,
@@ -16190,6 +16050,7 @@
       finishedWork,
       recoverableErrors,
       transitions,
+      appearingViewTransitions,
       didIncludeRenderPhaseUpdate,
       lanes,
       spawnedLane,
@@ -16203,35 +16064,37 @@
     ) {
       root.timeoutHandle = noTimeout;
       var subtreeFlags = finishedWork.subtreeFlags,
-        isViewTransitionEligible = (lanes & 335544064) === lanes;
-      if (
-        isViewTransitionEligible ||
-        subtreeFlags & 8192 ||
-        16785408 === (subtreeFlags & 16785408)
-      ) {
+        isViewTransitionEligible = (lanes & 335544192) === lanes;
+      subtreeFlags =
+        subtreeFlags & 8192 || 16785408 === (subtreeFlags & 16785408);
+      if (isViewTransitionEligible || subtreeFlags) {
         suspendedState = { stylesheets: null, count: 0, unsuspend: noop };
-        appearingViewTransitions = null;
-        accumulateSuspenseyCommitOnFiber(finishedWork);
+        subtreeFlags && accumulateSuspenseyCommitOnFiber(finishedWork);
         if (isViewTransitionEligible) {
-          isViewTransitionEligible = root.containerInfo;
+          subtreeFlags = root.containerInfo;
           if (null === suspendedState)
             throw Error(
               "Internal React Error: suspendedState null when it was expected to exists. Please report this as a React bug."
             );
-          subtreeFlags = suspendedState;
-          isViewTransitionEligible = (
-            9 === isViewTransitionEligible.nodeType
-              ? isViewTransitionEligible
-              : isViewTransitionEligible.ownerDocument
+          isViewTransitionEligible = suspendedState;
+          subtreeFlags = (
+            9 === subtreeFlags.nodeType
+              ? subtreeFlags
+              : subtreeFlags.ownerDocument
           ).__reactViewTransition;
-          null != isViewTransitionEligible &&
-            (subtreeFlags.count++,
-            (subtreeFlags = onUnsuspend.bind(subtreeFlags)),
-            isViewTransitionEligible.finished.then(subtreeFlags, subtreeFlags));
+          null != subtreeFlags &&
+            (isViewTransitionEligible.count++,
+            (isViewTransitionEligible = onUnsuspend.bind(
+              isViewTransitionEligible
+            )),
+            subtreeFlags.finished.then(
+              isViewTransitionEligible,
+              isViewTransitionEligible
+            ));
         }
-        subtreeFlags = waitForCommitToBeReady();
-        if (null !== subtreeFlags) {
-          root.cancelPendingCommit = subtreeFlags(
+        isViewTransitionEligible = waitForCommitToBeReady();
+        if (null !== isViewTransitionEligible) {
+          root.cancelPendingCommit = isViewTransitionEligible(
             commitRoot.bind(
               null,
               root,
@@ -16239,6 +16102,7 @@
               lanes,
               recoverableErrors,
               transitions,
+              appearingViewTransitions,
               didIncludeRenderPhaseUpdate,
               spawnedLane,
               updatedLanes,
@@ -16264,6 +16128,7 @@
         lanes,
         recoverableErrors,
         transitions,
+        appearingViewTransitions,
         didIncludeRenderPhaseUpdate,
         spawnedLane,
         updatedLanes,
@@ -16352,9 +16217,9 @@
       }
     }
     function finalizeRender(lanes, finalizationTime) {
-      if (0 !== (lanes & 3) || 0 !== (lanes & 124))
+      if (0 !== (lanes & 3) || 0 !== (lanes & 60))
         blockingClampTime = finalizationTime;
-      0 !== (lanes & 4194048) && (transitionClampTime = finalizationTime);
+      0 !== (lanes & 4194176) && (transitionClampTime = finalizationTime);
     }
     function prepareFreshStack(root, lanes) {
       supportsUserTiming &&
@@ -16379,13 +16244,13 @@
           var endTime = renderStartTime;
           supportsUserTiming &&
             ((reusableLaneDevToolDetails.color =
-              (lanes & 738197653) === lanes ? "tertiary-dark" : "primary-dark"),
+              (lanes & 738197589) === lanes ? "tertiary-dark" : "primary-dark"),
             (reusableLaneOptions.start = previousRenderStartTime),
             (reusableLaneOptions.end = endTime),
             performance.measure(
               (lanes & 536870912) === lanes
                 ? "Prewarm"
-                : (lanes & 201326741) === lanes
+                : (lanes & 201326677) === lanes
                   ? "Interrupted Hydration"
                   : "Interrupted Render",
               reusableLaneOptions
@@ -16393,7 +16258,7 @@
         }
         finalizeRender(workInProgressRootRenderLanes, renderStartTime);
       }
-      if (0 !== (lanes & 3) || 0 !== (lanes & 124)) {
+      if (0 !== (lanes & 3) || 0 !== (lanes & 60)) {
         previousRenderStartTime =
           0 <= blockingUpdateTime && blockingUpdateTime < blockingClampTime
             ? blockingClampTime
@@ -16436,7 +16301,7 @@
           0 < previousRenderStartTime &&
             ((reusableLaneDevToolDetails.color = isSpawnedUpdate
               ? "error"
-              : (lanes & 738197653) === lanes
+              : (lanes & 738197589) === lanes
                 ? "tertiary-light"
                 : "primary-light"),
             (reusableLaneOptions.start = previousRenderStartTime),
@@ -16449,7 +16314,7 @@
         blockingEventIsRepeat = !0;
         blockingSpawnedUpdate = !1;
       }
-      0 !== (lanes & 4194048) &&
+      0 !== (lanes & 4194176) &&
         ((previousRenderStartTime =
           0 <= transitionStartTime && transitionStartTime < transitionClampTime
             ? transitionClampTime
@@ -16540,6 +16405,7 @@
       workInProgressRootRecoverableErrors = workInProgressRootConcurrentErrors =
         null;
       workInProgressRootDidIncludeRecursiveRenderUpdate = !1;
+      workInProgressAppearingViewTransitions = null;
       0 !== (lanes & 8) && (lanes |= lanes & 32);
       endTime = root.entangledLanes;
       if (0 !== endTime)
@@ -16598,7 +16464,7 @@
     function renderDidSuspendDelayIfPossible() {
       workInProgressRootExitStatus = RootSuspendedWithDelay;
       workInProgressRootDidSkipSuspendedSiblings ||
-        ((workInProgressRootRenderLanes & 4194048) !==
+        ((workInProgressRootRenderLanes & 4194176) !==
           workInProgressRootRenderLanes &&
           null !== suspenseHandlerStackCursor.current) ||
         (workInProgressRootIsPrerendering = !0);
@@ -16617,6 +16483,18 @@
         ? (workInProgressRootConcurrentErrors = [error])
         : workInProgressRootConcurrentErrors.push(error);
     }
+    function trackAppearingViewTransition(instance, name) {
+      if (null === workInProgressAppearingViewTransitions) {
+        if (
+          (workInProgressRootRenderLanes & 335544192) !==
+          workInProgressRootRenderLanes
+        )
+          return;
+        workInProgressAppearingViewTransitions = new Map();
+      }
+      instance.paired = null;
+      workInProgressAppearingViewTransitions.set(name, instance);
+    }
     function renderRootSync(root, lanes, shouldYieldForPrerendering) {
       var prevExecutionContext = executionContext;
       executionContext |= RenderContext;
@@ -17059,6 +16937,7 @@
       lanes,
       recoverableErrors,
       transitions,
+      appearingViewTransitions,
       didIncludeRenderPhaseUpdate,
       spawnedLane,
       updatedLanes,
@@ -17109,7 +16988,6 @@
         didIncludeRenderPhaseUpdate =
           finishedWork.lanes | finishedWork.childLanes;
         didIncludeRenderPhaseUpdate |= concurrentlyUpdatedLanes;
-        null === root.gestures && (didIncludeRenderPhaseUpdate &= -65);
         markRootFinished(
           root,
           lanes,
@@ -17121,71 +16999,68 @@
         root === workInProgressRoot &&
           ((workInProgress = workInProgressRoot = null),
           (workInProgressRootRenderLanes = 0));
-        if (64 === lanes) commitGestureOnRoot(root);
-        else {
-          pendingFinishedWork = finishedWork;
-          pendingEffectsRoot = root;
-          pendingEffectsLanes = lanes;
-          pendingEffectsRemainingLanes = didIncludeRenderPhaseUpdate;
-          pendingPassiveTransitions = transitions;
-          pendingRecoverableErrors = recoverableErrors;
-          pendingEffectsRenderEndTime = completedRenderEndTime;
-          pendingSuspendedCommitReason = suspendedCommitReason;
-          pendingViewTransitionEvents = null;
-          (lanes & 335544064) === lanes
-            ? ((pendingTransitionTypes = ReactSharedInternals.V),
-              (ReactSharedInternals.V = null),
-              (recoverableErrors = 10262))
-            : ((pendingTransitionTypes = null), (recoverableErrors = 10256));
-          0 !== finishedWork.actualDuration ||
-          0 !== (finishedWork.subtreeFlags & recoverableErrors) ||
-          0 !== (finishedWork.flags & recoverableErrors)
-            ? ((root.callbackNode = null),
-              (root.callbackPriority = 0),
-              scheduleCallback$1(NormalPriority$1, function () {
-                schedulerEvent = window.event;
-                flushPassiveEffects(!0);
-                return null;
-              }))
-            : ((root.callbackNode = null), (root.callbackPriority = 0));
-          commitErrors = null;
-          commitStartTime = now();
-          suspendedCommitReason === SUSPENDED_COMMIT
-            ? logSuspendedCommitPhase(completedRenderEndTime, commitStartTime)
-            : suspendedCommitReason === THROTTLED_COMMIT &&
-              logSuspenseThrottlePhase(completedRenderEndTime, commitStartTime);
-          suspendedCommitReason = 0 !== (finishedWork.flags & 13878);
-          if (
-            0 !== (finishedWork.subtreeFlags & 13878) ||
-            suspendedCommitReason
-          ) {
-            suspendedCommitReason = ReactSharedInternals.T;
-            ReactSharedInternals.T = null;
-            completedRenderEndTime = ReactDOMSharedInternals.p;
-            ReactDOMSharedInternals.p = DiscreteEventPriority;
-            recoverableErrors = executionContext;
-            executionContext |= CommitContext;
-            try {
-              commitBeforeMutationEffects(root, finishedWork, lanes);
-            } finally {
-              (executionContext = recoverableErrors),
-                (ReactDOMSharedInternals.p = completedRenderEndTime),
-                (ReactSharedInternals.T = suspendedCommitReason);
-            }
+        pendingFinishedWork = finishedWork;
+        pendingEffectsRoot = root;
+        pendingEffectsLanes = lanes;
+        pendingEffectsRemainingLanes = didIncludeRenderPhaseUpdate;
+        pendingPassiveTransitions = transitions;
+        pendingRecoverableErrors = recoverableErrors;
+        pendingViewTransitionEvents = null;
+        pendingEffectsRenderEndTime = completedRenderEndTime;
+        pendingSuspendedCommitReason = suspendedCommitReason;
+        recoverableErrors = (lanes & 335544192) === lanes ? 10262 : 10256;
+        0 !== finishedWork.actualDuration ||
+        0 !== (finishedWork.subtreeFlags & recoverableErrors) ||
+        0 !== (finishedWork.flags & recoverableErrors)
+          ? ((root.callbackNode = null),
+            (root.callbackPriority = 0),
+            scheduleCallback$1(NormalPriority$1, function () {
+              schedulerEvent = window.event;
+              flushPassiveEffects(!0);
+              return null;
+            }))
+          : ((root.callbackNode = null), (root.callbackPriority = 0));
+        commitErrors = null;
+        commitStartTime = now();
+        suspendedCommitReason === SUSPENDED_COMMIT
+          ? logSuspendedCommitPhase(completedRenderEndTime, commitStartTime)
+          : suspendedCommitReason === THROTTLED_COMMIT &&
+            logSuspenseThrottlePhase(completedRenderEndTime, commitStartTime);
+        suspendedCommitReason = 0 !== (finishedWork.flags & 13878);
+        if (
+          0 !== (finishedWork.subtreeFlags & 13878) ||
+          suspendedCommitReason
+        ) {
+          suspendedCommitReason = ReactSharedInternals.T;
+          ReactSharedInternals.T = null;
+          completedRenderEndTime = ReactDOMSharedInternals.p;
+          ReactDOMSharedInternals.p = DiscreteEventPriority;
+          recoverableErrors = executionContext;
+          executionContext |= CommitContext;
+          try {
+            commitBeforeMutationEffects(
+              root,
+              finishedWork,
+              lanes,
+              appearingViewTransitions
+            );
+          } finally {
+            (executionContext = recoverableErrors),
+              (ReactDOMSharedInternals.p = completedRenderEndTime),
+              (ReactSharedInternals.T = suspendedCommitReason);
           }
-          pendingEffectsStatus = PENDING_MUTATION_PHASE;
-          (shouldStartViewTransition &&
-            startViewTransition(
-              root.containerInfo,
-              pendingTransitionTypes,
-              flushMutationEffects,
-              flushLayoutEffects,
-              flushAfterMutationEffects,
-              flushSpawnedWork,
-              flushPassiveEffects
-            )) ||
-            (flushMutationEffects(), flushLayoutEffects(), flushSpawnedWork());
         }
+        pendingEffectsStatus = PENDING_MUTATION_PHASE;
+        (shouldStartViewTransition &&
+          startViewTransition(
+            root.containerInfo,
+            flushMutationEffects,
+            flushLayoutEffects,
+            flushAfterMutationEffects,
+            flushSpawnedWork,
+            flushPassiveEffects
+          )) ||
+          (flushMutationEffects(), flushLayoutEffects(), flushSpawnedWork());
       }
     }
     function flushAfterMutationEffects() {
@@ -17394,7 +17269,7 @@
             (reusableLaneOptions.start = completedRenderEndTime),
             (reusableLaneOptions.end = suspendedCommitReason),
             performance.measure("Commit", reusableLaneOptions));
-        completedRenderEndTime = (lanes & 335544064) === lanes ? 10262 : 10256;
+        completedRenderEndTime = (lanes & 335544192) === lanes ? 10262 : 10256;
         (completedRenderEndTime =
           0 !== finishedWork.actualDuration ||
           0 !== (finishedWork.subtreeFlags & completedRenderEndTime) ||
@@ -17476,21 +17351,17 @@
           }
         }
         recoverableErrors = pendingViewTransitionEvents;
-        onRecoverableError = pendingTransitionTypes;
-        pendingTransitionTypes = null;
         if (null !== recoverableErrors)
           for (
-            pendingViewTransitionEvents = null,
-              null === onRecoverableError && (onRecoverableError = []),
-              recoverableError = 0;
-            recoverableError < recoverableErrors.length;
-            recoverableError++
+            pendingViewTransitionEvents = null, onRecoverableError = 0;
+            onRecoverableError < recoverableErrors.length;
+            onRecoverableError++
           )
-            (0, recoverableErrors[recoverableError])(onRecoverableError);
+            (0, recoverableErrors[onRecoverableError])();
         0 !== (pendingEffectsLanes & 3) && flushPendingEffects();
         ensureRootIsScheduled(root);
         suspendedCommitReason = root.pendingLanes;
-        0 !== (lanes & 4194090) && 0 !== (suspendedCommitReason & 42)
+        0 !== (lanes & 4194218) && 0 !== (suspendedCommitReason & 42)
           ? ((nestedUpdateScheduled = !0),
             root === rootWithNestedUpdates
               ? nestedUpdateCount++
@@ -17500,14 +17371,6 @@
         flushSyncWorkAcrossRoots_impl(0, !1);
       }
     }
-    function commitGestureOnRoot(root) {
-      var finishedGesture = root.gestures;
-      if (null === finishedGesture)
-        throw Error(
-          "Finished rendering the gesture lane but there were no pending gestures. React should not have started a render in this case. This is a bug in React."
-        );
-      deleteScheduledGesture(root, finishedGesture);
-    }
     function makeErrorInfo(componentStack) {
       componentStack = { componentStack: componentStack };
       Object.defineProperty(componentStack, "digest", {
@@ -17717,10 +17580,10 @@
       null !== pingCache && pingCache.delete(wakeable);
       root.pingedLanes |= root.suspendedLanes & pingedLanes;
       root.warmLanes &= ~pingedLanes;
-      0 !== (pingedLanes & 3) || 0 !== (pingedLanes & 124)
+      0 !== (pingedLanes & 3) || 0 !== (pingedLanes & 60)
         ? 0 > blockingUpdateTime &&
           (blockingClampTime = blockingUpdateTime = now())
-        : 0 !== (pingedLanes & 4194048) &&
+        : 0 !== (pingedLanes & 4194176) &&
           0 > transitionUpdateTime &&
           (transitionClampTime = transitionUpdateTime = now());
       isConcurrentActEnvironment() &&
@@ -17922,8 +17785,8 @@
                     (1 << (31 - clz32(42 | syncTransitionLanes) + 1)) - 1;
                   nextLanes &= pendingLanes & ~(suspendedLanes & ~pingedLanes);
                   nextLanes =
-                    nextLanes & 201326741
-                      ? (nextLanes & 201326741) | 1
+                    nextLanes & 201326677
+                      ? (nextLanes & 201326677) | 1
                       : nextLanes
                         ? nextLanes | 2
                         : 0;
@@ -17939,7 +17802,7 @@
                     null !== root.cancelPendingCommit ||
                       root.timeoutHandle !== noTimeout
                   )),
-                  (0 === (nextLanes & 3) && 64 !== nextLanes) ||
+                  0 === (nextLanes & 3) ||
                     checkIfRootIsPrerendering(root, nextLanes) ||
                     ((didPerformSomeWork = !0),
                     performSyncWorkOnRoot(root, nextLanes));
@@ -17975,10 +17838,7 @@
             null === prev ? (firstScheduledRoot = next) : (prev.next = next),
             null === next && (lastScheduledRoot = prev);
         else if (
-          ((prev = root),
-          0 !== syncTransitionLanes ||
-            0 !== (nextLanes & 3) ||
-            64 === nextLanes)
+          ((prev = root), 0 !== syncTransitionLanes || 0 !== (nextLanes & 3))
         )
           mightHavePendingSyncWork = !0;
         root = next;
@@ -18412,15 +18272,23 @@
           var nodeTag = targetInst$jscomp$0.tag;
           if (3 === nodeTag || 4 === nodeTag) {
             var container = targetInst$jscomp$0.stateNode.containerInfo;
-            if (container === targetContainer) break;
+            if (
+              container === targetContainer ||
+              (8 === container.nodeType &&
+                container.parentNode === targetContainer)
+            )
+              break;
             if (4 === nodeTag)
               for (nodeTag = targetInst$jscomp$0.return; null !== nodeTag; ) {
                 var grandTag = nodeTag.tag;
-                if (
-                  (3 === grandTag || 4 === grandTag) &&
-                  nodeTag.stateNode.containerInfo === targetContainer
-                )
-                  return;
+                if (3 === grandTag || 4 === grandTag)
+                  if (
+                    ((grandTag = nodeTag.stateNode.containerInfo),
+                    grandTag === targetContainer ||
+                      (8 === grandTag.nodeType &&
+                        grandTag.parentNode === targetContainer))
+                  )
+                    return;
                 nodeTag = nodeTag.return;
               }
             for (; null !== container; ) {
@@ -19064,12 +18932,12 @@
       switch (key) {
         case "children":
           if ("string" === typeof value)
-            validateTextNesting(value, tag, !1),
+            validateTextNesting(value, tag),
               "body" === tag ||
                 ("textarea" === tag && "" === value) ||
                 setTextContent(domElement, value);
           else if ("number" === typeof value || "bigint" === typeof value)
-            validateTextNesting("" + value, tag, !1),
+            validateTextNesting("" + value, tag),
               "body" !== tag && setTextContent(domElement, "" + value);
           else return;
           break;
@@ -21254,58 +21122,22 @@
     function commitTextUpdate(textInstance, oldText, newText) {
       textInstance.nodeValue = newText;
     }
-    function isSingletonScope(type) {
-      return "head" === type;
-    }
     function removeChild(parentInstance, child) {
       parentInstance.removeChild(child);
     }
     function removeChildFromContainer(container, child) {
-      (9 === container.nodeType
-        ? container.body
-        : "HTML" === container.nodeName
-          ? container.ownerDocument.body
-          : container
-      ).removeChild(child);
+      8 === container.nodeType
+        ? container.parentNode.removeChild(child)
+        : container.removeChild(child);
     }
     function clearSuspenseBoundary(parentInstance, suspenseInstance) {
       var node = suspenseInstance,
-        possiblePreambleContribution = 0,
         depth = 0;
       do {
         var nextNode = node.nextSibling;
         parentInstance.removeChild(node);
         if (nextNode && 8 === nextNode.nodeType)
           if (((node = nextNode.data), node === SUSPENSE_END_DATA)) {
-            if (
-              0 < possiblePreambleContribution &&
-              8 > possiblePreambleContribution
-            ) {
-              node = possiblePreambleContribution;
-              var ownerDocument = parentInstance.ownerDocument;
-              node & PREAMBLE_CONTRIBUTION_HTML &&
-                releaseSingletonInstance(ownerDocument.documentElement);
-              node & PREAMBLE_CONTRIBUTION_BODY &&
-                releaseSingletonInstance(ownerDocument.body);
-              if (node & PREAMBLE_CONTRIBUTION_HEAD)
-                for (
-                  node = ownerDocument.head,
-                    releaseSingletonInstance(node),
-                    ownerDocument = node.firstChild;
-                  ownerDocument;
-
-                ) {
-                  var nextNode$jscomp$0 = ownerDocument.nextSibling,
-                    nodeName = ownerDocument.nodeName;
-                  ownerDocument[internalHoistableMarker] ||
-                    "SCRIPT" === nodeName ||
-                    "STYLE" === nodeName ||
-                    ("LINK" === nodeName &&
-                      "stylesheet" === ownerDocument.rel.toLowerCase()) ||
-                    node.removeChild(ownerDocument);
-                  ownerDocument = nextNode$jscomp$0;
-                }
-            }
             if (0 === depth) {
               parentInstance.removeChild(nextNode);
               retryIfBlockedOn(suspenseInstance);
@@ -21313,12 +21145,10 @@
             }
             depth--;
           } else
-            node === SUSPENSE_START_DATA ||
-            node === SUSPENSE_PENDING_START_DATA ||
-            node === SUSPENSE_FALLBACK_START_DATA
-              ? depth++
-              : (possiblePreambleContribution = node.charCodeAt(0) - 48);
-        else possiblePreambleContribution = 0;
+            (node !== SUSPENSE_START_DATA &&
+              node !== SUSPENSE_PENDING_START_DATA &&
+              node !== SUSPENSE_FALLBACK_START_DATA) ||
+              depth++;
         node = nextNode;
       } while (node);
       retryIfBlockedOn(suspenseInstance);
@@ -21392,7 +21222,6 @@
     }
     function startViewTransition(
       rootContainer,
-      transitionTypes,
       mutationCallback,
       layoutCallback,
       afterMutationCallback,
@@ -21439,7 +21268,7 @@
               );
             afterMutationCallback();
           },
-          types: transitionTypes
+          types: null
         });
         ownerDocument.__reactViewTransition = transition;
         transition.ready.then(void 0, function (reason) {
@@ -21748,10 +21577,7 @@
       instance,
       internalInstanceHandle
     ) {
-      if (
-        !instance[internalContainerInstanceKey] &&
-        getInstanceFromNode(instance)
-      ) {
+      if (getInstanceFromNode(instance)) {
         var tagName = instance.tagName.toLowerCase();
         console.error(
           "You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first.",
@@ -21776,17 +21602,10 @@
       instance[internalInstanceKey] = internalInstanceHandle;
       instance[internalPropsKey] = props;
     }
-    function releaseSingletonInstance(instance) {
-      for (var attributes = instance.attributes; attributes.length; )
-        instance.removeAttributeNode(attributes[0]);
-      detachDeletedInstance(instance);
-    }
     function getHoistableRoot(container) {
       return "function" === typeof container.getRootNode
         ? container.getRootNode()
-        : 9 === container.nodeType
-          ? container
-          : container.ownerDocument;
+        : container.ownerDocument;
     }
     function preconnectAs(rel, href, crossOrigin) {
       var ownerDocument = globalDocument;
@@ -22508,7 +22327,6 @@
       this.pooledCache = null;
       this.pooledCacheLanes = 0;
       this.formState = formState;
-      this.gestures = null;
       this.incompleteTransitions = new Map();
       this.passiveEffectDuration = this.effectDuration = -0;
       this.memoizedUpdaters = new Set();
@@ -23290,7 +23108,7 @@
       clz32 = Math.clz32 ? Math.clz32 : clz32Fallback,
       log = Math.log,
       LN2 = Math.LN2,
-      nextTransitionLane = 256,
+      nextTransitionLane = 128,
       nextRetryLane = 4194304,
       DiscreteEventPriority = 2,
       ContinuousEventPriority = 8,
@@ -23369,8 +23187,7 @@
         pTagInButtonScope: null,
         listItemTagAutoclosing: null,
         dlItemTagAutoclosing: null,
-        containerTagInScope: null,
-        implicitRootScope: !1
+        containerTagInScope: null
       },
       didWarn = {},
       shorthandToLonghand = {
@@ -25017,7 +24834,6 @@
         useCacheRefresh: throwInvalidHookError
       };
     ContextOnlyDispatcher.useEffectEvent = throwInvalidHookError;
-    ContextOnlyDispatcher.useSwipeTransition = throwInvalidHookError;
     var HooksDispatcherOnMountInDEV = null,
       HooksDispatcherOnMountWithHookTypesInDEV = null,
       HooksDispatcherOnUpdateInDEV = null,
@@ -25041,11 +24857,11 @@
         mountHookTypesDev();
         return readContext(context);
       },
-      useEffect: function (create, createDeps) {
+      useEffect: function (create, deps) {
         currentHookNameInDev = "useEffect";
         mountHookTypesDev();
-        checkDepsAreArrayDev(createDeps);
-        return mountEffect(create, createDeps);
+        checkDepsAreArrayDev(deps);
+        return mountEffect(create, deps);
       },
       useImperativeHandle: function (ref, create, deps) {
         currentHookNameInDev = "useImperativeHandle";
@@ -25163,11 +24979,6 @@
         currentHookNameInDev = "useEffectEvent";
         mountHookTypesDev();
         return mountEvent(callback);
-      },
-      useSwipeTransition: function (previous, current) {
-        currentHookNameInDev = "useSwipeTransition";
-        mountHookTypesDev();
-        return mountSwipeTransition(previous, current);
       }
     };
     HooksDispatcherOnMountWithHookTypesInDEV = {
@@ -25185,10 +24996,10 @@
         updateHookTypesDev();
         return readContext(context);
       },
-      useEffect: function (create, createDeps) {
+      useEffect: function (create, deps) {
         currentHookNameInDev = "useEffect";
         updateHookTypesDev();
-        return mountEffect(create, createDeps);
+        return mountEffect(create, deps);
       },
       useImperativeHandle: function (ref, create, deps) {
         currentHookNameInDev = "useImperativeHandle";
@@ -25302,11 +25113,6 @@
         currentHookNameInDev = "useEffectEvent";
         updateHookTypesDev();
         return mountEvent(callback);
-      },
-      useSwipeTransition: function (previous, current) {
-        currentHookNameInDev = "useSwipeTransition";
-        updateHookTypesDev();
-        return updateSwipeTransition(previous, current);
       }
     };
     HooksDispatcherOnUpdateInDEV = {
@@ -25324,10 +25130,10 @@
         updateHookTypesDev();
         return readContext(context);
       },
-      useEffect: function (create, createDeps) {
+      useEffect: function (create, deps) {
         currentHookNameInDev = "useEffect";
         updateHookTypesDev();
-        updateEffectImpl(2048, Passive, create, createDeps);
+        updateEffectImpl(2048, Passive, create, deps);
       },
       useImperativeHandle: function (ref, create, deps) {
         currentHookNameInDev = "useImperativeHandle";
@@ -25441,11 +25247,6 @@
         currentHookNameInDev = "useEffectEvent";
         updateHookTypesDev();
         return updateEvent(callback);
-      },
-      useSwipeTransition: function (previous, current) {
-        currentHookNameInDev = "useSwipeTransition";
-        updateHookTypesDev();
-        return updateSwipeTransition(previous, current);
       }
     };
     HooksDispatcherOnRerenderInDEV = {
@@ -25463,10 +25264,10 @@
         updateHookTypesDev();
         return readContext(context);
       },
-      useEffect: function (create, createDeps) {
+      useEffect: function (create, deps) {
         currentHookNameInDev = "useEffect";
         updateHookTypesDev();
-        updateEffectImpl(2048, Passive, create, createDeps);
+        updateEffectImpl(2048, Passive, create, deps);
       },
       useImperativeHandle: function (ref, create, deps) {
         currentHookNameInDev = "useImperativeHandle";
@@ -25580,11 +25381,6 @@
         currentHookNameInDev = "useEffectEvent";
         updateHookTypesDev();
         return updateEvent(callback);
-      },
-      useSwipeTransition: function (previous, current) {
-        currentHookNameInDev = "useSwipeTransition";
-        updateHookTypesDev();
-        return updateSwipeTransition(previous, current);
       }
     };
     InvalidNestedHooksDispatcherOnMountInDEV = {
@@ -25608,11 +25404,11 @@
         mountHookTypesDev();
         return readContext(context);
       },
-      useEffect: function (create, createDeps) {
+      useEffect: function (create, deps) {
         currentHookNameInDev = "useEffect";
         warnInvalidHookAccess();
         mountHookTypesDev();
-        return mountEffect(create, createDeps);
+        return mountEffect(create, deps);
       },
       useImperativeHandle: function (ref, create, deps) {
         currentHookNameInDev = "useImperativeHandle";
@@ -25744,12 +25540,6 @@
         warnInvalidHookAccess();
         mountHookTypesDev();
         return mountEvent(callback);
-      },
-      useSwipeTransition: function (previous, current) {
-        currentHookNameInDev = "useSwipeTransition";
-        warnInvalidHookAccess();
-        mountHookTypesDev();
-        return mountSwipeTransition(previous, current);
       }
     };
     InvalidNestedHooksDispatcherOnUpdateInDEV = {
@@ -25773,11 +25563,11 @@
         updateHookTypesDev();
         return readContext(context);
       },
-      useEffect: function (create, createDeps) {
+      useEffect: function (create, deps) {
         currentHookNameInDev = "useEffect";
         warnInvalidHookAccess();
         updateHookTypesDev();
-        updateEffectImpl(2048, Passive, create, createDeps);
+        updateEffectImpl(2048, Passive, create, deps);
       },
       useImperativeHandle: function (ref, create, deps) {
         currentHookNameInDev = "useImperativeHandle";
@@ -25909,12 +25699,6 @@
         warnInvalidHookAccess();
         updateHookTypesDev();
         return updateEvent(callback);
-      },
-      useSwipeTransition: function (previous, current) {
-        currentHookNameInDev = "useSwipeTransition";
-        warnInvalidHookAccess();
-        updateHookTypesDev();
-        return updateSwipeTransition(previous, current);
       }
     };
     InvalidNestedHooksDispatcherOnRerenderInDEV = {
@@ -25938,11 +25722,11 @@
         updateHookTypesDev();
         return readContext(context);
       },
-      useEffect: function (create, createDeps) {
+      useEffect: function (create, deps) {
         currentHookNameInDev = "useEffect";
         warnInvalidHookAccess();
         updateHookTypesDev();
-        updateEffectImpl(2048, Passive, create, createDeps);
+        updateEffectImpl(2048, Passive, create, deps);
       },
       useImperativeHandle: function (ref, create, deps) {
         currentHookNameInDev = "useImperativeHandle";
@@ -26074,12 +25858,6 @@
         warnInvalidHookAccess();
         updateHookTypesDev();
         return updateEvent(callback);
-      },
-      useSwipeTransition: function (previous, current) {
-        currentHookNameInDev = "useSwipeTransition";
-        warnInvalidHookAccess();
-        updateHookTypesDev();
-        return updateSwipeTransition(previous, current);
       }
     };
     var callComponent = {
@@ -26168,7 +25946,7 @@
         "react-stack-bottom-frame": function (effect) {
           null != effect.resourceKind &&
             console.error(
-              "Expected only SimpleEffects when enableUseEffectCRUDOverload is disabled, got %s",
+              "Expected only SimpleEffects when enableUseResourceEffectHook is disabled, got %s",
               effect.resourceKind
             );
           var create = effect.create;
@@ -26326,7 +26104,6 @@
       inProgressLanes = null,
       inProgressRoot = null,
       shouldStartViewTransition = !1,
-      appearingViewTransitions = null,
       viewTransitionContextChanged = !1,
       viewTransitionCancelableChildren = null,
       viewTransitionHostInstanceIdx = 0,
@@ -26415,6 +26192,7 @@
       workInProgressSuspendedRetryLanes = 0,
       workInProgressRootConcurrentErrors = null,
       workInProgressRootRecoverableErrors = null,
+      workInProgressAppearingViewTransitions = null,
       workInProgressRootDidIncludeRecursiveRenderUpdate = !1,
       globalMostRecentFallbackTime = 0,
       FALLBACK_THROTTLE_MS = 300,
@@ -26440,7 +26218,6 @@
       pendingPassiveTransitions = null,
       pendingRecoverableErrors = null,
       pendingViewTransitionEvents = null,
-      pendingTransitionTypes = null,
       pendingSuspendedCommitReason = IMMEDIATE_COMMIT,
       NESTED_UPDATE_LIMIT = 50,
       nestedUpdateCount = 0,
@@ -26544,9 +26321,6 @@
       SUSPENSE_END_DATA = "/$",
       SUSPENSE_PENDING_START_DATA = "$?",
       SUSPENSE_FALLBACK_START_DATA = "$!",
-      PREAMBLE_CONTRIBUTION_HTML = 1,
-      PREAMBLE_CONTRIBUTION_BODY = 2,
-      PREAMBLE_CONTRIBUTION_HEAD = 4,
       FORM_STATE_IS_MATCHING = "F!",
       FORM_STATE_IS_NOT_MATCHING = "F",
       DOCUMENT_READY_STATE_COMPLETE = "complete",
@@ -26605,8 +26379,7 @@
       }
       return result;
     };
-    var previousHydratableOnEnteringScopedSingleton = null,
-      NotLoaded = 0,
+    var NotLoaded = 0,
       Loaded = 1,
       Errored = 2,
       Settled = 3,
@@ -27021,11 +26794,11 @@
     };
     (function () {
       var isomorphicReactPackageVersion = React.version;
-      if ("19.1.0-experimental-e670e72f-20250214" !== isomorphicReactPackageVersion)
+      if ("19.1.0-experimental-b3a95caf-20250113" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The "react" and "react-dom" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              "\n  - react-dom:  19.1.0-experimental-e670e72f-20250214\nLearn more: https://react.dev/warnings/version-mismatch")
+              "\n  - react-dom:  19.1.0-experimental-b3a95caf-20250113\nLearn more: https://react.dev/warnings/version-mismatch")
         );
     })();
     ("function" === typeof Map &&
@@ -27062,10 +26835,10 @@
       !(function () {
         var internals = {
           bundleType: 1,
-          version: "19.1.0-experimental-e670e72f-20250214",
+          version: "19.1.0-experimental-b3a95caf-20250113",
           rendererPackageName: "react-dom",
           currentDispatcherRef: ReactSharedInternals,
-          reconcilerVersion: "19.1.0-experimental-e670e72f-20250214"
+          reconcilerVersion: "19.1.0-experimental-b3a95caf-20250113"
         };
         internals.overrideHookState = overrideHookState;
         internals.overrideHookStateDeletePath = overrideHookStateDeletePath;
@@ -27146,7 +26919,9 @@
         null
       );
       container[internalContainerInstanceKey] = options.current;
-      listenToAllSupportedEvents(container);
+      listenToAllSupportedEvents(
+        8 === container.nodeType ? container.parentNode : container
+      );
       return new ReactDOMRoot(options);
     };
     exports.hydrateRoot = function (container, initialChildren, options) {
@@ -27207,7 +26982,7 @@
       listenToAllSupportedEvents(container);
       return new ReactDOMHydrationRoot(initialChildren);
     };
-    exports.version = "19.1.0-experimental-e670e72f-20250214";
+    exports.version = "19.1.0-experimental-b3a95caf-20250113";
     "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
       "function" ===
         typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&
diff --git a/node_modules/react-dom/cjs/react-dom-client.production.js b/node_modules/react-dom/cjs/react-dom-client.production.js
index 04e00de..8dddd06 100644
--- a/node_modules/react-dom/cjs/react-dom-client.production.js
+++ b/node_modules/react-dom/cjs/react-dom-client.production.js
@@ -259,36 +259,38 @@ function pushHostContainer(fiber, nextRootInstance) {
   push(rootInstanceStackCursor, nextRootInstance);
   push(contextFiberStackCursor, fiber);
   push(contextStackCursor, null);
-  switch (nextRootInstance.nodeType) {
+  fiber = nextRootInstance.nodeType;
+  switch (fiber) {
     case 9:
     case 11:
-      fiber = (fiber = nextRootInstance.documentElement)
-        ? (fiber = fiber.namespaceURI)
-          ? getOwnHostContext(fiber)
+      nextRootInstance = (nextRootInstance = nextRootInstance.documentElement)
+        ? (nextRootInstance = nextRootInstance.namespaceURI)
+          ? getOwnHostContext(nextRootInstance)
           : 0
         : 0;
       break;
     default:
       if (
-        ((fiber = nextRootInstance.tagName),
-        (nextRootInstance = nextRootInstance.namespaceURI))
+        ((fiber = 8 === fiber ? nextRootInstance.parentNode : nextRootInstance),
+        (nextRootInstance = fiber.tagName),
+        (fiber = fiber.namespaceURI))
       )
-        (nextRootInstance = getOwnHostContext(nextRootInstance)),
-          (fiber = getChildHostContextProd(nextRootInstance, fiber));
+        (fiber = getOwnHostContext(fiber)),
+          (nextRootInstance = getChildHostContextProd(fiber, nextRootInstance));
       else
-        switch (fiber) {
+        switch (nextRootInstance) {
           case "svg":
-            fiber = 1;
+            nextRootInstance = 1;
             break;
           case "math":
-            fiber = 2;
+            nextRootInstance = 2;
             break;
           default:
-            fiber = 0;
+            nextRootInstance = 0;
         }
   }
   pop(contextStackCursor);
-  push(contextStackCursor, fiber);
+  push(contextStackCursor, nextRootInstance);
 }
 function popHostContainer() {
   pop(contextStackCursor);
@@ -340,7 +342,7 @@ function clz32Fallback(x) {
   x >>>= 0;
   return 0 === x ? 32 : (31 - ((log(x) / LN2) | 0)) | 0;
 }
-var nextTransitionLane = 256,
+var nextTransitionLane = 128,
   nextRetryLane = 4194304;
 function getHighestPriorityLanes(lanes) {
   var pendingSyncLanes = lanes & 42;
@@ -361,7 +363,6 @@ function getHighestPriorityLanes(lanes) {
     case 64:
       return 64;
     case 128:
-      return 128;
     case 256:
     case 512:
     case 1024:
@@ -376,7 +377,7 @@ function getHighestPriorityLanes(lanes) {
     case 524288:
     case 1048576:
     case 2097152:
-      return lanes & 4194048;
+      return lanes & 4194176;
     case 4194304:
     case 8388608:
     case 16777216:
@@ -432,7 +433,7 @@ function getNextLanes(root, wipLanes, rootHasPendingCommit) {
         ((suspendedLanes = nextLanes & -nextLanes),
         (rootHasPendingCommit = wipLanes & -wipLanes),
         suspendedLanes >= rootHasPendingCommit ||
-          (32 === suspendedLanes && 0 !== (rootHasPendingCommit & 4194048)))
+          (32 === suspendedLanes && 0 !== (rootHasPendingCommit & 4194176)))
       ? wipLanes
       : nextLanes;
 }
@@ -450,10 +451,10 @@ function computeExpirationTime(lane, currentTime) {
     case 2:
     case 4:
     case 8:
-    case 64:
       return currentTime + 250;
     case 16:
     case 32:
+    case 64:
     case 128:
     case 256:
     case 512:
@@ -488,7 +489,7 @@ function computeExpirationTime(lane, currentTime) {
 function claimNextTransitionLane() {
   var lane = nextTransitionLane;
   nextTransitionLane <<= 1;
-  0 === (nextTransitionLane & 4194048) && (nextTransitionLane = 256);
+  0 === (nextTransitionLane & 4194176) && (nextTransitionLane = 128);
   return lane;
 }
 function claimNextRetryLane() {
@@ -562,7 +563,7 @@ function markSpawnedDeferredLane(root, spawnedLane, entangledLanes) {
   root.entanglements[spawnedLaneIndex] =
     root.entanglements[spawnedLaneIndex] |
     1073741824 |
-    (entangledLanes & 4194090);
+    (entangledLanes & 4194218);
 }
 function markRootEntangled(root, entangledLanes) {
   var rootEntangledLanes = (root.entangledLanes |= entangledLanes);
@@ -585,6 +586,7 @@ function getBumpedLaneForHydrationByLane(lane) {
     case 32:
       lane = 16;
       break;
+    case 128:
     case 256:
     case 512:
     case 1024:
@@ -603,7 +605,7 @@ function getBumpedLaneForHydrationByLane(lane) {
     case 8388608:
     case 16777216:
     case 33554432:
-      lane = 128;
+      lane = 64;
       break;
     case 268435456:
       lane = 134217728;
@@ -2021,19 +2023,19 @@ function getTargetInstForChangeEvent(domEventName, targetInst) {
 }
 var isInputEventSupported = !1;
 if (canUseDOM) {
-  var JSCompiler_inline_result$jscomp$288;
+  var JSCompiler_inline_result$jscomp$285;
   if (canUseDOM) {
-    var isSupported$jscomp$inline_426 = "oninput" in document;
-    if (!isSupported$jscomp$inline_426) {
-      var element$jscomp$inline_427 = document.createElement("div");
-      element$jscomp$inline_427.setAttribute("oninput", "return;");
-      isSupported$jscomp$inline_426 =
-        "function" === typeof element$jscomp$inline_427.oninput;
+    var isSupported$jscomp$inline_423 = "oninput" in document;
+    if (!isSupported$jscomp$inline_423) {
+      var element$jscomp$inline_424 = document.createElement("div");
+      element$jscomp$inline_424.setAttribute("oninput", "return;");
+      isSupported$jscomp$inline_423 =
+        "function" === typeof element$jscomp$inline_424.oninput;
     }
-    JSCompiler_inline_result$jscomp$288 = isSupported$jscomp$inline_426;
-  } else JSCompiler_inline_result$jscomp$288 = !1;
+    JSCompiler_inline_result$jscomp$285 = isSupported$jscomp$inline_423;
+  } else JSCompiler_inline_result$jscomp$285 = !1;
   isInputEventSupported =
-    JSCompiler_inline_result$jscomp$288 &&
+    JSCompiler_inline_result$jscomp$285 &&
     (!document.documentMode || 9 < document.documentMode);
 }
 function stopWatchingForValueChange() {
@@ -2345,11 +2347,6 @@ function enqueueConcurrentRenderForLane(fiber, lane) {
   enqueueUpdate$1(fiber, null, null, lane);
   return getRootForUpdatedFiber(fiber);
 }
-function enqueueGestureRender(fiber) {
-  fiber = markUpdateLaneFromFiberToRoot(fiber, null, 64);
-  null !== fiber && markRootUpdated$1(fiber, 64);
-  return fiber;
-}
 function markUpdateLaneFromFiberToRoot(sourceFiber, update, lane) {
   sourceFiber.lanes |= lane;
   var alternate = sourceFiber.alternate;
@@ -2363,19 +2360,17 @@ function markUpdateLaneFromFiberToRoot(sourceFiber, update, lane) {
         null === sourceFiber || sourceFiber._visibility & 1 || (isHidden = !0)),
       (sourceFiber = parent),
       (parent = parent.return);
-  return 3 === sourceFiber.tag
-    ? ((parent = sourceFiber.stateNode),
-      isHidden &&
-        null !== update &&
-        ((isHidden = 31 - clz32(lane)),
-        (sourceFiber = parent.hiddenUpdates),
-        (alternate = sourceFiber[isHidden]),
-        null === alternate
-          ? (sourceFiber[isHidden] = [update])
-          : alternate.push(update),
-        (update.lane = lane | 536870912)),
-      parent)
-    : null;
+  isHidden &&
+    null !== update &&
+    3 === sourceFiber.tag &&
+    ((parent = sourceFiber.stateNode),
+    (isHidden = 31 - clz32(lane)),
+    (parent = parent.hiddenUpdates),
+    (sourceFiber = parent[isHidden]),
+    null === sourceFiber
+      ? (parent[isHidden] = [update])
+      : sourceFiber.push(update),
+    (update.lane = lane | 536870912));
 }
 function getRootForUpdatedFiber(sourceFiber) {
   if (50 < nestedUpdateCount)
@@ -2659,7 +2654,7 @@ function enqueueUpdate(fiber, update, lane) {
 }
 function entangleTransitions(root, fiber, lane) {
   fiber = fiber.updateQueue;
-  if (null !== fiber && ((fiber = fiber.shared), 0 !== (lane & 4194048))) {
+  if (null !== fiber && ((fiber = fiber.shared), 0 !== (lane & 4194176))) {
     var queueLanes = fiber.lanes;
     queueLanes &= root.pendingLanes;
     lane |= queueLanes;
@@ -3190,28 +3185,6 @@ function getSuspendedCache() {
     ? null
     : { parent: CacheContext._currentValue, pool: cacheFromPool };
 }
-function scheduleGesture(root, provider) {
-  for (var prev = root.gestures; null !== prev; ) {
-    if (prev.provider === provider) return prev.count++, prev;
-    var next = prev.next;
-    if (null === next) break;
-    prev = next;
-  }
-  provider = { provider: provider, count: 1, prev: prev, next: null };
-  null === prev ? (root.gestures = provider) : (prev.next = provider);
-  ensureRootIsScheduled(root);
-  return provider;
-}
-function deleteScheduledGesture(root, gesture) {
-  null === gesture.prev
-    ? root.gestures === gesture &&
-      ((root.gestures = gesture.next),
-      null === root.gestures && (root.pendingLanes &= -65))
-    : ((gesture.prev.next = gesture.next),
-      null !== gesture.next && (gesture.next.prev = gesture.prev),
-      (gesture.prev = null),
-      (gesture.next = null));
-}
 var renderLanes = 0,
   currentlyRenderingFiber = null,
   currentHook = null,
@@ -3596,8 +3569,9 @@ function updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
   snapshotChanged &&
     ((hook.memoizedState = getServerSnapshot), (didReceiveUpdate = !0));
   hook = hook.queue;
-  var create = subscribeToStore.bind(null, fiber, hook, subscribe);
-  updateEffectImpl(2048, 8, create, [subscribe]);
+  updateEffect(subscribeToStore.bind(null, fiber, hook, subscribe), [
+    subscribe
+  ]);
   if (
     hook.getSnapshot !== getSnapshot ||
     snapshotChanged ||
@@ -3618,7 +3592,7 @@ function updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
     );
     if (null === workInProgressRoot) throw Error(formatProdErrorMessage(349));
     isHydrating$jscomp$0 ||
-      0 !== (renderLanes & 124) ||
+      0 !== (renderLanes & 60) ||
       pushStoreConsistencyCheck(fiber, getSnapshot, getServerSnapshot);
   }
   return getServerSnapshot;
@@ -3945,8 +3919,8 @@ function rerenderActionState(action) {
   currentStateHook.memoizedState = action;
   return [stateHook, dispatch, !1];
 }
-function pushSimpleEffect(tag, inst, create, createDeps) {
-  tag = { tag: tag, create: create, deps: createDeps, inst: inst, next: null };
+function pushSimpleEffect(tag, inst, create, deps) {
+  tag = { tag: tag, create: create, deps: deps, inst: inst, next: null };
   inst = currentlyRenderingFiber.updateQueue;
   null === inst &&
     ((inst = createFunctionComponentUpdateQueue()),
@@ -3954,9 +3928,9 @@ function pushSimpleEffect(tag, inst, create, createDeps) {
   create = inst.lastEffect;
   null === create
     ? (inst.lastEffect = tag.next = tag)
-    : ((createDeps = create.next),
+    : ((deps = create.next),
       (create.next = tag),
-      (tag.next = createDeps),
+      (tag.next = deps),
       (inst.lastEffect = tag));
   return tag;
 }
@@ -3966,15 +3940,15 @@ function createEffectInstance() {
 function updateRef() {
   return updateWorkInProgressHook().memoizedState;
 }
-function mountEffectImpl(fiberFlags, hookFlags, create, createDeps) {
+function mountEffectImpl(fiberFlags, hookFlags, create, deps) {
   var hook = mountWorkInProgressHook();
-  createDeps = void 0 === createDeps ? null : createDeps;
+  deps = void 0 === deps ? null : deps;
   currentlyRenderingFiber.flags |= fiberFlags;
   hook.memoizedState = pushSimpleEffect(
     1 | hookFlags,
     createEffectInstance(),
     create,
-    createDeps
+    deps
   );
 }
 function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
@@ -3993,11 +3967,11 @@ function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
         deps
       )));
 }
-function mountEffect(create, createDeps) {
-  mountEffectImpl(8390656, 8, create, createDeps);
+function mountEffect(create, deps) {
+  mountEffectImpl(8390656, 8, create, deps);
 }
-function updateEffect(create, createDeps) {
-  updateEffectImpl(2048, 8, create, createDeps);
+function updateEffect(create, deps) {
+  updateEffectImpl(2048, 8, create, deps);
 }
 function useEffectEventImpl(payload) {
   currentlyRenderingFiber.flags |= 4;
@@ -4334,7 +4308,7 @@ function enqueueRenderPhaseUpdate(queue, update) {
   queue.pending = update;
 }
 function entangleTransitionUpdate(root, queue, lane) {
-  if (0 !== (lane & 4194048)) {
+  if (0 !== (lane & 4194176)) {
     var queueLanes = queue.lanes;
     queueLanes &= root.pendingLanes;
     lane |= queueLanes;
@@ -4342,49 +4316,6 @@ function entangleTransitionUpdate(root, queue, lane) {
     markRootEntangled(root, lane);
   }
 }
-function startGesture(fiber, queue, gestureProvider) {
-  var root = enqueueGestureRender(fiber);
-  if (null === root) return function () {};
-  var update = {
-    gesture: scheduleGesture(root, gestureProvider),
-    prev: null,
-    next: queue.pending
-  };
-  null !== queue.pending && (queue.pending.prev = update);
-  queue.pending = update;
-  return function () {
-    if (null === update.prev)
-      if (queue.pending === update) queue.pending = update.next;
-      else return;
-    else
-      (update.prev.next = update.next),
-        null !== update.next && (update.next.prev = update.prev),
-        (update.prev = null),
-        (update.next = null);
-    var cancelledGestured = update.gesture;
-    cancelledGestured.count--;
-    0 === cancelledGestured.count &&
-      deleteScheduledGesture(root, cancelledGestured);
-  };
-}
-function updateSwipeTransition(previous, current) {
-  var queue = updateWorkInProgressHook().queue,
-    startGestureOnHook = queue.dispatch;
-  if (64 === workInProgressRootRenderLanes) {
-    var root$46 = workInProgressRoot;
-    if (null === root$46) throw Error(formatProdErrorMessage(349));
-    root$46 = root$46.gestures;
-    for (var update = queue.pending; null !== update; ) {
-      if (root$46 === update.gesture) {
-        current = previous;
-        break;
-      }
-      update = update.next;
-    }
-  }
-  null !== queue.pending && (currentlyRenderingFiber.lanes |= 64);
-  return [current, startGestureOnHook];
-}
 var ContextOnlyDispatcher = {
   readContext: readContext,
   use: use,
@@ -4411,7 +4342,6 @@ var ContextOnlyDispatcher = {
   useCacheRefresh: throwInvalidHookError
 };
 ContextOnlyDispatcher.useEffectEvent = throwInvalidHookError;
-ContextOnlyDispatcher.useSwipeTransition = throwInvalidHookError;
 var HooksDispatcherOnMount = {
     readContext: readContext,
     use: use,
@@ -4523,7 +4453,7 @@ var HooksDispatcherOnMount = {
         getServerSnapshot = getSnapshot();
         if (null === workInProgressRoot)
           throw Error(formatProdErrorMessage(349));
-        0 !== (workInProgressRootRenderLanes & 124) ||
+        0 !== (workInProgressRootRenderLanes & 60) ||
           pushStoreConsistencyCheck(fiber, getSnapshot, getServerSnapshot);
       }
       hook.memoizedState = getServerSnapshot;
@@ -4601,16 +4531,6 @@ var HooksDispatcherOnMount = {
           throw Error(formatProdErrorMessage(440));
         return ref.impl.apply(void 0, arguments);
       };
-    },
-    useSwipeTransition: function (previous, current) {
-      previous = { pending: null, dispatch: null };
-      var startGestureOnHook = (previous.dispatch = startGesture.bind(
-        null,
-        currentlyRenderingFiber,
-        previous
-      ));
-      mountWorkInProgressHook().queue = previous;
-      return [current, startGestureOnHook];
     }
   },
   HooksDispatcherOnUpdate = {
@@ -4661,7 +4581,6 @@ var HooksDispatcherOnMount = {
     useCacheRefresh: updateRefresh
   };
 HooksDispatcherOnUpdate.useEffectEvent = updateEvent;
-HooksDispatcherOnUpdate.useSwipeTransition = updateSwipeTransition;
 var HooksDispatcherOnRerender = {
   readContext: readContext,
   use: use,
@@ -4715,7 +4634,6 @@ var HooksDispatcherOnRerender = {
   useCacheRefresh: updateRefresh
 };
 HooksDispatcherOnRerender.useEffectEvent = updateEvent;
-HooksDispatcherOnRerender.useSwipeTransition = updateSwipeTransition;
 var thenableState = null,
   thenableIndexCounter = 0;
 function unwrapThenable(thenable) {
@@ -5570,9 +5488,9 @@ function logUncaughtError(root, errorInfo) {
   try {
     var onUncaughtError = root.onUncaughtError;
     onUncaughtError(errorInfo.value, { componentStack: errorInfo.stack });
-  } catch (e$76) {
+  } catch (e$75) {
     setTimeout(function () {
-      throw e$76;
+      throw e$75;
     });
   }
 }
@@ -5583,9 +5501,9 @@ function logCaughtError(root, boundary, errorInfo) {
       componentStack: errorInfo.stack,
       errorBoundary: 1 === boundary.tag ? boundary.stateNode : null
     });
-  } catch (e$77) {
+  } catch (e$76) {
     setTimeout(function () {
-      throw e$77;
+      throw e$76;
     });
   }
 }
@@ -7105,15 +7023,15 @@ function beginWork(current, workInProgress, renderLanes) {
           workInProgress.stateNode.containerInfo
         );
         if (null === current) throw Error(formatProdErrorMessage(387));
-        lazyComponent = workInProgress.pendingProps;
-        var prevState = workInProgress.memoizedState;
-        init = prevState.element;
+        var nextProps = workInProgress.pendingProps;
+        init = workInProgress.memoizedState;
+        lazyComponent = init.element;
         cloneUpdateQueue(current, workInProgress);
-        processUpdateQueue(workInProgress, lazyComponent, null, renderLanes);
+        processUpdateQueue(workInProgress, nextProps, null, renderLanes);
         var nextState = workInProgress.memoizedState;
-        lazyComponent = nextState.cache;
-        pushProvider(workInProgress, CacheContext, lazyComponent);
-        lazyComponent !== prevState.cache &&
+        nextProps = nextState.cache;
+        pushProvider(workInProgress, CacheContext, nextProps);
+        nextProps !== init.cache &&
           propagateContextChanges(
             workInProgress,
             [CacheContext],
@@ -7121,68 +7039,62 @@ function beginWork(current, workInProgress, renderLanes) {
             !0
           );
         suspendIfUpdateReadFromEntangledAsyncAction();
-        lazyComponent = nextState.element;
-        if (prevState.isDehydrated)
+        nextProps = nextState.element;
+        if (init.isDehydrated)
           if (
-            ((prevState = {
-              element: lazyComponent,
+            ((init = {
+              element: nextProps,
               isDehydrated: !1,
               cache: nextState.cache
             }),
-            (workInProgress.updateQueue.baseState = prevState),
-            (workInProgress.memoizedState = prevState),
+            (workInProgress.updateQueue.baseState = init),
+            (workInProgress.memoizedState = init),
             workInProgress.flags & 256)
           ) {
             workInProgress = mountHostRootWithoutHydrating(
               current,
               workInProgress,
-              lazyComponent,
+              nextProps,
               renderLanes
             );
             break a;
-          } else if (lazyComponent !== init) {
-            init = createCapturedValueAtFiber(
+          } else if (nextProps !== lazyComponent) {
+            lazyComponent = createCapturedValueAtFiber(
               Error(formatProdErrorMessage(424)),
               workInProgress
             );
-            queueHydrationError(init);
+            queueHydrationError(lazyComponent);
             workInProgress = mountHostRootWithoutHydrating(
               current,
               workInProgress,
-              lazyComponent,
+              nextProps,
               renderLanes
             );
             break a;
-          } else {
-            current = workInProgress.stateNode.containerInfo;
-            switch (current.nodeType) {
-              case 9:
-                current = current.body;
-                break;
-              default:
-                current =
-                  "HTML" === current.nodeName
-                    ? current.ownerDocument.body
-                    : current;
-            }
-            nextHydratableInstance = getNextHydratable(current.firstChild);
-            hydrationParentFiber = workInProgress;
-            isHydrating = !0;
-            hydrationErrors = null;
-            rootOrSingletonContext = !0;
-            renderLanes = mountChildFibers(
-              workInProgress,
-              null,
-              lazyComponent,
-              renderLanes
-            );
-            for (workInProgress.child = renderLanes; renderLanes; )
+          } else
+            for (
+              nextHydratableInstance = getNextHydratable(
+                workInProgress.stateNode.containerInfo.firstChild
+              ),
+                hydrationParentFiber = workInProgress,
+                isHydrating = !0,
+                hydrationErrors = null,
+                rootOrSingletonContext = !0,
+                renderLanes = mountChildFibers(
+                  workInProgress,
+                  null,
+                  nextProps,
+                  renderLanes
+                ),
+                workInProgress.child = renderLanes;
+              renderLanes;
+
+            )
               (renderLanes.flags = (renderLanes.flags & -3) | 4096),
                 (renderLanes = renderLanes.sibling);
-          }
         else {
           resetHydrationState();
-          if (lazyComponent === init) {
+          if (nextProps === lazyComponent) {
             workInProgress = bailoutOnAlreadyFinishedWork(
               current,
               workInProgress,
@@ -7190,12 +7102,7 @@ function beginWork(current, workInProgress, renderLanes) {
             );
             break a;
           }
-          reconcileChildren(
-            current,
-            workInProgress,
-            lazyComponent,
-            renderLanes
-          );
+          reconcileChildren(current, workInProgress, nextProps, renderLanes);
         }
         workInProgress = workInProgress.child;
       }
@@ -7243,21 +7150,24 @@ function beginWork(current, workInProgress, renderLanes) {
             )),
           (hydrationParentFiber = workInProgress),
           (rootOrSingletonContext = !0),
-          (init = nextHydratableInstance),
-          isSingletonScope(workInProgress.type)
-            ? ((previousHydratableOnEnteringScopedSingleton = init),
-              (nextHydratableInstance = getNextHydratable(
-                lazyComponent.firstChild
-              )))
-            : (nextHydratableInstance = init)),
-        reconcileChildren(
-          current,
-          workInProgress,
-          workInProgress.pendingProps.children,
-          renderLanes
-        ),
+          (nextHydratableInstance = getNextHydratable(
+            lazyComponent.firstChild
+          ))),
+        (lazyComponent = workInProgress.pendingProps.children),
+        null !== current || isHydrating
+          ? reconcileChildren(
+              current,
+              workInProgress,
+              lazyComponent,
+              renderLanes
+            )
+          : (workInProgress.child = reconcileChildFibers(
+              workInProgress,
+              null,
+              lazyComponent,
+              renderLanes
+            )),
         markRef(current, workInProgress),
-        null === current && (workInProgress.flags |= 4194304),
         workInProgress.child
       );
     case 5:
@@ -7285,10 +7195,10 @@ function beginWork(current, workInProgress, renderLanes) {
           init && throwOnHydrationMismatch(workInProgress)),
         pushHostContext(workInProgress),
         (init = workInProgress.type),
-        (prevState = workInProgress.pendingProps),
+        (nextProps = workInProgress.pendingProps),
         (nextState = null !== current ? current.memoizedProps : null),
-        (lazyComponent = prevState.children),
-        shouldSetTextContent(init, prevState)
+        (lazyComponent = nextProps.children),
+        shouldSetTextContent(init, nextProps)
           ? (lazyComponent = null)
           : null !== nextState &&
             shouldSetTextContent(init, nextState) &&
@@ -7441,11 +7351,11 @@ function beginWork(current, workInProgress, renderLanes) {
           ? ((init = peekCacheFromPool()),
             null === init &&
               ((init = workInProgressRoot),
-              (prevState = createCache()),
-              (init.pooledCache = prevState),
-              prevState.refCount++,
-              null !== prevState && (init.pooledCacheLanes |= renderLanes),
-              (init = prevState)),
+              (nextProps = createCache()),
+              (init.pooledCache = nextProps),
+              nextProps.refCount++,
+              null !== nextProps && (init.pooledCacheLanes |= renderLanes),
+              (init = nextProps)),
             (workInProgress.memoizedState = {
               parent: lazyComponent,
               cache: init
@@ -7457,7 +7367,7 @@ function beginWork(current, workInProgress, renderLanes) {
               processUpdateQueue(workInProgress, null, null, renderLanes),
               suspendIfUpdateReadFromEntangledAsyncAction()),
             (init = current.memoizedState),
-            (prevState = workInProgress.memoizedState),
+            (nextProps = workInProgress.memoizedState),
             init.parent !== lazyComponent
               ? ((init = { parent: lazyComponent, cache: lazyComponent }),
                 (workInProgress.memoizedState = init),
@@ -7466,7 +7376,7 @@ function beginWork(current, workInProgress, renderLanes) {
                     workInProgress.updateQueue.baseState =
                       init),
                 pushProvider(workInProgress, CacheContext, lazyComponent))
-              : ((lazyComponent = prevState.cache),
+              : ((lazyComponent = nextProps.cache),
                 pushProvider(workInProgress, CacheContext, lazyComponent),
                 lazyComponent !== init.cache &&
                   propagateContextChanges(
@@ -7488,20 +7398,22 @@ function beginWork(current, workInProgress, renderLanes) {
         (lazyComponent = workInProgress.pendingProps),
         (init = workInProgress.stateNode),
         null != lazyComponent.name && "auto" !== lazyComponent.name
-          ? (workInProgress.flags |= null === current ? 18882560 : 18874368)
+          ? ((workInProgress.flags |= 2097152),
+            null === current &&
+              trackAppearingViewTransition(init, lazyComponent.name))
           : null === init.autoName &&
-            ((prevState = workInProgressRoot.identifierPrefix),
+            ((nextProps = workInProgressRoot.identifierPrefix),
             isHydrating
               ? ((nextState = getTreeId()),
-                (prevState = "\u00ab" + prevState + "T" + nextState + "\u00bb"))
+                (nextProps = "\u00ab" + nextProps + "T" + nextState + "\u00bb"))
               : ((nextState = globalClientIdCounter++),
-                (prevState =
+                (nextProps =
                   "\u00ab" +
-                  prevState +
+                  nextProps +
                   "t" +
                   nextState.toString(32) +
                   "\u00bb")),
-            (init.autoName = prevState)),
+            (init.autoName = nextProps)),
         null !== current && current.memoizedProps.name !== lazyComponent.name
           ? (workInProgress.flags |= 4194816)
           : markRef(current, workInProgress),
@@ -7558,10 +7470,9 @@ function commitHookEffectListUnmount(
           if (void 0 !== destroy) {
             inst.destroy = void 0;
             lastEffect = finishedWork;
-            var nearestMountedAncestor = nearestMountedAncestor$jscomp$0,
-              destroy_ = destroy;
+            var nearestMountedAncestor = nearestMountedAncestor$jscomp$0;
             try {
-              destroy_();
+              destroy();
             } catch (error) {
               captureCommitPhaseError(
                 lastEffect,
@@ -7650,8 +7561,8 @@ function safelyDetachRef(current, nearestMountedAncestor) {
     else if ("function" === typeof ref)
       try {
         ref(null);
-      } catch (error$116) {
-        captureCommitPhaseError(current, nearestMountedAncestor, error$116);
+      } catch (error$115) {
+        captureCommitPhaseError(current, nearestMountedAncestor, error$115);
       }
     else ref.current = null;
 }
@@ -7690,7 +7601,7 @@ function isHostParent(fiber) {
     5 === fiber.tag ||
     3 === fiber.tag ||
     26 === fiber.tag ||
-    (27 === fiber.tag && isSingletonScope(fiber.type)) ||
+    27 === fiber.tag ||
     4 === fiber.tag
   );
 }
@@ -7703,10 +7614,12 @@ function getHostSibling(fiber) {
     fiber.sibling.return = fiber.return;
     for (
       fiber = fiber.sibling;
-      5 !== fiber.tag && 6 !== fiber.tag && 18 !== fiber.tag;
+      5 !== fiber.tag &&
+      6 !== fiber.tag &&
+      27 !== fiber.tag &&
+      18 !== fiber.tag;
 
     ) {
-      if (27 === fiber.tag && isSingletonScope(fiber.type)) continue a;
       if (fiber.flags & 2) continue a;
       if (null === fiber.child || 4 === fiber.tag) continue a;
       else (fiber.child.return = fiber), (fiber = fiber.child);
@@ -7719,32 +7632,18 @@ function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {
   if (5 === tag || 6 === tag)
     (node = node.stateNode),
       before
-        ? (9 === parent.nodeType
-            ? parent.body
-            : "HTML" === parent.nodeName
-              ? parent.ownerDocument.body
-              : parent
-          ).insertBefore(node, before)
-        : ((before =
-            9 === parent.nodeType
-              ? parent.body
-              : "HTML" === parent.nodeName
-                ? parent.ownerDocument.body
-                : parent),
-          before.appendChild(node),
+        ? 8 === parent.nodeType
+          ? parent.parentNode.insertBefore(node, before)
+          : parent.insertBefore(node, before)
+        : (8 === parent.nodeType
+            ? ((before = parent.parentNode), before.insertBefore(node, parent))
+            : ((before = parent), before.appendChild(node)),
           (parent = parent._reactRootContainer),
           (null !== parent && void 0 !== parent) ||
             null !== before.onclick ||
             (before.onclick = noop$1)),
       (viewTransitionMutationContext = !0);
-  else if (
-    4 !== tag &&
-    (27 === tag &&
-      isSingletonScope(node.type) &&
-      ((parent = node.stateNode), (before = null)),
-    (node = node.child),
-    null !== node)
-  )
+  else if (4 !== tag && 27 !== tag && ((node = node.child), null !== node))
     for (
       insertOrAppendPlacementNodeIntoContainer(node, before, parent),
         node = node.sibling;
@@ -7760,12 +7659,7 @@ function insertOrAppendPlacementNode(node, before, parent) {
     (node = node.stateNode),
       before ? parent.insertBefore(node, before) : parent.appendChild(node),
       (viewTransitionMutationContext = !0);
-  else if (
-    4 !== tag &&
-    (27 === tag && isSingletonScope(node.type) && (parent = node.stateNode),
-    (node = node.child),
-    null !== node)
-  )
+  else if (4 !== tag && 27 !== tag && ((node = node.child), null !== node))
     for (
       insertOrAppendPlacementNode(node, before, parent), node = node.sibling;
       null !== node;
@@ -7773,33 +7667,20 @@ function insertOrAppendPlacementNode(node, before, parent) {
     )
       insertOrAppendPlacementNode(node, before, parent), (node = node.sibling);
 }
-function commitHostSingletonAcquisition(finishedWork) {
-  var singleton = finishedWork.stateNode,
-    props = finishedWork.memoizedProps;
-  try {
-    for (
-      var type = finishedWork.type, attributes = singleton.attributes;
-      attributes.length;
-
-    )
-      singleton.removeAttributeNode(attributes[0]);
-    setInitialProperties(singleton, type, props);
-    singleton[internalInstanceKey] = finishedWork;
-    singleton[internalPropsKey] = props;
-  } catch (error) {
-    captureCommitPhaseError(finishedWork, finishedWork.return, error);
-  }
-}
 var offscreenSubtreeIsHidden = !1,
   offscreenSubtreeWasHidden = !1,
   needsFormReset = !1,
   PossiblyWeakSet = "function" === typeof WeakSet ? WeakSet : Set,
   nextEffect = null,
   shouldStartViewTransition = !1,
-  appearingViewTransitions = null,
   viewTransitionContextChanged = !1,
   viewTransitionCancelableChildren = null;
-function commitBeforeMutationEffects(root, firstChild, committedLanes) {
+function commitBeforeMutationEffects(
+  root,
+  firstChild,
+  committedLanes,
+  appearingViewTransitions
+) {
   root = root.containerInfo;
   eventsEnabled = _enabled;
   root = getActiveElementDeep(root);
@@ -7870,7 +7751,7 @@ function commitBeforeMutationEffects(root, firstChild, committedLanes) {
   } else JSCompiler_temp = null;
   selectionInformation = { focusedElem: root, selectionRange: JSCompiler_temp };
   shouldStartViewTransition = _enabled = !1;
-  committedLanes = (committedLanes & 335544064) === committedLanes;
+  committedLanes = (committedLanes & 335544192) === committedLanes;
   nextEffect = firstChild;
   for (firstChild = committedLanes ? 9238 : 1028; null !== nextEffect; ) {
     root = nextEffect;
@@ -7884,7 +7765,10 @@ function commitBeforeMutationEffects(root, firstChild, committedLanes) {
         anchorOffset++
       )
         committedLanes &&
-          commitExitViewTransitions(JSCompiler_temp[anchorOffset]);
+          commitExitViewTransitions(
+            JSCompiler_temp[anchorOffset],
+            appearingViewTransitions
+          );
     if (null === root.alternate && 0 !== (root.flags & 2))
       commitBeforeMutationEffects_complete(committedLanes);
     else {
@@ -7893,7 +7777,10 @@ function commitBeforeMutationEffects(root, firstChild, committedLanes) {
           null !== JSCompiler_temp &&
             null === JSCompiler_temp.memoizedState &&
             committedLanes &&
-            commitExitViewTransitions(JSCompiler_temp);
+            commitExitViewTransitions(
+              JSCompiler_temp,
+              appearingViewTransitions
+            );
           commitBeforeMutationEffects_complete(committedLanes);
           continue;
         } else if (
@@ -7910,7 +7797,6 @@ function commitBeforeMutationEffects(root, firstChild, committedLanes) {
           commitBeforeMutationEffects_complete(committedLanes));
     }
   }
-  appearingViewTransitions = null;
 }
 function commitBeforeMutationEffects_complete(
   isViewTransitionEligible$jscomp$0
@@ -8091,13 +7977,13 @@ function restoreViewTransitionOnHostInstances(
   }
 }
 function commitAppearingPairViewTransitions(placement) {
-  if (0 !== (placement.subtreeFlags & 18874368))
+  if (0 !== (placement.subtreeFlags & 2097152))
     for (placement = placement.child; null !== placement; ) {
       if (22 !== placement.tag || null !== placement.memoizedState)
         if (
           (commitAppearingPairViewTransitions(placement),
           30 === placement.tag &&
-            0 !== (placement.flags & 18874368) &&
+            0 !== (placement.flags & 2097152) &&
             placement.stateNode.paired)
         ) {
           var props = placement.memoizedProps;
@@ -8146,49 +8032,46 @@ function commitEnterViewTransitions(placement) {
       commitEnterViewTransitions(placement), (placement = placement.sibling);
   else commitAppearingPairViewTransitions(placement);
 }
-function commitDeletedPairViewTransitions(deletion) {
+function commitDeletedPairViewTransitions(deletion, appearingViewTransitions) {
   if (
-    null !== appearingViewTransitions &&
-    0 !== appearingViewTransitions.size
-  ) {
-    var pairs = appearingViewTransitions;
-    if (0 !== (deletion.subtreeFlags & 18874368))
-      for (deletion = deletion.child; null !== deletion; ) {
-        if (22 !== deletion.tag || null !== deletion.memoizedState) {
-          if (30 === deletion.tag && 0 !== (deletion.flags & 18874368)) {
-            var props = deletion.memoizedProps,
-              name = props.name;
-            if (null != name && "auto" !== name) {
-              var pair = pairs.get(name);
-              if (void 0 !== pair) {
-                var className = getViewTransitionClassName(
-                  props.className,
-                  props.share
-                );
-                "none" !== className &&
-                  ((viewTransitionHostInstanceIdx = 0),
-                  applyViewTransitionToHostInstances(
-                    deletion.child,
-                    name,
-                    className,
-                    null,
-                    !1
-                  )
-                    ? ((pair.paired = deletion.stateNode),
-                      scheduleViewTransitionEvent(deletion, props.onShare))
-                    : restoreViewTransitionOnHostInstances(deletion.child, !1));
-                pairs.delete(name);
-                if (0 === pairs.size) break;
-              }
+    0 !== appearingViewTransitions.size &&
+    0 !== (deletion.subtreeFlags & 2097152)
+  )
+    for (deletion = deletion.child; null !== deletion; ) {
+      if (22 !== deletion.tag || null !== deletion.memoizedState) {
+        if (30 === deletion.tag && 0 !== (deletion.flags & 2097152)) {
+          var props = deletion.memoizedProps,
+            name = props.name;
+          if (null != name && "auto" !== name) {
+            var pair = appearingViewTransitions.get(name);
+            if (void 0 !== pair) {
+              var className = getViewTransitionClassName(
+                props.className,
+                props.share
+              );
+              "none" !== className &&
+                ((viewTransitionHostInstanceIdx = 0),
+                applyViewTransitionToHostInstances(
+                  deletion.child,
+                  name,
+                  className,
+                  null,
+                  !1
+                )
+                  ? ((pair.paired = deletion.stateNode),
+                    scheduleViewTransitionEvent(deletion, props.onShare))
+                  : restoreViewTransitionOnHostInstances(deletion.child, !1));
+              appearingViewTransitions.delete(name);
+              if (0 === appearingViewTransitions.size) break;
             }
           }
-          commitDeletedPairViewTransitions(deletion);
         }
-        deletion = deletion.sibling;
+        commitDeletedPairViewTransitions(deletion, appearingViewTransitions);
       }
-  }
+      deletion = deletion.sibling;
+    }
 }
-function commitExitViewTransitions(deletion) {
+function commitExitViewTransitions(deletion, appearingViewTransitions) {
   if (30 === deletion.tag) {
     var props = deletion.memoizedProps,
       name = getViewTransitionName(props, deletion.stateNode),
@@ -8216,13 +8099,14 @@ function commitExitViewTransitions(deletion) {
           : scheduleViewTransitionEvent(deletion, props.onExit)
         : restoreViewTransitionOnHostInstances(deletion.child, !1));
     null !== appearingViewTransitions &&
-      commitDeletedPairViewTransitions(deletion);
+      commitDeletedPairViewTransitions(deletion, appearingViewTransitions);
   } else if (0 !== (deletion.subtreeFlags & 33554432))
     for (deletion = deletion.child; null !== deletion; )
-      commitExitViewTransitions(deletion), (deletion = deletion.sibling);
+      commitExitViewTransitions(deletion, appearingViewTransitions),
+        (deletion = deletion.sibling);
   else
     null !== appearingViewTransitions &&
-      commitDeletedPairViewTransitions(deletion);
+      commitDeletedPairViewTransitions(deletion, appearingViewTransitions);
 }
 function commitNestedViewTransitions(changedParent) {
   for (changedParent = changedParent.child; null !== changedParent; ) {
@@ -8246,10 +8130,10 @@ function commitNestedViewTransitions(changedParent) {
   }
 }
 function restorePairedViewTransitions(parent) {
-  if (0 !== (parent.subtreeFlags & 18874368))
+  if (0 !== (parent.subtreeFlags & 2097152))
     for (parent = parent.child; null !== parent; ) {
       if (22 !== parent.tag || null !== parent.memoizedState) {
-        if (30 === parent.tag && 0 !== (parent.flags & 18874368)) {
+        if (30 === parent.tag && 0 !== (parent.flags & 2097152)) {
           var instance = parent.stateNode;
           null !== instance.paired &&
             ((instance.paired = null),
@@ -8457,11 +8341,11 @@ function commitLayoutEffectOnFiber(finishedRoot, current, finishedWork) {
               current,
               finishedRoot.__reactInternalSnapshotBeforeUpdate
             );
-          } catch (error$115) {
+          } catch (error$114) {
             captureCommitPhaseError(
               finishedWork,
               finishedWork.return,
-              error$115
+              error$114
             );
           }
         }
@@ -8488,11 +8372,11 @@ function commitLayoutEffectOnFiber(finishedRoot, current, finishedWork) {
         }
       }
       break;
-    case 27:
-      null === current &&
-        flags & 4 &&
-        commitHostSingletonAcquisition(finishedWork);
     case 26:
+      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
+      flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);
+      break;
+    case 27:
     case 5:
       recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
       null === current && flags & 4 && commitHostMount(finishedWork);
@@ -8607,14 +8491,20 @@ function commitDeletionEffectsOnFiber(
         safelyDetachRef(deletedFiber, nearestMountedAncestor);
       var prevHostParent = hostParent,
         prevHostParentIsContainer = hostParentIsContainer;
-      isSingletonScope(deletedFiber.type) &&
-        ((hostParent = deletedFiber.stateNode), (hostParentIsContainer = !1));
+      hostParent = deletedFiber.stateNode;
       recursivelyTraverseDeletionEffects(
         finishedRoot,
         nearestMountedAncestor,
         deletedFiber
       );
-      releaseSingletonInstance(deletedFiber.stateNode);
+      deletedFiber = deletedFiber.stateNode;
+      for (
+        nearestMountedAncestor = deletedFiber.attributes;
+        nearestMountedAncestor.length;
+
+      )
+        deletedFiber.removeAttributeNode(nearestMountedAncestor[0]);
+      detachDeletedInstance(deletedFiber);
       hostParent = prevHostParent;
       hostParentIsContainer = prevHostParentIsContainer;
       break;
@@ -8622,25 +8512,24 @@ function commitDeletionEffectsOnFiber(
       offscreenSubtreeWasHidden ||
         safelyDetachRef(deletedFiber, nearestMountedAncestor);
     case 6:
-      prevHostParent = hostParent;
-      prevHostParentIsContainer = hostParentIsContainer;
+      prevHostParentIsContainer = hostParent;
+      var prevHostParentIsContainer$122 = hostParentIsContainer;
       hostParent = null;
       recursivelyTraverseDeletionEffects(
         finishedRoot,
         nearestMountedAncestor,
         deletedFiber
       );
-      hostParent = prevHostParent;
-      hostParentIsContainer = prevHostParentIsContainer;
+      hostParent = prevHostParentIsContainer;
+      hostParentIsContainer = prevHostParentIsContainer$122;
       if (null !== hostParent)
         if (hostParentIsContainer)
           try {
-            (9 === hostParent.nodeType
-              ? hostParent.body
-              : "HTML" === hostParent.nodeName
-                ? hostParent.ownerDocument.body
-                : hostParent
-            ).removeChild(deletedFiber.stateNode),
+            (finishedRoot = hostParent),
+              (prevHostParent = deletedFiber.stateNode),
+              8 === finishedRoot.nodeType
+                ? finishedRoot.parentNode.removeChild(prevHostParent)
+                : finishedRoot.removeChild(prevHostParent),
               (viewTransitionMutationContext = !0);
           } catch (error) {
             captureCommitPhaseError(
@@ -8664,16 +8553,16 @@ function commitDeletionEffectsOnFiber(
     case 18:
       null !== hostParent &&
         (hostParentIsContainer
-          ? ((finishedRoot = hostParent),
-            clearSuspenseBoundary(
-              9 === finishedRoot.nodeType
-                ? finishedRoot.body
-                : "HTML" === finishedRoot.nodeName
-                  ? finishedRoot.ownerDocument.body
-                  : finishedRoot,
-              deletedFiber.stateNode
-            ),
-            retryIfBlockedOn(finishedRoot))
+          ? ((nearestMountedAncestor = hostParent),
+            (deletedFiber = deletedFiber.stateNode),
+            8 === nearestMountedAncestor.nodeType
+              ? clearSuspenseBoundary(
+                  nearestMountedAncestor.parentNode,
+                  deletedFiber
+                )
+              : 1 === nearestMountedAncestor.nodeType &&
+                clearSuspenseBoundary(nearestMountedAncestor, deletedFiber),
+            retryIfBlockedOn(nearestMountedAncestor))
           : clearSuspenseBoundary(hostParent, deletedFiber.stateNode));
       break;
     case 4:
@@ -8801,17 +8690,14 @@ function recursivelyTraverseMutationEffects(root$jscomp$0, parentFiber, lanes) {
       a: for (; null !== parent; ) {
         switch (parent.tag) {
           case 27:
-            if (isSingletonScope(parent.type)) {
-              hostParent = parent.stateNode;
-              hostParentIsContainer = !1;
-              break a;
-            }
-            break;
           case 5:
             hostParent = parent.stateNode;
             hostParentIsContainer = !1;
             break a;
           case 3:
+            hostParent = parent.stateNode.containerInfo;
+            hostParentIsContainer = !0;
+            break a;
           case 4:
             hostParent = parent.stateNode.containerInfo;
             hostParentIsContainer = !0;
@@ -8873,111 +8759,112 @@ function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
         (offscreenSubtreeWasHidden ||
           null === current ||
           safelyDetachRef(current, current.return));
-      if (flags & 4) {
-        var currentResource = null !== current ? current.memoizedState : null;
-        flags = finishedWork.memoizedState;
-        if (null === current)
+      if (flags & 4)
+        if (
+          ((root = null !== current ? current.memoizedState : null),
+          (flags = finishedWork.memoizedState),
+          null === current)
+        )
           if (null === flags)
             if (null === finishedWork.stateNode) {
               a: {
                 flags = finishedWork.type;
                 current = finishedWork.memoizedProps;
-                hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;
+                root = hoistableRoot.ownerDocument || hoistableRoot;
                 b: switch (flags) {
                   case "title":
-                    currentResource =
-                      hoistableRoot.getElementsByTagName("title")[0];
+                    lanes = root.getElementsByTagName("title")[0];
                     if (
-                      !currentResource ||
-                      currentResource[internalHoistableMarker] ||
-                      currentResource[internalInstanceKey] ||
-                      "http://www.w3.org/2000/svg" ===
-                        currentResource.namespaceURI ||
-                      currentResource.hasAttribute("itemprop")
+                      !lanes ||
+                      lanes[internalHoistableMarker] ||
+                      lanes[internalInstanceKey] ||
+                      "http://www.w3.org/2000/svg" === lanes.namespaceURI ||
+                      lanes.hasAttribute("itemprop")
                     )
-                      (currentResource = hoistableRoot.createElement(flags)),
-                        hoistableRoot.head.insertBefore(
-                          currentResource,
-                          hoistableRoot.querySelector("head > title")
+                      (lanes = root.createElement(flags)),
+                        root.head.insertBefore(
+                          lanes,
+                          root.querySelector("head > title")
                         );
-                    setInitialProperties(currentResource, flags, current);
-                    currentResource[internalInstanceKey] = finishedWork;
-                    markNodeAsHoistable(currentResource);
-                    flags = currentResource;
+                    setInitialProperties(lanes, flags, current);
+                    lanes[internalInstanceKey] = finishedWork;
+                    markNodeAsHoistable(lanes);
+                    flags = lanes;
                     break a;
                   case "link":
-                    var maybeNodes = getHydratableHoistableCache(
-                      "link",
-                      "href",
-                      hoistableRoot
-                    ).get(flags + (current.href || ""));
-                    if (maybeNodes)
-                      for (var i = 0; i < maybeNodes.length; i++)
+                    if (
+                      (hoistableRoot = getHydratableHoistableCache(
+                        "link",
+                        "href",
+                        root
+                      ).get(flags + (current.href || "")))
+                    )
+                      for (var i = 0; i < hoistableRoot.length; i++)
                         if (
-                          ((currentResource = maybeNodes[i]),
-                          currentResource.getAttribute("href") ===
+                          ((lanes = hoistableRoot[i]),
+                          lanes.getAttribute("href") ===
                             (null == current.href || "" === current.href
                               ? null
                               : current.href) &&
-                            currentResource.getAttribute("rel") ===
+                            lanes.getAttribute("rel") ===
                               (null == current.rel ? null : current.rel) &&
-                            currentResource.getAttribute("title") ===
+                            lanes.getAttribute("title") ===
                               (null == current.title ? null : current.title) &&
-                            currentResource.getAttribute("crossorigin") ===
+                            lanes.getAttribute("crossorigin") ===
                               (null == current.crossOrigin
                                 ? null
                                 : current.crossOrigin))
                         ) {
-                          maybeNodes.splice(i, 1);
+                          hoistableRoot.splice(i, 1);
                           break b;
                         }
-                    currentResource = hoistableRoot.createElement(flags);
-                    setInitialProperties(currentResource, flags, current);
-                    hoistableRoot.head.appendChild(currentResource);
+                    lanes = root.createElement(flags);
+                    setInitialProperties(lanes, flags, current);
+                    root.head.appendChild(lanes);
                     break;
                   case "meta":
                     if (
-                      (maybeNodes = getHydratableHoistableCache(
+                      (hoistableRoot = getHydratableHoistableCache(
                         "meta",
                         "content",
-                        hoistableRoot
+                        root
                       ).get(flags + (current.content || "")))
                     )
-                      for (i = 0; i < maybeNodes.length; i++)
+                      for (i = 0; i < hoistableRoot.length; i++)
                         if (
-                          ((currentResource = maybeNodes[i]),
-                          currentResource.getAttribute("content") ===
+                          ((lanes = hoistableRoot[i]),
+                          lanes.getAttribute("content") ===
                             (null == current.content
                               ? null
                               : "" + current.content) &&
-                            currentResource.getAttribute("name") ===
+                            lanes.getAttribute("name") ===
                               (null == current.name ? null : current.name) &&
-                            currentResource.getAttribute("property") ===
+                            lanes.getAttribute("property") ===
                               (null == current.property
                                 ? null
                                 : current.property) &&
-                            currentResource.getAttribute("http-equiv") ===
+                            lanes.getAttribute("http-equiv") ===
                               (null == current.httpEquiv
                                 ? null
                                 : current.httpEquiv) &&
-                            currentResource.getAttribute("charset") ===
+                            lanes.getAttribute("charset") ===
                               (null == current.charSet
                                 ? null
                                 : current.charSet))
                         ) {
-                          maybeNodes.splice(i, 1);
+                          hoistableRoot.splice(i, 1);
                           break b;
                         }
-                    currentResource = hoistableRoot.createElement(flags);
-                    setInitialProperties(currentResource, flags, current);
-                    hoistableRoot.head.appendChild(currentResource);
+                    lanes = root.createElement(flags);
+                    setInitialProperties(lanes, flags, current);
+                    root.head.appendChild(lanes);
                     break;
                   default:
                     throw Error(formatProdErrorMessage(468, flags));
                 }
-                currentResource[internalInstanceKey] = finishedWork;
-                markNodeAsHoistable(currentResource);
-                flags = currentResource;
+                lanes[internalInstanceKey] = finishedWork;
+                markNodeAsHoistable(lanes);
+                flags = lanes;
               }
               finishedWork.stateNode = flags;
             } else
@@ -8993,12 +8880,12 @@ function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
               finishedWork.memoizedProps
             );
         else
-          currentResource !== flags
-            ? (null === currentResource
+          root !== flags
+            ? (null === root
                 ? null !== current.stateNode &&
                   ((current = current.stateNode),
                   current.parentNode.removeChild(current))
-                : currentResource.count--,
+                : root.count--,
               null === flags
                 ? mountHoistable(
                     hoistableRoot,
@@ -9017,23 +8904,38 @@ function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
                 finishedWork.memoizedProps,
                 current.memoizedProps
               );
-      }
       break;
     case 27:
-      recursivelyTraverseMutationEffects(root, finishedWork, lanes);
-      commitReconciliationEffects(finishedWork);
-      flags & 512 &&
-        (offscreenSubtreeWasHidden ||
-          null === current ||
-          safelyDetachRef(current, current.return));
-      null !== current &&
-        flags & 4 &&
-        commitHostUpdate(
-          finishedWork,
-          finishedWork.memoizedProps,
-          current.memoizedProps
-        );
-      break;
+      if (flags & 4 && null === finishedWork.alternate) {
+        hoistableRoot = finishedWork.stateNode;
+        i = finishedWork.memoizedProps;
+        try {
+          for (var node = hoistableRoot.firstChild; node; ) {
+            var nextNode = node.nextSibling,
+              nodeName = node.nodeName;
+            node[internalHoistableMarker] ||
+              "HEAD" === nodeName ||
+              "BODY" === nodeName ||
+              "SCRIPT" === nodeName ||
+              "STYLE" === nodeName ||
+              ("LINK" === nodeName &&
+                "stylesheet" === node.rel.toLowerCase()) ||
+              hoistableRoot.removeChild(node);
+            node = nextNode;
+          }
+          for (
+            var type = finishedWork.type, attributes = hoistableRoot.attributes;
+            attributes.length;
+
+          )
+            hoistableRoot.removeAttributeNode(attributes[0]);
+          setInitialProperties(hoistableRoot, type, i);
+          hoistableRoot[internalInstanceKey] = finishedWork;
+          hoistableRoot[internalPropsKey] = i;
+        } catch (error) {
+          captureCommitPhaseError(finishedWork, finishedWork.return, error);
+        }
+      }
     case 5:
       recursivelyTraverseMutationEffects(root, finishedWork, lanes);
       commitReconciliationEffects(finishedWork);
@@ -9042,21 +8944,20 @@ function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
           null === current ||
           safelyDetachRef(current, current.return));
       if (finishedWork.flags & 32) {
-        hoistableRoot = finishedWork.stateNode;
+        root = finishedWork.stateNode;
         try {
-          setTextContent(hoistableRoot, ""),
-            (viewTransitionMutationContext = !0);
+          setTextContent(root, ""), (viewTransitionMutationContext = !0);
         } catch (error) {
           captureCommitPhaseError(finishedWork, finishedWork.return, error);
         }
       }
       flags & 4 &&
         null != finishedWork.stateNode &&
-        ((hoistableRoot = finishedWork.memoizedProps),
+        ((root = finishedWork.memoizedProps),
         commitHostUpdate(
           finishedWork,
-          hoistableRoot,
-          null !== current ? current.memoizedProps : hoistableRoot
+          root,
+          null !== current ? current.memoizedProps : root
         ));
       flags & 1024 && (needsFormReset = !0);
       break;
@@ -9122,15 +9023,15 @@ function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
         (offscreenSubtreeWasHidden ||
           null === current ||
           safelyDetachRef(current, current.return));
-      hoistableRoot = null !== finishedWork.memoizedState;
-      var wasHidden = null !== current && null !== current.memoizedState,
-        prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden,
-        prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
-      offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden || hoistableRoot;
-      offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || wasHidden;
+      node = null !== finishedWork.memoizedState;
+      nextNode = null !== current && null !== current.memoizedState;
+      nodeName = offscreenSubtreeIsHidden;
+      type = offscreenSubtreeWasHidden;
+      offscreenSubtreeIsHidden = nodeName || node;
+      offscreenSubtreeWasHidden = type || nextNode;
       recursivelyTraverseMutationEffects(root, finishedWork, lanes);
-      offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
-      offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;
+      offscreenSubtreeWasHidden = type;
+      offscreenSubtreeIsHidden = nodeName;
       commitReconciliationEffects(finishedWork);
       root = finishedWork.stateNode;
       root._current = finishedWork;
@@ -9138,38 +9039,38 @@ function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
       root._visibility |= root._pendingVisibility & 2;
       if (
         flags & 8192 &&
-        ((root._visibility = hoistableRoot
+        ((root._visibility = node
           ? root._visibility & -2
           : root._visibility | 1),
-        hoistableRoot &&
-          (null === current ||
-            wasHidden ||
-            offscreenSubtreeIsHidden ||
-            offscreenSubtreeWasHidden ||
+        node &&
+          ((root = offscreenSubtreeIsHidden || offscreenSubtreeWasHidden),
+          null === current ||
+            nextNode ||
+            root ||
             recursivelyTraverseDisappearLayoutEffects(finishedWork)),
         null === finishedWork.memoizedProps ||
           "manual" !== finishedWork.memoizedProps.mode)
       )
         a: for (current = null, root = finishedWork; ; ) {
-          if (5 === root.tag || 26 === root.tag) {
+          if (5 === root.tag || 26 === root.tag || 27 === root.tag) {
             if (null === current) {
               lanes = current = root;
               try {
-                if (((currentResource = lanes.stateNode), hoistableRoot))
-                  (maybeNodes = currentResource.style),
-                    "function" === typeof maybeNodes.setProperty
-                      ? maybeNodes.setProperty("display", "none", "important")
-                      : (maybeNodes.display = "none");
+                if (((hoistableRoot = lanes.stateNode), node))
+                  (i = hoistableRoot.style),
+                    "function" === typeof i.setProperty
+                      ? i.setProperty("display", "none", "important")
+                      : (i.display = "none");
                 else {
-                  i = lanes.stateNode;
-                  var styleProp = lanes.memoizedProps.style,
+                  var instance = lanes.stateNode,
+                    styleProp = lanes.memoizedProps.style,
                     display =
                       void 0 !== styleProp &&
                       null !== styleProp &&
                       styleProp.hasOwnProperty("display")
                         ? styleProp.display
                         : null;
-                  i.style.display =
+                  instance.style.display =
                     null == display || "boolean" === typeof display
                       ? ""
                       : ("" + display).trim();
@@ -9182,9 +9083,7 @@ function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
             if (null === current) {
               lanes = root;
               try {
-                lanes.stateNode.nodeValue = hoistableRoot
-                  ? ""
-                  : lanes.memoizedProps;
+                lanes.stateNode.nodeValue = node ? "" : lanes.memoizedProps;
               } catch (error) {
                 captureCommitPhaseError(lanes, lanes.return, error);
               }
@@ -9235,7 +9134,7 @@ function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
       viewTransitionMutationContext = !1;
       recursivelyTraverseMutationEffects(root, finishedWork, lanes);
       commitReconciliationEffects(finishedWork);
-      (lanes & 335544064) === lanes &&
+      (lanes & 335544192) === lanes &&
         null !== current &&
         viewTransitionMutationContext &&
         (finishedWork.flags |= 4);
@@ -9252,42 +9151,44 @@ function commitReconciliationEffects(finishedWork) {
   var flags = finishedWork.flags;
   if (flags & 2) {
     try {
-      a: {
-        for (var parent = finishedWork.return; null !== parent; ) {
-          if (isHostParent(parent)) {
-            var JSCompiler_inline_result = parent;
-            break a;
+      if (27 !== finishedWork.tag) {
+        a: {
+          for (var parent = finishedWork.return; null !== parent; ) {
+            if (isHostParent(parent)) {
+              var JSCompiler_inline_result = parent;
+              break a;
+            }
+            parent = parent.return;
           }
-          parent = parent.return;
+          throw Error(formatProdErrorMessage(160));
+        }
+        switch (JSCompiler_inline_result.tag) {
+          case 27:
+            var parent$jscomp$0 = JSCompiler_inline_result.stateNode,
+              before = getHostSibling(finishedWork);
+            insertOrAppendPlacementNode(finishedWork, before, parent$jscomp$0);
+            break;
+          case 5:
+            var parent$116 = JSCompiler_inline_result.stateNode;
+            JSCompiler_inline_result.flags & 32 &&
+              (setTextContent(parent$116, ""),
+              (JSCompiler_inline_result.flags &= -33));
+            var before$117 = getHostSibling(finishedWork);
+            insertOrAppendPlacementNode(finishedWork, before$117, parent$116);
+            break;
+          case 3:
+          case 4:
+            var parent$118 = JSCompiler_inline_result.stateNode.containerInfo,
+              before$119 = getHostSibling(finishedWork);
+            insertOrAppendPlacementNodeIntoContainer(
+              finishedWork,
+              before$119,
+              parent$118
+            );
+            break;
+          default:
+            throw Error(formatProdErrorMessage(161));
         }
-        throw Error(formatProdErrorMessage(160));
-      }
-      switch (JSCompiler_inline_result.tag) {
-        case 27:
-          var parent$jscomp$0 = JSCompiler_inline_result.stateNode,
-            before = getHostSibling(finishedWork);
-          insertOrAppendPlacementNode(finishedWork, before, parent$jscomp$0);
-          break;
-        case 5:
-          var parent$117 = JSCompiler_inline_result.stateNode;
-          JSCompiler_inline_result.flags & 32 &&
-            (setTextContent(parent$117, ""),
-            (JSCompiler_inline_result.flags &= -33));
-          var before$118 = getHostSibling(finishedWork);
-          insertOrAppendPlacementNode(finishedWork, before$118, parent$117);
-          break;
-        case 3:
-        case 4:
-          var parent$119 = JSCompiler_inline_result.stateNode.containerInfo,
-            before$120 = getHostSibling(finishedWork);
-          insertOrAppendPlacementNodeIntoContainer(
-            finishedWork,
-            before$120,
-            parent$119
-          );
-          break;
-        default:
-          throw Error(formatProdErrorMessage(161));
       }
     } catch (error) {
       captureCommitPhaseError(finishedWork, finishedWork.return, error);
@@ -9392,7 +9293,7 @@ function commitAfterMutationEffectsOnFiber(finishedWork, root) {
               ),
               layoutClassName = getViewTransitionClassName(
                 root.className,
-                root.layout
+                root.update
               );
             if ("none" === updateClassName) {
               if ("none" === layoutClassName) {
@@ -9480,9 +9381,8 @@ function recursivelyTraverseDisappearLayoutEffects(parentFiber) {
           );
         recursivelyTraverseDisappearLayoutEffects(finishedWork);
         break;
-      case 27:
-        releaseSingletonInstance(finishedWork.stateNode);
       case 26:
+      case 27:
       case 5:
         safelyDetachRef(finishedWork, finishedWork.return);
         recursivelyTraverseDisappearLayoutEffects(finishedWork);
@@ -9559,9 +9459,8 @@ function recursivelyTraverseReappearLayoutEffects(
           commitClassCallbacks(finishedWork);
         safelyAttachRef(finishedWork, finishedWork.return);
         break;
-      case 27:
-        commitHostSingletonAcquisition(finishedWork);
       case 26:
+      case 27:
       case 5:
         recursivelyTraverseReappearLayoutEffects(
           finishedRoot,
@@ -9647,7 +9546,7 @@ function recursivelyTraversePassiveMountEffects(
   committedTransitions
 ) {
   var isViewTransitionEligible =
-    (committedLanes & 335544064) === committedLanes;
+    (committedLanes & 335544192) === committedLanes;
   if (parentFiber.subtreeFlags & (isViewTransitionEligible ? 10262 : 10256))
     for (parentFiber = parentFiber.child; null !== parentFiber; )
       commitPassiveMountOnFiber(
@@ -9666,7 +9565,7 @@ function commitPassiveMountOnFiber(
   committedTransitions
 ) {
   var isViewTransitionEligible =
-    (committedLanes & 335544064) === committedLanes;
+    (committedLanes & 335544192) === committedLanes;
   isViewTransitionEligible &&
     null === finishedWork.alternate &&
     null !== finishedWork.return &&
@@ -9985,20 +9884,6 @@ function accumulateSuspenseyCommitOnFiber(fiber) {
             (suspenseyCommitFlag = previousHoistableRoot))
           : recursivelyAccumulateSuspenseyCommit(fiber));
       break;
-    case 30:
-      if (
-        0 !== (fiber.flags & suspenseyCommitFlag) &&
-        ((previousHoistableRoot = fiber.memoizedProps.name),
-        null != previousHoistableRoot && "auto" !== previousHoistableRoot)
-      ) {
-        null === appearingViewTransitions &&
-          (appearingViewTransitions = new Map());
-        var instance = fiber.stateNode;
-        instance.paired = null;
-        appearingViewTransitions.set(previousHoistableRoot, instance);
-      }
-      recursivelyAccumulateSuspenseyCommit(fiber);
-      break;
     default:
       recursivelyAccumulateSuspenseyCommit(fiber);
   }
@@ -10486,14 +10371,14 @@ function prepareToHydrateHostInstance(fiber) {
 function popToNextHostParent(fiber) {
   for (hydrationParentFiber = fiber.return; hydrationParentFiber; )
     switch (hydrationParentFiber.tag) {
+      case 3:
+      case 27:
+        rootOrSingletonContext = !0;
+        return;
       case 5:
       case 13:
         rootOrSingletonContext = !1;
         return;
-      case 27:
-      case 3:
-        rootOrSingletonContext = !0;
-        return;
       default:
         hydrationParentFiber = hydrationParentFiber.return;
     }
@@ -10501,52 +10386,46 @@ function popToNextHostParent(fiber) {
 function popHydrationState(fiber) {
   if (fiber !== hydrationParentFiber) return !1;
   if (!isHydrating) return popToNextHostParent(fiber), (isHydrating = !0), !1;
-  var tag = fiber.tag,
+  var shouldClear = !1,
     JSCompiler_temp;
-  if ((JSCompiler_temp = 3 !== tag && 27 !== tag)) {
-    if ((JSCompiler_temp = 5 === tag))
+  if ((JSCompiler_temp = 3 !== fiber.tag && 27 !== fiber.tag)) {
+    if ((JSCompiler_temp = 5 === fiber.tag))
       (JSCompiler_temp = fiber.type),
         (JSCompiler_temp =
           !("form" !== JSCompiler_temp && "button" !== JSCompiler_temp) ||
           shouldSetTextContent(fiber.type, fiber.memoizedProps));
     JSCompiler_temp = !JSCompiler_temp;
   }
-  JSCompiler_temp && nextHydratableInstance && throwOnHydrationMismatch(fiber);
+  JSCompiler_temp && (shouldClear = !0);
+  shouldClear && nextHydratableInstance && throwOnHydrationMismatch(fiber);
   popToNextHostParent(fiber);
-  if (13 === tag) {
+  if (13 === fiber.tag) {
     fiber = fiber.memoizedState;
     fiber = null !== fiber ? fiber.dehydrated : null;
     if (!fiber) throw Error(formatProdErrorMessage(317));
     a: {
       fiber = fiber.nextSibling;
-      for (tag = 0; fiber; ) {
+      for (shouldClear = 0; fiber; ) {
         if (8 === fiber.nodeType)
           if (((JSCompiler_temp = fiber.data), "/$" === JSCompiler_temp)) {
-            if (0 === tag) {
+            if (0 === shouldClear) {
               nextHydratableInstance = getNextHydratable(fiber.nextSibling);
               break a;
             }
-            tag--;
+            shouldClear--;
           } else
             ("$" !== JSCompiler_temp &&
               "$!" !== JSCompiler_temp &&
               "$?" !== JSCompiler_temp) ||
-              tag++;
+              shouldClear++;
         fiber = fiber.nextSibling;
       }
       nextHydratableInstance = null;
     }
   } else
-    27 === tag
-      ? ((tag = nextHydratableInstance),
-        isSingletonScope(fiber.type)
-          ? ((fiber = previousHydratableOnEnteringScopedSingleton),
-            (previousHydratableOnEnteringScopedSingleton = null),
-            (nextHydratableInstance = fiber))
-          : (nextHydratableInstance = tag))
-      : (nextHydratableInstance = hydrationParentFiber
-          ? getNextHydratable(fiber.stateNode.nextSibling)
-          : null);
+    nextHydratableInstance = hydrationParentFiber
+      ? getNextHydratable(fiber.stateNode.nextSibling)
+      : null;
   return !0;
 }
 function resetHydrationState() {
@@ -10576,31 +10455,14 @@ function getViewTransitionName(props, instance) {
     ? props.name
     : instance.autoName;
 }
-function getClassNameByType(classByType) {
-  if (null == classByType || "string" === typeof classByType)
-    return classByType;
-  var className = null,
-    activeTypes = pendingTransitionTypes;
-  if (null !== activeTypes)
-    for (var i = 0; i < activeTypes.length; i++) {
-      var match = classByType[activeTypes[i]];
-      if (null != match) {
-        if ("none" === match) return "none";
-        className = null == className ? match : className + (" " + match);
-      }
-    }
-  return null == className ? classByType.default : className;
-}
-function getViewTransitionClassName(defaultClass, eventClass) {
-  defaultClass = getClassNameByType(defaultClass);
-  eventClass = getClassNameByType(eventClass);
-  return null == eventClass
-    ? defaultClass
-    : "none" === eventClass
-      ? eventClass
-      : null != defaultClass && "none" !== defaultClass
-        ? defaultClass + " " + eventClass
-        : eventClass;
+function getViewTransitionClassName(className, eventClassName) {
+  return null == eventClassName
+    ? className
+    : "none" === eventClassName
+      ? eventClassName
+      : null != className
+        ? className + " " + eventClassName
+        : eventClassName;
 }
 function markUpdate(workInProgress) {
   workInProgress.flags |= 4;
@@ -10612,7 +10474,7 @@ function preloadResourceAndSuspendIfNeeded(workInProgress, resource) {
     resource = suspenseHandlerStackCursor.current;
     if (
       null !== resource &&
-      ((workInProgressRootRenderLanes & 4194048) ===
+      ((workInProgressRootRenderLanes & 4194176) ===
       workInProgressRootRenderLanes
         ? null !== shellBoundary
         : ((workInProgressRootRenderLanes & 62914560) !==
@@ -10650,14 +10512,14 @@ function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
         break;
       case "collapsed":
         lastTailNode = renderState.tail;
-        for (var lastTailNode$138 = null; null !== lastTailNode; )
-          null !== lastTailNode.alternate && (lastTailNode$138 = lastTailNode),
+        for (var lastTailNode$135 = null; null !== lastTailNode; )
+          null !== lastTailNode.alternate && (lastTailNode$135 = lastTailNode),
             (lastTailNode = lastTailNode.sibling);
-        null === lastTailNode$138
+        null === lastTailNode$135
           ? hasRenderedATailFallback || null === renderState.tail
             ? (renderState.tail = null)
             : (renderState.tail.sibling = null)
-          : (lastTailNode$138.sibling = null);
+          : (lastTailNode$135.sibling = null);
     }
 }
 function bubbleProperties(completedWork) {
@@ -10667,23 +10529,41 @@ function bubbleProperties(completedWork) {
     newChildLanes = 0,
     subtreeFlags = 0;
   if (didBailout)
-    for (var child$139 = completedWork.child; null !== child$139; )
-      (newChildLanes |= child$139.lanes | child$139.childLanes),
-        (subtreeFlags |= child$139.subtreeFlags & 65011712),
-        (subtreeFlags |= child$139.flags & 65011712),
-        (child$139.return = completedWork),
-        (child$139 = child$139.sibling);
+    for (var child$136 = completedWork.child; null !== child$136; )
+      (newChildLanes |= child$136.lanes | child$136.childLanes),
+        (subtreeFlags |= child$136.subtreeFlags & 65011712),
+        (subtreeFlags |= child$136.flags & 65011712),
+        (child$136.return = completedWork),
+        (child$136 = child$136.sibling);
   else
-    for (child$139 = completedWork.child; null !== child$139; )
-      (newChildLanes |= child$139.lanes | child$139.childLanes),
-        (subtreeFlags |= child$139.subtreeFlags),
-        (subtreeFlags |= child$139.flags),
-        (child$139.return = completedWork),
-        (child$139 = child$139.sibling);
+    for (child$136 = completedWork.child; null !== child$136; )
+      (newChildLanes |= child$136.lanes | child$136.childLanes),
+        (subtreeFlags |= child$136.subtreeFlags),
+        (subtreeFlags |= child$136.flags),
+        (child$136.return = completedWork),
+        (child$136 = child$136.sibling);
   completedWork.subtreeFlags |= subtreeFlags;
   completedWork.childLanes = newChildLanes;
   return didBailout;
 }
+function trackReappearingViewTransitions(workInProgress) {
+  if (0 !== (workInProgress.subtreeFlags & 2097152))
+    for (workInProgress = workInProgress.child; null !== workInProgress; ) {
+      if (22 !== workInProgress.tag || null !== workInProgress.memoizedState) {
+        if (
+          30 === workInProgress.tag &&
+          0 !== (workInProgress.flags & 2097152)
+        ) {
+          var props = workInProgress.memoizedProps;
+          null != props.name &&
+            "auto" !== props.name &&
+            trackAppearingViewTransition(workInProgress.stateNode, props.name);
+        }
+        trackReappearingViewTransitions(workInProgress);
+      }
+      workInProgress = workInProgress.sibling;
+    }
+}
 function completeWork(current, workInProgress, renderLanes) {
   var newProps = workInProgress.pendingProps;
   popTreeContext(workInProgress);
@@ -10960,11 +10840,11 @@ function completeWork(current, workInProgress, renderLanes) {
           null !== newProps.alternate.memoizedState &&
           null !== newProps.alternate.memoizedState.cachePool &&
           (type = newProps.alternate.memoizedState.cachePool.pool);
-        var cache$152 = null;
+        var cache$149 = null;
         null !== newProps.memoizedState &&
           null !== newProps.memoizedState.cachePool &&
-          (cache$152 = newProps.memoizedState.cachePool.pool);
-        cache$152 !== type && (newProps.flags |= 2048);
+          (cache$149 = newProps.memoizedState.cachePool.pool);
+        cache$149 !== type && (newProps.flags |= 2048);
       }
       renderLanes !== current &&
         renderLanes &&
@@ -10989,8 +10869,8 @@ function completeWork(current, workInProgress, renderLanes) {
       type = workInProgress.memoizedState;
       if (null === type) return bubbleProperties(workInProgress), null;
       newProps = 0 !== (workInProgress.flags & 128);
-      cache$152 = type.rendering;
-      if (null === cache$152)
+      cache$149 = type.rendering;
+      if (null === cache$149)
         if (newProps) cutOffTailIfNeeded(type, !1);
         else {
           if (
@@ -10998,11 +10878,11 @@ function completeWork(current, workInProgress, renderLanes) {
             (null !== current && 0 !== (current.flags & 128))
           )
             for (current = workInProgress.child; null !== current; ) {
-              cache$152 = findFirstSuspended(current);
-              if (null !== cache$152) {
+              cache$149 = findFirstSuspended(current);
+              if (null !== cache$149) {
                 workInProgress.flags |= 128;
                 cutOffTailIfNeeded(type, !1);
-                current = cache$152.updateQueue;
+                current = cache$149.updateQueue;
                 workInProgress.updateQueue = current;
                 scheduleRetryEffect(workInProgress, current);
                 workInProgress.subtreeFlags = 0;
@@ -11027,7 +10907,7 @@ function completeWork(current, workInProgress, renderLanes) {
         }
       else {
         if (!newProps)
-          if (((current = findFirstSuspended(cache$152)), null !== current)) {
+          if (((current = findFirstSuspended(cache$149)), null !== current)) {
             if (
               ((workInProgress.flags |= 128),
               (newProps = !0),
@@ -11037,7 +10917,7 @@ function completeWork(current, workInProgress, renderLanes) {
               cutOffTailIfNeeded(type, !0),
               null === type.tail &&
                 "hidden" === type.tailMode &&
-                !cache$152.alternate &&
+                !cache$149.alternate &&
                 !isHydrating)
             )
               return bubbleProperties(workInProgress), null;
@@ -11050,13 +10930,13 @@ function completeWork(current, workInProgress, renderLanes) {
               cutOffTailIfNeeded(type, !1),
               (workInProgress.lanes = 4194304));
         type.isBackwards
-          ? ((cache$152.sibling = workInProgress.child),
-            (workInProgress.child = cache$152))
+          ? ((cache$149.sibling = workInProgress.child),
+            (workInProgress.child = cache$149))
           : ((current = type.last),
             null !== current
-              ? (current.sibling = cache$152)
-              : (workInProgress.child = cache$152),
-            (type.last = cache$152));
+              ? (current.sibling = cache$149)
+              : (workInProgress.child = cache$149),
+            (type.last = cache$149));
       }
       if (null !== type.tail)
         return (
@@ -11079,7 +10959,8 @@ function completeWork(current, workInProgress, renderLanes) {
         (newProps = null !== workInProgress.memoizedState),
         null !== current
           ? (null !== current.memoizedState) !== newProps &&
-            (workInProgress.flags |= 8192)
+            ((workInProgress.flags |= 8192),
+            newProps || trackReappearingViewTransitions(workInProgress))
           : newProps && (workInProgress.flags |= 8192),
         newProps
           ? 0 !== (renderLanes & 536870912) &&
@@ -11247,6 +11128,7 @@ var DefaultAsyncDispatcher = {
   workInProgressSuspendedRetryLanes = 0,
   workInProgressRootConcurrentErrors = null,
   workInProgressRootRecoverableErrors = null,
+  workInProgressAppearingViewTransitions = null,
   workInProgressRootDidIncludeRecursiveRenderUpdate = !1,
   globalMostRecentFallbackTime = 0,
   workInProgressRootRenderTargetTime = Infinity,
@@ -11260,7 +11142,6 @@ var DefaultAsyncDispatcher = {
   pendingPassiveTransitions = null,
   pendingRecoverableErrors = null,
   pendingViewTransitionEvents = null,
-  pendingTransitionTypes = null,
   nestedUpdateCount = 0,
   rootWithNestedUpdates = null;
 function requestUpdateLane() {
@@ -11327,7 +11208,7 @@ function performWorkOnRoot(root$jscomp$0, lanes, forceSync) {
   if (0 !== (executionContext & 6)) throw Error(formatProdErrorMessage(327));
   var shouldTimeSlice =
       (!forceSync &&
-        0 === (lanes & 124) &&
+        0 === (lanes & 60) &&
         0 === (lanes & root$jscomp$0.expiredLanes)) ||
       checkIfRootIsPrerendering(root$jscomp$0, lanes),
     exitStatus = shouldTimeSlice
@@ -11415,7 +11296,7 @@ function performWorkOnRoot(root$jscomp$0, lanes, forceSync) {
           case 1:
             throw Error(formatProdErrorMessage(345));
           case 4:
-            if ((lanes & 4194048) !== lanes) break;
+            if ((lanes & 4194176) !== lanes) break;
           case 6:
             markRootSuspended(
               shouldTimeSlice,
@@ -11452,6 +11333,7 @@ function performWorkOnRoot(root$jscomp$0, lanes, forceSync) {
               forceSync,
               workInProgressRootRecoverableErrors,
               workInProgressTransitions,
+              workInProgressAppearingViewTransitions,
               workInProgressRootDidIncludeRecursiveRenderUpdate,
               lanes,
               workInProgressDeferredLane,
@@ -11472,6 +11354,7 @@ function performWorkOnRoot(root$jscomp$0, lanes, forceSync) {
           forceSync,
           workInProgressRootRecoverableErrors,
           workInProgressTransitions,
+          workInProgressAppearingViewTransitions,
           workInProgressRootDidIncludeRecursiveRenderUpdate,
           lanes,
           workInProgressDeferredLane,
@@ -11494,6 +11377,7 @@ function commitRootWhenReady(
   finishedWork,
   recoverableErrors,
   transitions,
+  appearingViewTransitions,
   didIncludeRenderPhaseUpdate,
   lanes,
   spawnedLane,
@@ -11506,29 +11390,23 @@ function commitRootWhenReady(
   completedRenderEndTime
 ) {
   root.timeoutHandle = -1;
-  suspendedCommitReason = finishedWork.subtreeFlags;
-  var isViewTransitionEligible = (lanes & 335544064) === lanes;
-  if (
-    isViewTransitionEligible ||
-    suspendedCommitReason & 8192 ||
-    16785408 === (suspendedCommitReason & 16785408)
-  ) {
+  var subtreeFlags = finishedWork.subtreeFlags;
+  suspendedCommitReason = (lanes & 335544192) === lanes;
+  subtreeFlags = subtreeFlags & 8192 || 16785408 === (subtreeFlags & 16785408);
+  if (suspendedCommitReason || subtreeFlags) {
     suspendedState = { stylesheets: null, count: 0, unsuspend: noop };
-    appearingViewTransitions = null;
-    accumulateSuspenseyCommitOnFiber(finishedWork);
-    if (isViewTransitionEligible) {
-      isViewTransitionEligible = root.containerInfo;
+    subtreeFlags && accumulateSuspenseyCommitOnFiber(finishedWork);
+    if (suspendedCommitReason) {
+      subtreeFlags = root.containerInfo;
       if (null === suspendedState) throw Error(formatProdErrorMessage(475));
       suspendedCommitReason = suspendedState;
-      isViewTransitionEligible = (
-        9 === isViewTransitionEligible.nodeType
-          ? isViewTransitionEligible
-          : isViewTransitionEligible.ownerDocument
+      subtreeFlags = (
+        9 === subtreeFlags.nodeType ? subtreeFlags : subtreeFlags.ownerDocument
       ).__reactViewTransition;
-      null != isViewTransitionEligible &&
+      null != subtreeFlags &&
         (suspendedCommitReason.count++,
         (suspendedCommitReason = onUnsuspend.bind(suspendedCommitReason)),
-        isViewTransitionEligible.finished.then(
+        subtreeFlags.finished.then(
           suspendedCommitReason,
           suspendedCommitReason
         ));
@@ -11543,6 +11421,7 @@ function commitRootWhenReady(
           lanes,
           recoverableErrors,
           transitions,
+          appearingViewTransitions,
           didIncludeRenderPhaseUpdate,
           spawnedLane,
           updatedLanes,
@@ -11563,6 +11442,7 @@ function commitRootWhenReady(
     lanes,
     recoverableErrors,
     transitions,
+    appearingViewTransitions,
     didIncludeRenderPhaseUpdate,
     spawnedLane,
     updatedLanes,
@@ -11672,6 +11552,7 @@ function prepareFreshStack(root, lanes) {
   workInProgressRootRecoverableErrors = workInProgressRootConcurrentErrors =
     null;
   workInProgressRootDidIncludeRecursiveRenderUpdate = !1;
+  workInProgressAppearingViewTransitions = null;
   0 !== (lanes & 8) && (lanes |= lanes & 32);
   var allEntangledLanes = root.entangledLanes;
   if (0 !== allEntangledLanes)
@@ -11727,7 +11608,7 @@ function pushAsyncDispatcher() {
 function renderDidSuspendDelayIfPossible() {
   workInProgressRootExitStatus = 4;
   workInProgressRootDidSkipSuspendedSiblings ||
-    ((workInProgressRootRenderLanes & 4194048) !==
+    ((workInProgressRootRenderLanes & 4194176) !==
       workInProgressRootRenderLanes &&
       null !== suspenseHandlerStackCursor.current) ||
     (workInProgressRootIsPrerendering = !0);
@@ -11746,6 +11627,18 @@ function queueConcurrentError(error) {
     ? (workInProgressRootConcurrentErrors = [error])
     : workInProgressRootConcurrentErrors.push(error);
 }
+function trackAppearingViewTransition(instance, name) {
+  if (null === workInProgressAppearingViewTransitions) {
+    if (
+      (workInProgressRootRenderLanes & 335544192) !==
+      workInProgressRootRenderLanes
+    )
+      return;
+    workInProgressAppearingViewTransitions = new Map();
+  }
+  instance.paired = null;
+  workInProgressAppearingViewTransitions.set(name, instance);
+}
 function renderRootSync(root, lanes, shouldYieldForPrerendering) {
   var prevExecutionContext = executionContext;
   executionContext |= 2;
@@ -11792,8 +11685,8 @@ function renderRootSync(root, lanes, shouldYieldForPrerendering) {
       workLoopSync();
       exitStatus = workInProgressRootExitStatus;
       break;
-    } catch (thrownValue$171) {
-      handleThrow(root, thrownValue$171);
+    } catch (thrownValue$168) {
+      handleThrow(root, thrownValue$168);
     }
   while (1);
   lanes && root.shellSuspendCounter++;
@@ -11908,8 +11801,8 @@ function renderRootConcurrent(root, lanes) {
       }
       workLoopConcurrentByScheduler();
       break;
-    } catch (thrownValue$173) {
-      handleThrow(root, thrownValue$173);
+    } catch (thrownValue$170) {
+      handleThrow(root, thrownValue$170);
     }
   while (1);
   lastContextDependency = currentlyRenderingFiber$1 = null;
@@ -12085,6 +11978,7 @@ function commitRoot(
   lanes,
   recoverableErrors,
   transitions,
+  appearingViewTransitions,
   didIncludeRenderPhaseUpdate,
   spawnedLane,
   updatedLanes,
@@ -12098,7 +11992,6 @@ function commitRoot(
     if (finishedWork === root.current) throw Error(formatProdErrorMessage(177));
     didIncludeRenderPhaseUpdate = finishedWork.lanes | finishedWork.childLanes;
     didIncludeRenderPhaseUpdate |= concurrentlyUpdatedLanes;
-    null === root.gestures && (didIncludeRenderPhaseUpdate &= -65);
     markRootFinished(
       root,
       lanes,
@@ -12110,58 +12003,55 @@ function commitRoot(
     root === workInProgressRoot &&
       ((workInProgress = workInProgressRoot = null),
       (workInProgressRootRenderLanes = 0));
-    if (64 === lanes) commitGestureOnRoot(root);
-    else {
-      pendingFinishedWork = finishedWork;
-      pendingEffectsRoot = root;
-      pendingEffectsLanes = lanes;
-      pendingEffectsRemainingLanes = didIncludeRenderPhaseUpdate;
-      pendingPassiveTransitions = transitions;
-      pendingRecoverableErrors = recoverableErrors;
-      pendingViewTransitionEvents = null;
-      (lanes & 335544064) === lanes
-        ? ((pendingTransitionTypes = ReactSharedInternals.V),
-          (ReactSharedInternals.V = null),
-          (recoverableErrors = 10262))
-        : ((pendingTransitionTypes = null), (recoverableErrors = 10256));
-      0 !== (finishedWork.subtreeFlags & recoverableErrors) ||
-      0 !== (finishedWork.flags & recoverableErrors)
-        ? ((root.callbackNode = null),
-          (root.callbackPriority = 0),
-          scheduleCallback$1(NormalPriority$1, function () {
-            flushPassiveEffects(!0);
-            return null;
-          }))
-        : ((root.callbackNode = null), (root.callbackPriority = 0));
-      recoverableErrors = 0 !== (finishedWork.flags & 13878);
-      if (0 !== (finishedWork.subtreeFlags & 13878) || recoverableErrors) {
-        recoverableErrors = ReactSharedInternals.T;
-        ReactSharedInternals.T = null;
-        transitions = ReactDOMSharedInternals.p;
-        ReactDOMSharedInternals.p = 2;
-        spawnedLane = executionContext;
-        executionContext |= 4;
-        try {
-          commitBeforeMutationEffects(root, finishedWork, lanes);
-        } finally {
-          (executionContext = spawnedLane),
-            (ReactDOMSharedInternals.p = transitions),
-            (ReactSharedInternals.T = recoverableErrors);
-        }
+    pendingFinishedWork = finishedWork;
+    pendingEffectsRoot = root;
+    pendingEffectsLanes = lanes;
+    pendingEffectsRemainingLanes = didIncludeRenderPhaseUpdate;
+    pendingPassiveTransitions = transitions;
+    pendingRecoverableErrors = recoverableErrors;
+    pendingViewTransitionEvents = null;
+    recoverableErrors = (lanes & 335544192) === lanes ? 10262 : 10256;
+    0 !== (finishedWork.subtreeFlags & recoverableErrors) ||
+    0 !== (finishedWork.flags & recoverableErrors)
+      ? ((root.callbackNode = null),
+        (root.callbackPriority = 0),
+        scheduleCallback$1(NormalPriority$1, function () {
+          flushPassiveEffects(!0);
+          return null;
+        }))
+      : ((root.callbackNode = null), (root.callbackPriority = 0));
+    recoverableErrors = 0 !== (finishedWork.flags & 13878);
+    if (0 !== (finishedWork.subtreeFlags & 13878) || recoverableErrors) {
+      recoverableErrors = ReactSharedInternals.T;
+      ReactSharedInternals.T = null;
+      transitions = ReactDOMSharedInternals.p;
+      ReactDOMSharedInternals.p = 2;
+      spawnedLane = executionContext;
+      executionContext |= 4;
+      try {
+        commitBeforeMutationEffects(
+          root,
+          finishedWork,
+          lanes,
+          appearingViewTransitions
+        );
+      } finally {
+        (executionContext = spawnedLane),
+          (ReactDOMSharedInternals.p = transitions),
+          (ReactSharedInternals.T = recoverableErrors);
       }
-      pendingEffectsStatus = 1;
-      (shouldStartViewTransition &&
-        startViewTransition(
-          root.containerInfo,
-          pendingTransitionTypes,
-          flushMutationEffects,
-          flushLayoutEffects,
-          flushAfterMutationEffects,
-          flushSpawnedWork,
-          flushPassiveEffects
-        )) ||
-        (flushMutationEffects(), flushLayoutEffects(), flushSpawnedWork());
     }
+    pendingEffectsStatus = 1;
+    (shouldStartViewTransition &&
+      startViewTransition(
+        root.containerInfo,
+        flushMutationEffects,
+        flushLayoutEffects,
+        flushAfterMutationEffects,
+        flushSpawnedWork,
+        flushPassiveEffects
+      )) ||
+      (flushMutationEffects(), flushLayoutEffects(), flushSpawnedWork());
   }
 }
 function flushAfterMutationEffects() {
@@ -12325,7 +12215,7 @@ function flushSpawnedWork() {
       finishedWork = pendingFinishedWork,
       lanes = pendingEffectsLanes,
       recoverableErrors = pendingRecoverableErrors,
-      passiveSubtreeMask = (lanes & 335544064) === lanes ? 10262 : 10256;
+      passiveSubtreeMask = (lanes & 335544192) === lanes ? 10262 : 10256;
     0 !== (finishedWork.subtreeFlags & passiveSubtreeMask) ||
     0 !== (finishedWork.flags & passiveSubtreeMask)
       ? (pendingEffectsStatus = 5)
@@ -12367,21 +12257,17 @@ function flushSpawnedWork() {
       }
     }
     recoverableErrors = pendingViewTransitionEvents;
-    onRecoverableError = pendingTransitionTypes;
-    pendingTransitionTypes = null;
     if (null !== recoverableErrors)
       for (
-        pendingViewTransitionEvents = null,
-          null === onRecoverableError && (onRecoverableError = []),
-          recoverableError = 0;
-        recoverableError < recoverableErrors.length;
-        recoverableError++
+        pendingViewTransitionEvents = null, onRecoverableError = 0;
+        onRecoverableError < recoverableErrors.length;
+        onRecoverableError++
       )
-        (0, recoverableErrors[recoverableError])(onRecoverableError);
+        (0, recoverableErrors[onRecoverableError])();
     0 !== (pendingEffectsLanes & 3) && flushPendingEffects();
     ensureRootIsScheduled(root);
     passiveSubtreeMask = root.pendingLanes;
-    0 !== (lanes & 4194090) && 0 !== (passiveSubtreeMask & 42)
+    0 !== (lanes & 4194218) && 0 !== (passiveSubtreeMask & 42)
       ? root === rootWithNestedUpdates
         ? nestedUpdateCount++
         : ((nestedUpdateCount = 0), (rootWithNestedUpdates = root))
@@ -12389,11 +12275,6 @@ function flushSpawnedWork() {
     flushSyncWorkAcrossRoots_impl(0, !1);
   }
 }
-function commitGestureOnRoot(root) {
-  var finishedGesture = root.gestures;
-  if (null === finishedGesture) throw Error(formatProdErrorMessage(548));
-  deleteScheduledGesture(root, finishedGesture);
-}
 function releaseRootPooledCache(root, remainingLanes) {
   0 === (root.pooledCacheLanes &= remainingLanes) &&
     ((remainingLanes = root.pooledCache),
@@ -12587,42 +12468,41 @@ function flushSyncWorkAcrossRoots_impl(syncTransitionLanes, onlyLegacy) {
     isFlushingWork = !0;
     do {
       var didPerformSomeWork = !1;
-      for (var root$179 = firstScheduledRoot; null !== root$179; ) {
+      for (var root$176 = firstScheduledRoot; null !== root$176; ) {
         if (!onlyLegacy)
           if (0 !== syncTransitionLanes) {
-            var pendingLanes = root$179.pendingLanes;
+            var pendingLanes = root$176.pendingLanes;
             if (0 === pendingLanes) var JSCompiler_inline_result = 0;
             else {
-              var suspendedLanes = root$179.suspendedLanes,
-                pingedLanes = root$179.pingedLanes;
+              var suspendedLanes = root$176.suspendedLanes,
+                pingedLanes = root$176.pingedLanes;
               JSCompiler_inline_result =
                 (1 << (31 - clz32(42 | syncTransitionLanes) + 1)) - 1;
               JSCompiler_inline_result &=
                 pendingLanes & ~(suspendedLanes & ~pingedLanes);
               JSCompiler_inline_result =
-                JSCompiler_inline_result & 201326741
-                  ? (JSCompiler_inline_result & 201326741) | 1
+                JSCompiler_inline_result & 201326677
+                  ? (JSCompiler_inline_result & 201326677) | 1
                   : JSCompiler_inline_result
                     ? JSCompiler_inline_result | 2
                     : 0;
             }
             0 !== JSCompiler_inline_result &&
               ((didPerformSomeWork = !0),
-              performSyncWorkOnRoot(root$179, JSCompiler_inline_result));
+              performSyncWorkOnRoot(root$176, JSCompiler_inline_result));
           } else
             (JSCompiler_inline_result = workInProgressRootRenderLanes),
               (JSCompiler_inline_result = getNextLanes(
-                root$179,
-                root$179 === workInProgressRoot ? JSCompiler_inline_result : 0,
-                null !== root$179.cancelPendingCommit ||
-                  -1 !== root$179.timeoutHandle
+                root$176,
+                root$176 === workInProgressRoot ? JSCompiler_inline_result : 0,
+                null !== root$176.cancelPendingCommit ||
+                  -1 !== root$176.timeoutHandle
               )),
-              (0 === (JSCompiler_inline_result & 3) &&
-                64 !== JSCompiler_inline_result) ||
-                checkIfRootIsPrerendering(root$179, JSCompiler_inline_result) ||
+              0 === (JSCompiler_inline_result & 3) ||
+                checkIfRootIsPrerendering(root$176, JSCompiler_inline_result) ||
                 ((didPerformSomeWork = !0),
-                performSyncWorkOnRoot(root$179, JSCompiler_inline_result));
-        root$179 = root$179.next;
+                performSyncWorkOnRoot(root$176, JSCompiler_inline_result));
+        root$176 = root$176.next;
       }
     } while (didPerformSomeWork);
     isFlushingWork = !1;
@@ -12650,8 +12530,7 @@ function processRootScheduleInMicrotask() {
         null === prev ? (firstScheduledRoot = next) : (prev.next = next),
         null === next && (lastScheduledRoot = prev);
     else if (
-      ((prev = root),
-      0 !== syncTransitionLanes || 0 !== (nextLanes & 3) || 64 === nextLanes)
+      ((prev = root), 0 !== syncTransitionLanes || 0 !== (nextLanes & 3))
     )
       mightHavePendingSyncWork = !0;
     root = next;
@@ -12863,20 +12742,20 @@ function extractEvents$1(
   }
 }
 for (
-  var i$jscomp$inline_1576 = 0;
-  i$jscomp$inline_1576 < simpleEventPluginEvents.length;
-  i$jscomp$inline_1576++
+  var i$jscomp$inline_1552 = 0;
+  i$jscomp$inline_1552 < simpleEventPluginEvents.length;
+  i$jscomp$inline_1552++
 ) {
-  var eventName$jscomp$inline_1577 =
-      simpleEventPluginEvents[i$jscomp$inline_1576],
-    domEventName$jscomp$inline_1578 =
-      eventName$jscomp$inline_1577.toLowerCase(),
-    capitalizedEvent$jscomp$inline_1579 =
-      eventName$jscomp$inline_1577[0].toUpperCase() +
-      eventName$jscomp$inline_1577.slice(1);
+  var eventName$jscomp$inline_1553 =
+      simpleEventPluginEvents[i$jscomp$inline_1552],
+    domEventName$jscomp$inline_1554 =
+      eventName$jscomp$inline_1553.toLowerCase(),
+    capitalizedEvent$jscomp$inline_1555 =
+      eventName$jscomp$inline_1553[0].toUpperCase() +
+      eventName$jscomp$inline_1553.slice(1);
   registerSimpleEvent(
-    domEventName$jscomp$inline_1578,
-    "on" + capitalizedEvent$jscomp$inline_1579
+    domEventName$jscomp$inline_1554,
+    "on" + capitalizedEvent$jscomp$inline_1555
   );
 }
 registerSimpleEvent(ANIMATION_END, "onAnimationEnd");
@@ -13084,15 +12963,22 @@ function dispatchEventForPluginEventSystem(
       var nodeTag = targetInst$jscomp$0.tag;
       if (3 === nodeTag || 4 === nodeTag) {
         var container = targetInst$jscomp$0.stateNode.containerInfo;
-        if (container === targetContainer) break;
+        if (
+          container === targetContainer ||
+          (8 === container.nodeType && container.parentNode === targetContainer)
+        )
+          break;
         if (4 === nodeTag)
           for (nodeTag = targetInst$jscomp$0.return; null !== nodeTag; ) {
             var grandTag = nodeTag.tag;
-            if (
-              (3 === grandTag || 4 === grandTag) &&
-              nodeTag.stateNode.containerInfo === targetContainer
-            )
-              return;
+            if (3 === grandTag || 4 === grandTag)
+              if (
+                ((grandTag = nodeTag.stateNode.containerInfo),
+                grandTag === targetContainer ||
+                  (8 === grandTag.nodeType &&
+                    grandTag.parentNode === targetContainer))
+              )
+                return;
             nodeTag = nodeTag.return;
           }
         for (; null !== container; ) {
@@ -14057,34 +13943,34 @@ function setInitialProperties(domElement, tag, props) {
         defaultChecked = null;
       for (hasSrc in props)
         if (props.hasOwnProperty(hasSrc)) {
-          var propValue$193 = props[hasSrc];
-          if (null != propValue$193)
+          var propValue$190 = props[hasSrc];
+          if (null != propValue$190)
             switch (hasSrc) {
               case "name":
-                hasSrcSet = propValue$193;
+                hasSrcSet = propValue$190;
                 break;
               case "type":
-                propValue = propValue$193;
+                propValue = propValue$190;
                 break;
               case "checked":
-                checked = propValue$193;
+                checked = propValue$190;
                 break;
               case "defaultChecked":
-                defaultChecked = propValue$193;
+                defaultChecked = propValue$190;
                 break;
               case "value":
-                propKey = propValue$193;
+                propKey = propValue$190;
                 break;
               case "defaultValue":
-                defaultValue = propValue$193;
+                defaultValue = propValue$190;
                 break;
               case "children":
               case "dangerouslySetInnerHTML":
-                if (null != propValue$193)
+                if (null != propValue$190)
                   throw Error(formatProdErrorMessage(137, tag));
                 break;
               default:
-                setProp(domElement, tag, hasSrc, propValue$193, props, null);
+                setProp(domElement, tag, hasSrc, propValue$190, props, null);
             }
         }
       initInput(
@@ -14221,14 +14107,14 @@ function setInitialProperties(domElement, tag, props) {
       return;
     default:
       if (isCustomElement(tag)) {
-        for (propValue$193 in props)
-          props.hasOwnProperty(propValue$193) &&
-            ((hasSrc = props[propValue$193]),
+        for (propValue$190 in props)
+          props.hasOwnProperty(propValue$190) &&
+            ((hasSrc = props[propValue$190]),
             void 0 !== hasSrc &&
               setPropOnCustomElement(
                 domElement,
                 tag,
-                propValue$193,
+                propValue$190,
                 hasSrc,
                 props,
                 void 0
@@ -14276,14 +14162,14 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
                 setProp(domElement, tag, propKey, null, nextProps, lastProp);
           }
       }
-      for (var propKey$210 in nextProps) {
-        var propKey = nextProps[propKey$210];
-        lastProp = lastProps[propKey$210];
+      for (var propKey$207 in nextProps) {
+        var propKey = nextProps[propKey$207];
+        lastProp = lastProps[propKey$207];
         if (
-          nextProps.hasOwnProperty(propKey$210) &&
+          nextProps.hasOwnProperty(propKey$207) &&
           (null != propKey || null != lastProp)
         )
-          switch (propKey$210) {
+          switch (propKey$207) {
             case "type":
               propKey !== lastProp && (viewTransitionMutationContext = !0);
               type = propKey;
@@ -14318,7 +14204,7 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
                 setProp(
                   domElement,
                   tag,
-                  propKey$210,
+                  propKey$207,
                   propKey,
                   nextProps,
                   lastProp
@@ -14337,7 +14223,7 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
       );
       return;
     case "select":
-      propKey = value = defaultValue = propKey$210 = null;
+      propKey = value = defaultValue = propKey$207 = null;
       for (type in lastProps)
         if (
           ((lastDefaultValue = lastProps[type]),
@@ -14369,7 +14255,7 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
           switch (name) {
             case "value":
               type !== lastDefaultValue && (viewTransitionMutationContext = !0);
-              propKey$210 = type;
+              propKey$207 = type;
               break;
             case "defaultValue":
               type !== lastDefaultValue && (viewTransitionMutationContext = !0);
@@ -14392,15 +14278,15 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
       tag = defaultValue;
       lastProps = value;
       nextProps = propKey;
-      null != propKey$210
-        ? updateOptions(domElement, !!lastProps, propKey$210, !1)
+      null != propKey$207
+        ? updateOptions(domElement, !!lastProps, propKey$207, !1)
         : !!nextProps !== !!lastProps &&
           (null != tag
             ? updateOptions(domElement, !!lastProps, tag, !0)
             : updateOptions(domElement, !!lastProps, lastProps ? [] : "", !1));
       return;
     case "textarea":
-      propKey = propKey$210 = null;
+      propKey = propKey$207 = null;
       for (defaultValue in lastProps)
         if (
           ((name = lastProps[defaultValue]),
@@ -14425,7 +14311,7 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
           switch (value) {
             case "value":
               name !== type && (viewTransitionMutationContext = !0);
-              propKey$210 = name;
+              propKey$207 = name;
               break;
             case "defaultValue":
               name !== type && (viewTransitionMutationContext = !0);
@@ -14440,17 +14326,17 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
               name !== type &&
                 setProp(domElement, tag, value, name, nextProps, type);
           }
-      updateTextarea(domElement, propKey$210, propKey);
+      updateTextarea(domElement, propKey$207, propKey);
       return;
     case "option":
-      for (var propKey$226 in lastProps)
+      for (var propKey$223 in lastProps)
         if (
-          ((propKey$210 = lastProps[propKey$226]),
-          lastProps.hasOwnProperty(propKey$226) &&
-            null != propKey$210 &&
-            !nextProps.hasOwnProperty(propKey$226))
+          ((propKey$207 = lastProps[propKey$223]),
+          lastProps.hasOwnProperty(propKey$223) &&
+            null != propKey$207 &&
+            !nextProps.hasOwnProperty(propKey$223))
         )
-          switch (propKey$226) {
+          switch (propKey$223) {
             case "selected":
               domElement.selected = !1;
               break;
@@ -14458,34 +14344,34 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
               setProp(
                 domElement,
                 tag,
-                propKey$226,
+                propKey$223,
                 null,
                 nextProps,
-                propKey$210
+                propKey$207
               );
           }
       for (lastDefaultValue in nextProps)
         if (
-          ((propKey$210 = nextProps[lastDefaultValue]),
+          ((propKey$207 = nextProps[lastDefaultValue]),
           (propKey = lastProps[lastDefaultValue]),
           nextProps.hasOwnProperty(lastDefaultValue) &&
-            propKey$210 !== propKey &&
-            (null != propKey$210 || null != propKey))
+            propKey$207 !== propKey &&
+            (null != propKey$207 || null != propKey))
         )
           switch (lastDefaultValue) {
             case "selected":
-              propKey$210 !== propKey && (viewTransitionMutationContext = !0);
+              propKey$207 !== propKey && (viewTransitionMutationContext = !0);
               domElement.selected =
-                propKey$210 &&
-                "function" !== typeof propKey$210 &&
-                "symbol" !== typeof propKey$210;
+                propKey$207 &&
+                "function" !== typeof propKey$207 &&
+                "symbol" !== typeof propKey$207;
               break;
             default:
               setProp(
                 domElement,
                 tag,
                 lastDefaultValue,
-                propKey$210,
+                propKey$207,
                 nextProps,
                 propKey
               );
@@ -14506,24 +14392,24 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
     case "track":
     case "wbr":
     case "menuitem":
-      for (var propKey$231 in lastProps)
-        (propKey$210 = lastProps[propKey$231]),
-          lastProps.hasOwnProperty(propKey$231) &&
-            null != propKey$210 &&
-            !nextProps.hasOwnProperty(propKey$231) &&
-            setProp(domElement, tag, propKey$231, null, nextProps, propKey$210);
+      for (var propKey$228 in lastProps)
+        (propKey$207 = lastProps[propKey$228]),
+          lastProps.hasOwnProperty(propKey$228) &&
+            null != propKey$207 &&
+            !nextProps.hasOwnProperty(propKey$228) &&
+            setProp(domElement, tag, propKey$228, null, nextProps, propKey$207);
       for (checked in nextProps)
         if (
-          ((propKey$210 = nextProps[checked]),
+          ((propKey$207 = nextProps[checked]),
           (propKey = lastProps[checked]),
           nextProps.hasOwnProperty(checked) &&
-            propKey$210 !== propKey &&
-            (null != propKey$210 || null != propKey))
+            propKey$207 !== propKey &&
+            (null != propKey$207 || null != propKey))
         )
           switch (checked) {
             case "children":
             case "dangerouslySetInnerHTML":
-              if (null != propKey$210)
+              if (null != propKey$207)
                 throw Error(formatProdErrorMessage(137, tag));
               break;
             default:
@@ -14531,7 +14417,7 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
                 domElement,
                 tag,
                 checked,
-                propKey$210,
+                propKey$207,
                 nextProps,
                 propKey
               );
@@ -14539,49 +14425,49 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
       return;
     default:
       if (isCustomElement(tag)) {
-        for (var propKey$236 in lastProps)
-          (propKey$210 = lastProps[propKey$236]),
-            lastProps.hasOwnProperty(propKey$236) &&
-              void 0 !== propKey$210 &&
-              !nextProps.hasOwnProperty(propKey$236) &&
+        for (var propKey$233 in lastProps)
+          (propKey$207 = lastProps[propKey$233]),
+            lastProps.hasOwnProperty(propKey$233) &&
+              void 0 !== propKey$207 &&
+              !nextProps.hasOwnProperty(propKey$233) &&
               setPropOnCustomElement(
                 domElement,
                 tag,
-                propKey$236,
+                propKey$233,
                 void 0,
                 nextProps,
-                propKey$210
+                propKey$207
               );
         for (defaultChecked in nextProps)
-          (propKey$210 = nextProps[defaultChecked]),
+          (propKey$207 = nextProps[defaultChecked]),
             (propKey = lastProps[defaultChecked]),
             !nextProps.hasOwnProperty(defaultChecked) ||
-              propKey$210 === propKey ||
-              (void 0 === propKey$210 && void 0 === propKey) ||
+              propKey$207 === propKey ||
+              (void 0 === propKey$207 && void 0 === propKey) ||
               setPropOnCustomElement(
                 domElement,
                 tag,
                 defaultChecked,
-                propKey$210,
+                propKey$207,
                 nextProps,
                 propKey
               );
         return;
       }
   }
-  for (var propKey$241 in lastProps)
-    (propKey$210 = lastProps[propKey$241]),
-      lastProps.hasOwnProperty(propKey$241) &&
-        null != propKey$210 &&
-        !nextProps.hasOwnProperty(propKey$241) &&
-        setProp(domElement, tag, propKey$241, null, nextProps, propKey$210);
+  for (var propKey$238 in lastProps)
+    (propKey$207 = lastProps[propKey$238]),
+      lastProps.hasOwnProperty(propKey$238) &&
+        null != propKey$207 &&
+        !nextProps.hasOwnProperty(propKey$238) &&
+        setProp(domElement, tag, propKey$238, null, nextProps, propKey$207);
   for (lastProp in nextProps)
-    (propKey$210 = nextProps[lastProp]),
+    (propKey$207 = nextProps[lastProp]),
       (propKey = lastProps[lastProp]),
       !nextProps.hasOwnProperty(lastProp) ||
-        propKey$210 === propKey ||
-        (null == propKey$210 && null == propKey) ||
-        setProp(domElement, tag, lastProp, propKey$210, nextProps, propKey);
+        propKey$207 === propKey ||
+        (null == propKey$207 && null == propKey) ||
+        setProp(domElement, tag, lastProp, propKey$207, nextProps, propKey);
 }
 var eventsEnabled = null,
   selectionInformation = null;
@@ -14656,56 +14542,21 @@ function handleErrorInNextTick(error) {
     throw error;
   });
 }
-function isSingletonScope(type) {
-  return "head" === type;
-}
 function clearSuspenseBoundary(parentInstance, suspenseInstance) {
   var node = suspenseInstance,
-    possiblePreambleContribution = 0,
     depth = 0;
   do {
     var nextNode = node.nextSibling;
     parentInstance.removeChild(node);
     if (nextNode && 8 === nextNode.nodeType)
       if (((node = nextNode.data), "/$" === node)) {
-        if (
-          0 < possiblePreambleContribution &&
-          8 > possiblePreambleContribution
-        ) {
-          node = possiblePreambleContribution;
-          var ownerDocument = parentInstance.ownerDocument;
-          node & 1 && releaseSingletonInstance(ownerDocument.documentElement);
-          node & 2 && releaseSingletonInstance(ownerDocument.body);
-          if (node & 4)
-            for (
-              node = ownerDocument.head,
-                releaseSingletonInstance(node),
-                ownerDocument = node.firstChild;
-              ownerDocument;
-
-            ) {
-              var nextNode$jscomp$0 = ownerDocument.nextSibling,
-                nodeName = ownerDocument.nodeName;
-              ownerDocument[internalHoistableMarker] ||
-                "SCRIPT" === nodeName ||
-                "STYLE" === nodeName ||
-                ("LINK" === nodeName &&
-                  "stylesheet" === ownerDocument.rel.toLowerCase()) ||
-                node.removeChild(ownerDocument);
-              ownerDocument = nextNode$jscomp$0;
-            }
-        }
         if (0 === depth) {
           parentInstance.removeChild(nextNode);
           retryIfBlockedOn(suspenseInstance);
           return;
         }
         depth--;
-      } else
-        "$" === node || "$?" === node || "$!" === node
-          ? depth++
-          : (possiblePreambleContribution = node.charCodeAt(0) - 48);
-    else possiblePreambleContribution = 0;
+      } else ("$" !== node && "$?" !== node && "$!" !== node) || depth++;
     node = nextNode;
   } while (node);
   retryIfBlockedOn(suspenseInstance);
@@ -14758,7 +14609,6 @@ function measureInstance(instance) {
 }
 function startViewTransition(
   rootContainer,
-  transitionTypes,
   mutationCallback,
   layoutCallback,
   afterMutationCallback,
@@ -14803,7 +14653,7 @@ function startViewTransition(
           );
         afterMutationCallback();
       },
-      types: transitionTypes
+      types: null
     });
     ownerDocument.__reactViewTransition = transition;
     transition.ready.then(spawnedWorkCallback, spawnedWorkCallback);
@@ -14993,7 +14843,6 @@ function getNextHydratable(node) {
   }
   return node;
 }
-var previousHydratableOnEnteringScopedSingleton = null;
 function getParentSuspenseInstance(targetInstance) {
   targetInstance = targetInstance.previousSibling;
   for (var depth = 0; targetInstance; ) {
@@ -15027,19 +14876,12 @@ function resolveSingletonInstance(type, props, rootContainerInstance) {
       throw Error(formatProdErrorMessage(451));
   }
 }
-function releaseSingletonInstance(instance) {
-  for (var attributes = instance.attributes; attributes.length; )
-    instance.removeAttributeNode(attributes[0]);
-  detachDeletedInstance(instance);
-}
 var preloadPropsMap = new Map(),
   preconnectsSet = new Set();
 function getHoistableRoot(container) {
   return "function" === typeof container.getRootNode
     ? container.getRootNode()
-    : 9 === container.nodeType
-      ? container
-      : container.ownerDocument;
+    : container.ownerDocument;
 }
 var previousDispatcher = ReactDOMSharedInternals.d;
 ReactDOMSharedInternals.d = {
@@ -15333,26 +15175,26 @@ function getResource(type, currentProps, pendingProps, currentResource) {
         "string" === typeof pendingProps.precedence
       ) {
         type = getStyleKey(pendingProps.href);
-        var styles$249 = getResourcesFromRoot(
+        var styles$246 = getResourcesFromRoot(
             JSCompiler_inline_result
           ).hoistableStyles,
-          resource$250 = styles$249.get(type);
-        resource$250 ||
+          resource$247 = styles$246.get(type);
+        resource$247 ||
           ((JSCompiler_inline_result =
             JSCompiler_inline_result.ownerDocument || JSCompiler_inline_result),
-          (resource$250 = {
+          (resource$247 = {
             type: "stylesheet",
             instance: null,
             count: 0,
             state: { loading: 0, preload: null }
           }),
-          styles$249.set(type, resource$250),
-          (styles$249 = JSCompiler_inline_result.querySelector(
+          styles$246.set(type, resource$247),
+          (styles$246 = JSCompiler_inline_result.querySelector(
             getStylesheetSelectorFromKey(type)
           )) &&
-            !styles$249._p &&
-            ((resource$250.instance = styles$249),
-            (resource$250.state.loading = 5)),
+            !styles$246._p &&
+            ((resource$247.instance = styles$246),
+            (resource$247.state.loading = 5)),
           preloadPropsMap.has(type) ||
             ((pendingProps = {
               rel: "preload",
@@ -15365,16 +15207,16 @@ function getResource(type, currentProps, pendingProps, currentResource) {
               referrerPolicy: pendingProps.referrerPolicy
             }),
             preloadPropsMap.set(type, pendingProps),
-            styles$249 ||
+            styles$246 ||
               preloadStylesheet(
                 JSCompiler_inline_result,
                 type,
                 pendingProps,
-                resource$250.state
+                resource$247.state
               )));
         if (currentProps && null === currentResource)
           throw Error(formatProdErrorMessage(528, ""));
-        return resource$250;
+        return resource$247;
       }
       if (currentProps && null !== currentResource)
         throw Error(formatProdErrorMessage(529, ""));
@@ -15471,37 +15313,37 @@ function acquireResource(hoistableRoot, resource, props) {
         return (resource.instance = instance);
       case "stylesheet":
         styleProps = getStyleKey(props.href);
-        var instance$255 = hoistableRoot.querySelector(
+        var instance$252 = hoistableRoot.querySelector(
           getStylesheetSelectorFromKey(styleProps)
         );
-        if (instance$255)
+        if (instance$252)
           return (
             (resource.state.loading |= 4),
-            (resource.instance = instance$255),
-            markNodeAsHoistable(instance$255),
-            instance$255
+            (resource.instance = instance$252),
+            markNodeAsHoistable(instance$252),
+            instance$252
           );
         instance = stylesheetPropsFromRawProps(props);
         (styleProps = preloadPropsMap.get(styleProps)) &&
           adoptPreloadPropsForStylesheet(instance, styleProps);
-        instance$255 = (
+        instance$252 = (
           hoistableRoot.ownerDocument || hoistableRoot
         ).createElement("link");
-        markNodeAsHoistable(instance$255);
-        var linkInstance = instance$255;
+        markNodeAsHoistable(instance$252);
+        var linkInstance = instance$252;
         linkInstance._p = new Promise(function (resolve, reject) {
           linkInstance.onload = resolve;
           linkInstance.onerror = reject;
         });
-        setInitialProperties(instance$255, "link", instance);
+        setInitialProperties(instance$252, "link", instance);
         resource.state.loading |= 4;
-        insertStylesheet(instance$255, props.precedence, hoistableRoot);
-        return (resource.instance = instance$255);
+        insertStylesheet(instance$252, props.precedence, hoistableRoot);
+        return (resource.instance = instance$252);
       case "script":
-        instance$255 = getScriptKey(props.src);
+        instance$252 = getScriptKey(props.src);
         if (
           (styleProps = hoistableRoot.querySelector(
-            getScriptSelectorFromKey(instance$255)
+            getScriptSelectorFromKey(instance$252)
           ))
         )
           return (
@@ -15510,7 +15352,7 @@ function acquireResource(hoistableRoot, resource, props) {
             styleProps
           );
         instance = props;
-        if ((styleProps = preloadPropsMap.get(instance$255)))
+        if ((styleProps = preloadPropsMap.get(instance$252)))
           (instance = assign({}, props)),
             adoptPreloadPropsForScript(instance, styleProps);
         hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;
@@ -15842,7 +15684,6 @@ function FiberRootNode(
   this.pooledCache = null;
   this.pooledCacheLanes = 0;
   this.formState = formState;
-  this.gestures = null;
   this.incompleteTransitions = new Map();
 }
 function createFiberRoot(
@@ -16530,16 +16371,16 @@ ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function (target) {
     0 === i && attemptExplicitHydrationTarget(target);
   }
 };
-var isomorphicReactPackageVersion$jscomp$inline_1828 = React.version;
+var isomorphicReactPackageVersion$jscomp$inline_1799 = React.version;
 if (
-  "19.1.0-experimental-e670e72f-20250214" !==
-  isomorphicReactPackageVersion$jscomp$inline_1828
+  "19.1.0-experimental-b3a95caf-20250113" !==
+  isomorphicReactPackageVersion$jscomp$inline_1799
 )
   throw Error(
     formatProdErrorMessage(
       527,
-      isomorphicReactPackageVersion$jscomp$inline_1828,
-      "19.1.0-experimental-e670e72f-20250214"
+      isomorphicReactPackageVersion$jscomp$inline_1799,
+      "19.1.0-experimental-b3a95caf-20250113"
     )
   );
 ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
@@ -16559,24 +16400,24 @@ ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
     null === componentOrElement ? null : componentOrElement.stateNode;
   return componentOrElement;
 };
-var internals$jscomp$inline_2363 = {
+var internals$jscomp$inline_2330 = {
   bundleType: 0,
-  version: "19.1.0-experimental-e670e72f-20250214",
+  version: "19.1.0-experimental-b3a95caf-20250113",
   rendererPackageName: "react-dom",
   currentDispatcherRef: ReactSharedInternals,
-  reconcilerVersion: "19.1.0-experimental-e670e72f-20250214"
+  reconcilerVersion: "19.1.0-experimental-b3a95caf-20250113"
 };
 if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
-  var hook$jscomp$inline_2364 = __REACT_DEVTOOLS_GLOBAL_HOOK__;
+  var hook$jscomp$inline_2331 = __REACT_DEVTOOLS_GLOBAL_HOOK__;
   if (
-    !hook$jscomp$inline_2364.isDisabled &&
-    hook$jscomp$inline_2364.supportsFiber
+    !hook$jscomp$inline_2331.isDisabled &&
+    hook$jscomp$inline_2331.supportsFiber
   )
     try {
-      (rendererID = hook$jscomp$inline_2364.inject(
-        internals$jscomp$inline_2363
+      (rendererID = hook$jscomp$inline_2331.inject(
+        internals$jscomp$inline_2330
       )),
-        (injectedHook = hook$jscomp$inline_2364);
+        (injectedHook = hook$jscomp$inline_2331);
     } catch (err) {}
 }
 exports.createRoot = function (container, options) {
@@ -16614,7 +16455,9 @@ exports.createRoot = function (container, options) {
     null
   );
   container[internalContainerInstanceKey] = options.current;
-  listenToAllSupportedEvents(container);
+  listenToAllSupportedEvents(
+    8 === container.nodeType ? container.parentNode : container
+  );
   return new ReactDOMRoot(options);
 };
 exports.hydrateRoot = function (container, initialChildren, options) {
@@ -16668,4 +16511,4 @@ exports.hydrateRoot = function (container, initialChildren, options) {
   listenToAllSupportedEvents(container);
   return new ReactDOMHydrationRoot(initialChildren);
 };
-exports.version = "19.1.0-experimental-e670e72f-20250214";
+exports.version = "19.1.0-experimental-b3a95caf-20250113";
diff --git a/node_modules/react-dom/cjs/react-dom-profiling.development.js b/node_modules/react-dom/cjs/react-dom-profiling.development.js
index e788a65..0f4f69a 100644
--- a/node_modules/react-dom/cjs/react-dom-profiling.development.js
+++ b/node_modules/react-dom/cjs/react-dom-profiling.development.js
@@ -427,7 +427,11 @@
           break;
         default:
           if (
-            ((nextRootContext = nextRootInstance.tagName),
+            ((nextRootInstance =
+              8 === nextRootContext
+                ? nextRootInstance.parentNode
+                : nextRootInstance),
+            (nextRootContext = nextRootInstance.tagName),
             (nextRootInstance = nextRootInstance.namespaceURI))
           )
             (nextRootInstance = getOwnHostContext(nextRootInstance)),
@@ -590,7 +594,6 @@
         case 64:
           return 64;
         case 128:
-          return 128;
         case 256:
         case 512:
         case 1024:
@@ -605,7 +608,7 @@
         case 524288:
         case 1048576:
         case 2097152:
-          return lanes & 4194048;
+          return lanes & 4194176;
         case 4194304:
         case 8388608:
         case 16777216:
@@ -667,7 +670,7 @@
             ((suspendedLanes = nextLanes & -nextLanes),
             (rootHasPendingCommit = wipLanes & -wipLanes),
             suspendedLanes >= rootHasPendingCommit ||
-              (32 === suspendedLanes && 0 !== (rootHasPendingCommit & 4194048)))
+              (32 === suspendedLanes && 0 !== (rootHasPendingCommit & 4194176)))
           ? wipLanes
           : nextLanes;
     }
@@ -685,10 +688,10 @@
         case 2:
         case 4:
         case 8:
-        case 64:
           return currentTime + 250;
         case 16:
         case 32:
+        case 64:
         case 128:
         case 256:
         case 512:
@@ -728,7 +731,7 @@
     function claimNextTransitionLane() {
       var lane = nextTransitionLane;
       nextTransitionLane <<= 1;
-      0 === (nextTransitionLane & 4194048) && (nextTransitionLane = 256);
+      0 === (nextTransitionLane & 4194176) && (nextTransitionLane = 128);
       return lane;
     }
     function claimNextRetryLane() {
@@ -804,7 +807,7 @@
       root.entanglements[spawnedLaneIndex] =
         root.entanglements[spawnedLaneIndex] |
         1073741824 |
-        (entangledLanes & 4194090);
+        (entangledLanes & 4194218);
     }
     function markRootEntangled(root, entangledLanes) {
       var rootEntangledLanes = (root.entangledLanes |= entangledLanes);
@@ -827,6 +830,7 @@
         case 32:
           lane = 16;
           break;
+        case 128:
         case 256:
         case 512:
         case 1024:
@@ -845,7 +849,7 @@
         case 8388608:
         case 16777216:
         case 33554432:
-          lane = 128;
+          lane = 64;
           break;
         case 268435456:
           lane = 134217728;
@@ -1469,7 +1473,10 @@
     }
     function runWithFiberInDEV(fiber, callback, arg0, arg1, arg2, arg3, arg4) {
       var previousFiber = current;
-      setCurrentFiber(fiber);
+      ReactSharedInternals.getCurrentStack =
+        null === fiber ? null : getCurrentFiberStackInDev;
+      isRendering = !1;
+      current = fiber;
       try {
         return null !== fiber && fiber._debugTask
           ? fiber._debugTask.run(
@@ -1477,18 +1484,12 @@
             )
           : callback(arg0, arg1, arg2, arg3, arg4);
       } finally {
-        setCurrentFiber(previousFiber);
+        current = previousFiber;
       }
       throw Error(
         "runWithFiberInDEV should never be called in production. This is a bug in React."
       );
     }
-    function setCurrentFiber(fiber) {
-      ReactSharedInternals.getCurrentStack =
-        null === fiber ? null : getCurrentFiberStackInDev;
-      isRendering = !1;
-      current = fiber;
-    }
     function getToStringValue(value) {
       switch (typeof value) {
         case "bigint":
@@ -2314,41 +2315,33 @@
       return null !== node ? describeDiff(node).replaceAll(/^[+-]/gm, ">") : "";
     }
     function updatedAncestorInfoDev(oldInfo, tag) {
-      var ancestorInfo = assign({}, oldInfo || emptyAncestorInfoDev),
-        info = { tag: tag };
+      oldInfo = assign({}, oldInfo || emptyAncestorInfoDev);
+      var info = { tag: tag };
       -1 !== inScopeTags.indexOf(tag) &&
-        ((ancestorInfo.aTagInScope = null),
-        (ancestorInfo.buttonTagInScope = null),
-        (ancestorInfo.nobrTagInScope = null));
-      -1 !== buttonScopeTags.indexOf(tag) &&
-        (ancestorInfo.pTagInButtonScope = null);
+        ((oldInfo.aTagInScope = null),
+        (oldInfo.buttonTagInScope = null),
+        (oldInfo.nobrTagInScope = null));
+      -1 !== buttonScopeTags.indexOf(tag) && (oldInfo.pTagInButtonScope = null);
       -1 !== specialTags.indexOf(tag) &&
         "address" !== tag &&
         "div" !== tag &&
         "p" !== tag &&
-        ((ancestorInfo.listItemTagAutoclosing = null),
-        (ancestorInfo.dlItemTagAutoclosing = null));
-      ancestorInfo.current = info;
-      "form" === tag && (ancestorInfo.formTag = info);
-      "a" === tag && (ancestorInfo.aTagInScope = info);
-      "button" === tag && (ancestorInfo.buttonTagInScope = info);
-      "nobr" === tag && (ancestorInfo.nobrTagInScope = info);
-      "p" === tag && (ancestorInfo.pTagInButtonScope = info);
-      "li" === tag && (ancestorInfo.listItemTagAutoclosing = info);
-      if ("dd" === tag || "dt" === tag)
-        ancestorInfo.dlItemTagAutoclosing = info;
+        ((oldInfo.listItemTagAutoclosing = null),
+        (oldInfo.dlItemTagAutoclosing = null));
+      oldInfo.current = info;
+      "form" === tag && (oldInfo.formTag = info);
+      "a" === tag && (oldInfo.aTagInScope = info);
+      "button" === tag && (oldInfo.buttonTagInScope = info);
+      "nobr" === tag && (oldInfo.nobrTagInScope = info);
+      "p" === tag && (oldInfo.pTagInButtonScope = info);
+      "li" === tag && (oldInfo.listItemTagAutoclosing = info);
+      if ("dd" === tag || "dt" === tag) oldInfo.dlItemTagAutoclosing = info;
       "#document" === tag || "html" === tag
-        ? (ancestorInfo.containerTagInScope = null)
-        : ancestorInfo.containerTagInScope ||
-          (ancestorInfo.containerTagInScope = info);
-      null !== oldInfo ||
-      ("#document" !== tag && "html" !== tag && "body" !== tag)
-        ? !0 === ancestorInfo.implicitRootScope &&
-          (ancestorInfo.implicitRootScope = !1)
-        : (ancestorInfo.implicitRootScope = !0);
-      return ancestorInfo;
-    }
-    function isTagValidWithParent(tag, parentTag, implicitRootScope) {
+        ? (oldInfo.containerTagInScope = null)
+        : oldInfo.containerTagInScope || (oldInfo.containerTagInScope = info);
+      return oldInfo;
+    }
+    function isTagValidWithParent(tag, parentTag) {
       switch (parentTag) {
         case "select":
           return (
@@ -2408,12 +2401,11 @@
             "template" === tag
           );
         case "html":
-          if (implicitRootScope) break;
           return "head" === tag || "body" === tag || "frameset" === tag;
         case "frameset":
           return "frame" === tag;
         case "#document":
-          if (!implicitRootScope) return "html" === tag;
+          return "html" === tag;
       }
       switch (tag) {
         case "h1":
@@ -2433,11 +2425,14 @@
         case "rp":
         case "rt":
           return -1 === impliedEndTags.indexOf(parentTag);
+        case "body":
         case "caption":
         case "col":
         case "colgroup":
         case "frameset":
         case "frame":
+        case "head":
+        case "html":
         case "tbody":
         case "td":
         case "tfoot":
@@ -2445,19 +2440,6 @@
         case "thead":
         case "tr":
           return null == parentTag;
-        case "head":
-          return implicitRootScope || null === parentTag;
-        case "html":
-          return (
-            (implicitRootScope && "#document" === parentTag) ||
-            null === parentTag
-          );
-        case "body":
-          return (
-            (implicitRootScope &&
-              ("#document" === parentTag || "html" === parentTag)) ||
-            null === parentTag
-          );
       }
       return !0;
     }
@@ -2532,8 +2514,7 @@
       var parentInfo = ancestorInfo.current;
       ancestorInfo = (parentInfo = isTagValidWithParent(
         childTag,
-        parentInfo && parentInfo.tag,
-        ancestorInfo.implicitRootScope
+        parentInfo && parentInfo.tag
       )
         ? null
         : parentInfo)
@@ -2587,33 +2568,32 @@
           }));
       return !1;
     }
-    function validateTextNesting(childText, parentTag, implicitRootScope) {
-      if (implicitRootScope || isTagValidWithParent("#text", parentTag, !1))
-        return !0;
-      implicitRootScope = "#text|" + parentTag;
-      if (didWarn[implicitRootScope]) return !1;
-      didWarn[implicitRootScope] = !0;
-      var ancestor = (implicitRootScope = current)
-        ? findAncestor(implicitRootScope, parentTag)
+    function validateTextNesting(childText, parentTag) {
+      if (isTagValidWithParent("#text", parentTag)) return !0;
+      var warnKey = "#text|" + parentTag;
+      if (didWarn[warnKey]) return !1;
+      didWarn[warnKey] = !0;
+      var ancestor = (warnKey = current)
+        ? findAncestor(warnKey, parentTag)
         : null;
-      implicitRootScope =
-        null !== implicitRootScope && null !== ancestor
+      warnKey =
+        null !== warnKey && null !== ancestor
           ? describeAncestors(
               ancestor,
-              implicitRootScope,
-              6 !== implicitRootScope.tag ? { children: null } : null
+              warnKey,
+              6 !== warnKey.tag ? { children: null } : null
             )
           : "";
       /\S/.test(childText)
         ? console.error(
             "In HTML, text nodes cannot be a child of <%s>.\nThis will cause a hydration error.%s",
             parentTag,
-            implicitRootScope
+            warnKey
           )
         : console.error(
             "In HTML, whitespace text nodes cannot be a child of <%s>. Make sure you don't have any extra whitespace between tags on each line of your source code.\nThis will cause a hydration error.%s",
             parentTag,
-            implicitRootScope
+            warnKey
           );
       return !1;
     }
@@ -3781,11 +3761,6 @@
       enqueueUpdate$1(fiber, null, null, lane);
       return getRootForUpdatedFiber(fiber);
     }
-    function enqueueGestureRender(fiber) {
-      fiber = markUpdateLaneFromFiberToRoot(fiber, null, 64);
-      null !== fiber && markRootUpdated$1(fiber, 64);
-      return fiber;
-    }
     function markUpdateLaneFromFiberToRoot(sourceFiber, update, lane) {
       sourceFiber.lanes |= lane;
       var alternate = sourceFiber.alternate;
@@ -3801,19 +3776,17 @@
               (isHidden = !0)),
           (sourceFiber = parent),
           (parent = parent.return);
-      return 3 === sourceFiber.tag
-        ? ((parent = sourceFiber.stateNode),
-          isHidden &&
-            null !== update &&
-            ((isHidden = 31 - clz32(lane)),
-            (sourceFiber = parent.hiddenUpdates),
-            (alternate = sourceFiber[isHidden]),
-            null === alternate
-              ? (sourceFiber[isHidden] = [update])
-              : alternate.push(update),
-            (update.lane = lane | 536870912)),
-          parent)
-        : null;
+      isHidden &&
+        null !== update &&
+        3 === sourceFiber.tag &&
+        ((parent = sourceFiber.stateNode),
+        (isHidden = 31 - clz32(lane)),
+        (parent = parent.hiddenUpdates),
+        (sourceFiber = parent[isHidden]),
+        null === sourceFiber
+          ? (parent[isHidden] = [update])
+          : sourceFiber.push(update),
+        (update.lane = lane | 536870912));
     }
     function getRootForUpdatedFiber(sourceFiber) {
       if (nestedUpdateCount > NESTED_UPDATE_LIMIT)
@@ -3979,7 +3952,7 @@
           (blockingEventTime = lane),
           (blockingEventType = JSCompiler_temp));
       else if (
-        0 !== (lane & 4194048) &&
+        0 !== (lane & 4194176) &&
         0 > transitionUpdateTime &&
         ((transitionUpdateTime = now()), 0 > transitionStartTime)
       ) {
@@ -4072,9 +4045,9 @@
     }
     function setCurrentTrackFromLanes(lanes) {
       reusableLaneDevToolDetails.track =
-        lanes & 127
+        lanes & 63
           ? "Blocking"
-          : lanes & 4194176
+          : lanes & 4194240
             ? "Transition"
             : lanes & 62914560
               ? "Suspense"
@@ -4191,13 +4164,13 @@
     function logRenderPhase(startTime, endTime, lanes) {
       supportsUserTiming &&
         ((reusableLaneDevToolDetails.color =
-          (lanes & 738197653) === lanes ? "tertiary-dark" : "primary-dark"),
+          (lanes & 738197589) === lanes ? "tertiary-dark" : "primary-dark"),
         (reusableLaneOptions.start = startTime),
         (reusableLaneOptions.end = endTime),
         performance.measure(
           (lanes & 536870912) === lanes
             ? "Prepared"
-            : (lanes & 201326741) === lanes
+            : (lanes & 201326677) === lanes
               ? "Hydrated"
               : "Render",
           reusableLaneOptions
@@ -4206,7 +4179,7 @@
     function logSuspendedRenderPhase(startTime, endTime, lanes) {
       supportsUserTiming &&
         ((reusableLaneDevToolDetails.color =
-          (lanes & 738197653) === lanes ? "tertiary-dark" : "primary-dark"),
+          (lanes & 738197589) === lanes ? "tertiary-dark" : "primary-dark"),
         (reusableLaneOptions.start = startTime),
         (reusableLaneOptions.end = endTime),
         performance.measure("Prewarm", reusableLaneOptions));
@@ -4214,7 +4187,7 @@
     function logSuspendedWithDelayPhase(startTime, endTime, lanes) {
       supportsUserTiming &&
         ((reusableLaneDevToolDetails.color =
-          (lanes & 738197653) === lanes ? "tertiary-dark" : "primary-dark"),
+          (lanes & 738197589) === lanes ? "tertiary-dark" : "primary-dark"),
         (reusableLaneOptions.start = startTime),
         (reusableLaneOptions.end = endTime),
         performance.measure("Suspended", reusableLaneOptions));
@@ -4634,7 +4607,7 @@
     }
     function entangleTransitions(root, fiber, lane) {
       fiber = fiber.updateQueue;
-      if (null !== fiber && ((fiber = fiber.shared), 0 !== (lane & 4194048))) {
+      if (null !== fiber && ((fiber = fiber.shared), 0 !== (lane & 4194176))) {
         var queueLanes = fiber.lanes;
         queueLanes &= root.pendingLanes;
         lane |= queueLanes;
@@ -5229,28 +5202,6 @@
         ? null
         : { parent: CacheContext._currentValue, pool: cacheFromPool };
     }
-    function scheduleGesture(root, provider) {
-      for (var prev = root.gestures; null !== prev; ) {
-        if (prev.provider === provider) return prev.count++, prev;
-        var next = prev.next;
-        if (null === next) break;
-        prev = next;
-      }
-      provider = { provider: provider, count: 1, prev: prev, next: null };
-      null === prev ? (root.gestures = provider) : (prev.next = provider);
-      ensureRootIsScheduled(root);
-      return provider;
-    }
-    function deleteScheduledGesture(root, gesture) {
-      null === gesture.prev
-        ? root.gestures === gesture &&
-          ((root.gestures = gesture.next),
-          null === root.gestures && (root.pendingLanes &= -65))
-        : ((gesture.prev.next = gesture.next),
-          null !== gesture.next && (gesture.next.prev = gesture.prev),
-          (gesture.prev = null),
-          (gesture.next = null));
-    }
     function mountHookTypesDev() {
       var hookName = currentHookNameInDev;
       null === hookTypesDev
@@ -5845,7 +5796,7 @@
           throw Error(
             "Expected a work-in-progress root. This is a bug in React. Please file an issue."
           );
-        0 !== (workInProgressRootRenderLanes & 124) ||
+        0 !== (workInProgressRootRenderLanes & 60) ||
           pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
       }
       hook.memoizedState = nextSnapshot;
@@ -5928,7 +5879,7 @@
             "Expected a work-in-progress root. This is a bug in React. Please file an issue."
           );
         isHydrating$jscomp$0 ||
-          0 !== (renderLanes & 124) ||
+          0 !== (renderLanes & 60) ||
           pushStoreConsistencyCheck(fiber, getSnapshot, getServerSnapshot);
       }
       return getServerSnapshot;
@@ -6126,7 +6077,7 @@
           ),
           node.isTransition ||
             console.error(
-              "An async function with useActionState was called outside of a transition. This is likely not what you intended (for example, isPending will not update correctly). Either call the returned function inside startTransition, or pass it to an `action` or `formAction` prop."
+              "An async function was passed to useActionState, but it was dispatched outside of an action context. This is likely not what you intended. Either pass the dispatch function to an `action` prop, or dispatch manually inside `startTransition`"
             ))
         : onActionSuccess(actionQueue, node, returnValue);
     }
@@ -6307,14 +6258,8 @@
       currentStateHook.memoizedState = action;
       return [stateHook, dispatch, !1];
     }
-    function pushSimpleEffect(tag, inst, create, createDeps) {
-      tag = {
-        tag: tag,
-        create: create,
-        deps: createDeps,
-        inst: inst,
-        next: null
-      };
+    function pushSimpleEffect(tag, inst, create, deps) {
+      tag = { tag: tag, create: create, deps: deps, inst: inst, next: null };
       inst = currentlyRenderingFiber.updateQueue;
       null === inst &&
         ((inst = createFunctionComponentUpdateQueue()),
@@ -6322,9 +6267,9 @@
       create = inst.lastEffect;
       null === create
         ? (inst.lastEffect = tag.next = tag)
-        : ((createDeps = create.next),
+        : ((deps = create.next),
           (create.next = tag),
-          (tag.next = createDeps),
+          (tag.next = deps),
           (inst.lastEffect = tag));
       return tag;
     }
@@ -6336,15 +6281,15 @@
       initialValue = { current: initialValue };
       return (hook.memoizedState = initialValue);
     }
-    function mountEffectImpl(fiberFlags, hookFlags, create, createDeps) {
+    function mountEffectImpl(fiberFlags, hookFlags, create, deps) {
       var hook = mountWorkInProgressHook();
-      createDeps = void 0 === createDeps ? null : createDeps;
+      deps = void 0 === deps ? null : deps;
       currentlyRenderingFiber.flags |= fiberFlags;
       hook.memoizedState = pushSimpleEffect(
         HasEffect | hookFlags,
         createEffectInstance(),
         create,
-        createDeps
+        deps
       );
     }
     function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
@@ -6363,11 +6308,11 @@
             deps
           )));
     }
-    function mountEffect(create, createDeps) {
+    function mountEffect(create, deps) {
       (currentlyRenderingFiber.mode & StrictEffectsMode) !== NoMode &&
       (currentlyRenderingFiber.mode & NoStrictPassiveEffectsMode) === NoMode
-        ? mountEffectImpl(276826112, Passive, create, createDeps)
-        : mountEffectImpl(8390656, Passive, create, createDeps);
+        ? mountEffectImpl(276826112, Passive, create, deps)
+        : mountEffectImpl(8390656, Passive, create, deps);
     }
     function useEffectEventImpl(payload) {
       currentlyRenderingFiber.flags |= 4;
@@ -6902,7 +6847,7 @@
       queue.pending = update;
     }
     function entangleTransitionUpdate(root, queue, lane) {
-      if (0 !== (lane & 4194048)) {
+      if (0 !== (lane & 4194176)) {
         var queueLanes = queue.lanes;
         queueLanes &= root.pendingLanes;
         lane |= queueLanes;
@@ -6910,61 +6855,6 @@
         markRootEntangled(root, lane);
       }
     }
-    function startGesture(fiber, queue, gestureProvider) {
-      var root = enqueueGestureRender(fiber);
-      if (null === root) return function () {};
-      var update = {
-        gesture: scheduleGesture(root, gestureProvider),
-        prev: null,
-        next: queue.pending
-      };
-      null !== queue.pending && (queue.pending.prev = update);
-      queue.pending = update;
-      return function () {
-        if (null === update.prev)
-          if (queue.pending === update) queue.pending = update.next;
-          else return;
-        else
-          (update.prev.next = update.next),
-            null !== update.next && (update.next.prev = update.prev),
-            (update.prev = null),
-            (update.next = null);
-        var gesture = update.gesture;
-        gesture.count--;
-        0 === gesture.count && deleteScheduledGesture(root, gesture);
-      };
-    }
-    function mountSwipeTransition(previous, current) {
-      previous = { pending: null, dispatch: null };
-      var startGestureOnHook = (previous.dispatch = startGesture.bind(
-        null,
-        currentlyRenderingFiber,
-        previous
-      ));
-      mountWorkInProgressHook().queue = previous;
-      return [current, startGestureOnHook];
-    }
-    function updateSwipeTransition(previous, current) {
-      var queue = updateWorkInProgressHook().queue,
-        startGestureOnHook = queue.dispatch;
-      if (64 === workInProgressRootRenderLanes) {
-        var root = workInProgressRoot;
-        if (null === root)
-          throw Error(
-            "Expected a work-in-progress root. This is a bug in React. Please file an issue."
-          );
-        root = root.gestures;
-        for (var update = queue.pending; null !== update; ) {
-          if (root === update.gesture) {
-            current = previous;
-            break;
-          }
-          update = update.next;
-        }
-      }
-      null !== queue.pending && (currentlyRenderingFiber.lanes |= 64);
-      return [current, startGestureOnHook];
-    }
     function pushDebugInfo(debugInfo) {
       var previousDebugInfo = currentDebugInfo;
       null != debugInfo &&
@@ -8839,7 +8729,7 @@
       return workInProgress.child;
     }
     function updateClassComponent(
-      current,
+      current$jscomp$0,
       workInProgress,
       Component,
       nextProps,
@@ -9155,7 +9045,7 @@
         (workInProgress.mode & StrictEffectsMode) !== NoMode &&
           (workInProgress.flags |= 134217728);
         _instance = !0;
-      } else if (null === current) {
+      } else if (null === current$jscomp$0) {
         _instance = workInProgress.stateNode;
         var unresolvedOldProps = workInProgress.memoizedProps;
         lane = resolveClassComponentProps(Component, unresolvedOldProps);
@@ -9235,7 +9125,7 @@
             (_instance = !1));
       } else {
         _instance = workInProgress.stateNode;
-        cloneUpdateQueue(current, workInProgress);
+        cloneUpdateQueue(current$jscomp$0, workInProgress);
         state = workInProgress.memoizedProps;
         foundWillUpdateName = resolveClassComponentProps(Component, state);
         _instance.props = foundWillUpdateName;
@@ -9268,9 +9158,9 @@
         state !== newApiName ||
         oldState !== newState ||
         hasForceUpdate ||
-        (null !== current &&
-          null !== current.dependencies &&
-          checkIfContextChanged(current.dependencies))
+        (null !== current$jscomp$0 &&
+          null !== current$jscomp$0.dependencies &&
+          checkIfContextChanged(current$jscomp$0.dependencies))
           ? ("function" === typeof unresolvedOldProps &&
               (applyDerivedStateFromProps(
                 workInProgress,
@@ -9290,9 +9180,9 @@
                 newState,
                 lane
               ) ||
-              (null !== current &&
-                null !== current.dependencies &&
-                checkIfContextChanged(current.dependencies)))
+              (null !== current$jscomp$0 &&
+                null !== current$jscomp$0.dependencies &&
+                checkIfContextChanged(current$jscomp$0.dependencies)))
               ? (oldContext ||
                   ("function" !== typeof _instance.UNSAFE_componentWillUpdate &&
                     "function" !== typeof _instance.componentWillUpdate) ||
@@ -9309,12 +9199,12 @@
                 "function" === typeof _instance.getSnapshotBeforeUpdate &&
                   (workInProgress.flags |= 1024))
               : ("function" !== typeof _instance.componentDidUpdate ||
-                  (state === current.memoizedProps &&
-                    oldState === current.memoizedState) ||
+                  (state === current$jscomp$0.memoizedProps &&
+                    oldState === current$jscomp$0.memoizedState) ||
                   (workInProgress.flags |= 4),
                 "function" !== typeof _instance.getSnapshotBeforeUpdate ||
-                  (state === current.memoizedProps &&
-                    oldState === current.memoizedState) ||
+                  (state === current$jscomp$0.memoizedProps &&
+                    oldState === current$jscomp$0.memoizedState) ||
                   (workInProgress.flags |= 1024),
                 (workInProgress.memoizedProps = nextProps),
                 (workInProgress.memoizedState = newState)),
@@ -9323,21 +9213,24 @@
             (_instance.context = lane),
             (_instance = foundWillUpdateName))
           : ("function" !== typeof _instance.componentDidUpdate ||
-              (state === current.memoizedProps &&
-                oldState === current.memoizedState) ||
+              (state === current$jscomp$0.memoizedProps &&
+                oldState === current$jscomp$0.memoizedState) ||
               (workInProgress.flags |= 4),
             "function" !== typeof _instance.getSnapshotBeforeUpdate ||
-              (state === current.memoizedProps &&
-                oldState === current.memoizedState) ||
+              (state === current$jscomp$0.memoizedProps &&
+                oldState === current$jscomp$0.memoizedState) ||
               (workInProgress.flags |= 1024),
             (_instance = !1));
       }
       lane = _instance;
-      markRef(current, workInProgress);
+      markRef(current$jscomp$0, workInProgress);
       state = 0 !== (workInProgress.flags & 128);
       if (lane || state) {
         lane = workInProgress.stateNode;
-        setCurrentFiber(workInProgress);
+        ReactSharedInternals.getCurrentStack =
+          null === workInProgress ? null : getCurrentFiberStackInDev;
+        isRendering = !1;
+        current = workInProgress;
         if (state && "function" !== typeof Component.getDerivedStateFromError)
           (Component = null), (profilerStartTime = -1);
         else if (
@@ -9352,10 +9245,10 @@
           }
         }
         workInProgress.flags |= 1;
-        null !== current && state
+        null !== current$jscomp$0 && state
           ? ((workInProgress.child = reconcileChildFibers(
               workInProgress,
-              current.child,
+              current$jscomp$0.child,
               null,
               renderLanes
             )),
@@ -9365,12 +9258,17 @@
               Component,
               renderLanes
             )))
-          : reconcileChildren(current, workInProgress, Component, renderLanes);
+          : reconcileChildren(
+              current$jscomp$0,
+              workInProgress,
+              Component,
+              renderLanes
+            );
         workInProgress.memoizedState = lane.state;
-        current = workInProgress.child;
+        current$jscomp$0 = workInProgress.child;
       } else
-        current = bailoutOnAlreadyFinishedWork(
-          current,
+        current$jscomp$0 = bailoutOnAlreadyFinishedWork(
+          current$jscomp$0,
           workInProgress,
           renderLanes
         );
@@ -9383,7 +9281,7 @@
             getComponentNameFromFiber(workInProgress) || "a component"
           ),
         (didWarnAboutReassigningProps = !0));
-      return current;
+      return current$jscomp$0;
     }
     function mountHostRootWithoutHydrating(
       current,
@@ -9435,33 +9333,33 @@
       return current;
     }
     function updateSuspenseComponent(current, workInProgress, renderLanes) {
-      var JSCompiler_object_inline_componentStack_2586;
-      var JSCompiler_object_inline_stack_2585 = workInProgress.pendingProps;
+      var JSCompiler_object_inline_componentStack_2557;
+      var JSCompiler_object_inline_stack_2556 = workInProgress.pendingProps;
       shouldSuspendImpl(workInProgress) && (workInProgress.flags |= 128);
-      var JSCompiler_object_inline_message_2583 = !1;
+      var JSCompiler_object_inline_message_2554 = !1;
       var didSuspend = 0 !== (workInProgress.flags & 128);
-      (JSCompiler_object_inline_componentStack_2586 = didSuspend) ||
-        (JSCompiler_object_inline_componentStack_2586 =
+      (JSCompiler_object_inline_componentStack_2557 = didSuspend) ||
+        (JSCompiler_object_inline_componentStack_2557 =
           null !== current && null === current.memoizedState
             ? !1
             : 0 !== (suspenseStackCursor.current & ForceSuspenseFallback));
-      JSCompiler_object_inline_componentStack_2586 &&
-        ((JSCompiler_object_inline_message_2583 = !0),
+      JSCompiler_object_inline_componentStack_2557 &&
+        ((JSCompiler_object_inline_message_2554 = !0),
         (workInProgress.flags &= -129));
-      JSCompiler_object_inline_componentStack_2586 =
+      JSCompiler_object_inline_componentStack_2557 =
         0 !== (workInProgress.flags & 32);
       workInProgress.flags &= -33;
       if (null === current) {
         if (isHydrating) {
-          JSCompiler_object_inline_message_2583
+          JSCompiler_object_inline_message_2554
             ? pushPrimaryTreeSuspenseHandler(workInProgress)
             : reuseSuspenseHandlerOnStack(workInProgress);
           if (isHydrating) {
-            var JSCompiler_object_inline_digest_2584 = nextHydratableInstance;
+            var JSCompiler_object_inline_digest_2555 = nextHydratableInstance;
             var JSCompiler_temp;
-            if (!(JSCompiler_temp = !JSCompiler_object_inline_digest_2584)) {
+            if (!(JSCompiler_temp = !JSCompiler_object_inline_digest_2555)) {
               c: {
-                var instance = JSCompiler_object_inline_digest_2584;
+                var instance = JSCompiler_object_inline_digest_2555;
                 for (
                   JSCompiler_temp = rootOrSingletonContext;
                   8 !== instance.nodeType;
@@ -9503,87 +9401,87 @@
             JSCompiler_temp &&
               (warnNonHydratedInstance(
                 workInProgress,
-                JSCompiler_object_inline_digest_2584
+                JSCompiler_object_inline_digest_2555
               ),
               throwOnHydrationMismatch(workInProgress));
           }
-          JSCompiler_object_inline_digest_2584 = workInProgress.memoizedState;
+          JSCompiler_object_inline_digest_2555 = workInProgress.memoizedState;
           if (
-            null !== JSCompiler_object_inline_digest_2584 &&
-            ((JSCompiler_object_inline_digest_2584 =
-              JSCompiler_object_inline_digest_2584.dehydrated),
-            null !== JSCompiler_object_inline_digest_2584)
+            null !== JSCompiler_object_inline_digest_2555 &&
+            ((JSCompiler_object_inline_digest_2555 =
+              JSCompiler_object_inline_digest_2555.dehydrated),
+            null !== JSCompiler_object_inline_digest_2555)
           )
             return (
-              isSuspenseInstanceFallback(JSCompiler_object_inline_digest_2584)
+              isSuspenseInstanceFallback(JSCompiler_object_inline_digest_2555)
                 ? (workInProgress.lanes = 32)
                 : (workInProgress.lanes = 536870912),
               null
             );
           popSuspenseHandler(workInProgress);
         }
-        JSCompiler_object_inline_digest_2584 =
-          JSCompiler_object_inline_stack_2585.children;
-        JSCompiler_temp = JSCompiler_object_inline_stack_2585.fallback;
-        if (JSCompiler_object_inline_message_2583)
+        JSCompiler_object_inline_digest_2555 =
+          JSCompiler_object_inline_stack_2556.children;
+        JSCompiler_temp = JSCompiler_object_inline_stack_2556.fallback;
+        if (JSCompiler_object_inline_message_2554)
           return (
             reuseSuspenseHandlerOnStack(workInProgress),
-            (JSCompiler_object_inline_stack_2585 =
+            (JSCompiler_object_inline_stack_2556 =
               mountSuspenseFallbackChildren(
                 workInProgress,
-                JSCompiler_object_inline_digest_2584,
+                JSCompiler_object_inline_digest_2555,
                 JSCompiler_temp,
                 renderLanes
               )),
-            (JSCompiler_object_inline_message_2583 = workInProgress.child),
-            (JSCompiler_object_inline_message_2583.memoizedState =
+            (JSCompiler_object_inline_message_2554 = workInProgress.child),
+            (JSCompiler_object_inline_message_2554.memoizedState =
               mountSuspenseOffscreenState(renderLanes)),
-            (JSCompiler_object_inline_message_2583.childLanes =
+            (JSCompiler_object_inline_message_2554.childLanes =
               getRemainingWorkInPrimaryTree(
                 current,
-                JSCompiler_object_inline_componentStack_2586,
+                JSCompiler_object_inline_componentStack_2557,
                 renderLanes
               )),
             (workInProgress.memoizedState = SUSPENDED_MARKER),
-            JSCompiler_object_inline_stack_2585
+            JSCompiler_object_inline_stack_2556
           );
         if (
           "number" ===
-          typeof JSCompiler_object_inline_stack_2585.unstable_expectedLoadTime
+          typeof JSCompiler_object_inline_stack_2556.unstable_expectedLoadTime
         )
           return (
             reuseSuspenseHandlerOnStack(workInProgress),
-            (JSCompiler_object_inline_stack_2585 =
+            (JSCompiler_object_inline_stack_2556 =
               mountSuspenseFallbackChildren(
                 workInProgress,
-                JSCompiler_object_inline_digest_2584,
+                JSCompiler_object_inline_digest_2555,
                 JSCompiler_temp,
                 renderLanes
               )),
-            (JSCompiler_object_inline_message_2583 = workInProgress.child),
-            (JSCompiler_object_inline_message_2583.memoizedState =
+            (JSCompiler_object_inline_message_2554 = workInProgress.child),
+            (JSCompiler_object_inline_message_2554.memoizedState =
               mountSuspenseOffscreenState(renderLanes)),
-            (JSCompiler_object_inline_message_2583.childLanes =
+            (JSCompiler_object_inline_message_2554.childLanes =
               getRemainingWorkInPrimaryTree(
                 current,
-                JSCompiler_object_inline_componentStack_2586,
+                JSCompiler_object_inline_componentStack_2557,
                 renderLanes
               )),
             (workInProgress.memoizedState = SUSPENDED_MARKER),
             (workInProgress.lanes = 4194304),
-            JSCompiler_object_inline_stack_2585
+            JSCompiler_object_inline_stack_2556
           );
         pushPrimaryTreeSuspenseHandler(workInProgress);
         return mountSuspensePrimaryChildren(
           workInProgress,
-          JSCompiler_object_inline_digest_2584
+          JSCompiler_object_inline_digest_2555
         );
       }
       var prevState = current.memoizedState;
       if (
         null !== prevState &&
-        ((JSCompiler_object_inline_digest_2584 = prevState.dehydrated),
-        null !== JSCompiler_object_inline_digest_2584)
+        ((JSCompiler_object_inline_digest_2555 = prevState.dehydrated),
+        null !== JSCompiler_object_inline_digest_2555)
       ) {
         if (didSuspend)
           workInProgress.flags & 256
@@ -9600,94 +9498,94 @@
                 (workInProgress.flags |= 128),
                 (workInProgress = null))
               : (reuseSuspenseHandlerOnStack(workInProgress),
-                (JSCompiler_object_inline_message_2583 =
-                  JSCompiler_object_inline_stack_2585.fallback),
-                (JSCompiler_object_inline_digest_2584 = workInProgress.mode),
-                (JSCompiler_object_inline_stack_2585 =
+                (JSCompiler_object_inline_message_2554 =
+                  JSCompiler_object_inline_stack_2556.fallback),
+                (JSCompiler_object_inline_digest_2555 = workInProgress.mode),
+                (JSCompiler_object_inline_stack_2556 =
                   mountWorkInProgressOffscreenFiber(
                     {
                       mode: "visible",
-                      children: JSCompiler_object_inline_stack_2585.children
+                      children: JSCompiler_object_inline_stack_2556.children
                     },
-                    JSCompiler_object_inline_digest_2584
+                    JSCompiler_object_inline_digest_2555
                   )),
-                (JSCompiler_object_inline_message_2583 =
+                (JSCompiler_object_inline_message_2554 =
                   createFiberFromFragment(
-                    JSCompiler_object_inline_message_2583,
-                    JSCompiler_object_inline_digest_2584,
+                    JSCompiler_object_inline_message_2554,
+                    JSCompiler_object_inline_digest_2555,
                     renderLanes,
                     null
                   )),
-                (JSCompiler_object_inline_message_2583.flags |= 2),
-                (JSCompiler_object_inline_stack_2585.return = workInProgress),
-                (JSCompiler_object_inline_message_2583.return = workInProgress),
-                (JSCompiler_object_inline_stack_2585.sibling =
-                  JSCompiler_object_inline_message_2583),
-                (workInProgress.child = JSCompiler_object_inline_stack_2585),
+                (JSCompiler_object_inline_message_2554.flags |= 2),
+                (JSCompiler_object_inline_stack_2556.return = workInProgress),
+                (JSCompiler_object_inline_message_2554.return = workInProgress),
+                (JSCompiler_object_inline_stack_2556.sibling =
+                  JSCompiler_object_inline_message_2554),
+                (workInProgress.child = JSCompiler_object_inline_stack_2556),
                 reconcileChildFibers(
                   workInProgress,
                   current.child,
                   null,
                   renderLanes
                 ),
-                (JSCompiler_object_inline_stack_2585 = workInProgress.child),
-                (JSCompiler_object_inline_stack_2585.memoizedState =
+                (JSCompiler_object_inline_stack_2556 = workInProgress.child),
+                (JSCompiler_object_inline_stack_2556.memoizedState =
                   mountSuspenseOffscreenState(renderLanes)),
-                (JSCompiler_object_inline_stack_2585.childLanes =
+                (JSCompiler_object_inline_stack_2556.childLanes =
                   getRemainingWorkInPrimaryTree(
                     current,
-                    JSCompiler_object_inline_componentStack_2586,
+                    JSCompiler_object_inline_componentStack_2557,
                     renderLanes
                   )),
                 (workInProgress.memoizedState = SUSPENDED_MARKER),
-                (workInProgress = JSCompiler_object_inline_message_2583));
+                (workInProgress = JSCompiler_object_inline_message_2554));
         else if (
           (pushPrimaryTreeSuspenseHandler(workInProgress),
           isHydrating &&
             console.error(
               "We should not be hydrating here. This is a bug in React. Please file a bug."
             ),
-          isSuspenseInstanceFallback(JSCompiler_object_inline_digest_2584))
+          isSuspenseInstanceFallback(JSCompiler_object_inline_digest_2555))
         ) {
-          JSCompiler_object_inline_componentStack_2586 =
-            JSCompiler_object_inline_digest_2584.nextSibling &&
-            JSCompiler_object_inline_digest_2584.nextSibling.dataset;
-          if (JSCompiler_object_inline_componentStack_2586) {
-            JSCompiler_temp = JSCompiler_object_inline_componentStack_2586.dgst;
-            var message = JSCompiler_object_inline_componentStack_2586.msg;
-            instance = JSCompiler_object_inline_componentStack_2586.stck;
+          JSCompiler_object_inline_componentStack_2557 =
+            JSCompiler_object_inline_digest_2555.nextSibling &&
+            JSCompiler_object_inline_digest_2555.nextSibling.dataset;
+          if (JSCompiler_object_inline_componentStack_2557) {
+            JSCompiler_temp = JSCompiler_object_inline_componentStack_2557.dgst;
+            var message = JSCompiler_object_inline_componentStack_2557.msg;
+            instance = JSCompiler_object_inline_componentStack_2557.stck;
             var componentStack =
-              JSCompiler_object_inline_componentStack_2586.cstck;
+              JSCompiler_object_inline_componentStack_2557.cstck;
           }
-          JSCompiler_object_inline_message_2583 = message;
-          JSCompiler_object_inline_digest_2584 = JSCompiler_temp;
-          JSCompiler_object_inline_stack_2585 = instance;
-          JSCompiler_temp = JSCompiler_object_inline_componentStack_2586 =
+          JSCompiler_object_inline_message_2554 = message;
+          JSCompiler_object_inline_digest_2555 = JSCompiler_temp;
+          JSCompiler_object_inline_stack_2556 = instance;
+          JSCompiler_temp = JSCompiler_object_inline_componentStack_2557 =
             componentStack;
-          "POSTPONE" !== JSCompiler_object_inline_digest_2584 &&
-            ((JSCompiler_object_inline_componentStack_2586 =
-              JSCompiler_object_inline_message_2583
-                ? Error(JSCompiler_object_inline_message_2583)
+          "POSTPONE" !== JSCompiler_object_inline_digest_2555 &&
+            ((JSCompiler_object_inline_componentStack_2557 =
+              JSCompiler_object_inline_message_2554
+                ? Error(JSCompiler_object_inline_message_2554)
                 : Error(
                     "The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering."
                   )),
-            (JSCompiler_object_inline_componentStack_2586.stack =
-              JSCompiler_object_inline_stack_2585 || ""),
-            (JSCompiler_object_inline_componentStack_2586.digest =
-              JSCompiler_object_inline_digest_2584),
-            (JSCompiler_object_inline_stack_2585 =
+            (JSCompiler_object_inline_componentStack_2557.stack =
+              JSCompiler_object_inline_stack_2556 || ""),
+            (JSCompiler_object_inline_componentStack_2557.digest =
+              JSCompiler_object_inline_digest_2555),
+            (JSCompiler_object_inline_stack_2556 =
               void 0 === JSCompiler_temp ? null : JSCompiler_temp),
-            (JSCompiler_object_inline_message_2583 = {
-              value: JSCompiler_object_inline_componentStack_2586,
+            (JSCompiler_object_inline_message_2554 = {
+              value: JSCompiler_object_inline_componentStack_2557,
               source: null,
-              stack: JSCompiler_object_inline_stack_2585
+              stack: JSCompiler_object_inline_stack_2556
             }),
-            "string" === typeof JSCompiler_object_inline_stack_2585 &&
+            "string" === typeof JSCompiler_object_inline_stack_2556 &&
               CapturedStacks.set(
-                JSCompiler_object_inline_componentStack_2586,
-                JSCompiler_object_inline_message_2583
+                JSCompiler_object_inline_componentStack_2557,
+                JSCompiler_object_inline_message_2554
               ),
-            queueHydrationError(JSCompiler_object_inline_message_2583));
+            queueHydrationError(JSCompiler_object_inline_message_2554));
           workInProgress = retrySuspenseComponentWithoutHydrating(
             current,
             workInProgress,
@@ -9701,44 +9599,44 @@
               renderLanes,
               !1
             ),
-          (JSCompiler_object_inline_componentStack_2586 =
+          (JSCompiler_object_inline_componentStack_2557 =
             0 !== (renderLanes & current.childLanes)),
-          didReceiveUpdate || JSCompiler_object_inline_componentStack_2586)
+          didReceiveUpdate || JSCompiler_object_inline_componentStack_2557)
         ) {
-          JSCompiler_object_inline_componentStack_2586 = workInProgressRoot;
+          JSCompiler_object_inline_componentStack_2557 = workInProgressRoot;
           if (
-            null !== JSCompiler_object_inline_componentStack_2586 &&
-            ((JSCompiler_object_inline_stack_2585 = renderLanes & -renderLanes),
-            (JSCompiler_object_inline_stack_2585 =
-              0 !== (JSCompiler_object_inline_stack_2585 & 42)
+            null !== JSCompiler_object_inline_componentStack_2557 &&
+            ((JSCompiler_object_inline_stack_2556 = renderLanes & -renderLanes),
+            (JSCompiler_object_inline_stack_2556 =
+              0 !== (JSCompiler_object_inline_stack_2556 & 42)
                 ? 1
                 : getBumpedLaneForHydrationByLane(
-                    JSCompiler_object_inline_stack_2585
+                    JSCompiler_object_inline_stack_2556
                   )),
-            (JSCompiler_object_inline_stack_2585 =
+            (JSCompiler_object_inline_stack_2556 =
               0 !==
-              (JSCompiler_object_inline_stack_2585 &
-                (JSCompiler_object_inline_componentStack_2586.suspendedLanes |
+              (JSCompiler_object_inline_stack_2556 &
+                (JSCompiler_object_inline_componentStack_2557.suspendedLanes |
                   renderLanes))
                 ? 0
-                : JSCompiler_object_inline_stack_2585),
-            0 !== JSCompiler_object_inline_stack_2585 &&
-              JSCompiler_object_inline_stack_2585 !== prevState.retryLane)
+                : JSCompiler_object_inline_stack_2556),
+            0 !== JSCompiler_object_inline_stack_2556 &&
+              JSCompiler_object_inline_stack_2556 !== prevState.retryLane)
           )
             throw (
-              ((prevState.retryLane = JSCompiler_object_inline_stack_2585),
+              ((prevState.retryLane = JSCompiler_object_inline_stack_2556),
               enqueueConcurrentRenderForLane(
                 current,
-                JSCompiler_object_inline_stack_2585
+                JSCompiler_object_inline_stack_2556
               ),
               scheduleUpdateOnFiber(
-                JSCompiler_object_inline_componentStack_2586,
+                JSCompiler_object_inline_componentStack_2557,
                 current,
-                JSCompiler_object_inline_stack_2585
+                JSCompiler_object_inline_stack_2556
               ),
               SelectiveHydrationException)
             );
-          JSCompiler_object_inline_digest_2584.data ===
+          JSCompiler_object_inline_digest_2555.data ===
             SUSPENSE_PENDING_START_DATA || renderDidSuspendDelayIfPossible();
           workInProgress = retrySuspenseComponentWithoutHydrating(
             current,
@@ -9746,14 +9644,14 @@
             renderLanes
           );
         } else
-          JSCompiler_object_inline_digest_2584.data ===
+          JSCompiler_object_inline_digest_2555.data ===
           SUSPENSE_PENDING_START_DATA
             ? ((workInProgress.flags |= 192),
               (workInProgress.child = current.child),
               (workInProgress = null))
             : ((current = prevState.treeContext),
               (nextHydratableInstance = getNextHydratable(
-                JSCompiler_object_inline_digest_2584.nextSibling
+                JSCompiler_object_inline_digest_2555.nextSibling
               )),
               (hydrationParentFiber = workInProgress),
               (isHydrating = !0),
@@ -9771,54 +9669,54 @@
                 (treeContextProvider = workInProgress)),
               (workInProgress = mountSuspensePrimaryChildren(
                 workInProgress,
-                JSCompiler_object_inline_stack_2585.children
+                JSCompiler_object_inline_stack_2556.children
               )),
               (workInProgress.flags |= 4096));
         return workInProgress;
       }
-      if (JSCompiler_object_inline_message_2583)
+      if (JSCompiler_object_inline_message_2554)
         return (
           reuseSuspenseHandlerOnStack(workInProgress),
-          (JSCompiler_object_inline_message_2583 =
-            JSCompiler_object_inline_stack_2585.fallback),
-          (JSCompiler_object_inline_digest_2584 = workInProgress.mode),
+          (JSCompiler_object_inline_message_2554 =
+            JSCompiler_object_inline_stack_2556.fallback),
+          (JSCompiler_object_inline_digest_2555 = workInProgress.mode),
           (JSCompiler_temp = current.child),
           (instance = JSCompiler_temp.sibling),
-          (JSCompiler_object_inline_stack_2585 = createWorkInProgress(
+          (JSCompiler_object_inline_stack_2556 = createWorkInProgress(
             JSCompiler_temp,
             {
               mode: "hidden",
-              children: JSCompiler_object_inline_stack_2585.children
+              children: JSCompiler_object_inline_stack_2556.children
             }
           )),
-          (JSCompiler_object_inline_stack_2585.subtreeFlags =
+          (JSCompiler_object_inline_stack_2556.subtreeFlags =
             JSCompiler_temp.subtreeFlags & 65011712),
           null !== instance
-            ? (JSCompiler_object_inline_message_2583 = createWorkInProgress(
+            ? (JSCompiler_object_inline_message_2554 = createWorkInProgress(
                 instance,
-                JSCompiler_object_inline_message_2583
+                JSCompiler_object_inline_message_2554
               ))
-            : ((JSCompiler_object_inline_message_2583 = createFiberFromFragment(
-                JSCompiler_object_inline_message_2583,
-                JSCompiler_object_inline_digest_2584,
+            : ((JSCompiler_object_inline_message_2554 = createFiberFromFragment(
+                JSCompiler_object_inline_message_2554,
+                JSCompiler_object_inline_digest_2555,
                 renderLanes,
                 null
               )),
-              (JSCompiler_object_inline_message_2583.flags |= 2)),
-          (JSCompiler_object_inline_message_2583.return = workInProgress),
-          (JSCompiler_object_inline_stack_2585.return = workInProgress),
-          (JSCompiler_object_inline_stack_2585.sibling =
-            JSCompiler_object_inline_message_2583),
-          (workInProgress.child = JSCompiler_object_inline_stack_2585),
-          (JSCompiler_object_inline_stack_2585 =
-            JSCompiler_object_inline_message_2583),
-          (JSCompiler_object_inline_message_2583 = workInProgress.child),
-          (JSCompiler_object_inline_digest_2584 = current.child.memoizedState),
-          null === JSCompiler_object_inline_digest_2584
-            ? (JSCompiler_object_inline_digest_2584 =
+              (JSCompiler_object_inline_message_2554.flags |= 2)),
+          (JSCompiler_object_inline_message_2554.return = workInProgress),
+          (JSCompiler_object_inline_stack_2556.return = workInProgress),
+          (JSCompiler_object_inline_stack_2556.sibling =
+            JSCompiler_object_inline_message_2554),
+          (workInProgress.child = JSCompiler_object_inline_stack_2556),
+          (JSCompiler_object_inline_stack_2556 =
+            JSCompiler_object_inline_message_2554),
+          (JSCompiler_object_inline_message_2554 = workInProgress.child),
+          (JSCompiler_object_inline_digest_2555 = current.child.memoizedState),
+          null === JSCompiler_object_inline_digest_2555
+            ? (JSCompiler_object_inline_digest_2555 =
                 mountSuspenseOffscreenState(renderLanes))
             : ((JSCompiler_temp =
-                JSCompiler_object_inline_digest_2584.cachePool),
+                JSCompiler_object_inline_digest_2555.cachePool),
               null !== JSCompiler_temp
                 ? ((instance = CacheContext._currentValue),
                   (JSCompiler_temp =
@@ -9826,38 +9724,38 @@
                       ? { parent: instance, pool: instance }
                       : JSCompiler_temp))
                 : (JSCompiler_temp = getSuspendedCache()),
-              (JSCompiler_object_inline_digest_2584 = {
+              (JSCompiler_object_inline_digest_2555 = {
                 baseLanes:
-                  JSCompiler_object_inline_digest_2584.baseLanes | renderLanes,
+                  JSCompiler_object_inline_digest_2555.baseLanes | renderLanes,
                 cachePool: JSCompiler_temp
               })),
-          (JSCompiler_object_inline_message_2583.memoizedState =
-            JSCompiler_object_inline_digest_2584),
-          (JSCompiler_object_inline_message_2583.childLanes =
+          (JSCompiler_object_inline_message_2554.memoizedState =
+            JSCompiler_object_inline_digest_2555),
+          (JSCompiler_object_inline_message_2554.childLanes =
             getRemainingWorkInPrimaryTree(
               current,
-              JSCompiler_object_inline_componentStack_2586,
+              JSCompiler_object_inline_componentStack_2557,
               renderLanes
             )),
           (workInProgress.memoizedState = SUSPENDED_MARKER),
-          JSCompiler_object_inline_stack_2585
+          JSCompiler_object_inline_stack_2556
         );
       pushPrimaryTreeSuspenseHandler(workInProgress);
       renderLanes = current.child;
       current = renderLanes.sibling;
       renderLanes = createWorkInProgress(renderLanes, {
         mode: "visible",
-        children: JSCompiler_object_inline_stack_2585.children
+        children: JSCompiler_object_inline_stack_2556.children
       });
       renderLanes.return = workInProgress;
       renderLanes.sibling = null;
       null !== current &&
-        ((JSCompiler_object_inline_componentStack_2586 =
+        ((JSCompiler_object_inline_componentStack_2557 =
           workInProgress.deletions),
-        null === JSCompiler_object_inline_componentStack_2586
+        null === JSCompiler_object_inline_componentStack_2557
           ? ((workInProgress.deletions = [current]),
             (workInProgress.flags |= 16))
-          : JSCompiler_object_inline_componentStack_2586.push(current));
+          : JSCompiler_object_inline_componentStack_2557.push(current));
       workInProgress.child = renderLanes;
       workInProgress.memoizedState = null;
       return renderLanes;
@@ -10422,10 +10320,10 @@
               current.$$typeof === REACT_LAZY_TYPE &&
               (workInProgress =
                 " Did you wrap a component in React.lazy() more than once?");
-            renderLanes = getComponentNameFromType(current) || current;
+            current = getComponentNameFromType(current) || current;
             throw Error(
               "Element type is invalid. Received a promise that resolves to: " +
-                renderLanes +
+                current +
                 ". Lazy element type must resolve to a class or function." +
                 workInProgress
             );
@@ -10464,15 +10362,15 @@
               throw Error(
                 "Should have a current fiber. This is a bug in React."
               );
-            returnFiber = workInProgress.pendingProps;
-            var prevState = workInProgress.memoizedState;
-            prevSibling = prevState.element;
+            var nextProps = workInProgress.pendingProps;
+            prevSibling = workInProgress.memoizedState;
+            returnFiber = prevSibling.element;
             cloneUpdateQueue(current, workInProgress);
-            processUpdateQueue(workInProgress, returnFiber, null, renderLanes);
+            processUpdateQueue(workInProgress, nextProps, null, renderLanes);
             var nextState = workInProgress.memoizedState;
-            returnFiber = nextState.cache;
-            pushProvider(workInProgress, CacheContext, returnFiber);
-            returnFiber !== prevState.cache &&
+            nextProps = nextState.cache;
+            pushProvider(workInProgress, CacheContext, nextProps);
+            nextProps !== prevSibling.cache &&
               propagateContextChanges(
                 workInProgress,
                 [CacheContext],
@@ -10480,72 +10378,66 @@
                 !0
               );
             suspendIfUpdateReadFromEntangledAsyncAction();
-            returnFiber = nextState.element;
-            if (prevState.isDehydrated)
+            nextProps = nextState.element;
+            if (prevSibling.isDehydrated)
               if (
-                ((prevState = {
-                  element: returnFiber,
+                ((prevSibling = {
+                  element: nextProps,
                   isDehydrated: !1,
                   cache: nextState.cache
                 }),
-                (workInProgress.updateQueue.baseState = prevState),
-                (workInProgress.memoizedState = prevState),
+                (workInProgress.updateQueue.baseState = prevSibling),
+                (workInProgress.memoizedState = prevSibling),
                 workInProgress.flags & 256)
               ) {
                 workInProgress = mountHostRootWithoutHydrating(
                   current,
                   workInProgress,
-                  returnFiber,
+                  nextProps,
                   renderLanes
                 );
                 break a;
-              } else if (returnFiber !== prevSibling) {
-                prevSibling = createCapturedValueAtFiber(
+              } else if (nextProps !== returnFiber) {
+                returnFiber = createCapturedValueAtFiber(
                   Error(
                     "This root received an early update, before anything was able hydrate. Switched the entire root to client rendering."
                   ),
                   workInProgress
                 );
-                queueHydrationError(prevSibling);
+                queueHydrationError(returnFiber);
                 workInProgress = mountHostRootWithoutHydrating(
                   current,
                   workInProgress,
-                  returnFiber,
+                  nextProps,
                   renderLanes
                 );
                 break a;
-              } else {
-                current = workInProgress.stateNode.containerInfo;
-                switch (current.nodeType) {
-                  case 9:
-                    current = current.body;
-                    break;
-                  default:
-                    current =
-                      "HTML" === current.nodeName
-                        ? current.ownerDocument.body
-                        : current;
-                }
-                nextHydratableInstance = getNextHydratable(current.firstChild);
-                hydrationParentFiber = workInProgress;
-                isHydrating = !0;
-                hydrationErrors = null;
-                didSuspendOrErrorDEV = !1;
-                hydrationDiffRootDEV = null;
-                rootOrSingletonContext = !0;
-                renderLanes = mountChildFibers(
-                  workInProgress,
-                  null,
-                  returnFiber,
-                  renderLanes
-                );
-                for (workInProgress.child = renderLanes; renderLanes; )
-                  (renderLanes.flags = (renderLanes.flags & -3) | 4096),
-                    (renderLanes = renderLanes.sibling);
-              }
+              } else
+                for (
+                  nextHydratableInstance = getNextHydratable(
+                    workInProgress.stateNode.containerInfo.firstChild
+                  ),
+                    hydrationParentFiber = workInProgress,
+                    isHydrating = !0,
+                    hydrationErrors = null,
+                    didSuspendOrErrorDEV = !1,
+                    hydrationDiffRootDEV = null,
+                    rootOrSingletonContext = !0,
+                    current = mountChildFibers(
+                      workInProgress,
+                      null,
+                      nextProps,
+                      renderLanes
+                    ),
+                    workInProgress.child = current;
+                  current;
+
+                )
+                  (current.flags = (current.flags & -3) | 4096),
+                    (current = current.sibling);
             else {
               resetHydrationState();
-              if (returnFiber === prevSibling) {
+              if (nextProps === returnFiber) {
                 workInProgress = bailoutOnAlreadyFinishedWork(
                   current,
                   workInProgress,
@@ -10556,7 +10448,7 @@
               reconcileChildren(
                 current,
                 workInProgress,
-                returnFiber,
+                nextProps,
                 renderLanes
               );
             }
@@ -10567,26 +10459,26 @@
           return (
             markRef(current, workInProgress),
             null === current
-              ? (renderLanes = getResource(
+              ? (current = getResource(
                   workInProgress.type,
                   null,
                   workInProgress.pendingProps,
                   null
                 ))
-                ? (workInProgress.memoizedState = renderLanes)
+                ? (workInProgress.memoizedState = current)
                 : isHydrating ||
-                  ((renderLanes = workInProgress.type),
-                  (current = workInProgress.pendingProps),
+                  ((current = workInProgress.type),
+                  (renderLanes = workInProgress.pendingProps),
                   (returnFiber = requiredContext(
                     rootInstanceStackCursor.current
                   )),
                   (returnFiber =
                     getOwnerDocumentFromRootContainer(
                       returnFiber
-                    ).createElement(renderLanes)),
+                    ).createElement(current)),
                   (returnFiber[internalInstanceKey] = workInProgress),
-                  (returnFiber[internalPropsKey] = current),
-                  setInitialProperties(returnFiber, renderLanes, current),
+                  (returnFiber[internalPropsKey] = renderLanes),
+                  setInitialProperties(returnFiber, current, renderLanes),
                   markNodeAsHoistable(returnFiber),
                   (workInProgress.stateNode = returnFiber))
               : (workInProgress.memoizedState = getResource(
@@ -10602,53 +10494,56 @@
             pushHostContext(workInProgress),
             null === current &&
               isHydrating &&
-              ((returnFiber = requiredContext(rootInstanceStackCursor.current)),
-              (prevSibling = getHostContext()),
-              (returnFiber = workInProgress.stateNode =
+              ((prevSibling = requiredContext(rootInstanceStackCursor.current)),
+              (returnFiber = getHostContext()),
+              (prevSibling = workInProgress.stateNode =
                 resolveSingletonInstance(
                   workInProgress.type,
                   workInProgress.pendingProps,
-                  returnFiber,
                   prevSibling,
+                  returnFiber,
                   !1
                 )),
               didSuspendOrErrorDEV ||
-                ((prevSibling = diffHydratedProperties(
-                  returnFiber,
+                ((returnFiber = diffHydratedProperties(
+                  prevSibling,
                   workInProgress.type,
                   workInProgress.pendingProps,
-                  prevSibling
+                  returnFiber
                 )),
-                null !== prevSibling &&
+                null !== returnFiber &&
                   (buildHydrationDiffNode(workInProgress, 0).serverProps =
-                    prevSibling)),
+                    returnFiber)),
               (hydrationParentFiber = workInProgress),
               (rootOrSingletonContext = !0),
-              (prevSibling = nextHydratableInstance),
-              isSingletonScope(workInProgress.type)
-                ? ((previousHydratableOnEnteringScopedSingleton = prevSibling),
-                  (nextHydratableInstance = getNextHydratable(
-                    returnFiber.firstChild
-                  )))
-                : (nextHydratableInstance = prevSibling)),
-            reconcileChildren(
-              current,
-              workInProgress,
-              workInProgress.pendingProps.children,
-              renderLanes
-            ),
+              (nextHydratableInstance = getNextHydratable(
+                prevSibling.firstChild
+              ))),
+            (returnFiber = workInProgress.pendingProps.children),
+            null !== current || isHydrating
+              ? reconcileChildren(
+                  current,
+                  workInProgress,
+                  returnFiber,
+                  renderLanes
+                )
+              : (workInProgress.child = reconcileChildFibers(
+                  workInProgress,
+                  null,
+                  returnFiber,
+                  renderLanes
+                )),
             markRef(current, workInProgress),
-            null === current && (workInProgress.flags |= 4194304),
             workInProgress.child
           );
         case 5:
           return (
             null === current &&
               isHydrating &&
-              ((prevState = getHostContext()),
+              ((nextProps = getHostContext()),
               (returnFiber = validateDOMNesting(
                 workInProgress.type,
-                prevState.ancestorInfo
+                nextProps.ancestorInfo
               )),
               (prevSibling = nextHydratableInstance),
               (nextState = !prevSibling) ||
@@ -10661,33 +10556,33 @@
                 null !== nextState
                   ? ((workInProgress.stateNode = nextState),
                     didSuspendOrErrorDEV ||
-                      ((prevState = diffHydratedProperties(
+                      ((nextProps = diffHydratedProperties(
                         nextState,
                         workInProgress.type,
                         workInProgress.pendingProps,
-                        prevState
+                        nextProps
                       )),
-                      null !== prevState &&
+                      null !== nextProps &&
                         (buildHydrationDiffNode(workInProgress, 0).serverProps =
-                          prevState)),
+                          nextProps)),
                     (hydrationParentFiber = workInProgress),
                     (nextHydratableInstance = getNextHydratable(
                       nextState.firstChild
                     )),
                     (rootOrSingletonContext = !1),
-                    (prevState = !0))
-                  : (prevState = !1),
-                (nextState = !prevState)),
+                    (nextProps = !0))
+                  : (nextProps = !1),
+                (nextState = !nextProps)),
               nextState &&
                 (returnFiber &&
                   warnNonHydratedInstance(workInProgress, prevSibling),
                 throwOnHydrationMismatch(workInProgress))),
             pushHostContext(workInProgress),
             (prevSibling = workInProgress.type),
-            (prevState = workInProgress.pendingProps),
+            (nextProps = workInProgress.pendingProps),
             (nextState = null !== current ? current.memoizedProps : null),
-            (returnFiber = prevState.children),
-            shouldSetTextContent(prevSibling, prevState)
+            (returnFiber = nextProps.children),
+            shouldSetTextContent(prevSibling, nextProps)
               ? (returnFiber = null)
               : null !== nextState &&
                 shouldSetTextContent(prevSibling, nextState) &&
@@ -10715,21 +10610,16 @@
           return (
             null === current &&
               isHydrating &&
-              ((renderLanes = workInProgress.pendingProps),
-              (current = getHostContext()),
-              (returnFiber = current.ancestorInfo.current),
-              (renderLanes =
-                null != returnFiber
-                  ? validateTextNesting(
-                      renderLanes,
-                      returnFiber.tag,
-                      current.ancestorInfo.implicitRootScope
-                    )
+              ((current = workInProgress.pendingProps),
+              (renderLanes = getHostContext().ancestorInfo.current),
+              (current =
+                null != renderLanes
+                  ? validateTextNesting(current, renderLanes.tag)
                   : !0),
-              (current = nextHydratableInstance),
-              (returnFiber = !current) ||
+              (renderLanes = nextHydratableInstance),
+              (returnFiber = !renderLanes) ||
                 ((returnFiber = canHydrateTextInstance(
-                  current,
+                  renderLanes,
                   workInProgress.pendingProps,
                   rootOrSingletonContext
                 )),
@@ -10741,8 +10631,8 @@
                   : (returnFiber = !1),
                 (returnFiber = !returnFiber)),
               returnFiber &&
-                (renderLanes &&
-                  warnNonHydratedInstance(workInProgress, current),
+                (current &&
+                  warnNonHydratedInstance(workInProgress, renderLanes),
                 throwOnHydrationMismatch(workInProgress))),
             null
           );
@@ -10817,14 +10707,14 @@
           return (
             (returnFiber = workInProgress.type),
             (prevSibling = workInProgress.pendingProps),
-            (prevState = prevSibling.value),
+            (nextProps = prevSibling.value),
             "value" in prevSibling ||
               hasWarnedAboutUsingNoValuePropOnContextProvider ||
               ((hasWarnedAboutUsingNoValuePropOnContextProvider = !0),
               console.error(
                 "The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?"
               )),
-            pushProvider(workInProgress, returnFiber, prevState),
+            pushProvider(workInProgress, returnFiber, nextProps),
             reconcileChildren(
               current,
               workInProgress,
@@ -10889,12 +10779,12 @@
               ? ((prevSibling = peekCacheFromPool()),
                 null === prevSibling &&
                   ((prevSibling = workInProgressRoot),
-                  (prevState = createCache()),
-                  (prevSibling.pooledCache = prevState),
-                  retainCache(prevState),
-                  null !== prevState &&
+                  (nextProps = createCache()),
+                  (prevSibling.pooledCache = nextProps),
+                  retainCache(nextProps),
+                  null !== nextProps &&
                     (prevSibling.pooledCacheLanes |= renderLanes),
-                  (prevSibling = prevState)),
+                  (prevSibling = nextProps)),
                 (workInProgress.memoizedState = {
                   parent: returnFiber,
                   cache: prevSibling
@@ -10906,7 +10796,7 @@
                   processUpdateQueue(workInProgress, null, null, renderLanes),
                   suspendIfUpdateReadFromEntangledAsyncAction()),
                 (prevSibling = current.memoizedState),
-                (prevState = workInProgress.memoizedState),
+                (nextProps = workInProgress.memoizedState),
                 prevSibling.parent !== returnFiber
                   ? ((prevSibling = {
                       parent: returnFiber,
@@ -10918,7 +10808,7 @@
                         workInProgress.updateQueue.baseState =
                           prevSibling),
                     pushProvider(workInProgress, CacheContext, returnFiber))
-                  : ((returnFiber = prevState.cache),
+                  : ((returnFiber = nextProps.cache),
                     pushProvider(workInProgress, CacheContext, returnFiber),
                     returnFiber !== prevSibling.cache &&
                       propagateContextChanges(
@@ -10940,21 +10830,23 @@
             (returnFiber = workInProgress.pendingProps),
             (prevSibling = workInProgress.stateNode),
             null != returnFiber.name && "auto" !== returnFiber.name
-              ? (workInProgress.flags |= null === current ? 18882560 : 18874368)
+              ? ((workInProgress.flags |= 2097152),
+                null === current &&
+                  trackAppearingViewTransition(prevSibling, returnFiber.name))
               : null === prevSibling.autoName &&
-                ((prevState = workInProgressRoot.identifierPrefix),
+                ((nextProps = workInProgressRoot.identifierPrefix),
                 isHydrating
                   ? ((nextState = getTreeId()),
-                    (prevState =
-                      "\u00ab" + prevState + "T" + nextState + "\u00bb"))
+                    (nextProps =
+                      "\u00ab" + nextProps + "T" + nextState + "\u00bb"))
                   : ((nextState = globalClientIdCounter++),
-                    (prevState =
+                    (nextProps =
                       "\u00ab" +
-                      prevState +
+                      nextProps +
                       "t" +
                       nextState.toString(32) +
                       "\u00bb")),
-                (prevSibling.autoName = prevState)),
+                (prevSibling.autoName = nextProps)),
             null !== current && current.memoizedProps.name !== returnFiber.name
               ? (workInProgress.flags |= 4194816)
               : markRef(current, workInProgress),
@@ -11083,11 +10975,10 @@
                 ((inst.destroy = void 0),
                 (flags & Insertion) !== NoFlags &&
                   (isRunningInsertionEffect = !0),
-                (lastEffect = finishedWork),
                 runWithFiberInDEV(
-                  lastEffect,
+                  finishedWork,
                   callDestroyInDEV,
-                  lastEffect,
+                  finishedWork,
                   nearestMountedAncestor,
                   destroy
                 ),
@@ -11400,7 +11291,7 @@
         5 === fiber.tag ||
         3 === fiber.tag ||
         26 === fiber.tag ||
-        (27 === fiber.tag && isSingletonScope(fiber.type)) ||
+        27 === fiber.tag ||
         4 === fiber.tag
       );
     }
@@ -11413,10 +11304,12 @@
         fiber.sibling.return = fiber.return;
         for (
           fiber = fiber.sibling;
-          5 !== fiber.tag && 6 !== fiber.tag && 18 !== fiber.tag;
+          5 !== fiber.tag &&
+          6 !== fiber.tag &&
+          27 !== fiber.tag &&
+          18 !== fiber.tag;
 
         ) {
-          if (27 === fiber.tag && isSingletonScope(fiber.type)) continue a;
           if (fiber.flags & 2) continue a;
           if (null === fiber.child || 4 === fiber.tag) continue a;
           else (fiber.child.return = fiber), (fiber = fiber.child);
@@ -11429,32 +11322,19 @@
       if (5 === tag || 6 === tag)
         (node = node.stateNode),
           before
-            ? (9 === parent.nodeType
-                ? parent.body
-                : "HTML" === parent.nodeName
-                  ? parent.ownerDocument.body
-                  : parent
-              ).insertBefore(node, before)
-            : ((before =
-                9 === parent.nodeType
-                  ? parent.body
-                  : "HTML" === parent.nodeName
-                    ? parent.ownerDocument.body
-                    : parent),
-              before.appendChild(node),
+            ? 8 === parent.nodeType
+              ? parent.parentNode.insertBefore(node, before)
+              : parent.insertBefore(node, before)
+            : (8 === parent.nodeType
+                ? ((before = parent.parentNode),
+                  before.insertBefore(node, parent))
+                : ((before = parent), before.appendChild(node)),
               (parent = parent._reactRootContainer),
               (null !== parent && void 0 !== parent) ||
                 null !== before.onclick ||
                 (before.onclick = noop$2)),
           (viewTransitionMutationContext = !0);
-      else if (
-        4 !== tag &&
-        (27 === tag &&
-          isSingletonScope(node.type) &&
-          ((parent = node.stateNode), (before = null)),
-        (node = node.child),
-        null !== node)
-      )
+      else if (4 !== tag && 27 !== tag && ((node = node.child), null !== node))
         for (
           insertOrAppendPlacementNodeIntoContainer(node, before, parent),
             node = node.sibling;
@@ -11470,12 +11350,7 @@
         (node = node.stateNode),
           before ? parent.insertBefore(node, before) : parent.appendChild(node),
           (viewTransitionMutationContext = !0);
-      else if (
-        4 !== tag &&
-        (27 === tag && isSingletonScope(node.type) && (parent = node.stateNode),
-        (node = node.child),
-        null !== node)
-      )
+      else if (4 !== tag && 27 !== tag && ((node = node.child), null !== node))
         for (
           insertOrAppendPlacementNode(node, before, parent),
             node = node.sibling;
@@ -11486,64 +11361,55 @@
             (node = node.sibling);
     }
     function commitPlacement(finishedWork) {
-      a: {
-        for (var parent = finishedWork.return; null !== parent; ) {
-          if (isHostParent(parent)) {
-            var parentFiber = parent;
-            break a;
+      if (27 !== finishedWork.tag) {
+        a: {
+          for (var parent = finishedWork.return; null !== parent; ) {
+            if (isHostParent(parent)) {
+              var parentFiber = parent;
+              break a;
+            }
+            parent = parent.return;
           }
-          parent = parent.return;
-        }
-        throw Error(
-          "Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue."
-        );
-      }
-      switch (parentFiber.tag) {
-        case 27:
-          parent = parentFiber.stateNode;
-          parentFiber = getHostSibling(finishedWork);
-          insertOrAppendPlacementNode(finishedWork, parentFiber, parent);
-          break;
-        case 5:
-          parent = parentFiber.stateNode;
-          parentFiber.flags & 32 &&
-            (resetTextContent(parent), (parentFiber.flags &= -33));
-          parentFiber = getHostSibling(finishedWork);
-          insertOrAppendPlacementNode(finishedWork, parentFiber, parent);
-          break;
-        case 3:
-        case 4:
-          parent = parentFiber.stateNode.containerInfo;
-          parentFiber = getHostSibling(finishedWork);
-          insertOrAppendPlacementNodeIntoContainer(
-            finishedWork,
-            parentFiber,
-            parent
-          );
-          break;
-        default:
           throw Error(
-            "Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue."
+            "Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue."
           );
+        }
+        switch (parentFiber.tag) {
+          case 27:
+            parent = parentFiber.stateNode;
+            parentFiber = getHostSibling(finishedWork);
+            insertOrAppendPlacementNode(finishedWork, parentFiber, parent);
+            break;
+          case 5:
+            parent = parentFiber.stateNode;
+            parentFiber.flags & 32 &&
+              (resetTextContent(parent), (parentFiber.flags &= -33));
+            parentFiber = getHostSibling(finishedWork);
+            insertOrAppendPlacementNode(finishedWork, parentFiber, parent);
+            break;
+          case 3:
+          case 4:
+            parent = parentFiber.stateNode.containerInfo;
+            parentFiber = getHostSibling(finishedWork);
+            insertOrAppendPlacementNodeIntoContainer(
+              finishedWork,
+              parentFiber,
+              parent
+            );
+            break;
+          default:
+            throw Error(
+              "Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue."
+            );
+        }
       }
     }
-    function commitHostSingletonAcquisition(finishedWork) {
-      var singleton = finishedWork.stateNode,
-        props = finishedWork.memoizedProps;
-      try {
-        runWithFiberInDEV(
-          finishedWork,
-          acquireSingletonInstance,
-          finishedWork.type,
-          props,
-          singleton,
-          finishedWork
-        );
-      } catch (error) {
-        captureCommitPhaseError(finishedWork, finishedWork.return, error);
-      }
-    }
-    function commitBeforeMutationEffects(root, firstChild, committedLanes) {
+    function commitBeforeMutationEffects(
+      root,
+      firstChild,
+      committedLanes,
+      appearingViewTransitions
+    ) {
       root = root.containerInfo;
       eventsEnabled = _enabled;
       root = getActiveElementDeep(root);
@@ -11617,7 +11483,7 @@
         selectionRange: JSCompiler_temp
       };
       shouldStartViewTransition = _enabled = !1;
-      committedLanes = (committedLanes & 335544064) === committedLanes;
+      committedLanes = (committedLanes & 335544192) === committedLanes;
       nextEffect = firstChild;
       for (firstChild = committedLanes ? 9238 : 1028; null !== nextEffect; ) {
         root = nextEffect;
@@ -11631,7 +11497,10 @@
             anchorOffset++
           )
             committedLanes &&
-              commitExitViewTransitions(JSCompiler_temp[anchorOffset]);
+              commitExitViewTransitions(
+                JSCompiler_temp[anchorOffset],
+                appearingViewTransitions
+              );
         if (null === root.alternate && 0 !== (root.flags & 2))
           commitBeforeMutationEffects_complete(committedLanes);
         else {
@@ -11642,7 +11511,10 @@
               null !== JSCompiler_temp &&
                 null === JSCompiler_temp.memoizedState &&
                 committedLanes &&
-                commitExitViewTransitions(JSCompiler_temp);
+                commitExitViewTransitions(
+                  JSCompiler_temp,
+                  appearingViewTransitions
+                );
               commitBeforeMutationEffects_complete(committedLanes);
               continue;
             } else if (
@@ -11659,7 +11531,6 @@
               commitBeforeMutationEffects_complete(committedLanes));
         }
       }
-      appearingViewTransitions = null;
     }
     function commitBeforeMutationEffects_complete(
       isViewTransitionEligible$jscomp$0
@@ -11832,13 +11703,13 @@
       }
     }
     function commitAppearingPairViewTransitions(placement) {
-      if (0 !== (placement.subtreeFlags & 18874368))
+      if (0 !== (placement.subtreeFlags & 2097152))
         for (placement = placement.child; null !== placement; ) {
           if (22 !== placement.tag || null !== placement.memoizedState)
             if (
               (commitAppearingPairViewTransitions(placement),
               30 === placement.tag &&
-                0 !== (placement.flags & 18874368) &&
+                0 !== (placement.flags & 2097152) &&
                 placement.stateNode.paired)
             ) {
               var props = placement.memoizedProps;
@@ -11890,52 +11761,55 @@
             (placement = placement.sibling);
       else commitAppearingPairViewTransitions(placement);
     }
-    function commitDeletedPairViewTransitions(deletion) {
+    function commitDeletedPairViewTransitions(
+      deletion,
+      appearingViewTransitions
+    ) {
       if (
-        null !== appearingViewTransitions &&
-        0 !== appearingViewTransitions.size
-      ) {
-        var pairs = appearingViewTransitions;
-        if (0 !== (deletion.subtreeFlags & 18874368))
-          for (deletion = deletion.child; null !== deletion; ) {
-            if (22 !== deletion.tag || null !== deletion.memoizedState) {
-              if (30 === deletion.tag && 0 !== (deletion.flags & 18874368)) {
-                var props = deletion.memoizedProps,
-                  name = props.name;
-                if (null != name && "auto" !== name) {
-                  var pair = pairs.get(name);
-                  if (void 0 !== pair) {
-                    var className = getViewTransitionClassName(
-                      props.className,
-                      props.share
-                    );
-                    "none" !== className &&
-                      ((viewTransitionHostInstanceIdx = 0),
-                      applyViewTransitionToHostInstances(
-                        deletion.child,
-                        name,
-                        className,
-                        null,
-                        !1
-                      )
-                        ? ((pair.paired = deletion.stateNode),
-                          scheduleViewTransitionEvent(deletion, props.onShare))
-                        : restoreViewTransitionOnHostInstances(
-                            deletion.child,
-                            !1
-                          ));
-                    pairs.delete(name);
-                    if (0 === pairs.size) break;
-                  }
+        0 !== appearingViewTransitions.size &&
+        0 !== (deletion.subtreeFlags & 2097152)
+      )
+        for (deletion = deletion.child; null !== deletion; ) {
+          if (22 !== deletion.tag || null !== deletion.memoizedState) {
+            if (30 === deletion.tag && 0 !== (deletion.flags & 2097152)) {
+              var props = deletion.memoizedProps,
+                name = props.name;
+              if (null != name && "auto" !== name) {
+                var pair = appearingViewTransitions.get(name);
+                if (void 0 !== pair) {
+                  var className = getViewTransitionClassName(
+                    props.className,
+                    props.share
+                  );
+                  "none" !== className &&
+                    ((viewTransitionHostInstanceIdx = 0),
+                    applyViewTransitionToHostInstances(
+                      deletion.child,
+                      name,
+                      className,
+                      null,
+                      !1
+                    )
+                      ? ((pair.paired = deletion.stateNode),
+                        scheduleViewTransitionEvent(deletion, props.onShare))
+                      : restoreViewTransitionOnHostInstances(
+                          deletion.child,
+                          !1
+                        ));
+                  appearingViewTransitions.delete(name);
+                  if (0 === appearingViewTransitions.size) break;
                 }
               }
-              commitDeletedPairViewTransitions(deletion);
             }
-            deletion = deletion.sibling;
+            commitDeletedPairViewTransitions(
+              deletion,
+              appearingViewTransitions
+            );
           }
-      }
+          deletion = deletion.sibling;
+        }
     }
-    function commitExitViewTransitions(deletion) {
+    function commitExitViewTransitions(deletion, appearingViewTransitions) {
       if (30 === deletion.tag) {
         var props = deletion.memoizedProps,
           name = getViewTransitionName(props, deletion.stateNode),
@@ -11963,13 +11837,14 @@
               : scheduleViewTransitionEvent(deletion, props.onExit)
             : restoreViewTransitionOnHostInstances(deletion.child, !1));
         null !== appearingViewTransitions &&
-          commitDeletedPairViewTransitions(deletion);
+          commitDeletedPairViewTransitions(deletion, appearingViewTransitions);
       } else if (0 !== (deletion.subtreeFlags & 33554432))
         for (deletion = deletion.child; null !== deletion; )
-          commitExitViewTransitions(deletion), (deletion = deletion.sibling);
+          commitExitViewTransitions(deletion, appearingViewTransitions),
+            (deletion = deletion.sibling);
       else
         null !== appearingViewTransitions &&
-          commitDeletedPairViewTransitions(deletion);
+          commitDeletedPairViewTransitions(deletion, appearingViewTransitions);
     }
     function commitNestedViewTransitions(changedParent) {
       for (changedParent = changedParent.child; null !== changedParent; ) {
@@ -11993,10 +11868,10 @@
       }
     }
     function restorePairedViewTransitions(parent) {
-      if (0 !== (parent.subtreeFlags & 18874368))
+      if (0 !== (parent.subtreeFlags & 2097152))
         for (parent = parent.child; null !== parent; ) {
           if (22 !== parent.tag || null !== parent.memoizedState) {
-            if (30 === parent.tag && 0 !== (parent.flags & 18874368)) {
+            if (30 === parent.tag && 0 !== (parent.flags & 2097152)) {
               var instance = parent.stateNode;
               null !== instance.paired &&
                 ((instance.paired = null),
@@ -12298,11 +12173,11 @@
           }
           finishedRoot.effectDuration += popNestedEffectDurations(current);
           break;
-        case 27:
-          null === current &&
-            flags & 4 &&
-            commitHostSingletonAcquisition(finishedWork);
         case 26:
+          recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
+          flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);
+          break;
+        case 27:
         case 5:
           recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
           null === current && flags & 4 && commitHostMount(finishedWork);
@@ -12462,19 +12337,16 @@
             safelyDetachRef(deletedFiber, nearestMountedAncestor);
           var prevHostParent = hostParent,
             prevHostParentIsContainer = hostParentIsContainer;
-          isSingletonScope(deletedFiber.type) &&
-            ((hostParent = deletedFiber.stateNode),
-            (hostParentIsContainer = !1));
+          hostParent = deletedFiber.stateNode;
           recursivelyTraverseDeletionEffects(
             finishedRoot,
             nearestMountedAncestor,
             deletedFiber
           );
-          runWithFiberInDEV(
-            deletedFiber,
-            releaseSingletonInstance,
-            deletedFiber.stateNode
-          );
+          deletedFiber = deletedFiber.stateNode;
+          for (finishedRoot = deletedFiber.attributes; finishedRoot.length; )
+            deletedFiber.removeAttributeNode(finishedRoot[0]);
+          detachDeletedInstance(deletedFiber);
           hostParent = prevHostParent;
           hostParentIsContainer = prevHostParentIsContainer;
           break;
@@ -12530,14 +12402,11 @@
           null !== hostParent &&
             (hostParentIsContainer
               ? ((finishedRoot = hostParent),
-                clearSuspenseBoundary(
-                  9 === finishedRoot.nodeType
-                    ? finishedRoot.body
-                    : "HTML" === finishedRoot.nodeName
-                      ? finishedRoot.ownerDocument.body
-                      : finishedRoot,
-                  deletedFiber.stateNode
-                ),
+                (deletedFiber = deletedFiber.stateNode),
+                8 === finishedRoot.nodeType
+                  ? clearSuspenseBoundary(finishedRoot.parentNode, deletedFiber)
+                  : 1 === finishedRoot.nodeType &&
+                    clearSuspenseBoundary(finishedRoot, deletedFiber),
                 retryIfBlockedOn(finishedRoot))
               : clearSuspenseBoundary(hostParent, deletedFiber.stateNode));
           break;
@@ -12695,17 +12564,14 @@
           a: for (; null !== parent; ) {
             switch (parent.tag) {
               case 27:
-                if (isSingletonScope(parent.type)) {
-                  hostParent = parent.stateNode;
-                  hostParentIsContainer = !1;
-                  break a;
-                }
-                break;
               case 5:
                 hostParent = parent.stateNode;
                 hostParentIsContainer = !1;
                 break a;
               case 3:
+                hostParent = parent.stateNode.containerInfo;
+                hostParentIsContainer = !0;
+                break a;
               case 4:
                 hostParent = parent.stateNode.containerInfo;
                 hostParentIsContainer = !0;
@@ -12935,20 +12801,35 @@
                   );
           break;
         case 27:
-          recursivelyTraverseMutationEffects(root, finishedWork, lanes);
-          commitReconciliationEffects(finishedWork);
-          flags & 512 &&
-            (offscreenSubtreeWasHidden ||
-              null === current ||
-              safelyDetachRef(current, current.return));
-          null !== current &&
-            flags & 4 &&
-            commitHostUpdate(
-              finishedWork,
-              finishedWork.memoizedProps,
-              current.memoizedProps
-            );
-          break;
+          if (flags & 4 && null === finishedWork.alternate) {
+            hoistableRoot = finishedWork.stateNode;
+            i = finishedWork.memoizedProps;
+            try {
+              for (var node = hoistableRoot.firstChild; node; ) {
+                var nextNode = node.nextSibling,
+                  nodeName = node.nodeName;
+                node[internalHoistableMarker] ||
+                  "HEAD" === nodeName ||
+                  "BODY" === nodeName ||
+                  "SCRIPT" === nodeName ||
+                  "STYLE" === nodeName ||
+                  ("LINK" === nodeName &&
+                    "stylesheet" === node.rel.toLowerCase()) ||
+                  hoistableRoot.removeChild(node);
+                node = nextNode;
+              }
+              runWithFiberInDEV(
+                finishedWork,
+                acquireSingletonInstance,
+                finishedWork.type,
+                i,
+                hoistableRoot,
+                finishedWork
+              );
+            } catch (error) {
+              captureCommitPhaseError(finishedWork, finishedWork.return, error);
+            }
+          }
         case 5:
           recursivelyTraverseMutationEffects(root, finishedWork, lanes);
           commitReconciliationEffects(finishedWork);
@@ -13065,17 +12946,15 @@
             (offscreenSubtreeWasHidden ||
               null === current ||
               safelyDetachRef(current, current.return));
-          hoistableRoot = null !== finishedWork.memoizedState;
-          var wasHidden = null !== current && null !== current.memoizedState,
-            prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden,
-            prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
-          offscreenSubtreeIsHidden =
-            prevOffscreenSubtreeIsHidden || hoistableRoot;
-          offscreenSubtreeWasHidden =
-            prevOffscreenSubtreeWasHidden || wasHidden;
+          node = null !== finishedWork.memoizedState;
+          nextNode = null !== current && null !== current.memoizedState;
+          nodeName = offscreenSubtreeIsHidden;
+          var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
+          offscreenSubtreeIsHidden = nodeName || node;
+          offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || nextNode;
           recursivelyTraverseMutationEffects(root, finishedWork, lanes);
           offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
-          offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;
+          offscreenSubtreeIsHidden = nodeName;
           commitReconciliationEffects(finishedWork);
           root = finishedWork.stateNode;
           root._current = finishedWork;
@@ -13083,26 +12962,26 @@
           root._visibility |= root._pendingVisibility & OffscreenDetached;
           if (
             flags & 8192 &&
-            ((root._visibility = hoistableRoot
+            ((root._visibility = node
               ? root._visibility & ~OffscreenVisible
               : root._visibility | OffscreenVisible),
-            hoistableRoot &&
-              (null === current ||
-                wasHidden ||
-                offscreenSubtreeIsHidden ||
-                offscreenSubtreeWasHidden ||
+            node &&
+              ((root = offscreenSubtreeIsHidden || offscreenSubtreeWasHidden),
+              null === current ||
+                nextNode ||
+                root ||
                 recursivelyTraverseDisappearLayoutEffects(finishedWork)),
             null === finishedWork.memoizedProps ||
               "manual" !== finishedWork.memoizedProps.mode)
           )
             a: for (current = null, root = finishedWork; ; ) {
-              if (5 === root.tag || 26 === root.tag) {
+              if (5 === root.tag || 26 === root.tag || 27 === root.tag) {
                 if (null === current) {
                   lanes = current = root;
                   try {
-                    (i = lanes.stateNode),
-                      hoistableRoot
-                        ? runWithFiberInDEV(lanes, hideInstance, i)
+                    (hoistableRoot = lanes.stateNode),
+                      node
+                        ? runWithFiberInDEV(lanes, hideInstance, hoistableRoot)
                         : runWithFiberInDEV(
                             lanes,
                             unhideInstance,
@@ -13117,15 +12996,15 @@
                 if (null === current) {
                   lanes = root;
                   try {
-                    var instance = lanes.stateNode;
-                    hoistableRoot
-                      ? runWithFiberInDEV(lanes, hideTextInstance, instance)
-                      : runWithFiberInDEV(
-                          lanes,
-                          unhideTextInstance,
-                          instance,
-                          lanes.memoizedProps
-                        );
+                    (i = lanes.stateNode),
+                      node
+                        ? runWithFiberInDEV(lanes, hideTextInstance, i)
+                        : runWithFiberInDEV(
+                            lanes,
+                            unhideTextInstance,
+                            i,
+                            lanes.memoizedProps
+                          );
                   } catch (error) {
                     captureCommitPhaseError(lanes, lanes.return, error);
                   }
@@ -13177,7 +13056,7 @@
           viewTransitionMutationContext = !1;
           recursivelyTraverseMutationEffects(root, finishedWork, lanes);
           commitReconciliationEffects(finishedWork);
-          (lanes & 335544064) === lanes &&
+          (lanes & 335544192) === lanes &&
             null !== current &&
             viewTransitionMutationContext &&
             (finishedWork.flags |= 4);
@@ -13312,7 +13191,7 @@
                   ),
                   layoutClassName = getViewTransitionClassName(
                     root.className,
-                    root.layout
+                    root.update
                   );
                 if ("none" === updateClassName) {
                   if ("none" === layoutClassName) {
@@ -13408,13 +13287,8 @@
             );
           recursivelyTraverseDisappearLayoutEffects(finishedWork);
           break;
-        case 27:
-          runWithFiberInDEV(
-            finishedWork,
-            releaseSingletonInstance,
-            finishedWork.stateNode
-          );
         case 26:
+        case 27:
         case 5:
           safelyDetachRef(finishedWork, finishedWork.return);
           recursivelyTraverseDisappearLayoutEffects(finishedWork);
@@ -13501,9 +13375,8 @@
             commitClassCallbacks(finishedWork);
           safelyAttachRef(finishedWork, finishedWork.return);
           break;
-        case 27:
-          commitHostSingletonAcquisition(finishedWork);
         case 26:
+        case 27:
         case 5:
           recursivelyTraverseReappearLayoutEffects(
             finishedRoot,
@@ -13640,7 +13513,7 @@
       endTime
     ) {
       var isViewTransitionEligible =
-        (committedLanes & 335544064) === committedLanes;
+        (committedLanes & 335544192) === committedLanes;
       if (
         parentFiber.subtreeFlags & (isViewTransitionEligible ? 10262 : 10256) ||
         (0 !== parentFiber.actualDuration &&
@@ -13681,7 +13554,7 @@
           inHydratedSubtree
         );
       var isViewTransitionEligible =
-        (committedLanes & 335544064) === committedLanes;
+        (committedLanes & 335544192) === committedLanes;
       isViewTransitionEligible &&
         null === finishedWork.alternate &&
         null !== finishedWork.return &&
@@ -14178,20 +14051,6 @@
                 (suspenseyCommitFlag = previousHoistableRoot))
               : recursivelyAccumulateSuspenseyCommit(fiber));
           break;
-        case 30:
-          if (
-            0 !== (fiber.flags & suspenseyCommitFlag) &&
-            ((previousHoistableRoot = fiber.memoizedProps.name),
-            null != previousHoistableRoot && "auto" !== previousHoistableRoot)
-          ) {
-            null === appearingViewTransitions &&
-              (appearingViewTransitions = new Map());
-            var instance = fiber.stateNode;
-            instance.paired = null;
-            appearingViewTransitions.set(previousHoistableRoot, instance);
-          }
-          recursivelyAccumulateSuspenseyCommit(fiber);
-          break;
         default:
           recursivelyAccumulateSuspenseyCommit(fiber);
       }
@@ -14902,14 +14761,14 @@
     function popToNextHostParent(fiber) {
       for (hydrationParentFiber = fiber.return; hydrationParentFiber; )
         switch (hydrationParentFiber.tag) {
+          case 3:
+          case 27:
+            rootOrSingletonContext = !0;
+            return;
           case 5:
           case 13:
             rootOrSingletonContext = !1;
             return;
-          case 27:
-          case 3:
-            rootOrSingletonContext = !0;
-            return;
           default:
             hydrationParentFiber = hydrationParentFiber.return;
         }
@@ -14918,31 +14777,32 @@
       if (fiber !== hydrationParentFiber) return !1;
       if (!isHydrating)
         return popToNextHostParent(fiber), (isHydrating = !0), !1;
-      var tag = fiber.tag,
+      var shouldClear = !1,
         JSCompiler_temp;
-      if ((JSCompiler_temp = 3 !== tag && 27 !== tag)) {
-        if ((JSCompiler_temp = 5 === tag))
+      if ((JSCompiler_temp = 3 !== fiber.tag && 27 !== fiber.tag)) {
+        if ((JSCompiler_temp = 5 === fiber.tag))
           (JSCompiler_temp = fiber.type),
             (JSCompiler_temp =
               !("form" !== JSCompiler_temp && "button" !== JSCompiler_temp) ||
               shouldSetTextContent(fiber.type, fiber.memoizedProps));
         JSCompiler_temp = !JSCompiler_temp;
       }
-      if (JSCompiler_temp && nextHydratableInstance) {
-        for (JSCompiler_temp = nextHydratableInstance; JSCompiler_temp; ) {
-          var diffNode = buildHydrationDiffNode(fiber, 0),
-            description =
-              describeHydratableInstanceForDevWarnings(JSCompiler_temp);
-          diffNode.serverTail.push(description);
-          JSCompiler_temp =
+      JSCompiler_temp && (shouldClear = !0);
+      if (shouldClear && nextHydratableInstance) {
+        for (shouldClear = nextHydratableInstance; shouldClear; ) {
+          JSCompiler_temp = buildHydrationDiffNode(fiber, 0);
+          var description =
+            describeHydratableInstanceForDevWarnings(shouldClear);
+          JSCompiler_temp.serverTail.push(description);
+          shouldClear =
             "Suspense" === description.type
-              ? getNextHydratableInstanceAfterSuspenseInstance(JSCompiler_temp)
-              : getNextHydratable(JSCompiler_temp.nextSibling);
+              ? getNextHydratableInstanceAfterSuspenseInstance(shouldClear)
+              : getNextHydratable(shouldClear.nextSibling);
         }
         throwOnHydrationMismatch(fiber);
       }
       popToNextHostParent(fiber);
-      if (13 === tag) {
+      if (13 === fiber.tag) {
         fiber = fiber.memoizedState;
         fiber = null !== fiber ? fiber.dehydrated : null;
         if (!fiber)
@@ -14952,16 +14812,9 @@
         nextHydratableInstance =
           getNextHydratableInstanceAfterSuspenseInstance(fiber);
       } else
-        27 === tag
-          ? ((tag = nextHydratableInstance),
-            isSingletonScope(fiber.type)
-              ? ((fiber = previousHydratableOnEnteringScopedSingleton),
-                (previousHydratableOnEnteringScopedSingleton = null),
-                (nextHydratableInstance = fiber))
-              : (nextHydratableInstance = tag))
-          : (nextHydratableInstance = hydrationParentFiber
-              ? getNextHydratable(fiber.stateNode.nextSibling)
-              : null);
+        nextHydratableInstance = hydrationParentFiber
+          ? getNextHydratable(fiber.stateNode.nextSibling)
+          : null;
       return !0;
     }
     function resetHydrationState() {
@@ -15001,31 +14854,14 @@
         ? props.name
         : instance.autoName;
     }
-    function getClassNameByType(classByType) {
-      if (null == classByType || "string" === typeof classByType)
-        return classByType;
-      var className = null,
-        activeTypes = pendingTransitionTypes;
-      if (null !== activeTypes)
-        for (var i = 0; i < activeTypes.length; i++) {
-          var match = classByType[activeTypes[i]];
-          if (null != match) {
-            if ("none" === match) return "none";
-            className = null == className ? match : className + (" " + match);
-          }
-        }
-      return null == className ? classByType.default : className;
-    }
-    function getViewTransitionClassName(defaultClass, eventClass) {
-      defaultClass = getClassNameByType(defaultClass);
-      eventClass = getClassNameByType(eventClass);
-      return null == eventClass
-        ? defaultClass
-        : "none" === eventClass
-          ? eventClass
-          : null != defaultClass && "none" !== defaultClass
-            ? defaultClass + " " + eventClass
-            : eventClass;
+    function getViewTransitionClassName(className, eventClassName) {
+      return null == eventClassName
+        ? className
+        : "none" === eventClassName
+          ? eventClassName
+          : null != className
+            ? className + " " + eventClassName
+            : eventClassName;
     }
     function markUpdate(workInProgress) {
       workInProgress.flags |= 4;
@@ -15042,7 +14878,7 @@
         resource = suspenseHandlerStackCursor.current;
         if (
           null !== resource &&
-          ((workInProgressRootRenderLanes & 4194048) ===
+          ((workInProgressRootRenderLanes & 4194176) ===
           workInProgressRootRenderLanes
             ? null !== shellBoundary
             : ((workInProgressRootRenderLanes & 62914560) !==
@@ -15150,6 +14986,30 @@
       completedWork.childLanes = newChildLanes;
       return didBailout;
     }
+    function trackReappearingViewTransitions(workInProgress) {
+      if (0 !== (workInProgress.subtreeFlags & 2097152))
+        for (workInProgress = workInProgress.child; null !== workInProgress; ) {
+          if (
+            22 !== workInProgress.tag ||
+            null !== workInProgress.memoizedState
+          ) {
+            if (
+              30 === workInProgress.tag &&
+              0 !== (workInProgress.flags & 2097152)
+            ) {
+              var props = workInProgress.memoizedProps;
+              null != props.name &&
+                "auto" !== props.name &&
+                trackAppearingViewTransition(
+                  workInProgress.stateNode,
+                  props.name
+                );
+            }
+            trackReappearingViewTransitions(workInProgress);
+          }
+          workInProgress = workInProgress.sibling;
+        }
+    }
     function completeWork(current, workInProgress, renderLanes) {
       var newProps = workInProgress.pendingProps;
       popTreeContext(workInProgress);
@@ -15439,13 +15299,9 @@
                   : !1;
               current || throwOnHydrationMismatch(workInProgress);
             } else
-              (_type = renderLanes.ancestorInfo.current),
-                null != _type &&
-                  validateTextNesting(
-                    newProps,
-                    _type.tag,
-                    renderLanes.ancestorInfo.implicitRootScope
-                  ),
+              (renderLanes = renderLanes.ancestorInfo.current),
+                null != renderLanes &&
+                  validateTextNesting(newProps, renderLanes.tag),
                 (current =
                   getOwnerDocumentFromRootContainer(current).createTextNode(
                     newProps
@@ -15667,7 +15523,8 @@
             (newProps = null !== workInProgress.memoizedState),
             null !== current
               ? (null !== current.memoizedState) !== newProps &&
-                (workInProgress.flags |= 8192)
+                ((workInProgress.flags |= 8192),
+                newProps || trackReappearingViewTransitions(workInProgress))
               : newProps && (workInProgress.flags |= 8192),
             newProps
               ? 0 !== (renderLanes & 536870912) &&
@@ -15983,7 +15840,7 @@
       }
       yieldDuration = (forceSync =
         (!forceSync &&
-          0 === (lanes & 124) &&
+          0 === (lanes & 60) &&
           0 === (lanes & root.expiredLanes)) ||
         checkIfRootIsPrerendering(root, lanes))
         ? renderRootConcurrent(root, lanes)
@@ -16090,15 +15947,15 @@
               case RootFatalErrored:
                 throw Error("Root did not complete. This is a bug in React.");
               case RootSuspendedWithDelay:
-                if ((lanes & 4194048) !== lanes) break;
+                if ((lanes & 4194176) !== lanes) break;
               case RootSuspendedAtTheShell:
                 setCurrentTrackFromLanes(lanes);
                 logSuspendedRenderPhase(renderStartTime, startTime, lanes);
                 finalizeRender(lanes, startTime);
                 yieldEndTime = lanes;
-                0 !== (yieldEndTime & 3) || 0 !== (yieldEndTime & 124)
+                0 !== (yieldEndTime & 3) || 0 !== (yieldEndTime & 60)
                   ? (blockingSuspendedTime = startTime)
-                  : 0 !== (yieldEndTime & 4194048) &&
+                  : 0 !== (yieldEndTime & 4194176) &&
                     (transitionSuspendedTime = startTime);
                 markRootSuspended(
                   forceSync,
@@ -16123,6 +15980,7 @@
                 lanes,
                 workInProgressRootRecoverableErrors,
                 workInProgressTransitions,
+                workInProgressAppearingViewTransitions,
                 workInProgressRootDidIncludeRecursiveRenderUpdate,
                 workInProgressDeferredLane,
                 workInProgressRootInterleavedUpdatedLanes,
@@ -16155,6 +16013,7 @@
                     yieldEndTime,
                     workInProgressRootRecoverableErrors,
                     workInProgressTransitions,
+                    workInProgressAppearingViewTransitions,
                     workInProgressRootDidIncludeRecursiveRenderUpdate,
                     lanes,
                     workInProgressDeferredLane,
@@ -16175,6 +16034,7 @@
                 yieldEndTime,
                 workInProgressRootRecoverableErrors,
                 workInProgressTransitions,
+                workInProgressAppearingViewTransitions,
                 workInProgressRootDidIncludeRecursiveRenderUpdate,
                 lanes,
                 workInProgressDeferredLane,
@@ -16198,6 +16058,7 @@
       finishedWork,
       recoverableErrors,
       transitions,
+      appearingViewTransitions,
       didIncludeRenderPhaseUpdate,
       lanes,
       spawnedLane,
@@ -16211,35 +16072,37 @@
     ) {
       root.timeoutHandle = noTimeout;
       var subtreeFlags = finishedWork.subtreeFlags,
-        isViewTransitionEligible = (lanes & 335544064) === lanes;
-      if (
-        isViewTransitionEligible ||
-        subtreeFlags & 8192 ||
-        16785408 === (subtreeFlags & 16785408)
-      ) {
+        isViewTransitionEligible = (lanes & 335544192) === lanes;
+      subtreeFlags =
+        subtreeFlags & 8192 || 16785408 === (subtreeFlags & 16785408);
+      if (isViewTransitionEligible || subtreeFlags) {
         suspendedState = { stylesheets: null, count: 0, unsuspend: noop$1 };
-        appearingViewTransitions = null;
-        accumulateSuspenseyCommitOnFiber(finishedWork);
+        subtreeFlags && accumulateSuspenseyCommitOnFiber(finishedWork);
         if (isViewTransitionEligible) {
-          isViewTransitionEligible = root.containerInfo;
+          subtreeFlags = root.containerInfo;
           if (null === suspendedState)
             throw Error(
               "Internal React Error: suspendedState null when it was expected to exists. Please report this as a React bug."
             );
-          subtreeFlags = suspendedState;
-          isViewTransitionEligible = (
-            9 === isViewTransitionEligible.nodeType
-              ? isViewTransitionEligible
-              : isViewTransitionEligible.ownerDocument
+          isViewTransitionEligible = suspendedState;
+          subtreeFlags = (
+            9 === subtreeFlags.nodeType
+              ? subtreeFlags
+              : subtreeFlags.ownerDocument
           ).__reactViewTransition;
-          null != isViewTransitionEligible &&
-            (subtreeFlags.count++,
-            (subtreeFlags = onUnsuspend.bind(subtreeFlags)),
-            isViewTransitionEligible.finished.then(subtreeFlags, subtreeFlags));
+          null != subtreeFlags &&
+            (isViewTransitionEligible.count++,
+            (isViewTransitionEligible = onUnsuspend.bind(
+              isViewTransitionEligible
+            )),
+            subtreeFlags.finished.then(
+              isViewTransitionEligible,
+              isViewTransitionEligible
+            ));
         }
-        subtreeFlags = waitForCommitToBeReady();
-        if (null !== subtreeFlags) {
-          root.cancelPendingCommit = subtreeFlags(
+        isViewTransitionEligible = waitForCommitToBeReady();
+        if (null !== isViewTransitionEligible) {
+          root.cancelPendingCommit = isViewTransitionEligible(
             commitRoot.bind(
               null,
               root,
@@ -16247,6 +16110,7 @@
               lanes,
               recoverableErrors,
               transitions,
+              appearingViewTransitions,
               didIncludeRenderPhaseUpdate,
               spawnedLane,
               updatedLanes,
@@ -16272,6 +16136,7 @@
         lanes,
         recoverableErrors,
         transitions,
+        appearingViewTransitions,
         didIncludeRenderPhaseUpdate,
         spawnedLane,
         updatedLanes,
@@ -16360,9 +16225,9 @@
       }
     }
     function finalizeRender(lanes, finalizationTime) {
-      if (0 !== (lanes & 3) || 0 !== (lanes & 124))
+      if (0 !== (lanes & 3) || 0 !== (lanes & 60))
         blockingClampTime = finalizationTime;
-      0 !== (lanes & 4194048) && (transitionClampTime = finalizationTime);
+      0 !== (lanes & 4194176) && (transitionClampTime = finalizationTime);
     }
     function prepareFreshStack(root, lanes) {
       supportsUserTiming &&
@@ -16387,13 +16252,13 @@
           var endTime = renderStartTime;
           supportsUserTiming &&
             ((reusableLaneDevToolDetails.color =
-              (lanes & 738197653) === lanes ? "tertiary-dark" : "primary-dark"),
+              (lanes & 738197589) === lanes ? "tertiary-dark" : "primary-dark"),
             (reusableLaneOptions.start = previousRenderStartTime),
             (reusableLaneOptions.end = endTime),
             performance.measure(
               (lanes & 536870912) === lanes
                 ? "Prewarm"
-                : (lanes & 201326741) === lanes
+                : (lanes & 201326677) === lanes
                   ? "Interrupted Hydration"
                   : "Interrupted Render",
               reusableLaneOptions
@@ -16401,7 +16266,7 @@
         }
         finalizeRender(workInProgressRootRenderLanes, renderStartTime);
       }
-      if (0 !== (lanes & 3) || 0 !== (lanes & 124)) {
+      if (0 !== (lanes & 3) || 0 !== (lanes & 60)) {
         previousRenderStartTime =
           0 <= blockingUpdateTime && blockingUpdateTime < blockingClampTime
             ? blockingClampTime
@@ -16444,7 +16309,7 @@
           0 < previousRenderStartTime &&
             ((reusableLaneDevToolDetails.color = isSpawnedUpdate
               ? "error"
-              : (lanes & 738197653) === lanes
+              : (lanes & 738197589) === lanes
                 ? "tertiary-light"
                 : "primary-light"),
             (reusableLaneOptions.start = previousRenderStartTime),
@@ -16457,7 +16322,7 @@
         blockingEventIsRepeat = !0;
         blockingSpawnedUpdate = !1;
       }
-      0 !== (lanes & 4194048) &&
+      0 !== (lanes & 4194176) &&
         ((previousRenderStartTime =
           0 <= transitionStartTime && transitionStartTime < transitionClampTime
             ? transitionClampTime
@@ -16548,6 +16413,7 @@
       workInProgressRootRecoverableErrors = workInProgressRootConcurrentErrors =
         null;
       workInProgressRootDidIncludeRecursiveRenderUpdate = !1;
+      workInProgressAppearingViewTransitions = null;
       0 !== (lanes & 8) && (lanes |= lanes & 32);
       endTime = root.entangledLanes;
       if (0 !== endTime)
@@ -16606,7 +16472,7 @@
     function renderDidSuspendDelayIfPossible() {
       workInProgressRootExitStatus = RootSuspendedWithDelay;
       workInProgressRootDidSkipSuspendedSiblings ||
-        ((workInProgressRootRenderLanes & 4194048) !==
+        ((workInProgressRootRenderLanes & 4194176) !==
           workInProgressRootRenderLanes &&
           null !== suspenseHandlerStackCursor.current) ||
         (workInProgressRootIsPrerendering = !0);
@@ -16625,6 +16491,18 @@
         ? (workInProgressRootConcurrentErrors = [error])
         : workInProgressRootConcurrentErrors.push(error);
     }
+    function trackAppearingViewTransition(instance, name) {
+      if (null === workInProgressAppearingViewTransitions) {
+        if (
+          (workInProgressRootRenderLanes & 335544192) !==
+          workInProgressRootRenderLanes
+        )
+          return;
+        workInProgressAppearingViewTransitions = new Map();
+      }
+      instance.paired = null;
+      workInProgressAppearingViewTransitions.set(name, instance);
+    }
     function renderRootSync(root, lanes, shouldYieldForPrerendering) {
       var prevExecutionContext = executionContext;
       executionContext |= RenderContext;
@@ -17067,6 +16945,7 @@
       lanes,
       recoverableErrors,
       transitions,
+      appearingViewTransitions,
       didIncludeRenderPhaseUpdate,
       spawnedLane,
       updatedLanes,
@@ -17117,7 +16996,6 @@
         didIncludeRenderPhaseUpdate =
           finishedWork.lanes | finishedWork.childLanes;
         didIncludeRenderPhaseUpdate |= concurrentlyUpdatedLanes;
-        null === root.gestures && (didIncludeRenderPhaseUpdate &= -65);
         markRootFinished(
           root,
           lanes,
@@ -17129,71 +17007,68 @@
         root === workInProgressRoot &&
           ((workInProgress = workInProgressRoot = null),
           (workInProgressRootRenderLanes = 0));
-        if (64 === lanes) commitGestureOnRoot(root);
-        else {
-          pendingFinishedWork = finishedWork;
-          pendingEffectsRoot = root;
-          pendingEffectsLanes = lanes;
-          pendingEffectsRemainingLanes = didIncludeRenderPhaseUpdate;
-          pendingPassiveTransitions = transitions;
-          pendingRecoverableErrors = recoverableErrors;
-          pendingEffectsRenderEndTime = completedRenderEndTime;
-          pendingSuspendedCommitReason = suspendedCommitReason;
-          pendingViewTransitionEvents = null;
-          (lanes & 335544064) === lanes
-            ? ((pendingTransitionTypes = ReactSharedInternals.V),
-              (ReactSharedInternals.V = null),
-              (recoverableErrors = 10262))
-            : ((pendingTransitionTypes = null), (recoverableErrors = 10256));
-          0 !== finishedWork.actualDuration ||
-          0 !== (finishedWork.subtreeFlags & recoverableErrors) ||
-          0 !== (finishedWork.flags & recoverableErrors)
-            ? ((root.callbackNode = null),
-              (root.callbackPriority = 0),
-              scheduleCallback$1(NormalPriority$1, function () {
-                schedulerEvent = window.event;
-                flushPassiveEffects(!0);
-                return null;
-              }))
-            : ((root.callbackNode = null), (root.callbackPriority = 0));
-          commitErrors = null;
-          commitStartTime = now();
-          suspendedCommitReason === SUSPENDED_COMMIT
-            ? logSuspendedCommitPhase(completedRenderEndTime, commitStartTime)
-            : suspendedCommitReason === THROTTLED_COMMIT &&
-              logSuspenseThrottlePhase(completedRenderEndTime, commitStartTime);
-          suspendedCommitReason = 0 !== (finishedWork.flags & 13878);
-          if (
-            0 !== (finishedWork.subtreeFlags & 13878) ||
-            suspendedCommitReason
-          ) {
-            suspendedCommitReason = ReactSharedInternals.T;
-            ReactSharedInternals.T = null;
-            completedRenderEndTime = ReactDOMSharedInternals.p;
-            ReactDOMSharedInternals.p = DiscreteEventPriority;
-            recoverableErrors = executionContext;
-            executionContext |= CommitContext;
-            try {
-              commitBeforeMutationEffects(root, finishedWork, lanes);
-            } finally {
-              (executionContext = recoverableErrors),
-                (ReactDOMSharedInternals.p = completedRenderEndTime),
-                (ReactSharedInternals.T = suspendedCommitReason);
-            }
+        pendingFinishedWork = finishedWork;
+        pendingEffectsRoot = root;
+        pendingEffectsLanes = lanes;
+        pendingEffectsRemainingLanes = didIncludeRenderPhaseUpdate;
+        pendingPassiveTransitions = transitions;
+        pendingRecoverableErrors = recoverableErrors;
+        pendingViewTransitionEvents = null;
+        pendingEffectsRenderEndTime = completedRenderEndTime;
+        pendingSuspendedCommitReason = suspendedCommitReason;
+        recoverableErrors = (lanes & 335544192) === lanes ? 10262 : 10256;
+        0 !== finishedWork.actualDuration ||
+        0 !== (finishedWork.subtreeFlags & recoverableErrors) ||
+        0 !== (finishedWork.flags & recoverableErrors)
+          ? ((root.callbackNode = null),
+            (root.callbackPriority = 0),
+            scheduleCallback$1(NormalPriority$1, function () {
+              schedulerEvent = window.event;
+              flushPassiveEffects(!0);
+              return null;
+            }))
+          : ((root.callbackNode = null), (root.callbackPriority = 0));
+        commitErrors = null;
+        commitStartTime = now();
+        suspendedCommitReason === SUSPENDED_COMMIT
+          ? logSuspendedCommitPhase(completedRenderEndTime, commitStartTime)
+          : suspendedCommitReason === THROTTLED_COMMIT &&
+            logSuspenseThrottlePhase(completedRenderEndTime, commitStartTime);
+        suspendedCommitReason = 0 !== (finishedWork.flags & 13878);
+        if (
+          0 !== (finishedWork.subtreeFlags & 13878) ||
+          suspendedCommitReason
+        ) {
+          suspendedCommitReason = ReactSharedInternals.T;
+          ReactSharedInternals.T = null;
+          completedRenderEndTime = ReactDOMSharedInternals.p;
+          ReactDOMSharedInternals.p = DiscreteEventPriority;
+          recoverableErrors = executionContext;
+          executionContext |= CommitContext;
+          try {
+            commitBeforeMutationEffects(
+              root,
+              finishedWork,
+              lanes,
+              appearingViewTransitions
+            );
+          } finally {
+            (executionContext = recoverableErrors),
+              (ReactDOMSharedInternals.p = completedRenderEndTime),
+              (ReactSharedInternals.T = suspendedCommitReason);
           }
-          pendingEffectsStatus = PENDING_MUTATION_PHASE;
-          (shouldStartViewTransition &&
-            startViewTransition(
-              root.containerInfo,
-              pendingTransitionTypes,
-              flushMutationEffects,
-              flushLayoutEffects,
-              flushAfterMutationEffects,
-              flushSpawnedWork,
-              flushPassiveEffects
-            )) ||
-            (flushMutationEffects(), flushLayoutEffects(), flushSpawnedWork());
         }
+        pendingEffectsStatus = PENDING_MUTATION_PHASE;
+        (shouldStartViewTransition &&
+          startViewTransition(
+            root.containerInfo,
+            flushMutationEffects,
+            flushLayoutEffects,
+            flushAfterMutationEffects,
+            flushSpawnedWork,
+            flushPassiveEffects
+          )) ||
+          (flushMutationEffects(), flushLayoutEffects(), flushSpawnedWork());
       }
     }
     function flushAfterMutationEffects() {
@@ -17402,7 +17277,7 @@
             (reusableLaneOptions.start = completedRenderEndTime),
             (reusableLaneOptions.end = suspendedCommitReason),
             performance.measure("Commit", reusableLaneOptions));
-        completedRenderEndTime = (lanes & 335544064) === lanes ? 10262 : 10256;
+        completedRenderEndTime = (lanes & 335544192) === lanes ? 10262 : 10256;
         (completedRenderEndTime =
           0 !== finishedWork.actualDuration ||
           0 !== (finishedWork.subtreeFlags & completedRenderEndTime) ||
@@ -17484,21 +17359,17 @@
           }
         }
         recoverableErrors = pendingViewTransitionEvents;
-        onRecoverableError = pendingTransitionTypes;
-        pendingTransitionTypes = null;
         if (null !== recoverableErrors)
           for (
-            pendingViewTransitionEvents = null,
-              null === onRecoverableError && (onRecoverableError = []),
-              recoverableError = 0;
-            recoverableError < recoverableErrors.length;
-            recoverableError++
+            pendingViewTransitionEvents = null, onRecoverableError = 0;
+            onRecoverableError < recoverableErrors.length;
+            onRecoverableError++
           )
-            (0, recoverableErrors[recoverableError])(onRecoverableError);
+            (0, recoverableErrors[onRecoverableError])();
         0 !== (pendingEffectsLanes & 3) && flushPendingEffects();
         ensureRootIsScheduled(root);
         suspendedCommitReason = root.pendingLanes;
-        0 !== (lanes & 4194090) && 0 !== (suspendedCommitReason & 42)
+        0 !== (lanes & 4194218) && 0 !== (suspendedCommitReason & 42)
           ? ((nestedUpdateScheduled = !0),
             root === rootWithNestedUpdates
               ? nestedUpdateCount++
@@ -17508,14 +17379,6 @@
         flushSyncWorkAcrossRoots_impl(0, !1);
       }
     }
-    function commitGestureOnRoot(root) {
-      var finishedGesture = root.gestures;
-      if (null === finishedGesture)
-        throw Error(
-          "Finished rendering the gesture lane but there were no pending gestures. React should not have started a render in this case. This is a bug in React."
-        );
-      deleteScheduledGesture(root, finishedGesture);
-    }
     function makeErrorInfo(componentStack) {
       componentStack = { componentStack: componentStack };
       Object.defineProperty(componentStack, "digest", {
@@ -17725,10 +17588,10 @@
       null !== pingCache && pingCache.delete(wakeable);
       root.pingedLanes |= root.suspendedLanes & pingedLanes;
       root.warmLanes &= ~pingedLanes;
-      0 !== (pingedLanes & 3) || 0 !== (pingedLanes & 124)
+      0 !== (pingedLanes & 3) || 0 !== (pingedLanes & 60)
         ? 0 > blockingUpdateTime &&
           (blockingClampTime = blockingUpdateTime = now())
-        : 0 !== (pingedLanes & 4194048) &&
+        : 0 !== (pingedLanes & 4194176) &&
           0 > transitionUpdateTime &&
           (transitionClampTime = transitionUpdateTime = now());
       isConcurrentActEnvironment() &&
@@ -17930,8 +17793,8 @@
                     (1 << (31 - clz32(42 | syncTransitionLanes) + 1)) - 1;
                   nextLanes &= pendingLanes & ~(suspendedLanes & ~pingedLanes);
                   nextLanes =
-                    nextLanes & 201326741
-                      ? (nextLanes & 201326741) | 1
+                    nextLanes & 201326677
+                      ? (nextLanes & 201326677) | 1
                       : nextLanes
                         ? nextLanes | 2
                         : 0;
@@ -17947,7 +17810,7 @@
                     null !== root.cancelPendingCommit ||
                       root.timeoutHandle !== noTimeout
                   )),
-                  (0 === (nextLanes & 3) && 64 !== nextLanes) ||
+                  0 === (nextLanes & 3) ||
                     checkIfRootIsPrerendering(root, nextLanes) ||
                     ((didPerformSomeWork = !0),
                     performSyncWorkOnRoot(root, nextLanes));
@@ -17983,10 +17846,7 @@
             null === prev ? (firstScheduledRoot = next) : (prev.next = next),
             null === next && (lastScheduledRoot = prev);
         else if (
-          ((prev = root),
-          0 !== syncTransitionLanes ||
-            0 !== (nextLanes & 3) ||
-            64 === nextLanes)
+          ((prev = root), 0 !== syncTransitionLanes || 0 !== (nextLanes & 3))
         )
           mightHavePendingSyncWork = !0;
         root = next;
@@ -18420,15 +18280,23 @@
           var nodeTag = targetInst$jscomp$0.tag;
           if (3 === nodeTag || 4 === nodeTag) {
             var container = targetInst$jscomp$0.stateNode.containerInfo;
-            if (container === targetContainer) break;
+            if (
+              container === targetContainer ||
+              (8 === container.nodeType &&
+                container.parentNode === targetContainer)
+            )
+              break;
             if (4 === nodeTag)
               for (nodeTag = targetInst$jscomp$0.return; null !== nodeTag; ) {
                 var grandTag = nodeTag.tag;
-                if (
-                  (3 === grandTag || 4 === grandTag) &&
-                  nodeTag.stateNode.containerInfo === targetContainer
-                )
-                  return;
+                if (3 === grandTag || 4 === grandTag)
+                  if (
+                    ((grandTag = nodeTag.stateNode.containerInfo),
+                    grandTag === targetContainer ||
+                      (8 === grandTag.nodeType &&
+                        grandTag.parentNode === targetContainer))
+                  )
+                    return;
                 nodeTag = nodeTag.return;
               }
             for (; null !== container; ) {
@@ -19072,12 +18940,12 @@
       switch (key) {
         case "children":
           if ("string" === typeof value)
-            validateTextNesting(value, tag, !1),
+            validateTextNesting(value, tag),
               "body" === tag ||
                 ("textarea" === tag && "" === value) ||
                 setTextContent(domElement, value);
           else if ("number" === typeof value || "bigint" === typeof value)
-            validateTextNesting("" + value, tag, !1),
+            validateTextNesting("" + value, tag),
               "body" !== tag && setTextContent(domElement, "" + value);
           else return;
           break;
@@ -21262,58 +21130,22 @@
     function commitTextUpdate(textInstance, oldText, newText) {
       textInstance.nodeValue = newText;
     }
-    function isSingletonScope(type) {
-      return "head" === type;
-    }
     function removeChild(parentInstance, child) {
       parentInstance.removeChild(child);
     }
     function removeChildFromContainer(container, child) {
-      (9 === container.nodeType
-        ? container.body
-        : "HTML" === container.nodeName
-          ? container.ownerDocument.body
-          : container
-      ).removeChild(child);
+      8 === container.nodeType
+        ? container.parentNode.removeChild(child)
+        : container.removeChild(child);
     }
     function clearSuspenseBoundary(parentInstance, suspenseInstance) {
       var node = suspenseInstance,
-        possiblePreambleContribution = 0,
         depth = 0;
       do {
         var nextNode = node.nextSibling;
         parentInstance.removeChild(node);
         if (nextNode && 8 === nextNode.nodeType)
           if (((node = nextNode.data), node === SUSPENSE_END_DATA)) {
-            if (
-              0 < possiblePreambleContribution &&
-              8 > possiblePreambleContribution
-            ) {
-              node = possiblePreambleContribution;
-              var ownerDocument = parentInstance.ownerDocument;
-              node & PREAMBLE_CONTRIBUTION_HTML &&
-                releaseSingletonInstance(ownerDocument.documentElement);
-              node & PREAMBLE_CONTRIBUTION_BODY &&
-                releaseSingletonInstance(ownerDocument.body);
-              if (node & PREAMBLE_CONTRIBUTION_HEAD)
-                for (
-                  node = ownerDocument.head,
-                    releaseSingletonInstance(node),
-                    ownerDocument = node.firstChild;
-                  ownerDocument;
-
-                ) {
-                  var nextNode$jscomp$0 = ownerDocument.nextSibling,
-                    nodeName = ownerDocument.nodeName;
-                  ownerDocument[internalHoistableMarker] ||
-                    "SCRIPT" === nodeName ||
-                    "STYLE" === nodeName ||
-                    ("LINK" === nodeName &&
-                      "stylesheet" === ownerDocument.rel.toLowerCase()) ||
-                    node.removeChild(ownerDocument);
-                  ownerDocument = nextNode$jscomp$0;
-                }
-            }
             if (0 === depth) {
               parentInstance.removeChild(nextNode);
               retryIfBlockedOn(suspenseInstance);
@@ -21321,12 +21153,10 @@
             }
             depth--;
           } else
-            node === SUSPENSE_START_DATA ||
-            node === SUSPENSE_PENDING_START_DATA ||
-            node === SUSPENSE_FALLBACK_START_DATA
-              ? depth++
-              : (possiblePreambleContribution = node.charCodeAt(0) - 48);
-        else possiblePreambleContribution = 0;
+            (node !== SUSPENSE_START_DATA &&
+              node !== SUSPENSE_PENDING_START_DATA &&
+              node !== SUSPENSE_FALLBACK_START_DATA) ||
+              depth++;
         node = nextNode;
       } while (node);
       retryIfBlockedOn(suspenseInstance);
@@ -21400,7 +21230,6 @@
     }
     function startViewTransition(
       rootContainer,
-      transitionTypes,
       mutationCallback,
       layoutCallback,
       afterMutationCallback,
@@ -21447,7 +21276,7 @@
               );
             afterMutationCallback();
           },
-          types: transitionTypes
+          types: null
         });
         ownerDocument.__reactViewTransition = transition;
         transition.ready.then(void 0, function (reason) {
@@ -21756,10 +21585,7 @@
       instance,
       internalInstanceHandle
     ) {
-      if (
-        !instance[internalContainerInstanceKey] &&
-        getInstanceFromNode(instance)
-      ) {
+      if (getInstanceFromNode(instance)) {
         var tagName = instance.tagName.toLowerCase();
         console.error(
           "You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first.",
@@ -21784,17 +21610,10 @@
       instance[internalInstanceKey] = internalInstanceHandle;
       instance[internalPropsKey] = props;
     }
-    function releaseSingletonInstance(instance) {
-      for (var attributes = instance.attributes; attributes.length; )
-        instance.removeAttributeNode(attributes[0]);
-      detachDeletedInstance(instance);
-    }
     function getHoistableRoot(container) {
       return "function" === typeof container.getRootNode
         ? container.getRootNode()
-        : 9 === container.nodeType
-          ? container
-          : container.ownerDocument;
+        : container.ownerDocument;
     }
     function preconnectAs(rel, href, crossOrigin) {
       var ownerDocument = globalDocument;
@@ -22516,7 +22335,6 @@
       this.pooledCache = null;
       this.pooledCacheLanes = 0;
       this.formState = formState;
-      this.gestures = null;
       this.incompleteTransitions = new Map();
       this.passiveEffectDuration = this.effectDuration = -0;
       this.memoizedUpdaters = new Set();
@@ -23343,7 +23161,7 @@
       clz32 = Math.clz32 ? Math.clz32 : clz32Fallback,
       log = Math.log,
       LN2 = Math.LN2,
-      nextTransitionLane = 256,
+      nextTransitionLane = 128,
       nextRetryLane = 4194304,
       DiscreteEventPriority = 2,
       ContinuousEventPriority = 8,
@@ -23422,8 +23240,7 @@
         pTagInButtonScope: null,
         listItemTagAutoclosing: null,
         dlItemTagAutoclosing: null,
-        containerTagInScope: null,
-        implicitRootScope: !1
+        containerTagInScope: null
       },
       didWarn = {},
       shorthandToLonghand = {
@@ -25070,7 +24887,6 @@
         useCacheRefresh: throwInvalidHookError
       };
     ContextOnlyDispatcher.useEffectEvent = throwInvalidHookError;
-    ContextOnlyDispatcher.useSwipeTransition = throwInvalidHookError;
     var HooksDispatcherOnMountInDEV = null,
       HooksDispatcherOnMountWithHookTypesInDEV = null,
       HooksDispatcherOnUpdateInDEV = null,
@@ -25094,11 +24910,11 @@
         mountHookTypesDev();
         return readContext(context);
       },
-      useEffect: function (create, createDeps) {
+      useEffect: function (create, deps) {
         currentHookNameInDev = "useEffect";
         mountHookTypesDev();
-        checkDepsAreArrayDev(createDeps);
-        return mountEffect(create, createDeps);
+        checkDepsAreArrayDev(deps);
+        return mountEffect(create, deps);
       },
       useImperativeHandle: function (ref, create, deps) {
         currentHookNameInDev = "useImperativeHandle";
@@ -25216,11 +25032,6 @@
         currentHookNameInDev = "useEffectEvent";
         mountHookTypesDev();
         return mountEvent(callback);
-      },
-      useSwipeTransition: function (previous, current) {
-        currentHookNameInDev = "useSwipeTransition";
-        mountHookTypesDev();
-        return mountSwipeTransition(previous, current);
       }
     };
     HooksDispatcherOnMountWithHookTypesInDEV = {
@@ -25238,10 +25049,10 @@
         updateHookTypesDev();
         return readContext(context);
       },
-      useEffect: function (create, createDeps) {
+      useEffect: function (create, deps) {
         currentHookNameInDev = "useEffect";
         updateHookTypesDev();
-        return mountEffect(create, createDeps);
+        return mountEffect(create, deps);
       },
       useImperativeHandle: function (ref, create, deps) {
         currentHookNameInDev = "useImperativeHandle";
@@ -25355,11 +25166,6 @@
         currentHookNameInDev = "useEffectEvent";
         updateHookTypesDev();
         return mountEvent(callback);
-      },
-      useSwipeTransition: function (previous, current) {
-        currentHookNameInDev = "useSwipeTransition";
-        updateHookTypesDev();
-        return updateSwipeTransition(previous, current);
       }
     };
     HooksDispatcherOnUpdateInDEV = {
@@ -25377,10 +25183,10 @@
         updateHookTypesDev();
         return readContext(context);
       },
-      useEffect: function (create, createDeps) {
+      useEffect: function (create, deps) {
         currentHookNameInDev = "useEffect";
         updateHookTypesDev();
-        updateEffectImpl(2048, Passive, create, createDeps);
+        updateEffectImpl(2048, Passive, create, deps);
       },
       useImperativeHandle: function (ref, create, deps) {
         currentHookNameInDev = "useImperativeHandle";
@@ -25494,11 +25300,6 @@
         currentHookNameInDev = "useEffectEvent";
         updateHookTypesDev();
         return updateEvent(callback);
-      },
-      useSwipeTransition: function (previous, current) {
-        currentHookNameInDev = "useSwipeTransition";
-        updateHookTypesDev();
-        return updateSwipeTransition(previous, current);
       }
     };
     HooksDispatcherOnRerenderInDEV = {
@@ -25516,10 +25317,10 @@
         updateHookTypesDev();
         return readContext(context);
       },
-      useEffect: function (create, createDeps) {
+      useEffect: function (create, deps) {
         currentHookNameInDev = "useEffect";
         updateHookTypesDev();
-        updateEffectImpl(2048, Passive, create, createDeps);
+        updateEffectImpl(2048, Passive, create, deps);
       },
       useImperativeHandle: function (ref, create, deps) {
         currentHookNameInDev = "useImperativeHandle";
@@ -25633,11 +25434,6 @@
         currentHookNameInDev = "useEffectEvent";
         updateHookTypesDev();
         return updateEvent(callback);
-      },
-      useSwipeTransition: function (previous, current) {
-        currentHookNameInDev = "useSwipeTransition";
-        updateHookTypesDev();
-        return updateSwipeTransition(previous, current);
       }
     };
     InvalidNestedHooksDispatcherOnMountInDEV = {
@@ -25661,11 +25457,11 @@
         mountHookTypesDev();
         return readContext(context);
       },
-      useEffect: function (create, createDeps) {
+      useEffect: function (create, deps) {
         currentHookNameInDev = "useEffect";
         warnInvalidHookAccess();
         mountHookTypesDev();
-        return mountEffect(create, createDeps);
+        return mountEffect(create, deps);
       },
       useImperativeHandle: function (ref, create, deps) {
         currentHookNameInDev = "useImperativeHandle";
@@ -25797,12 +25593,6 @@
         warnInvalidHookAccess();
         mountHookTypesDev();
         return mountEvent(callback);
-      },
-      useSwipeTransition: function (previous, current) {
-        currentHookNameInDev = "useSwipeTransition";
-        warnInvalidHookAccess();
-        mountHookTypesDev();
-        return mountSwipeTransition(previous, current);
       }
     };
     InvalidNestedHooksDispatcherOnUpdateInDEV = {
@@ -25826,11 +25616,11 @@
         updateHookTypesDev();
         return readContext(context);
       },
-      useEffect: function (create, createDeps) {
+      useEffect: function (create, deps) {
         currentHookNameInDev = "useEffect";
         warnInvalidHookAccess();
         updateHookTypesDev();
-        updateEffectImpl(2048, Passive, create, createDeps);
+        updateEffectImpl(2048, Passive, create, deps);
       },
       useImperativeHandle: function (ref, create, deps) {
         currentHookNameInDev = "useImperativeHandle";
@@ -25962,12 +25752,6 @@
         warnInvalidHookAccess();
         updateHookTypesDev();
         return updateEvent(callback);
-      },
-      useSwipeTransition: function (previous, current) {
-        currentHookNameInDev = "useSwipeTransition";
-        warnInvalidHookAccess();
-        updateHookTypesDev();
-        return updateSwipeTransition(previous, current);
       }
     };
     InvalidNestedHooksDispatcherOnRerenderInDEV = {
@@ -25991,11 +25775,11 @@
         updateHookTypesDev();
         return readContext(context);
       },
-      useEffect: function (create, createDeps) {
+      useEffect: function (create, deps) {
         currentHookNameInDev = "useEffect";
         warnInvalidHookAccess();
         updateHookTypesDev();
-        updateEffectImpl(2048, Passive, create, createDeps);
+        updateEffectImpl(2048, Passive, create, deps);
       },
       useImperativeHandle: function (ref, create, deps) {
         currentHookNameInDev = "useImperativeHandle";
@@ -26127,12 +25911,6 @@
         warnInvalidHookAccess();
         updateHookTypesDev();
         return updateEvent(callback);
-      },
-      useSwipeTransition: function (previous, current) {
-        currentHookNameInDev = "useSwipeTransition";
-        warnInvalidHookAccess();
-        updateHookTypesDev();
-        return updateSwipeTransition(previous, current);
       }
     };
     var callComponent = {
@@ -26221,7 +25999,7 @@
         "react-stack-bottom-frame": function (effect) {
           null != effect.resourceKind &&
             console.error(
-              "Expected only SimpleEffects when enableUseEffectCRUDOverload is disabled, got %s",
+              "Expected only SimpleEffects when enableUseResourceEffectHook is disabled, got %s",
               effect.resourceKind
             );
           var create = effect.create;
@@ -26379,7 +26157,6 @@
       inProgressLanes = null,
       inProgressRoot = null,
       shouldStartViewTransition = !1,
-      appearingViewTransitions = null,
       viewTransitionContextChanged = !1,
       viewTransitionCancelableChildren = null,
       viewTransitionHostInstanceIdx = 0,
@@ -26468,6 +26245,7 @@
       workInProgressSuspendedRetryLanes = 0,
       workInProgressRootConcurrentErrors = null,
       workInProgressRootRecoverableErrors = null,
+      workInProgressAppearingViewTransitions = null,
       workInProgressRootDidIncludeRecursiveRenderUpdate = !1,
       globalMostRecentFallbackTime = 0,
       FALLBACK_THROTTLE_MS = 300,
@@ -26493,7 +26271,6 @@
       pendingPassiveTransitions = null,
       pendingRecoverableErrors = null,
       pendingViewTransitionEvents = null,
-      pendingTransitionTypes = null,
       pendingSuspendedCommitReason = IMMEDIATE_COMMIT,
       NESTED_UPDATE_LIMIT = 50,
       nestedUpdateCount = 0,
@@ -26597,9 +26374,6 @@
       SUSPENSE_END_DATA = "/$",
       SUSPENSE_PENDING_START_DATA = "$?",
       SUSPENSE_FALLBACK_START_DATA = "$!",
-      PREAMBLE_CONTRIBUTION_HTML = 1,
-      PREAMBLE_CONTRIBUTION_BODY = 2,
-      PREAMBLE_CONTRIBUTION_HEAD = 4,
       FORM_STATE_IS_MATCHING = "F!",
       FORM_STATE_IS_NOT_MATCHING = "F",
       DOCUMENT_READY_STATE_COMPLETE = "complete",
@@ -26658,8 +26432,7 @@
       }
       return result;
     };
-    var previousHydratableOnEnteringScopedSingleton = null,
-      NotLoaded = 0,
+    var NotLoaded = 0,
       Loaded = 1,
       Errored = 2,
       Settled = 3,
@@ -27074,11 +26847,11 @@
     };
     (function () {
       var isomorphicReactPackageVersion = React.version;
-      if ("19.1.0-experimental-e670e72f-20250214" !== isomorphicReactPackageVersion)
+      if ("19.1.0-experimental-b3a95caf-20250113" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The "react" and "react-dom" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              "\n  - react-dom:  19.1.0-experimental-e670e72f-20250214\nLearn more: https://react.dev/warnings/version-mismatch")
+              "\n  - react-dom:  19.1.0-experimental-b3a95caf-20250113\nLearn more: https://react.dev/warnings/version-mismatch")
         );
     })();
     ("function" === typeof Map &&
@@ -27115,10 +26888,10 @@
       !(function () {
         var internals = {
           bundleType: 1,
-          version: "19.1.0-experimental-e670e72f-20250214",
+          version: "19.1.0-experimental-b3a95caf-20250113",
           rendererPackageName: "react-dom",
           currentDispatcherRef: ReactSharedInternals,
-          reconcilerVersion: "19.1.0-experimental-e670e72f-20250214"
+          reconcilerVersion: "19.1.0-experimental-b3a95caf-20250113"
         };
         internals.overrideHookState = overrideHookState;
         internals.overrideHookStateDeletePath = overrideHookStateDeletePath;
@@ -27237,7 +27010,9 @@
         null
       );
       container[internalContainerInstanceKey] = options.current;
-      listenToAllSupportedEvents(container);
+      listenToAllSupportedEvents(
+        8 === container.nodeType ? container.parentNode : container
+      );
       return new ReactDOMRoot(options);
     };
     exports.flushSync = function (fn) {
@@ -27590,7 +27365,7 @@
     exports.useFormStatus = function () {
       return resolveDispatcher().useHostTransitionStatus();
     };
-    exports.version = "19.1.0-experimental-e670e72f-20250214";
+    exports.version = "19.1.0-experimental-b3a95caf-20250113";
     "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
       "function" ===
         typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&
diff --git a/node_modules/react-dom/cjs/react-dom-profiling.profiling.js b/node_modules/react-dom/cjs/react-dom-profiling.profiling.js
index f816e10..4c639a6 100644
--- a/node_modules/react-dom/cjs/react-dom-profiling.profiling.js
+++ b/node_modules/react-dom/cjs/react-dom-profiling.profiling.js
@@ -321,36 +321,38 @@ function pushHostContainer(fiber, nextRootInstance) {
   push(rootInstanceStackCursor, nextRootInstance);
   push(contextFiberStackCursor, fiber);
   push(contextStackCursor, null);
-  switch (nextRootInstance.nodeType) {
+  fiber = nextRootInstance.nodeType;
+  switch (fiber) {
     case 9:
     case 11:
-      fiber = (fiber = nextRootInstance.documentElement)
-        ? (fiber = fiber.namespaceURI)
-          ? getOwnHostContext(fiber)
+      nextRootInstance = (nextRootInstance = nextRootInstance.documentElement)
+        ? (nextRootInstance = nextRootInstance.namespaceURI)
+          ? getOwnHostContext(nextRootInstance)
           : 0
         : 0;
       break;
     default:
       if (
-        ((fiber = nextRootInstance.tagName),
-        (nextRootInstance = nextRootInstance.namespaceURI))
+        ((fiber = 8 === fiber ? nextRootInstance.parentNode : nextRootInstance),
+        (nextRootInstance = fiber.tagName),
+        (fiber = fiber.namespaceURI))
       )
-        (nextRootInstance = getOwnHostContext(nextRootInstance)),
-          (fiber = getChildHostContextProd(nextRootInstance, fiber));
+        (fiber = getOwnHostContext(fiber)),
+          (nextRootInstance = getChildHostContextProd(fiber, nextRootInstance));
       else
-        switch (fiber) {
+        switch (nextRootInstance) {
           case "svg":
-            fiber = 1;
+            nextRootInstance = 1;
             break;
           case "math":
-            fiber = 2;
+            nextRootInstance = 2;
             break;
           default:
-            fiber = 0;
+            nextRootInstance = 0;
         }
   }
   pop(contextStackCursor);
-  push(contextStackCursor, fiber);
+  push(contextStackCursor, nextRootInstance);
 }
 function popHostContainer() {
   pop(contextStackCursor);
@@ -403,7 +405,7 @@ function clz32Fallback(x) {
   x >>>= 0;
   return 0 === x ? 32 : (31 - ((log(x) / LN2) | 0)) | 0;
 }
-var nextTransitionLane = 256,
+var nextTransitionLane = 128,
   nextRetryLane = 4194304;
 function getHighestPriorityLanes(lanes) {
   var pendingSyncLanes = lanes & 42;
@@ -424,7 +426,6 @@ function getHighestPriorityLanes(lanes) {
     case 64:
       return 64;
     case 128:
-      return 128;
     case 256:
     case 512:
     case 1024:
@@ -439,7 +440,7 @@ function getHighestPriorityLanes(lanes) {
     case 524288:
     case 1048576:
     case 2097152:
-      return lanes & 4194048;
+      return lanes & 4194176;
     case 4194304:
     case 8388608:
     case 16777216:
@@ -495,7 +496,7 @@ function getNextLanes(root, wipLanes, rootHasPendingCommit) {
         ((suspendedLanes = nextLanes & -nextLanes),
         (rootHasPendingCommit = wipLanes & -wipLanes),
         suspendedLanes >= rootHasPendingCommit ||
-          (32 === suspendedLanes && 0 !== (rootHasPendingCommit & 4194048)))
+          (32 === suspendedLanes && 0 !== (rootHasPendingCommit & 4194176)))
       ? wipLanes
       : nextLanes;
 }
@@ -513,10 +514,10 @@ function computeExpirationTime(lane, currentTime) {
     case 2:
     case 4:
     case 8:
-    case 64:
       return currentTime + 250;
     case 16:
     case 32:
+    case 64:
     case 128:
     case 256:
     case 512:
@@ -551,7 +552,7 @@ function computeExpirationTime(lane, currentTime) {
 function claimNextTransitionLane() {
   var lane = nextTransitionLane;
   nextTransitionLane <<= 1;
-  0 === (nextTransitionLane & 4194048) && (nextTransitionLane = 256);
+  0 === (nextTransitionLane & 4194176) && (nextTransitionLane = 128);
   return lane;
 }
 function claimNextRetryLane() {
@@ -625,7 +626,7 @@ function markSpawnedDeferredLane(root, spawnedLane, entangledLanes) {
   root.entanglements[spawnedLaneIndex] =
     root.entanglements[spawnedLaneIndex] |
     1073741824 |
-    (entangledLanes & 4194090);
+    (entangledLanes & 4194218);
 }
 function markRootEntangled(root, entangledLanes) {
   var rootEntangledLanes = (root.entangledLanes |= entangledLanes);
@@ -648,6 +649,7 @@ function getBumpedLaneForHydrationByLane(lane) {
     case 32:
       lane = 16;
       break;
+    case 128:
     case 256:
     case 512:
     case 1024:
@@ -666,7 +668,7 @@ function getBumpedLaneForHydrationByLane(lane) {
     case 8388608:
     case 16777216:
     case 33554432:
-      lane = 128;
+      lane = 64;
       break;
     case 268435456:
       lane = 134217728;
@@ -2114,19 +2116,19 @@ function getTargetInstForChangeEvent(domEventName, targetInst) {
 }
 var isInputEventSupported = !1;
 if (canUseDOM) {
-  var JSCompiler_inline_result$jscomp$311;
+  var JSCompiler_inline_result$jscomp$308;
   if (canUseDOM) {
-    var isSupported$jscomp$inline_450 = "oninput" in document;
-    if (!isSupported$jscomp$inline_450) {
-      var element$jscomp$inline_451 = document.createElement("div");
-      element$jscomp$inline_451.setAttribute("oninput", "return;");
-      isSupported$jscomp$inline_450 =
-        "function" === typeof element$jscomp$inline_451.oninput;
+    var isSupported$jscomp$inline_447 = "oninput" in document;
+    if (!isSupported$jscomp$inline_447) {
+      var element$jscomp$inline_448 = document.createElement("div");
+      element$jscomp$inline_448.setAttribute("oninput", "return;");
+      isSupported$jscomp$inline_447 =
+        "function" === typeof element$jscomp$inline_448.oninput;
     }
-    JSCompiler_inline_result$jscomp$311 = isSupported$jscomp$inline_450;
-  } else JSCompiler_inline_result$jscomp$311 = !1;
+    JSCompiler_inline_result$jscomp$308 = isSupported$jscomp$inline_447;
+  } else JSCompiler_inline_result$jscomp$308 = !1;
   isInputEventSupported =
-    JSCompiler_inline_result$jscomp$311 &&
+    JSCompiler_inline_result$jscomp$308 &&
     (!document.documentMode || 9 < document.documentMode);
 }
 function stopWatchingForValueChange() {
@@ -2438,11 +2440,6 @@ function enqueueConcurrentRenderForLane(fiber, lane) {
   enqueueUpdate$1(fiber, null, null, lane);
   return getRootForUpdatedFiber(fiber);
 }
-function enqueueGestureRender(fiber) {
-  fiber = markUpdateLaneFromFiberToRoot(fiber, null, 64);
-  null !== fiber && markRootUpdated$1(fiber, 64);
-  return fiber;
-}
 function markUpdateLaneFromFiberToRoot(sourceFiber, update, lane) {
   sourceFiber.lanes |= lane;
   var alternate = sourceFiber.alternate;
@@ -2456,19 +2453,17 @@ function markUpdateLaneFromFiberToRoot(sourceFiber, update, lane) {
         null === sourceFiber || sourceFiber._visibility & 1 || (isHidden = !0)),
       (sourceFiber = parent),
       (parent = parent.return);
-  return 3 === sourceFiber.tag
-    ? ((parent = sourceFiber.stateNode),
-      isHidden &&
-        null !== update &&
-        ((isHidden = 31 - clz32(lane)),
-        (sourceFiber = parent.hiddenUpdates),
-        (alternate = sourceFiber[isHidden]),
-        null === alternate
-          ? (sourceFiber[isHidden] = [update])
-          : alternate.push(update),
-        (update.lane = lane | 536870912)),
-      parent)
-    : null;
+  isHidden &&
+    null !== update &&
+    3 === sourceFiber.tag &&
+    ((parent = sourceFiber.stateNode),
+    (isHidden = 31 - clz32(lane)),
+    (parent = parent.hiddenUpdates),
+    (sourceFiber = parent[isHidden]),
+    null === sourceFiber
+      ? (parent[isHidden] = [update])
+      : sourceFiber.push(update),
+    (update.lane = lane | 536870912));
 }
 function getRootForUpdatedFiber(sourceFiber) {
   if (50 < nestedUpdateCount)
@@ -2524,7 +2519,7 @@ function startUpdateTimerByLane(lane) {
       (blockingEventTime = lane),
       (blockingEventType = JSCompiler_temp));
   else if (
-    0 !== (lane & 4194048) &&
+    0 !== (lane & 4194176) &&
     0 > transitionUpdateTime &&
     ((transitionUpdateTime = now()), 0 > transitionStartTime)
   ) {
@@ -2638,9 +2633,9 @@ var supportsUserTiming =
   };
 function setCurrentTrackFromLanes(lanes) {
   reusableLaneDevToolDetails.track =
-    lanes & 127
+    lanes & 63
       ? "Blocking"
-      : lanes & 4194176
+      : lanes & 4194240
         ? "Transition"
         : lanes & 62914560
           ? "Suspense"
@@ -2770,13 +2765,13 @@ function logComponentEffect(fiber, startTime, endTime, selfTime, errors) {
 function logRenderPhase(startTime, endTime, lanes) {
   supportsUserTiming &&
     ((reusableLaneDevToolDetails.color =
-      (lanes & 738197653) === lanes ? "tertiary-dark" : "primary-dark"),
+      (lanes & 738197589) === lanes ? "tertiary-dark" : "primary-dark"),
     (reusableLaneOptions.start = startTime),
     (reusableLaneOptions.end = endTime),
     performance.measure(
       (lanes & 536870912) === lanes
         ? "Prepared"
-        : (lanes & 201326741) === lanes
+        : (lanes & 201326677) === lanes
           ? "Hydrated"
           : "Render",
       reusableLaneOptions
@@ -2785,7 +2780,7 @@ function logRenderPhase(startTime, endTime, lanes) {
 function logSuspendedRenderPhase(startTime, endTime, lanes) {
   supportsUserTiming &&
     ((reusableLaneDevToolDetails.color =
-      (lanes & 738197653) === lanes ? "tertiary-dark" : "primary-dark"),
+      (lanes & 738197589) === lanes ? "tertiary-dark" : "primary-dark"),
     (reusableLaneOptions.start = startTime),
     (reusableLaneOptions.end = endTime),
     performance.measure("Prewarm", reusableLaneOptions));
@@ -2793,7 +2788,7 @@ function logSuspendedRenderPhase(startTime, endTime, lanes) {
 function logSuspendedWithDelayPhase(startTime, endTime, lanes) {
   supportsUserTiming &&
     ((reusableLaneDevToolDetails.color =
-      (lanes & 738197653) === lanes ? "tertiary-dark" : "primary-dark"),
+      (lanes & 738197589) === lanes ? "tertiary-dark" : "primary-dark"),
     (reusableLaneOptions.start = startTime),
     (reusableLaneOptions.end = endTime),
     performance.measure("Suspended", reusableLaneOptions));
@@ -3106,7 +3101,7 @@ function enqueueUpdate(fiber, update, lane) {
 }
 function entangleTransitions(root, fiber, lane) {
   fiber = fiber.updateQueue;
-  if (null !== fiber && ((fiber = fiber.shared), 0 !== (lane & 4194048))) {
+  if (null !== fiber && ((fiber = fiber.shared), 0 !== (lane & 4194176))) {
     var queueLanes = fiber.lanes;
     queueLanes &= root.pendingLanes;
     lane |= queueLanes;
@@ -3655,28 +3650,6 @@ function getSuspendedCache() {
     ? null
     : { parent: CacheContext._currentValue, pool: cacheFromPool };
 }
-function scheduleGesture(root, provider) {
-  for (var prev = root.gestures; null !== prev; ) {
-    if (prev.provider === provider) return prev.count++, prev;
-    var next = prev.next;
-    if (null === next) break;
-    prev = next;
-  }
-  provider = { provider: provider, count: 1, prev: prev, next: null };
-  null === prev ? (root.gestures = provider) : (prev.next = provider);
-  ensureRootIsScheduled(root);
-  return provider;
-}
-function deleteScheduledGesture(root, gesture) {
-  null === gesture.prev
-    ? root.gestures === gesture &&
-      ((root.gestures = gesture.next),
-      null === root.gestures && (root.pendingLanes &= -65))
-    : ((gesture.prev.next = gesture.next),
-      null !== gesture.next && (gesture.next.prev = gesture.prev),
-      (gesture.prev = null),
-      (gesture.next = null));
-}
 var renderLanes = 0,
   currentlyRenderingFiber = null,
   currentHook = null,
@@ -4061,8 +4034,9 @@ function updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
   snapshotChanged &&
     ((hook.memoizedState = getServerSnapshot), (didReceiveUpdate = !0));
   hook = hook.queue;
-  var create = subscribeToStore.bind(null, fiber, hook, subscribe);
-  updateEffectImpl(2048, 8, create, [subscribe]);
+  updateEffect(subscribeToStore.bind(null, fiber, hook, subscribe), [
+    subscribe
+  ]);
   if (
     hook.getSnapshot !== getSnapshot ||
     snapshotChanged ||
@@ -4083,7 +4057,7 @@ function updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
     );
     if (null === workInProgressRoot) throw Error(formatProdErrorMessage(349));
     isHydrating$jscomp$0 ||
-      0 !== (renderLanes & 124) ||
+      0 !== (renderLanes & 60) ||
       pushStoreConsistencyCheck(fiber, getSnapshot, getServerSnapshot);
   }
   return getServerSnapshot;
@@ -4410,8 +4384,8 @@ function rerenderActionState(action) {
   currentStateHook.memoizedState = action;
   return [stateHook, dispatch, !1];
 }
-function pushSimpleEffect(tag, inst, create, createDeps) {
-  tag = { tag: tag, create: create, deps: createDeps, inst: inst, next: null };
+function pushSimpleEffect(tag, inst, create, deps) {
+  tag = { tag: tag, create: create, deps: deps, inst: inst, next: null };
   inst = currentlyRenderingFiber.updateQueue;
   null === inst &&
     ((inst = createFunctionComponentUpdateQueue()),
@@ -4419,9 +4393,9 @@ function pushSimpleEffect(tag, inst, create, createDeps) {
   create = inst.lastEffect;
   null === create
     ? (inst.lastEffect = tag.next = tag)
-    : ((createDeps = create.next),
+    : ((deps = create.next),
       (create.next = tag),
-      (tag.next = createDeps),
+      (tag.next = deps),
       (inst.lastEffect = tag));
   return tag;
 }
@@ -4431,15 +4405,15 @@ function createEffectInstance() {
 function updateRef() {
   return updateWorkInProgressHook().memoizedState;
 }
-function mountEffectImpl(fiberFlags, hookFlags, create, createDeps) {
+function mountEffectImpl(fiberFlags, hookFlags, create, deps) {
   var hook = mountWorkInProgressHook();
-  createDeps = void 0 === createDeps ? null : createDeps;
+  deps = void 0 === deps ? null : deps;
   currentlyRenderingFiber.flags |= fiberFlags;
   hook.memoizedState = pushSimpleEffect(
     1 | hookFlags,
     createEffectInstance(),
     create,
-    createDeps
+    deps
   );
 }
 function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
@@ -4458,11 +4432,11 @@ function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
         deps
       )));
 }
-function mountEffect(create, createDeps) {
-  mountEffectImpl(8390656, 8, create, createDeps);
+function mountEffect(create, deps) {
+  mountEffectImpl(8390656, 8, create, deps);
 }
-function updateEffect(create, createDeps) {
-  updateEffectImpl(2048, 8, create, createDeps);
+function updateEffect(create, deps) {
+  updateEffectImpl(2048, 8, create, deps);
 }
 function useEffectEventImpl(payload) {
   currentlyRenderingFiber.flags |= 4;
@@ -4803,7 +4777,7 @@ function enqueueRenderPhaseUpdate(queue, update) {
   queue.pending = update;
 }
 function entangleTransitionUpdate(root, queue, lane) {
-  if (0 !== (lane & 4194048)) {
+  if (0 !== (lane & 4194176)) {
     var queueLanes = queue.lanes;
     queueLanes &= root.pendingLanes;
     lane |= queueLanes;
@@ -4811,49 +4785,6 @@ function entangleTransitionUpdate(root, queue, lane) {
     markRootEntangled(root, lane);
   }
 }
-function startGesture(fiber, queue, gestureProvider) {
-  var root = enqueueGestureRender(fiber);
-  if (null === root) return function () {};
-  var update = {
-    gesture: scheduleGesture(root, gestureProvider),
-    prev: null,
-    next: queue.pending
-  };
-  null !== queue.pending && (queue.pending.prev = update);
-  queue.pending = update;
-  return function () {
-    if (null === update.prev)
-      if (queue.pending === update) queue.pending = update.next;
-      else return;
-    else
-      (update.prev.next = update.next),
-        null !== update.next && (update.next.prev = update.prev),
-        (update.prev = null),
-        (update.next = null);
-    var cancelledGestured = update.gesture;
-    cancelledGestured.count--;
-    0 === cancelledGestured.count &&
-      deleteScheduledGesture(root, cancelledGestured);
-  };
-}
-function updateSwipeTransition(previous, current) {
-  var queue = updateWorkInProgressHook().queue,
-    startGestureOnHook = queue.dispatch;
-  if (64 === workInProgressRootRenderLanes) {
-    var root$50 = workInProgressRoot;
-    if (null === root$50) throw Error(formatProdErrorMessage(349));
-    root$50 = root$50.gestures;
-    for (var update = queue.pending; null !== update; ) {
-      if (root$50 === update.gesture) {
-        current = previous;
-        break;
-      }
-      update = update.next;
-    }
-  }
-  null !== queue.pending && (currentlyRenderingFiber.lanes |= 64);
-  return [current, startGestureOnHook];
-}
 var ContextOnlyDispatcher = {
   readContext: readContext,
   use: use,
@@ -4880,7 +4811,6 @@ var ContextOnlyDispatcher = {
   useCacheRefresh: throwInvalidHookError
 };
 ContextOnlyDispatcher.useEffectEvent = throwInvalidHookError;
-ContextOnlyDispatcher.useSwipeTransition = throwInvalidHookError;
 var HooksDispatcherOnMount = {
     readContext: readContext,
     use: use,
@@ -4992,7 +4922,7 @@ var HooksDispatcherOnMount = {
         getServerSnapshot = getSnapshot();
         if (null === workInProgressRoot)
           throw Error(formatProdErrorMessage(349));
-        0 !== (workInProgressRootRenderLanes & 124) ||
+        0 !== (workInProgressRootRenderLanes & 60) ||
           pushStoreConsistencyCheck(fiber, getSnapshot, getServerSnapshot);
       }
       hook.memoizedState = getServerSnapshot;
@@ -5070,16 +5000,6 @@ var HooksDispatcherOnMount = {
           throw Error(formatProdErrorMessage(440));
         return ref.impl.apply(void 0, arguments);
       };
-    },
-    useSwipeTransition: function (previous, current) {
-      previous = { pending: null, dispatch: null };
-      var startGestureOnHook = (previous.dispatch = startGesture.bind(
-        null,
-        currentlyRenderingFiber,
-        previous
-      ));
-      mountWorkInProgressHook().queue = previous;
-      return [current, startGestureOnHook];
     }
   },
   HooksDispatcherOnUpdate = {
@@ -5130,7 +5050,6 @@ var HooksDispatcherOnMount = {
     useCacheRefresh: updateRefresh
   };
 HooksDispatcherOnUpdate.useEffectEvent = updateEvent;
-HooksDispatcherOnUpdate.useSwipeTransition = updateSwipeTransition;
 var HooksDispatcherOnRerender = {
   readContext: readContext,
   use: use,
@@ -5184,7 +5103,6 @@ var HooksDispatcherOnRerender = {
   useCacheRefresh: updateRefresh
 };
 HooksDispatcherOnRerender.useEffectEvent = updateEvent;
-HooksDispatcherOnRerender.useSwipeTransition = updateSwipeTransition;
 var thenableState = null,
   thenableIndexCounter = 0;
 function unwrapThenable(thenable) {
@@ -6039,9 +5957,9 @@ function logUncaughtError(root, errorInfo) {
   try {
     var onUncaughtError = root.onUncaughtError;
     onUncaughtError(errorInfo.value, { componentStack: errorInfo.stack });
-  } catch (e$80) {
+  } catch (e$79) {
     setTimeout(function () {
-      throw e$80;
+      throw e$79;
     });
   }
 }
@@ -6052,9 +5970,9 @@ function logCaughtError(root, boundary, errorInfo) {
       componentStack: errorInfo.stack,
       errorBoundary: 1 === boundary.tag ? boundary.stateNode : null
     });
-  } catch (e$81) {
+  } catch (e$80) {
     setTimeout(function () {
-      throw e$81;
+      throw e$80;
     });
   }
 }
@@ -7583,15 +7501,15 @@ function beginWork(current, workInProgress, renderLanes) {
           workInProgress.stateNode.containerInfo
         );
         if (null === current) throw Error(formatProdErrorMessage(387));
-        lazyComponent = workInProgress.pendingProps;
-        var prevState = workInProgress.memoizedState;
-        init = prevState.element;
+        var nextProps = workInProgress.pendingProps;
+        init = workInProgress.memoizedState;
+        lazyComponent = init.element;
         cloneUpdateQueue(current, workInProgress);
-        processUpdateQueue(workInProgress, lazyComponent, null, renderLanes);
+        processUpdateQueue(workInProgress, nextProps, null, renderLanes);
         var nextState = workInProgress.memoizedState;
-        lazyComponent = nextState.cache;
-        pushProvider(workInProgress, CacheContext, lazyComponent);
-        lazyComponent !== prevState.cache &&
+        nextProps = nextState.cache;
+        pushProvider(workInProgress, CacheContext, nextProps);
+        nextProps !== init.cache &&
           propagateContextChanges(
             workInProgress,
             [CacheContext],
@@ -7599,68 +7517,62 @@ function beginWork(current, workInProgress, renderLanes) {
             !0
           );
         suspendIfUpdateReadFromEntangledAsyncAction();
-        lazyComponent = nextState.element;
-        if (prevState.isDehydrated)
+        nextProps = nextState.element;
+        if (init.isDehydrated)
           if (
-            ((prevState = {
-              element: lazyComponent,
+            ((init = {
+              element: nextProps,
               isDehydrated: !1,
               cache: nextState.cache
             }),
-            (workInProgress.updateQueue.baseState = prevState),
-            (workInProgress.memoizedState = prevState),
+            (workInProgress.updateQueue.baseState = init),
+            (workInProgress.memoizedState = init),
             workInProgress.flags & 256)
           ) {
             workInProgress = mountHostRootWithoutHydrating(
               current,
               workInProgress,
-              lazyComponent,
+              nextProps,
               renderLanes
             );
             break a;
-          } else if (lazyComponent !== init) {
-            init = createCapturedValueAtFiber(
+          } else if (nextProps !== lazyComponent) {
+            lazyComponent = createCapturedValueAtFiber(
               Error(formatProdErrorMessage(424)),
               workInProgress
             );
-            queueHydrationError(init);
+            queueHydrationError(lazyComponent);
             workInProgress = mountHostRootWithoutHydrating(
               current,
               workInProgress,
-              lazyComponent,
+              nextProps,
               renderLanes
             );
             break a;
-          } else {
-            current = workInProgress.stateNode.containerInfo;
-            switch (current.nodeType) {
-              case 9:
-                current = current.body;
-                break;
-              default:
-                current =
-                  "HTML" === current.nodeName
-                    ? current.ownerDocument.body
-                    : current;
-            }
-            nextHydratableInstance = getNextHydratable(current.firstChild);
-            hydrationParentFiber = workInProgress;
-            isHydrating = !0;
-            hydrationErrors = null;
-            rootOrSingletonContext = !0;
-            renderLanes = mountChildFibers(
-              workInProgress,
-              null,
-              lazyComponent,
-              renderLanes
-            );
-            for (workInProgress.child = renderLanes; renderLanes; )
+          } else
+            for (
+              nextHydratableInstance = getNextHydratable(
+                workInProgress.stateNode.containerInfo.firstChild
+              ),
+                hydrationParentFiber = workInProgress,
+                isHydrating = !0,
+                hydrationErrors = null,
+                rootOrSingletonContext = !0,
+                renderLanes = mountChildFibers(
+                  workInProgress,
+                  null,
+                  nextProps,
+                  renderLanes
+                ),
+                workInProgress.child = renderLanes;
+              renderLanes;
+
+            )
               (renderLanes.flags = (renderLanes.flags & -3) | 4096),
                 (renderLanes = renderLanes.sibling);
-          }
         else {
           resetHydrationState();
-          if (lazyComponent === init) {
+          if (nextProps === lazyComponent) {
             workInProgress = bailoutOnAlreadyFinishedWork(
               current,
               workInProgress,
@@ -7668,12 +7580,7 @@ function beginWork(current, workInProgress, renderLanes) {
             );
             break a;
           }
-          reconcileChildren(
-            current,
-            workInProgress,
-            lazyComponent,
-            renderLanes
-          );
+          reconcileChildren(current, workInProgress, nextProps, renderLanes);
         }
         workInProgress = workInProgress.child;
       }
@@ -7721,21 +7628,24 @@ function beginWork(current, workInProgress, renderLanes) {
             )),
           (hydrationParentFiber = workInProgress),
           (rootOrSingletonContext = !0),
-          (init = nextHydratableInstance),
-          isSingletonScope(workInProgress.type)
-            ? ((previousHydratableOnEnteringScopedSingleton = init),
-              (nextHydratableInstance = getNextHydratable(
-                lazyComponent.firstChild
-              )))
-            : (nextHydratableInstance = init)),
-        reconcileChildren(
-          current,
-          workInProgress,
-          workInProgress.pendingProps.children,
-          renderLanes
-        ),
+          (nextHydratableInstance = getNextHydratable(
+            lazyComponent.firstChild
+          ))),
+        (lazyComponent = workInProgress.pendingProps.children),
+        null !== current || isHydrating
+          ? reconcileChildren(
+              current,
+              workInProgress,
+              lazyComponent,
+              renderLanes
+            )
+          : (workInProgress.child = reconcileChildFibers(
+              workInProgress,
+              null,
+              lazyComponent,
+              renderLanes
+            )),
         markRef(current, workInProgress),
-        null === current && (workInProgress.flags |= 4194304),
         workInProgress.child
       );
     case 5:
@@ -7763,10 +7673,10 @@ function beginWork(current, workInProgress, renderLanes) {
           init && throwOnHydrationMismatch(workInProgress)),
         pushHostContext(workInProgress),
         (init = workInProgress.type),
-        (prevState = workInProgress.pendingProps),
+        (nextProps = workInProgress.pendingProps),
         (nextState = null !== current ? current.memoizedProps : null),
-        (lazyComponent = prevState.children),
-        shouldSetTextContent(init, prevState)
+        (lazyComponent = nextProps.children),
+        shouldSetTextContent(init, nextProps)
           ? (lazyComponent = null)
           : null !== nextState &&
             shouldSetTextContent(init, nextState) &&
@@ -7924,11 +7834,11 @@ function beginWork(current, workInProgress, renderLanes) {
           ? ((init = peekCacheFromPool()),
             null === init &&
               ((init = workInProgressRoot),
-              (prevState = createCache()),
-              (init.pooledCache = prevState),
-              prevState.refCount++,
-              null !== prevState && (init.pooledCacheLanes |= renderLanes),
-              (init = prevState)),
+              (nextProps = createCache()),
+              (init.pooledCache = nextProps),
+              nextProps.refCount++,
+              null !== nextProps && (init.pooledCacheLanes |= renderLanes),
+              (init = nextProps)),
             (workInProgress.memoizedState = {
               parent: lazyComponent,
               cache: init
@@ -7940,7 +7850,7 @@ function beginWork(current, workInProgress, renderLanes) {
               processUpdateQueue(workInProgress, null, null, renderLanes),
               suspendIfUpdateReadFromEntangledAsyncAction()),
             (init = current.memoizedState),
-            (prevState = workInProgress.memoizedState),
+            (nextProps = workInProgress.memoizedState),
             init.parent !== lazyComponent
               ? ((init = { parent: lazyComponent, cache: lazyComponent }),
                 (workInProgress.memoizedState = init),
@@ -7949,7 +7859,7 @@ function beginWork(current, workInProgress, renderLanes) {
                     workInProgress.updateQueue.baseState =
                       init),
                 pushProvider(workInProgress, CacheContext, lazyComponent))
-              : ((lazyComponent = prevState.cache),
+              : ((lazyComponent = nextProps.cache),
                 pushProvider(workInProgress, CacheContext, lazyComponent),
                 lazyComponent !== init.cache &&
                   propagateContextChanges(
@@ -7971,20 +7881,22 @@ function beginWork(current, workInProgress, renderLanes) {
         (lazyComponent = workInProgress.pendingProps),
         (init = workInProgress.stateNode),
         null != lazyComponent.name && "auto" !== lazyComponent.name
-          ? (workInProgress.flags |= null === current ? 18882560 : 18874368)
+          ? ((workInProgress.flags |= 2097152),
+            null === current &&
+              trackAppearingViewTransition(init, lazyComponent.name))
           : null === init.autoName &&
-            ((prevState = workInProgressRoot.identifierPrefix),
+            ((nextProps = workInProgressRoot.identifierPrefix),
             isHydrating
               ? ((nextState = getTreeId()),
-                (prevState = "\u00ab" + prevState + "T" + nextState + "\u00bb"))
+                (nextProps = "\u00ab" + nextProps + "T" + nextState + "\u00bb"))
               : ((nextState = globalClientIdCounter++),
-                (prevState =
+                (nextProps =
                   "\u00ab" +
-                  prevState +
+                  nextProps +
                   "t" +
                   nextState.toString(32) +
                   "\u00bb")),
-            (init.autoName = prevState)),
+            (init.autoName = nextProps)),
         null !== current && current.memoizedProps.name !== lazyComponent.name
           ? (workInProgress.flags |= 4194816)
           : markRef(current, workInProgress),
@@ -8070,10 +7982,9 @@ function commitHookEffectListUnmount(
           if (void 0 !== destroy) {
             inst.destroy = void 0;
             lastEffect = finishedWork;
-            var nearestMountedAncestor = nearestMountedAncestor$jscomp$0,
-              destroy_ = destroy;
+            var nearestMountedAncestor = nearestMountedAncestor$jscomp$0;
             try {
-              destroy_();
+              destroy();
             } catch (error) {
               captureCommitPhaseError(
                 lastEffect,
@@ -8148,8 +8059,8 @@ function safelyCallComponentWillUnmount(
   } else
     try {
       instance.componentWillUnmount();
-    } catch (error$123) {
-      captureCommitPhaseError(current, nearestMountedAncestor, error$123);
+    } catch (error$122) {
+      captureCommitPhaseError(current, nearestMountedAncestor, error$122);
     }
 }
 function safelyAttachRef(current, nearestMountedAncestor) {
@@ -8215,8 +8126,8 @@ function safelyDetachRef(current, nearestMountedAncestor) {
             recordEffectDuration(current);
           }
         else ref(null);
-      } catch (error$124) {
-        captureCommitPhaseError(current, nearestMountedAncestor, error$124);
+      } catch (error$123) {
+        captureCommitPhaseError(current, nearestMountedAncestor, error$123);
       }
     else ref.current = null;
 }
@@ -8288,7 +8199,7 @@ function isHostParent(fiber) {
     5 === fiber.tag ||
     3 === fiber.tag ||
     26 === fiber.tag ||
-    (27 === fiber.tag && isSingletonScope(fiber.type)) ||
+    27 === fiber.tag ||
     4 === fiber.tag
   );
 }
@@ -8301,10 +8212,12 @@ function getHostSibling(fiber) {
     fiber.sibling.return = fiber.return;
     for (
       fiber = fiber.sibling;
-      5 !== fiber.tag && 6 !== fiber.tag && 18 !== fiber.tag;
+      5 !== fiber.tag &&
+      6 !== fiber.tag &&
+      27 !== fiber.tag &&
+      18 !== fiber.tag;
 
     ) {
-      if (27 === fiber.tag && isSingletonScope(fiber.type)) continue a;
       if (fiber.flags & 2) continue a;
       if (null === fiber.child || 4 === fiber.tag) continue a;
       else (fiber.child.return = fiber), (fiber = fiber.child);
@@ -8317,32 +8230,18 @@ function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {
   if (5 === tag || 6 === tag)
     (node = node.stateNode),
       before
-        ? (9 === parent.nodeType
-            ? parent.body
-            : "HTML" === parent.nodeName
-              ? parent.ownerDocument.body
-              : parent
-          ).insertBefore(node, before)
-        : ((before =
-            9 === parent.nodeType
-              ? parent.body
-              : "HTML" === parent.nodeName
-                ? parent.ownerDocument.body
-                : parent),
-          before.appendChild(node),
+        ? 8 === parent.nodeType
+          ? parent.parentNode.insertBefore(node, before)
+          : parent.insertBefore(node, before)
+        : (8 === parent.nodeType
+            ? ((before = parent.parentNode), before.insertBefore(node, parent))
+            : ((before = parent), before.appendChild(node)),
           (parent = parent._reactRootContainer),
           (null !== parent && void 0 !== parent) ||
             null !== before.onclick ||
             (before.onclick = noop$2)),
       (viewTransitionMutationContext = !0);
-  else if (
-    4 !== tag &&
-    (27 === tag &&
-      isSingletonScope(node.type) &&
-      ((parent = node.stateNode), (before = null)),
-    (node = node.child),
-    null !== node)
-  )
+  else if (4 !== tag && 27 !== tag && ((node = node.child), null !== node))
     for (
       insertOrAppendPlacementNodeIntoContainer(node, before, parent),
         node = node.sibling;
@@ -8358,12 +8257,7 @@ function insertOrAppendPlacementNode(node, before, parent) {
     (node = node.stateNode),
       before ? parent.insertBefore(node, before) : parent.appendChild(node),
       (viewTransitionMutationContext = !0);
-  else if (
-    4 !== tag &&
-    (27 === tag && isSingletonScope(node.type) && (parent = node.stateNode),
-    (node = node.child),
-    null !== node)
-  )
+  else if (4 !== tag && 27 !== tag && ((node = node.child), null !== node))
     for (
       insertOrAppendPlacementNode(node, before, parent), node = node.sibling;
       null !== node;
@@ -8371,23 +8265,6 @@ function insertOrAppendPlacementNode(node, before, parent) {
     )
       insertOrAppendPlacementNode(node, before, parent), (node = node.sibling);
 }
-function commitHostSingletonAcquisition(finishedWork) {
-  var singleton = finishedWork.stateNode,
-    props = finishedWork.memoizedProps;
-  try {
-    for (
-      var type = finishedWork.type, attributes = singleton.attributes;
-      attributes.length;
-
-    )
-      singleton.removeAttributeNode(attributes[0]);
-    setInitialProperties(singleton, type, props);
-    singleton[internalInstanceKey] = finishedWork;
-    singleton[internalPropsKey] = props;
-  } catch (error) {
-    captureCommitPhaseError(finishedWork, finishedWork.return, error);
-  }
-}
 var offscreenSubtreeIsHidden = !1,
   offscreenSubtreeWasHidden = !1,
   needsFormReset = !1,
@@ -8396,10 +8273,14 @@ var offscreenSubtreeIsHidden = !1,
   inProgressLanes = null,
   inProgressRoot = null,
   shouldStartViewTransition = !1,
-  appearingViewTransitions = null,
   viewTransitionContextChanged = !1,
   viewTransitionCancelableChildren = null;
-function commitBeforeMutationEffects(root, firstChild, committedLanes) {
+function commitBeforeMutationEffects(
+  root,
+  firstChild,
+  committedLanes,
+  appearingViewTransitions
+) {
   root = root.containerInfo;
   eventsEnabled = _enabled;
   root = getActiveElementDeep(root);
@@ -8470,7 +8351,7 @@ function commitBeforeMutationEffects(root, firstChild, committedLanes) {
   } else JSCompiler_temp = null;
   selectionInformation = { focusedElem: root, selectionRange: JSCompiler_temp };
   shouldStartViewTransition = _enabled = !1;
-  committedLanes = (committedLanes & 335544064) === committedLanes;
+  committedLanes = (committedLanes & 335544192) === committedLanes;
   nextEffect = firstChild;
   for (firstChild = committedLanes ? 9238 : 1028; null !== nextEffect; ) {
     root = nextEffect;
@@ -8484,7 +8365,10 @@ function commitBeforeMutationEffects(root, firstChild, committedLanes) {
         anchorOffset++
       )
         committedLanes &&
-          commitExitViewTransitions(JSCompiler_temp[anchorOffset]);
+          commitExitViewTransitions(
+            JSCompiler_temp[anchorOffset],
+            appearingViewTransitions
+          );
     if (null === root.alternate && 0 !== (root.flags & 2))
       commitBeforeMutationEffects_complete(committedLanes);
     else {
@@ -8493,7 +8377,10 @@ function commitBeforeMutationEffects(root, firstChild, committedLanes) {
           null !== JSCompiler_temp &&
             null === JSCompiler_temp.memoizedState &&
             committedLanes &&
-            commitExitViewTransitions(JSCompiler_temp);
+            commitExitViewTransitions(
+              JSCompiler_temp,
+              appearingViewTransitions
+            );
           commitBeforeMutationEffects_complete(committedLanes);
           continue;
         } else if (
@@ -8510,7 +8397,6 @@ function commitBeforeMutationEffects(root, firstChild, committedLanes) {
           commitBeforeMutationEffects_complete(committedLanes));
     }
   }
-  appearingViewTransitions = null;
 }
 function commitBeforeMutationEffects_complete(
   isViewTransitionEligible$jscomp$0
@@ -8691,13 +8577,13 @@ function restoreViewTransitionOnHostInstances(
   }
 }
 function commitAppearingPairViewTransitions(placement) {
-  if (0 !== (placement.subtreeFlags & 18874368))
+  if (0 !== (placement.subtreeFlags & 2097152))
     for (placement = placement.child; null !== placement; ) {
       if (22 !== placement.tag || null !== placement.memoizedState)
         if (
           (commitAppearingPairViewTransitions(placement),
           30 === placement.tag &&
-            0 !== (placement.flags & 18874368) &&
+            0 !== (placement.flags & 2097152) &&
             placement.stateNode.paired)
         ) {
           var props = placement.memoizedProps;
@@ -8746,49 +8632,46 @@ function commitEnterViewTransitions(placement) {
       commitEnterViewTransitions(placement), (placement = placement.sibling);
   else commitAppearingPairViewTransitions(placement);
 }
-function commitDeletedPairViewTransitions(deletion) {
+function commitDeletedPairViewTransitions(deletion, appearingViewTransitions) {
   if (
-    null !== appearingViewTransitions &&
-    0 !== appearingViewTransitions.size
-  ) {
-    var pairs = appearingViewTransitions;
-    if (0 !== (deletion.subtreeFlags & 18874368))
-      for (deletion = deletion.child; null !== deletion; ) {
-        if (22 !== deletion.tag || null !== deletion.memoizedState) {
-          if (30 === deletion.tag && 0 !== (deletion.flags & 18874368)) {
-            var props = deletion.memoizedProps,
-              name = props.name;
-            if (null != name && "auto" !== name) {
-              var pair = pairs.get(name);
-              if (void 0 !== pair) {
-                var className = getViewTransitionClassName(
-                  props.className,
-                  props.share
-                );
-                "none" !== className &&
-                  ((viewTransitionHostInstanceIdx = 0),
-                  applyViewTransitionToHostInstances(
-                    deletion.child,
-                    name,
-                    className,
-                    null,
-                    !1
-                  )
-                    ? ((pair.paired = deletion.stateNode),
-                      scheduleViewTransitionEvent(deletion, props.onShare))
-                    : restoreViewTransitionOnHostInstances(deletion.child, !1));
-                pairs.delete(name);
-                if (0 === pairs.size) break;
-              }
+    0 !== appearingViewTransitions.size &&
+    0 !== (deletion.subtreeFlags & 2097152)
+  )
+    for (deletion = deletion.child; null !== deletion; ) {
+      if (22 !== deletion.tag || null !== deletion.memoizedState) {
+        if (30 === deletion.tag && 0 !== (deletion.flags & 2097152)) {
+          var props = deletion.memoizedProps,
+            name = props.name;
+          if (null != name && "auto" !== name) {
+            var pair = appearingViewTransitions.get(name);
+            if (void 0 !== pair) {
+              var className = getViewTransitionClassName(
+                props.className,
+                props.share
+              );
+              "none" !== className &&
+                ((viewTransitionHostInstanceIdx = 0),
+                applyViewTransitionToHostInstances(
+                  deletion.child,
+                  name,
+                  className,
+                  null,
+                  !1
+                )
+                  ? ((pair.paired = deletion.stateNode),
+                    scheduleViewTransitionEvent(deletion, props.onShare))
+                  : restoreViewTransitionOnHostInstances(deletion.child, !1));
+              appearingViewTransitions.delete(name);
+              if (0 === appearingViewTransitions.size) break;
             }
           }
-          commitDeletedPairViewTransitions(deletion);
         }
-        deletion = deletion.sibling;
+        commitDeletedPairViewTransitions(deletion, appearingViewTransitions);
       }
-  }
+      deletion = deletion.sibling;
+    }
 }
-function commitExitViewTransitions(deletion) {
+function commitExitViewTransitions(deletion, appearingViewTransitions) {
   if (30 === deletion.tag) {
     var props = deletion.memoizedProps,
       name = getViewTransitionName(props, deletion.stateNode),
@@ -8816,13 +8699,14 @@ function commitExitViewTransitions(deletion) {
           : scheduleViewTransitionEvent(deletion, props.onExit)
         : restoreViewTransitionOnHostInstances(deletion.child, !1));
     null !== appearingViewTransitions &&
-      commitDeletedPairViewTransitions(deletion);
+      commitDeletedPairViewTransitions(deletion, appearingViewTransitions);
   } else if (0 !== (deletion.subtreeFlags & 33554432))
     for (deletion = deletion.child; null !== deletion; )
-      commitExitViewTransitions(deletion), (deletion = deletion.sibling);
+      commitExitViewTransitions(deletion, appearingViewTransitions),
+        (deletion = deletion.sibling);
   else
     null !== appearingViewTransitions &&
-      commitDeletedPairViewTransitions(deletion);
+      commitDeletedPairViewTransitions(deletion, appearingViewTransitions);
 }
 function commitNestedViewTransitions(changedParent) {
   for (changedParent = changedParent.child; null !== changedParent; ) {
@@ -8846,10 +8730,10 @@ function commitNestedViewTransitions(changedParent) {
   }
 }
 function restorePairedViewTransitions(parent) {
-  if (0 !== (parent.subtreeFlags & 18874368))
+  if (0 !== (parent.subtreeFlags & 2097152))
     for (parent = parent.child; null !== parent; ) {
       if (22 !== parent.tag || null !== parent.memoizedState) {
-        if (30 === parent.tag && 0 !== (parent.flags & 18874368)) {
+        if (30 === parent.tag && 0 !== (parent.flags & 2097152)) {
           var instance = parent.stateNode;
           null !== instance.paired &&
             ((instance.paired = null),
@@ -9053,11 +8937,11 @@ function commitLayoutEffectOnFiber(finishedRoot, current, finishedWork) {
           } else
             try {
               finishedRoot.componentDidMount();
-            } catch (error$120) {
+            } catch (error$119) {
               captureCommitPhaseError(
                 finishedWork,
                 finishedWork.return,
-                error$120
+                error$119
               );
             }
         else {
@@ -9074,11 +8958,11 @@ function commitLayoutEffectOnFiber(finishedRoot, current, finishedWork) {
                 current,
                 finishedRoot.__reactInternalSnapshotBeforeUpdate
               );
-            } catch (error$121) {
+            } catch (error$120) {
               captureCommitPhaseError(
                 finishedWork,
                 finishedWork.return,
-                error$121
+                error$120
               );
             }
             recordEffectDuration();
@@ -9089,11 +8973,11 @@ function commitLayoutEffectOnFiber(finishedRoot, current, finishedWork) {
                 current,
                 finishedRoot.__reactInternalSnapshotBeforeUpdate
               );
-            } catch (error$122) {
+            } catch (error$121) {
               captureCommitPhaseError(
                 finishedWork,
                 finishedWork.return,
-                error$122
+                error$121
               );
             }
         }
@@ -9122,11 +9006,11 @@ function commitLayoutEffectOnFiber(finishedRoot, current, finishedWork) {
       }
       finishedRoot.effectDuration += popNestedEffectDurations(current);
       break;
-    case 27:
-      null === current &&
-        flags & 4 &&
-        commitHostSingletonAcquisition(finishedWork);
     case 26:
+      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
+      flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);
+      break;
+    case 27:
     case 5:
       recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
       null === current && flags & 4 && commitHostMount(finishedWork);
@@ -9262,14 +9146,20 @@ function commitDeletionEffectsOnFiber(
         safelyDetachRef(deletedFiber, nearestMountedAncestor);
       var prevHostParent = hostParent,
         prevHostParentIsContainer = hostParentIsContainer;
-      isSingletonScope(deletedFiber.type) &&
-        ((hostParent = deletedFiber.stateNode), (hostParentIsContainer = !1));
+      hostParent = deletedFiber.stateNode;
       recursivelyTraverseDeletionEffects(
         finishedRoot,
         nearestMountedAncestor,
         deletedFiber
       );
-      releaseSingletonInstance(deletedFiber.stateNode);
+      deletedFiber = deletedFiber.stateNode;
+      for (
+        nearestMountedAncestor = deletedFiber.attributes;
+        nearestMountedAncestor.length;
+
+      )
+        deletedFiber.removeAttributeNode(nearestMountedAncestor[0]);
+      detachDeletedInstance(deletedFiber);
       hostParent = prevHostParent;
       hostParentIsContainer = prevHostParentIsContainer;
       break;
@@ -9277,25 +9167,24 @@ function commitDeletionEffectsOnFiber(
       offscreenSubtreeWasHidden ||
         safelyDetachRef(deletedFiber, nearestMountedAncestor);
     case 6:
-      prevHostParent = hostParent;
-      prevHostParentIsContainer = hostParentIsContainer;
+      prevHostParentIsContainer = hostParent;
+      var prevHostParentIsContainer$131 = hostParentIsContainer;
       hostParent = null;
       recursivelyTraverseDeletionEffects(
         finishedRoot,
         nearestMountedAncestor,
         deletedFiber
       );
-      hostParent = prevHostParent;
-      hostParentIsContainer = prevHostParentIsContainer;
+      hostParent = prevHostParentIsContainer;
+      hostParentIsContainer = prevHostParentIsContainer$131;
       if (null !== hostParent)
         if (hostParentIsContainer)
           try {
-            (9 === hostParent.nodeType
-              ? hostParent.body
-              : "HTML" === hostParent.nodeName
-                ? hostParent.ownerDocument.body
-                : hostParent
-            ).removeChild(deletedFiber.stateNode),
+            (finishedRoot = hostParent),
+              (prevHostParent = deletedFiber.stateNode),
+              8 === finishedRoot.nodeType
+                ? finishedRoot.parentNode.removeChild(prevHostParent)
+                : finishedRoot.removeChild(prevHostParent),
               (viewTransitionMutationContext = !0);
           } catch (error) {
             captureCommitPhaseError(
@@ -9319,16 +9208,16 @@ function commitDeletionEffectsOnFiber(
     case 18:
       null !== hostParent &&
         (hostParentIsContainer
-          ? ((finishedRoot = hostParent),
-            clearSuspenseBoundary(
-              9 === finishedRoot.nodeType
-                ? finishedRoot.body
-                : "HTML" === finishedRoot.nodeName
-                  ? finishedRoot.ownerDocument.body
-                  : finishedRoot,
-              deletedFiber.stateNode
-            ),
-            retryIfBlockedOn(finishedRoot))
+          ? ((nearestMountedAncestor = hostParent),
+            (deletedFiber = deletedFiber.stateNode),
+            8 === nearestMountedAncestor.nodeType
+              ? clearSuspenseBoundary(
+                  nearestMountedAncestor.parentNode,
+                  deletedFiber
+                )
+              : 1 === nearestMountedAncestor.nodeType &&
+                clearSuspenseBoundary(nearestMountedAncestor, deletedFiber),
+            retryIfBlockedOn(nearestMountedAncestor))
           : clearSuspenseBoundary(hostParent, deletedFiber.stateNode));
       break;
     case 4:
@@ -9462,17 +9351,14 @@ function recursivelyTraverseMutationEffects(root$jscomp$0, parentFiber, lanes) {
       a: for (; null !== parent; ) {
         switch (parent.tag) {
           case 27:
-            if (isSingletonScope(parent.type)) {
-              hostParent = parent.stateNode;
-              hostParentIsContainer = !1;
-              break a;
-            }
-            break;
           case 5:
             hostParent = parent.stateNode;
             hostParentIsContainer = !1;
             break a;
           case 3:
+            hostParent = parent.stateNode.containerInfo;
+            hostParentIsContainer = !0;
+            break a;
           case 4:
             hostParent = parent.stateNode.containerInfo;
             hostParentIsContainer = !0;
@@ -9683,20 +9569,36 @@ function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
               );
       break;
     case 27:
-      recursivelyTraverseMutationEffects(root, finishedWork, lanes);
-      commitReconciliationEffects(finishedWork);
-      flags & 512 &&
-        (offscreenSubtreeWasHidden ||
-          null === current ||
-          safelyDetachRef(current, current.return));
-      null !== current &&
-        flags & 4 &&
-        commitHostUpdate(
-          finishedWork,
-          finishedWork.memoizedProps,
-          current.memoizedProps
-        );
-      break;
+      if (flags & 4 && null === finishedWork.alternate) {
+        hoistableRoot = finishedWork.stateNode;
+        i = finishedWork.memoizedProps;
+        try {
+          for (var node = hoistableRoot.firstChild; node; ) {
+            var nextNode = node.nextSibling,
+              nodeName = node.nodeName;
+            node[internalHoistableMarker] ||
+              "HEAD" === nodeName ||
+              "BODY" === nodeName ||
+              "SCRIPT" === nodeName ||
+              "STYLE" === nodeName ||
+              ("LINK" === nodeName &&
+                "stylesheet" === node.rel.toLowerCase()) ||
+              hoistableRoot.removeChild(node);
+            node = nextNode;
+          }
+          for (
+            var type = finishedWork.type, attributes = hoistableRoot.attributes;
+            attributes.length;
+
+          )
+            hoistableRoot.removeAttributeNode(attributes[0]);
+          setInitialProperties(hoistableRoot, type, i);
+          hoistableRoot[internalInstanceKey] = finishedWork;
+          hoistableRoot[internalPropsKey] = i;
+        } catch (error) {
+          captureCommitPhaseError(finishedWork, finishedWork.return, error);
+        }
+      }
     case 5:
       recursivelyTraverseMutationEffects(root, finishedWork, lanes);
       commitReconciliationEffects(finishedWork);
@@ -9789,15 +9691,15 @@ function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
         (offscreenSubtreeWasHidden ||
           null === current ||
           safelyDetachRef(current, current.return));
-      hoistableRoot = null !== finishedWork.memoizedState;
-      var wasHidden = null !== current && null !== current.memoizedState,
-        prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden,
-        prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
-      offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden || hoistableRoot;
-      offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || wasHidden;
+      node = null !== finishedWork.memoizedState;
+      nextNode = null !== current && null !== current.memoizedState;
+      nodeName = offscreenSubtreeIsHidden;
+      type = offscreenSubtreeWasHidden;
+      offscreenSubtreeIsHidden = nodeName || node;
+      offscreenSubtreeWasHidden = type || nextNode;
       recursivelyTraverseMutationEffects(root, finishedWork, lanes);
-      offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
-      offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;
+      offscreenSubtreeWasHidden = type;
+      offscreenSubtreeIsHidden = nodeName;
       commitReconciliationEffects(finishedWork);
       root = finishedWork.stateNode;
       root._current = finishedWork;
@@ -9805,29 +9707,29 @@ function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
       root._visibility |= root._pendingVisibility & 2;
       if (
         flags & 8192 &&
-        ((root._visibility = hoistableRoot
+        ((root._visibility = node
           ? root._visibility & -2
           : root._visibility | 1),
-        hoistableRoot &&
-          (null === current ||
-            wasHidden ||
-            offscreenSubtreeIsHidden ||
-            offscreenSubtreeWasHidden ||
+        node &&
+          ((root = offscreenSubtreeIsHidden || offscreenSubtreeWasHidden),
+          null === current ||
+            nextNode ||
+            root ||
             recursivelyTraverseDisappearLayoutEffects(finishedWork)),
         null === finishedWork.memoizedProps ||
           "manual" !== finishedWork.memoizedProps.mode)
       )
         a: for (current = null, root = finishedWork; ; ) {
-          if (5 === root.tag || 26 === root.tag) {
+          if (5 === root.tag || 26 === root.tag || 27 === root.tag) {
             if (null === current) {
               lanes = current = root;
               try {
-                if (((i = lanes.stateNode), hoistableRoot)) {
-                  var style = i.style;
-                  "function" === typeof style.setProperty
-                    ? style.setProperty("display", "none", "important")
-                    : (style.display = "none");
-                } else {
+                if (((hoistableRoot = lanes.stateNode), node))
+                  (i = hoistableRoot.style),
+                    "function" === typeof i.setProperty
+                      ? i.setProperty("display", "none", "important")
+                      : (i.display = "none");
+                else {
                   var instance = lanes.stateNode,
                     styleProp = lanes.memoizedProps.style,
                     display =
@@ -9849,9 +9751,7 @@ function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
             if (null === current) {
               lanes = root;
               try {
-                lanes.stateNode.nodeValue = hoistableRoot
-                  ? ""
-                  : lanes.memoizedProps;
+                lanes.stateNode.nodeValue = node ? "" : lanes.memoizedProps;
               } catch (error) {
                 captureCommitPhaseError(lanes, lanes.return, error);
               }
@@ -9902,7 +9802,7 @@ function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
       viewTransitionMutationContext = !1;
       recursivelyTraverseMutationEffects(root, finishedWork, lanes);
       commitReconciliationEffects(finishedWork);
-      (lanes & 335544064) === lanes &&
+      (lanes & 335544192) === lanes &&
         null !== current &&
         viewTransitionMutationContext &&
         (finishedWork.flags |= 4);
@@ -9932,42 +9832,44 @@ function commitReconciliationEffects(finishedWork) {
   var flags = finishedWork.flags;
   if (flags & 2) {
     try {
-      a: {
-        for (var parent = finishedWork.return; null !== parent; ) {
-          if (isHostParent(parent)) {
-            var JSCompiler_inline_result = parent;
-            break a;
+      if (27 !== finishedWork.tag) {
+        a: {
+          for (var parent = finishedWork.return; null !== parent; ) {
+            if (isHostParent(parent)) {
+              var JSCompiler_inline_result = parent;
+              break a;
+            }
+            parent = parent.return;
           }
-          parent = parent.return;
+          throw Error(formatProdErrorMessage(160));
+        }
+        switch (JSCompiler_inline_result.tag) {
+          case 27:
+            var parent$jscomp$0 = JSCompiler_inline_result.stateNode,
+              before = getHostSibling(finishedWork);
+            insertOrAppendPlacementNode(finishedWork, before, parent$jscomp$0);
+            break;
+          case 5:
+            var parent$124 = JSCompiler_inline_result.stateNode;
+            JSCompiler_inline_result.flags & 32 &&
+              (setTextContent(parent$124, ""),
+              (JSCompiler_inline_result.flags &= -33));
+            var before$125 = getHostSibling(finishedWork);
+            insertOrAppendPlacementNode(finishedWork, before$125, parent$124);
+            break;
+          case 3:
+          case 4:
+            var parent$126 = JSCompiler_inline_result.stateNode.containerInfo,
+              before$127 = getHostSibling(finishedWork);
+            insertOrAppendPlacementNodeIntoContainer(
+              finishedWork,
+              before$127,
+              parent$126
+            );
+            break;
+          default:
+            throw Error(formatProdErrorMessage(161));
         }
-        throw Error(formatProdErrorMessage(160));
-      }
-      switch (JSCompiler_inline_result.tag) {
-        case 27:
-          var parent$jscomp$0 = JSCompiler_inline_result.stateNode,
-            before = getHostSibling(finishedWork);
-          insertOrAppendPlacementNode(finishedWork, before, parent$jscomp$0);
-          break;
-        case 5:
-          var parent$125 = JSCompiler_inline_result.stateNode;
-          JSCompiler_inline_result.flags & 32 &&
-            (setTextContent(parent$125, ""),
-            (JSCompiler_inline_result.flags &= -33));
-          var before$126 = getHostSibling(finishedWork);
-          insertOrAppendPlacementNode(finishedWork, before$126, parent$125);
-          break;
-        case 3:
-        case 4:
-          var parent$127 = JSCompiler_inline_result.stateNode.containerInfo,
-            before$128 = getHostSibling(finishedWork);
-          insertOrAppendPlacementNodeIntoContainer(
-            finishedWork,
-            before$128,
-            parent$127
-          );
-          break;
-        default:
-          throw Error(formatProdErrorMessage(161));
       }
     } catch (error) {
       captureCommitPhaseError(finishedWork, finishedWork.return, error);
@@ -10072,7 +9974,7 @@ function commitAfterMutationEffectsOnFiber(finishedWork, root) {
               ),
               layoutClassName = getViewTransitionClassName(
                 root.className,
-                root.layout
+                root.update
               );
             if ("none" === updateClassName) {
               if ("none" === layoutClassName) {
@@ -10162,9 +10064,8 @@ function recursivelyTraverseDisappearLayoutEffects(parentFiber) {
           );
         recursivelyTraverseDisappearLayoutEffects(finishedWork);
         break;
-      case 27:
-        releaseSingletonInstance(finishedWork.stateNode);
       case 26:
+      case 27:
       case 5:
         safelyDetachRef(finishedWork, finishedWork.return);
         recursivelyTraverseDisappearLayoutEffects(finishedWork);
@@ -10256,9 +10157,8 @@ function recursivelyTraverseReappearLayoutEffects(
           commitClassCallbacks(finishedWork);
         safelyAttachRef(finishedWork, finishedWork.return);
         break;
-      case 27:
-        commitHostSingletonAcquisition(finishedWork);
       case 26:
+      case 27:
       case 5:
         recursivelyTraverseReappearLayoutEffects(
           finishedRoot,
@@ -10373,7 +10273,7 @@ function recursivelyTraversePassiveMountEffects(
   endTime
 ) {
   var isViewTransitionEligible =
-    (committedLanes & 335544064) === committedLanes;
+    (committedLanes & 335544192) === committedLanes;
   if (
     parentFiber.subtreeFlags & (isViewTransitionEligible ? 10262 : 10256) ||
     (0 !== parentFiber.actualDuration &&
@@ -10414,7 +10314,7 @@ function commitPassiveMountOnFiber(
       inHydratedSubtree
     );
   var isViewTransitionEligible =
-    (committedLanes & 335544064) === committedLanes;
+    (committedLanes & 335544192) === committedLanes;
   isViewTransitionEligible &&
     null === finishedWork.alternate &&
     null !== finishedWork.return &&
@@ -10886,20 +10786,6 @@ function accumulateSuspenseyCommitOnFiber(fiber) {
             (suspenseyCommitFlag = previousHoistableRoot))
           : recursivelyAccumulateSuspenseyCommit(fiber));
       break;
-    case 30:
-      if (
-        0 !== (fiber.flags & suspenseyCommitFlag) &&
-        ((previousHoistableRoot = fiber.memoizedProps.name),
-        null != previousHoistableRoot && "auto" !== previousHoistableRoot)
-      ) {
-        null === appearingViewTransitions &&
-          (appearingViewTransitions = new Map());
-        var instance = fiber.stateNode;
-        instance.paired = null;
-        appearingViewTransitions.set(previousHoistableRoot, instance);
-      }
-      recursivelyAccumulateSuspenseyCommit(fiber);
-      break;
     default:
       recursivelyAccumulateSuspenseyCommit(fiber);
   }
@@ -11434,14 +11320,14 @@ function prepareToHydrateHostInstance(fiber) {
 function popToNextHostParent(fiber) {
   for (hydrationParentFiber = fiber.return; hydrationParentFiber; )
     switch (hydrationParentFiber.tag) {
+      case 3:
+      case 27:
+        rootOrSingletonContext = !0;
+        return;
       case 5:
       case 13:
         rootOrSingletonContext = !1;
         return;
-      case 27:
-      case 3:
-        rootOrSingletonContext = !0;
-        return;
       default:
         hydrationParentFiber = hydrationParentFiber.return;
     }
@@ -11449,52 +11335,46 @@ function popToNextHostParent(fiber) {
 function popHydrationState(fiber) {
   if (fiber !== hydrationParentFiber) return !1;
   if (!isHydrating) return popToNextHostParent(fiber), (isHydrating = !0), !1;
-  var tag = fiber.tag,
+  var shouldClear = !1,
     JSCompiler_temp;
-  if ((JSCompiler_temp = 3 !== tag && 27 !== tag)) {
-    if ((JSCompiler_temp = 5 === tag))
+  if ((JSCompiler_temp = 3 !== fiber.tag && 27 !== fiber.tag)) {
+    if ((JSCompiler_temp = 5 === fiber.tag))
       (JSCompiler_temp = fiber.type),
         (JSCompiler_temp =
           !("form" !== JSCompiler_temp && "button" !== JSCompiler_temp) ||
           shouldSetTextContent(fiber.type, fiber.memoizedProps));
     JSCompiler_temp = !JSCompiler_temp;
   }
-  JSCompiler_temp && nextHydratableInstance && throwOnHydrationMismatch(fiber);
+  JSCompiler_temp && (shouldClear = !0);
+  shouldClear && nextHydratableInstance && throwOnHydrationMismatch(fiber);
   popToNextHostParent(fiber);
-  if (13 === tag) {
+  if (13 === fiber.tag) {
     fiber = fiber.memoizedState;
     fiber = null !== fiber ? fiber.dehydrated : null;
     if (!fiber) throw Error(formatProdErrorMessage(317));
     a: {
       fiber = fiber.nextSibling;
-      for (tag = 0; fiber; ) {
+      for (shouldClear = 0; fiber; ) {
         if (8 === fiber.nodeType)
           if (((JSCompiler_temp = fiber.data), "/$" === JSCompiler_temp)) {
-            if (0 === tag) {
+            if (0 === shouldClear) {
               nextHydratableInstance = getNextHydratable(fiber.nextSibling);
               break a;
             }
-            tag--;
+            shouldClear--;
           } else
             ("$" !== JSCompiler_temp &&
               "$!" !== JSCompiler_temp &&
               "$?" !== JSCompiler_temp) ||
-              tag++;
+              shouldClear++;
         fiber = fiber.nextSibling;
       }
       nextHydratableInstance = null;
     }
   } else
-    27 === tag
-      ? ((tag = nextHydratableInstance),
-        isSingletonScope(fiber.type)
-          ? ((fiber = previousHydratableOnEnteringScopedSingleton),
-            (previousHydratableOnEnteringScopedSingleton = null),
-            (nextHydratableInstance = fiber))
-          : (nextHydratableInstance = tag))
-      : (nextHydratableInstance = hydrationParentFiber
-          ? getNextHydratable(fiber.stateNode.nextSibling)
-          : null);
+    nextHydratableInstance = hydrationParentFiber
+      ? getNextHydratable(fiber.stateNode.nextSibling)
+      : null;
   return !0;
 }
 function resetHydrationState() {
@@ -11524,31 +11404,14 @@ function getViewTransitionName(props, instance) {
     ? props.name
     : instance.autoName;
 }
-function getClassNameByType(classByType) {
-  if (null == classByType || "string" === typeof classByType)
-    return classByType;
-  var className = null,
-    activeTypes = pendingTransitionTypes;
-  if (null !== activeTypes)
-    for (var i = 0; i < activeTypes.length; i++) {
-      var match = classByType[activeTypes[i]];
-      if (null != match) {
-        if ("none" === match) return "none";
-        className = null == className ? match : className + (" " + match);
-      }
-    }
-  return null == className ? classByType.default : className;
-}
-function getViewTransitionClassName(defaultClass, eventClass) {
-  defaultClass = getClassNameByType(defaultClass);
-  eventClass = getClassNameByType(eventClass);
-  return null == eventClass
-    ? defaultClass
-    : "none" === eventClass
-      ? eventClass
-      : null != defaultClass && "none" !== defaultClass
-        ? defaultClass + " " + eventClass
-        : eventClass;
+function getViewTransitionClassName(className, eventClassName) {
+  return null == eventClassName
+    ? className
+    : "none" === eventClassName
+      ? eventClassName
+      : null != className
+        ? className + " " + eventClassName
+        : eventClassName;
 }
 function markUpdate(workInProgress) {
   workInProgress.flags |= 4;
@@ -11560,7 +11423,7 @@ function preloadResourceAndSuspendIfNeeded(workInProgress, resource) {
     resource = suspenseHandlerStackCursor.current;
     if (
       null !== resource &&
-      ((workInProgressRootRenderLanes & 4194048) ===
+      ((workInProgressRootRenderLanes & 4194176) ===
       workInProgressRootRenderLanes
         ? null !== shellBoundary
         : ((workInProgressRootRenderLanes & 62914560) !==
@@ -11598,14 +11461,14 @@ function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
         break;
       case "collapsed":
         lastTailNode = renderState.tail;
-        for (var lastTailNode$153 = null; null !== lastTailNode; )
-          null !== lastTailNode.alternate && (lastTailNode$153 = lastTailNode),
+        for (var lastTailNode$150 = null; null !== lastTailNode; )
+          null !== lastTailNode.alternate && (lastTailNode$150 = lastTailNode),
             (lastTailNode = lastTailNode.sibling);
-        null === lastTailNode$153
+        null === lastTailNode$150
           ? hasRenderedATailFallback || null === renderState.tail
             ? (renderState.tail = null)
             : (renderState.tail.sibling = null)
-          : (lastTailNode$153.sibling = null);
+          : (lastTailNode$150.sibling = null);
     }
 }
 function bubbleProperties(completedWork) {
@@ -11617,57 +11480,75 @@ function bubbleProperties(completedWork) {
   if (didBailout)
     if (0 !== (completedWork.mode & 2)) {
       for (
-        var treeBaseDuration$155 = completedWork.selfBaseDuration,
-          child$156 = completedWork.child;
-        null !== child$156;
+        var treeBaseDuration$152 = completedWork.selfBaseDuration,
+          child$153 = completedWork.child;
+        null !== child$153;
 
       )
-        (newChildLanes |= child$156.lanes | child$156.childLanes),
-          (subtreeFlags |= child$156.subtreeFlags & 65011712),
-          (subtreeFlags |= child$156.flags & 65011712),
-          (treeBaseDuration$155 += child$156.treeBaseDuration),
-          (child$156 = child$156.sibling);
-      completedWork.treeBaseDuration = treeBaseDuration$155;
+        (newChildLanes |= child$153.lanes | child$153.childLanes),
+          (subtreeFlags |= child$153.subtreeFlags & 65011712),
+          (subtreeFlags |= child$153.flags & 65011712),
+          (treeBaseDuration$152 += child$153.treeBaseDuration),
+          (child$153 = child$153.sibling);
+      completedWork.treeBaseDuration = treeBaseDuration$152;
     } else
       for (
-        treeBaseDuration$155 = completedWork.child;
-        null !== treeBaseDuration$155;
+        treeBaseDuration$152 = completedWork.child;
+        null !== treeBaseDuration$152;
 
       )
         (newChildLanes |=
-          treeBaseDuration$155.lanes | treeBaseDuration$155.childLanes),
-          (subtreeFlags |= treeBaseDuration$155.subtreeFlags & 65011712),
-          (subtreeFlags |= treeBaseDuration$155.flags & 65011712),
-          (treeBaseDuration$155.return = completedWork),
-          (treeBaseDuration$155 = treeBaseDuration$155.sibling);
+          treeBaseDuration$152.lanes | treeBaseDuration$152.childLanes),
+          (subtreeFlags |= treeBaseDuration$152.subtreeFlags & 65011712),
+          (subtreeFlags |= treeBaseDuration$152.flags & 65011712),
+          (treeBaseDuration$152.return = completedWork),
+          (treeBaseDuration$152 = treeBaseDuration$152.sibling);
   else if (0 !== (completedWork.mode & 2)) {
-    treeBaseDuration$155 = completedWork.actualDuration;
-    child$156 = completedWork.selfBaseDuration;
+    treeBaseDuration$152 = completedWork.actualDuration;
+    child$153 = completedWork.selfBaseDuration;
     for (var child = completedWork.child; null !== child; )
       (newChildLanes |= child.lanes | child.childLanes),
         (subtreeFlags |= child.subtreeFlags),
         (subtreeFlags |= child.flags),
-        (treeBaseDuration$155 += child.actualDuration),
-        (child$156 += child.treeBaseDuration),
+        (treeBaseDuration$152 += child.actualDuration),
+        (child$153 += child.treeBaseDuration),
         (child = child.sibling);
-    completedWork.actualDuration = treeBaseDuration$155;
-    completedWork.treeBaseDuration = child$156;
+    completedWork.actualDuration = treeBaseDuration$152;
+    completedWork.treeBaseDuration = child$153;
   } else
     for (
-      treeBaseDuration$155 = completedWork.child;
-      null !== treeBaseDuration$155;
+      treeBaseDuration$152 = completedWork.child;
+      null !== treeBaseDuration$152;
 
     )
       (newChildLanes |=
-        treeBaseDuration$155.lanes | treeBaseDuration$155.childLanes),
-        (subtreeFlags |= treeBaseDuration$155.subtreeFlags),
-        (subtreeFlags |= treeBaseDuration$155.flags),
-        (treeBaseDuration$155.return = completedWork),
-        (treeBaseDuration$155 = treeBaseDuration$155.sibling);
+        treeBaseDuration$152.lanes | treeBaseDuration$152.childLanes),
+        (subtreeFlags |= treeBaseDuration$152.subtreeFlags),
+        (subtreeFlags |= treeBaseDuration$152.flags),
+        (treeBaseDuration$152.return = completedWork),
+        (treeBaseDuration$152 = treeBaseDuration$152.sibling);
   completedWork.subtreeFlags |= subtreeFlags;
   completedWork.childLanes = newChildLanes;
   return didBailout;
 }
+function trackReappearingViewTransitions(workInProgress) {
+  if (0 !== (workInProgress.subtreeFlags & 2097152))
+    for (workInProgress = workInProgress.child; null !== workInProgress; ) {
+      if (22 !== workInProgress.tag || null !== workInProgress.memoizedState) {
+        if (
+          30 === workInProgress.tag &&
+          0 !== (workInProgress.flags & 2097152)
+        ) {
+          var props = workInProgress.memoizedProps;
+          null != props.name &&
+            "auto" !== props.name &&
+            trackAppearingViewTransition(workInProgress.stateNode, props.name);
+        }
+        trackReappearingViewTransitions(workInProgress);
+      }
+      workInProgress = workInProgress.sibling;
+    }
+}
 function completeWork(current, workInProgress, renderLanes) {
   var newProps = workInProgress.pendingProps;
   popTreeContext(workInProgress);
@@ -11960,11 +11841,11 @@ function completeWork(current, workInProgress, renderLanes) {
           null !== newProps.alternate.memoizedState &&
           null !== newProps.alternate.memoizedState.cachePool &&
           (type = newProps.alternate.memoizedState.cachePool.pool);
-        var cache$172 = null;
+        var cache$169 = null;
         null !== newProps.memoizedState &&
           null !== newProps.memoizedState.cachePool &&
-          (cache$172 = newProps.memoizedState.cachePool.pool);
-        cache$172 !== type && (newProps.flags |= 2048);
+          (cache$169 = newProps.memoizedState.cachePool.pool);
+        cache$169 !== type && (newProps.flags |= 2048);
       }
       renderLanes !== current &&
         renderLanes &&
@@ -11994,8 +11875,8 @@ function completeWork(current, workInProgress, renderLanes) {
       type = workInProgress.memoizedState;
       if (null === type) return bubbleProperties(workInProgress), null;
       newProps = 0 !== (workInProgress.flags & 128);
-      cache$172 = type.rendering;
-      if (null === cache$172)
+      cache$169 = type.rendering;
+      if (null === cache$169)
         if (newProps) cutOffTailIfNeeded(type, !1);
         else {
           if (
@@ -12003,11 +11884,11 @@ function completeWork(current, workInProgress, renderLanes) {
             (null !== current && 0 !== (current.flags & 128))
           )
             for (current = workInProgress.child; null !== current; ) {
-              cache$172 = findFirstSuspended(current);
-              if (null !== cache$172) {
+              cache$169 = findFirstSuspended(current);
+              if (null !== cache$169) {
                 workInProgress.flags |= 128;
                 cutOffTailIfNeeded(type, !1);
-                current = cache$172.updateQueue;
+                current = cache$169.updateQueue;
                 workInProgress.updateQueue = current;
                 scheduleRetryEffect(workInProgress, current);
                 workInProgress.subtreeFlags = 0;
@@ -12032,7 +11913,7 @@ function completeWork(current, workInProgress, renderLanes) {
         }
       else {
         if (!newProps)
-          if (((current = findFirstSuspended(cache$172)), null !== current)) {
+          if (((current = findFirstSuspended(cache$169)), null !== current)) {
             if (
               ((workInProgress.flags |= 128),
               (newProps = !0),
@@ -12042,7 +11923,7 @@ function completeWork(current, workInProgress, renderLanes) {
               cutOffTailIfNeeded(type, !0),
               null === type.tail &&
                 "hidden" === type.tailMode &&
-                !cache$172.alternate &&
+                !cache$169.alternate &&
                 !isHydrating)
             )
               return bubbleProperties(workInProgress), null;
@@ -12055,13 +11936,13 @@ function completeWork(current, workInProgress, renderLanes) {
               cutOffTailIfNeeded(type, !1),
               (workInProgress.lanes = 4194304));
         type.isBackwards
-          ? ((cache$172.sibling = workInProgress.child),
-            (workInProgress.child = cache$172))
+          ? ((cache$169.sibling = workInProgress.child),
+            (workInProgress.child = cache$169))
           : ((current = type.last),
             null !== current
-              ? (current.sibling = cache$172)
-              : (workInProgress.child = cache$172),
-            (type.last = cache$172));
+              ? (current.sibling = cache$169)
+              : (workInProgress.child = cache$169),
+            (type.last = cache$169));
       }
       if (null !== type.tail)
         return (
@@ -12084,7 +11965,8 @@ function completeWork(current, workInProgress, renderLanes) {
         (newProps = null !== workInProgress.memoizedState),
         null !== current
           ? (null !== current.memoizedState) !== newProps &&
-            (workInProgress.flags |= 8192)
+            ((workInProgress.flags |= 8192),
+            newProps || trackReappearingViewTransitions(workInProgress))
           : newProps && (workInProgress.flags |= 8192),
         newProps
           ? 0 !== (renderLanes & 536870912) &&
@@ -12261,6 +12143,7 @@ var DefaultAsyncDispatcher = {
   workInProgressSuspendedRetryLanes = 0,
   workInProgressRootConcurrentErrors = null,
   workInProgressRootRecoverableErrors = null,
+  workInProgressAppearingViewTransitions = null,
   workInProgressRootDidIncludeRecursiveRenderUpdate = !1,
   globalMostRecentFallbackTime = 0,
   workInProgressRootRenderTargetTime = Infinity,
@@ -12275,7 +12158,6 @@ var DefaultAsyncDispatcher = {
   pendingPassiveTransitions = null,
   pendingRecoverableErrors = null,
   pendingViewTransitionEvents = null,
-  pendingTransitionTypes = null,
   pendingSuspendedCommitReason = 0,
   nestedUpdateCount = 0,
   rootWithNestedUpdates = null;
@@ -12382,7 +12264,7 @@ function performWorkOnRoot(root$jscomp$0, lanes, forceSync) {
   }
   var exitStatus = (yieldEndTime =
     (!forceSync &&
-      0 === (lanes & 124) &&
+      0 === (lanes & 60) &&
       0 === (lanes & root$jscomp$0.expiredLanes)) ||
     checkIfRootIsPrerendering(root$jscomp$0, lanes))
     ? renderRootConcurrent(root$jscomp$0, lanes)
@@ -12473,15 +12355,15 @@ function performWorkOnRoot(root$jscomp$0, lanes, forceSync) {
           case 1:
             throw Error(formatProdErrorMessage(345));
           case 4:
-            if ((lanes & 4194048) !== lanes) break;
+            if ((lanes & 4194176) !== lanes) break;
           case 6:
             setCurrentTrackFromLanes(lanes);
             logSuspendedRenderPhase(renderStartTime, startTime, lanes);
             finalizeRender(lanes, startTime);
             forceSync = lanes;
-            0 !== (forceSync & 3) || 0 !== (forceSync & 124)
+            0 !== (forceSync & 3) || 0 !== (forceSync & 60)
               ? (blockingSuspendedTime = startTime)
-              : 0 !== (forceSync & 4194048) &&
+              : 0 !== (forceSync & 4194176) &&
                 (transitionSuspendedTime = startTime);
             markRootSuspended(
               yieldEndTime,
@@ -12518,6 +12400,7 @@ function performWorkOnRoot(root$jscomp$0, lanes, forceSync) {
               forceSync,
               workInProgressRootRecoverableErrors,
               workInProgressTransitions,
+              workInProgressAppearingViewTransitions,
               workInProgressRootDidIncludeRecursiveRenderUpdate,
               lanes,
               workInProgressDeferredLane,
@@ -12538,6 +12421,7 @@ function performWorkOnRoot(root$jscomp$0, lanes, forceSync) {
           forceSync,
           workInProgressRootRecoverableErrors,
           workInProgressTransitions,
+          workInProgressAppearingViewTransitions,
           workInProgressRootDidIncludeRecursiveRenderUpdate,
           lanes,
           workInProgressDeferredLane,
@@ -12560,6 +12444,7 @@ function commitRootWhenReady(
   finishedWork,
   recoverableErrors,
   transitions,
+  appearingViewTransitions,
   didIncludeRenderPhaseUpdate,
   lanes,
   spawnedLane,
@@ -12573,32 +12458,29 @@ function commitRootWhenReady(
 ) {
   root.timeoutHandle = -1;
   var subtreeFlags = finishedWork.subtreeFlags,
-    isViewTransitionEligible = (lanes & 335544064) === lanes;
-  if (
-    isViewTransitionEligible ||
-    subtreeFlags & 8192 ||
-    16785408 === (subtreeFlags & 16785408)
-  ) {
+    isViewTransitionEligible = (lanes & 335544192) === lanes;
+  subtreeFlags = subtreeFlags & 8192 || 16785408 === (subtreeFlags & 16785408);
+  if (isViewTransitionEligible || subtreeFlags) {
     suspendedState = { stylesheets: null, count: 0, unsuspend: noop$1 };
-    appearingViewTransitions = null;
-    accumulateSuspenseyCommitOnFiber(finishedWork);
+    subtreeFlags && accumulateSuspenseyCommitOnFiber(finishedWork);
     if (isViewTransitionEligible) {
-      isViewTransitionEligible = root.containerInfo;
+      subtreeFlags = root.containerInfo;
       if (null === suspendedState) throw Error(formatProdErrorMessage(475));
-      subtreeFlags = suspendedState;
-      isViewTransitionEligible = (
-        9 === isViewTransitionEligible.nodeType
-          ? isViewTransitionEligible
-          : isViewTransitionEligible.ownerDocument
+      isViewTransitionEligible = suspendedState;
+      subtreeFlags = (
+        9 === subtreeFlags.nodeType ? subtreeFlags : subtreeFlags.ownerDocument
       ).__reactViewTransition;
-      null != isViewTransitionEligible &&
-        (subtreeFlags.count++,
-        (subtreeFlags = onUnsuspend.bind(subtreeFlags)),
-        isViewTransitionEligible.finished.then(subtreeFlags, subtreeFlags));
+      null != subtreeFlags &&
+        (isViewTransitionEligible.count++,
+        (isViewTransitionEligible = onUnsuspend.bind(isViewTransitionEligible)),
+        subtreeFlags.finished.then(
+          isViewTransitionEligible,
+          isViewTransitionEligible
+        ));
     }
-    subtreeFlags = waitForCommitToBeReady();
-    if (null !== subtreeFlags) {
-      root.cancelPendingCommit = subtreeFlags(
+    isViewTransitionEligible = waitForCommitToBeReady();
+    if (null !== isViewTransitionEligible) {
+      root.cancelPendingCommit = isViewTransitionEligible(
         commitRoot.bind(
           null,
           root,
@@ -12606,6 +12488,7 @@ function commitRootWhenReady(
           lanes,
           recoverableErrors,
           transitions,
+          appearingViewTransitions,
           didIncludeRenderPhaseUpdate,
           spawnedLane,
           updatedLanes,
@@ -12626,6 +12509,7 @@ function commitRootWhenReady(
     lanes,
     recoverableErrors,
     transitions,
+    appearingViewTransitions,
     didIncludeRenderPhaseUpdate,
     spawnedLane,
     updatedLanes,
@@ -12714,9 +12598,9 @@ function resetWorkInProgressStack() {
   }
 }
 function finalizeRender(lanes, finalizationTime) {
-  if (0 !== (lanes & 3) || 0 !== (lanes & 124))
+  if (0 !== (lanes & 3) || 0 !== (lanes & 60))
     blockingClampTime = finalizationTime;
-  0 !== (lanes & 4194048) && (transitionClampTime = finalizationTime);
+  0 !== (lanes & 4194176) && (transitionClampTime = finalizationTime);
 }
 function prepareFreshStack(root, lanes) {
   supportsUserTiming &&
@@ -12737,13 +12621,13 @@ function prepareFreshStack(root, lanes) {
       var endTime = renderStartTime;
       supportsUserTiming &&
         ((reusableLaneDevToolDetails.color =
-          (lanes & 738197653) === lanes ? "tertiary-dark" : "primary-dark"),
+          (lanes & 738197589) === lanes ? "tertiary-dark" : "primary-dark"),
         (reusableLaneOptions.start = previousRenderStartTime),
         (reusableLaneOptions.end = endTime),
         performance.measure(
           (lanes & 536870912) === lanes
             ? "Prewarm"
-            : (lanes & 201326741) === lanes
+            : (lanes & 201326677) === lanes
               ? "Interrupted Hydration"
               : "Interrupted Render",
           reusableLaneOptions
@@ -12751,7 +12635,7 @@ function prepareFreshStack(root, lanes) {
     }
     finalizeRender(workInProgressRootRenderLanes, renderStartTime);
   }
-  if (0 !== (lanes & 3) || 0 !== (lanes & 124)) {
+  if (0 !== (lanes & 3) || 0 !== (lanes & 60)) {
     previousRenderStartTime =
       0 <= blockingUpdateTime && blockingUpdateTime < blockingClampTime
         ? blockingClampTime
@@ -12794,7 +12678,7 @@ function prepareFreshStack(root, lanes) {
       0 < previousRenderStartTime &&
         ((reusableLaneDevToolDetails.color = isSpawnedUpdate
           ? "error"
-          : (lanes & 738197653) === lanes
+          : (lanes & 738197589) === lanes
             ? "tertiary-light"
             : "primary-light"),
         (reusableLaneOptions.start = previousRenderStartTime),
@@ -12807,7 +12691,7 @@ function prepareFreshStack(root, lanes) {
     blockingEventIsRepeat = !0;
     blockingSpawnedUpdate = !1;
   }
-  0 !== (lanes & 4194048) &&
+  0 !== (lanes & 4194176) &&
     ((previousRenderStartTime =
       0 <= transitionStartTime && transitionStartTime < transitionClampTime
         ? transitionClampTime
@@ -12892,6 +12776,7 @@ function prepareFreshStack(root, lanes) {
   workInProgressRootRecoverableErrors = workInProgressRootConcurrentErrors =
     null;
   workInProgressRootDidIncludeRecursiveRenderUpdate = !1;
+  workInProgressAppearingViewTransitions = null;
   0 !== (lanes & 8) && (lanes |= lanes & 32);
   endTime = root.entangledLanes;
   if (0 !== endTime)
@@ -12945,7 +12830,7 @@ function pushAsyncDispatcher() {
 function renderDidSuspendDelayIfPossible() {
   workInProgressRootExitStatus = 4;
   workInProgressRootDidSkipSuspendedSiblings ||
-    ((workInProgressRootRenderLanes & 4194048) !==
+    ((workInProgressRootRenderLanes & 4194176) !==
       workInProgressRootRenderLanes &&
       null !== suspenseHandlerStackCursor.current) ||
     (workInProgressRootIsPrerendering = !0);
@@ -12964,6 +12849,18 @@ function queueConcurrentError(error) {
     ? (workInProgressRootConcurrentErrors = [error])
     : workInProgressRootConcurrentErrors.push(error);
 }
+function trackAppearingViewTransition(instance, name) {
+  if (null === workInProgressAppearingViewTransitions) {
+    if (
+      (workInProgressRootRenderLanes & 335544192) !==
+      workInProgressRootRenderLanes
+    )
+      return;
+    workInProgressAppearingViewTransitions = new Map();
+  }
+  instance.paired = null;
+  workInProgressAppearingViewTransitions.set(name, instance);
+}
 function renderRootSync(root, lanes, shouldYieldForPrerendering) {
   var prevExecutionContext = executionContext;
   executionContext |= 2;
@@ -13019,8 +12916,8 @@ function renderRootSync(root, lanes, shouldYieldForPrerendering) {
       workLoopSync();
       memoizedUpdaters = workInProgressRootExitStatus;
       break;
-    } catch (thrownValue$193) {
-      handleThrow(root, thrownValue$193);
+    } catch (thrownValue$190) {
+      handleThrow(root, thrownValue$190);
     }
   while (1);
   lanes && root.shellSuspendCounter++;
@@ -13141,8 +13038,8 @@ function renderRootConcurrent(root, lanes) {
         }
       workLoopConcurrentByScheduler();
       break;
-    } catch (thrownValue$195) {
-      handleThrow(root, thrownValue$195);
+    } catch (thrownValue$192) {
+      handleThrow(root, thrownValue$192);
     }
   while (1);
   lastContextDependency = currentlyRenderingFiber$1 = null;
@@ -13336,6 +13233,7 @@ function commitRoot(
   lanes,
   recoverableErrors,
   transitions,
+  appearingViewTransitions,
   didIncludeRenderPhaseUpdate,
   spawnedLane,
   updatedLanes,
@@ -13378,7 +13276,6 @@ function commitRoot(
     if (finishedWork === root.current) throw Error(formatProdErrorMessage(177));
     didIncludeRenderPhaseUpdate = finishedWork.lanes | finishedWork.childLanes;
     didIncludeRenderPhaseUpdate |= concurrentlyUpdatedLanes;
-    null === root.gestures && (didIncludeRenderPhaseUpdate &= -65);
     markRootFinished(
       root,
       lanes,
@@ -13390,68 +13287,65 @@ function commitRoot(
     root === workInProgressRoot &&
       ((workInProgress = workInProgressRoot = null),
       (workInProgressRootRenderLanes = 0));
-    if (64 === lanes) commitGestureOnRoot(root);
-    else {
-      pendingFinishedWork = finishedWork;
-      pendingEffectsRoot = root;
-      pendingEffectsLanes = lanes;
-      pendingEffectsRemainingLanes = didIncludeRenderPhaseUpdate;
-      pendingPassiveTransitions = transitions;
-      pendingRecoverableErrors = recoverableErrors;
-      pendingEffectsRenderEndTime = completedRenderEndTime;
-      pendingSuspendedCommitReason = suspendedCommitReason;
-      pendingViewTransitionEvents = null;
-      (lanes & 335544064) === lanes
-        ? ((pendingTransitionTypes = ReactSharedInternals.V),
-          (ReactSharedInternals.V = null),
-          (recoverableErrors = 10262))
-        : ((pendingTransitionTypes = null), (recoverableErrors = 10256));
-      0 !== finishedWork.actualDuration ||
-      0 !== (finishedWork.subtreeFlags & recoverableErrors) ||
-      0 !== (finishedWork.flags & recoverableErrors)
-        ? ((root.callbackNode = null),
-          (root.callbackPriority = 0),
-          scheduleCallback$1(NormalPriority$1, function () {
-            schedulerEvent = window.event;
-            flushPassiveEffects(!0);
-            return null;
-          }))
-        : ((root.callbackNode = null), (root.callbackPriority = 0));
-      commitErrors = null;
-      commitStartTime = now();
-      1 === suspendedCommitReason
-        ? logSuspendedCommitPhase(completedRenderEndTime, commitStartTime)
-        : 2 === suspendedCommitReason &&
-          logSuspenseThrottlePhase(completedRenderEndTime, commitStartTime);
-      suspendedCommitReason = 0 !== (finishedWork.flags & 13878);
-      if (0 !== (finishedWork.subtreeFlags & 13878) || suspendedCommitReason) {
-        suspendedCommitReason = ReactSharedInternals.T;
-        ReactSharedInternals.T = null;
-        completedRenderEndTime = ReactDOMSharedInternals.p;
-        ReactDOMSharedInternals.p = 2;
-        recoverableErrors = executionContext;
-        executionContext |= 4;
-        try {
-          commitBeforeMutationEffects(root, finishedWork, lanes);
-        } finally {
-          (executionContext = recoverableErrors),
-            (ReactDOMSharedInternals.p = completedRenderEndTime),
-            (ReactSharedInternals.T = suspendedCommitReason);
-        }
+    pendingFinishedWork = finishedWork;
+    pendingEffectsRoot = root;
+    pendingEffectsLanes = lanes;
+    pendingEffectsRemainingLanes = didIncludeRenderPhaseUpdate;
+    pendingPassiveTransitions = transitions;
+    pendingRecoverableErrors = recoverableErrors;
+    pendingViewTransitionEvents = null;
+    pendingEffectsRenderEndTime = completedRenderEndTime;
+    pendingSuspendedCommitReason = suspendedCommitReason;
+    recoverableErrors = (lanes & 335544192) === lanes ? 10262 : 10256;
+    0 !== finishedWork.actualDuration ||
+    0 !== (finishedWork.subtreeFlags & recoverableErrors) ||
+    0 !== (finishedWork.flags & recoverableErrors)
+      ? ((root.callbackNode = null),
+        (root.callbackPriority = 0),
+        scheduleCallback$1(NormalPriority$1, function () {
+          schedulerEvent = window.event;
+          flushPassiveEffects(!0);
+          return null;
+        }))
+      : ((root.callbackNode = null), (root.callbackPriority = 0));
+    commitErrors = null;
+    commitStartTime = now();
+    1 === suspendedCommitReason
+      ? logSuspendedCommitPhase(completedRenderEndTime, commitStartTime)
+      : 2 === suspendedCommitReason &&
+        logSuspenseThrottlePhase(completedRenderEndTime, commitStartTime);
+    suspendedCommitReason = 0 !== (finishedWork.flags & 13878);
+    if (0 !== (finishedWork.subtreeFlags & 13878) || suspendedCommitReason) {
+      suspendedCommitReason = ReactSharedInternals.T;
+      ReactSharedInternals.T = null;
+      completedRenderEndTime = ReactDOMSharedInternals.p;
+      ReactDOMSharedInternals.p = 2;
+      recoverableErrors = executionContext;
+      executionContext |= 4;
+      try {
+        commitBeforeMutationEffects(
+          root,
+          finishedWork,
+          lanes,
+          appearingViewTransitions
+        );
+      } finally {
+        (executionContext = recoverableErrors),
+          (ReactDOMSharedInternals.p = completedRenderEndTime),
+          (ReactSharedInternals.T = suspendedCommitReason);
       }
-      pendingEffectsStatus = 1;
-      (shouldStartViewTransition &&
-        startViewTransition(
-          root.containerInfo,
-          pendingTransitionTypes,
-          flushMutationEffects,
-          flushLayoutEffects,
-          flushAfterMutationEffects,
-          flushSpawnedWork,
-          flushPassiveEffects
-        )) ||
-        (flushMutationEffects(), flushLayoutEffects(), flushSpawnedWork());
     }
+    pendingEffectsStatus = 1;
+    (shouldStartViewTransition &&
+      startViewTransition(
+        root.containerInfo,
+        flushMutationEffects,
+        flushLayoutEffects,
+        flushAfterMutationEffects,
+        flushSpawnedWork,
+        flushPassiveEffects
+      )) ||
+      (flushMutationEffects(), flushLayoutEffects(), flushSpawnedWork());
   }
 }
 function flushAfterMutationEffects() {
@@ -13642,7 +13536,7 @@ function flushSpawnedWork() {
         (reusableLaneOptions.start = completedRenderEndTime),
         (reusableLaneOptions.end = suspendedCommitReason),
         performance.measure("Commit", reusableLaneOptions));
-    completedRenderEndTime = (lanes & 335544064) === lanes ? 10262 : 10256;
+    completedRenderEndTime = (lanes & 335544192) === lanes ? 10262 : 10256;
     (completedRenderEndTime =
       0 !== finishedWork.actualDuration ||
       0 !== (finishedWork.subtreeFlags & completedRenderEndTime) ||
@@ -13706,21 +13600,17 @@ function flushSpawnedWork() {
       }
     }
     recoverableErrors = pendingViewTransitionEvents;
-    onRecoverableError = pendingTransitionTypes;
-    pendingTransitionTypes = null;
     if (null !== recoverableErrors)
       for (
-        pendingViewTransitionEvents = null,
-          null === onRecoverableError && (onRecoverableError = []),
-          recoverableError = 0;
-        recoverableError < recoverableErrors.length;
-        recoverableError++
+        pendingViewTransitionEvents = null, onRecoverableError = 0;
+        onRecoverableError < recoverableErrors.length;
+        onRecoverableError++
       )
-        (0, recoverableErrors[recoverableError])(onRecoverableError);
+        (0, recoverableErrors[onRecoverableError])();
     0 !== (pendingEffectsLanes & 3) && flushPendingEffects();
     ensureRootIsScheduled(root);
     suspendedCommitReason = root.pendingLanes;
-    0 !== (lanes & 4194090) && 0 !== (suspendedCommitReason & 42)
+    0 !== (lanes & 4194218) && 0 !== (suspendedCommitReason & 42)
       ? ((nestedUpdateScheduled = !0),
         root === rootWithNestedUpdates
           ? nestedUpdateCount++
@@ -13730,11 +13620,6 @@ function flushSpawnedWork() {
     flushSyncWorkAcrossRoots_impl(0, !1);
   }
 }
-function commitGestureOnRoot(root) {
-  var finishedGesture = root.gestures;
-  if (null === finishedGesture) throw Error(formatProdErrorMessage(548));
-  deleteScheduledGesture(root, finishedGesture);
-}
 function releaseRootPooledCache(root, remainingLanes) {
   0 === (root.pooledCacheLanes &= remainingLanes) &&
     ((remainingLanes = root.pooledCache),
@@ -13900,9 +13785,9 @@ function pingSuspendedRoot(root, wakeable, pingedLanes) {
   null !== pingCache && pingCache.delete(wakeable);
   root.pingedLanes |= root.suspendedLanes & pingedLanes;
   root.warmLanes &= ~pingedLanes;
-  0 !== (pingedLanes & 3) || 0 !== (pingedLanes & 124)
+  0 !== (pingedLanes & 3) || 0 !== (pingedLanes & 60)
     ? 0 > blockingUpdateTime && (blockingClampTime = blockingUpdateTime = now())
-    : 0 !== (pingedLanes & 4194048) &&
+    : 0 !== (pingedLanes & 4194176) &&
       0 > transitionUpdateTime &&
       (transitionClampTime = transitionUpdateTime = now());
   workInProgressRoot === root &&
@@ -13981,42 +13866,41 @@ function flushSyncWorkAcrossRoots_impl(syncTransitionLanes, onlyLegacy) {
     isFlushingWork = !0;
     do {
       var didPerformSomeWork = !1;
-      for (var root$201 = firstScheduledRoot; null !== root$201; ) {
+      for (var root$198 = firstScheduledRoot; null !== root$198; ) {
         if (!onlyLegacy)
           if (0 !== syncTransitionLanes) {
-            var pendingLanes = root$201.pendingLanes;
+            var pendingLanes = root$198.pendingLanes;
             if (0 === pendingLanes) var JSCompiler_inline_result = 0;
             else {
-              var suspendedLanes = root$201.suspendedLanes,
-                pingedLanes = root$201.pingedLanes;
+              var suspendedLanes = root$198.suspendedLanes,
+                pingedLanes = root$198.pingedLanes;
               JSCompiler_inline_result =
                 (1 << (31 - clz32(42 | syncTransitionLanes) + 1)) - 1;
               JSCompiler_inline_result &=
                 pendingLanes & ~(suspendedLanes & ~pingedLanes);
               JSCompiler_inline_result =
-                JSCompiler_inline_result & 201326741
-                  ? (JSCompiler_inline_result & 201326741) | 1
+                JSCompiler_inline_result & 201326677
+                  ? (JSCompiler_inline_result & 201326677) | 1
                   : JSCompiler_inline_result
                     ? JSCompiler_inline_result | 2
                     : 0;
             }
             0 !== JSCompiler_inline_result &&
               ((didPerformSomeWork = !0),
-              performSyncWorkOnRoot(root$201, JSCompiler_inline_result));
+              performSyncWorkOnRoot(root$198, JSCompiler_inline_result));
           } else
             (JSCompiler_inline_result = workInProgressRootRenderLanes),
               (JSCompiler_inline_result = getNextLanes(
-                root$201,
-                root$201 === workInProgressRoot ? JSCompiler_inline_result : 0,
-                null !== root$201.cancelPendingCommit ||
-                  -1 !== root$201.timeoutHandle
+                root$198,
+                root$198 === workInProgressRoot ? JSCompiler_inline_result : 0,
+                null !== root$198.cancelPendingCommit ||
+                  -1 !== root$198.timeoutHandle
               )),
-              (0 === (JSCompiler_inline_result & 3) &&
-                64 !== JSCompiler_inline_result) ||
-                checkIfRootIsPrerendering(root$201, JSCompiler_inline_result) ||
+              0 === (JSCompiler_inline_result & 3) ||
+                checkIfRootIsPrerendering(root$198, JSCompiler_inline_result) ||
                 ((didPerformSomeWork = !0),
-                performSyncWorkOnRoot(root$201, JSCompiler_inline_result));
-        root$201 = root$201.next;
+                performSyncWorkOnRoot(root$198, JSCompiler_inline_result));
+        root$198 = root$198.next;
       }
     } while (didPerformSomeWork);
     isFlushingWork = !1;
@@ -14045,8 +13929,7 @@ function processRootScheduleInMicrotask() {
         null === prev ? (firstScheduledRoot = next) : (prev.next = next),
         null === next && (lastScheduledRoot = prev);
     else if (
-      ((prev = root),
-      0 !== syncTransitionLanes || 0 !== (nextLanes & 3) || 64 === nextLanes)
+      ((prev = root), 0 !== syncTransitionLanes || 0 !== (nextLanes & 3))
     )
       mightHavePendingSyncWork = !0;
     root = next;
@@ -14265,20 +14148,20 @@ function extractEvents$1(
   }
 }
 for (
-  var i$jscomp$inline_1724 = 0;
-  i$jscomp$inline_1724 < simpleEventPluginEvents.length;
-  i$jscomp$inline_1724++
+  var i$jscomp$inline_1700 = 0;
+  i$jscomp$inline_1700 < simpleEventPluginEvents.length;
+  i$jscomp$inline_1700++
 ) {
-  var eventName$jscomp$inline_1725 =
-      simpleEventPluginEvents[i$jscomp$inline_1724],
-    domEventName$jscomp$inline_1726 =
-      eventName$jscomp$inline_1725.toLowerCase(),
-    capitalizedEvent$jscomp$inline_1727 =
-      eventName$jscomp$inline_1725[0].toUpperCase() +
-      eventName$jscomp$inline_1725.slice(1);
+  var eventName$jscomp$inline_1701 =
+      simpleEventPluginEvents[i$jscomp$inline_1700],
+    domEventName$jscomp$inline_1702 =
+      eventName$jscomp$inline_1701.toLowerCase(),
+    capitalizedEvent$jscomp$inline_1703 =
+      eventName$jscomp$inline_1701[0].toUpperCase() +
+      eventName$jscomp$inline_1701.slice(1);
   registerSimpleEvent(
-    domEventName$jscomp$inline_1726,
-    "on" + capitalizedEvent$jscomp$inline_1727
+    domEventName$jscomp$inline_1702,
+    "on" + capitalizedEvent$jscomp$inline_1703
   );
 }
 registerSimpleEvent(ANIMATION_END, "onAnimationEnd");
@@ -14486,15 +14369,22 @@ function dispatchEventForPluginEventSystem(
       var nodeTag = targetInst$jscomp$0.tag;
       if (3 === nodeTag || 4 === nodeTag) {
         var container = targetInst$jscomp$0.stateNode.containerInfo;
-        if (container === targetContainer) break;
+        if (
+          container === targetContainer ||
+          (8 === container.nodeType && container.parentNode === targetContainer)
+        )
+          break;
         if (4 === nodeTag)
           for (nodeTag = targetInst$jscomp$0.return; null !== nodeTag; ) {
             var grandTag = nodeTag.tag;
-            if (
-              (3 === grandTag || 4 === grandTag) &&
-              nodeTag.stateNode.containerInfo === targetContainer
-            )
-              return;
+            if (3 === grandTag || 4 === grandTag)
+              if (
+                ((grandTag = nodeTag.stateNode.containerInfo),
+                grandTag === targetContainer ||
+                  (8 === grandTag.nodeType &&
+                    grandTag.parentNode === targetContainer))
+              )
+                return;
             nodeTag = nodeTag.return;
           }
         for (; null !== container; ) {
@@ -15459,34 +15349,34 @@ function setInitialProperties(domElement, tag, props) {
         defaultChecked = null;
       for (hasSrc in props)
         if (props.hasOwnProperty(hasSrc)) {
-          var propValue$215 = props[hasSrc];
-          if (null != propValue$215)
+          var propValue$212 = props[hasSrc];
+          if (null != propValue$212)
             switch (hasSrc) {
               case "name":
-                hasSrcSet = propValue$215;
+                hasSrcSet = propValue$212;
                 break;
               case "type":
-                propValue = propValue$215;
+                propValue = propValue$212;
                 break;
               case "checked":
-                checked = propValue$215;
+                checked = propValue$212;
                 break;
               case "defaultChecked":
-                defaultChecked = propValue$215;
+                defaultChecked = propValue$212;
                 break;
               case "value":
-                propKey = propValue$215;
+                propKey = propValue$212;
                 break;
               case "defaultValue":
-                defaultValue = propValue$215;
+                defaultValue = propValue$212;
                 break;
               case "children":
               case "dangerouslySetInnerHTML":
-                if (null != propValue$215)
+                if (null != propValue$212)
                   throw Error(formatProdErrorMessage(137, tag));
                 break;
               default:
-                setProp(domElement, tag, hasSrc, propValue$215, props, null);
+                setProp(domElement, tag, hasSrc, propValue$212, props, null);
             }
         }
       initInput(
@@ -15623,14 +15513,14 @@ function setInitialProperties(domElement, tag, props) {
       return;
     default:
       if (isCustomElement(tag)) {
-        for (propValue$215 in props)
-          props.hasOwnProperty(propValue$215) &&
-            ((hasSrc = props[propValue$215]),
+        for (propValue$212 in props)
+          props.hasOwnProperty(propValue$212) &&
+            ((hasSrc = props[propValue$212]),
             void 0 !== hasSrc &&
               setPropOnCustomElement(
                 domElement,
                 tag,
-                propValue$215,
+                propValue$212,
                 hasSrc,
                 props,
                 void 0
@@ -15678,14 +15568,14 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
                 setProp(domElement, tag, propKey, null, nextProps, lastProp);
           }
       }
-      for (var propKey$232 in nextProps) {
-        var propKey = nextProps[propKey$232];
-        lastProp = lastProps[propKey$232];
+      for (var propKey$229 in nextProps) {
+        var propKey = nextProps[propKey$229];
+        lastProp = lastProps[propKey$229];
         if (
-          nextProps.hasOwnProperty(propKey$232) &&
+          nextProps.hasOwnProperty(propKey$229) &&
           (null != propKey || null != lastProp)
         )
-          switch (propKey$232) {
+          switch (propKey$229) {
             case "type":
               propKey !== lastProp && (viewTransitionMutationContext = !0);
               type = propKey;
@@ -15720,7 +15610,7 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
                 setProp(
                   domElement,
                   tag,
-                  propKey$232,
+                  propKey$229,
                   propKey,
                   nextProps,
                   lastProp
@@ -15739,7 +15629,7 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
       );
       return;
     case "select":
-      propKey = value = defaultValue = propKey$232 = null;
+      propKey = value = defaultValue = propKey$229 = null;
       for (type in lastProps)
         if (
           ((lastDefaultValue = lastProps[type]),
@@ -15771,7 +15661,7 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
           switch (name) {
             case "value":
               type !== lastDefaultValue && (viewTransitionMutationContext = !0);
-              propKey$232 = type;
+              propKey$229 = type;
               break;
             case "defaultValue":
               type !== lastDefaultValue && (viewTransitionMutationContext = !0);
@@ -15794,15 +15684,15 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
       tag = defaultValue;
       lastProps = value;
       nextProps = propKey;
-      null != propKey$232
-        ? updateOptions(domElement, !!lastProps, propKey$232, !1)
+      null != propKey$229
+        ? updateOptions(domElement, !!lastProps, propKey$229, !1)
         : !!nextProps !== !!lastProps &&
           (null != tag
             ? updateOptions(domElement, !!lastProps, tag, !0)
             : updateOptions(domElement, !!lastProps, lastProps ? [] : "", !1));
       return;
     case "textarea":
-      propKey = propKey$232 = null;
+      propKey = propKey$229 = null;
       for (defaultValue in lastProps)
         if (
           ((name = lastProps[defaultValue]),
@@ -15827,7 +15717,7 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
           switch (value) {
             case "value":
               name !== type && (viewTransitionMutationContext = !0);
-              propKey$232 = name;
+              propKey$229 = name;
               break;
             case "defaultValue":
               name !== type && (viewTransitionMutationContext = !0);
@@ -15842,17 +15732,17 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
               name !== type &&
                 setProp(domElement, tag, value, name, nextProps, type);
           }
-      updateTextarea(domElement, propKey$232, propKey);
+      updateTextarea(domElement, propKey$229, propKey);
       return;
     case "option":
-      for (var propKey$248 in lastProps)
+      for (var propKey$245 in lastProps)
         if (
-          ((propKey$232 = lastProps[propKey$248]),
-          lastProps.hasOwnProperty(propKey$248) &&
-            null != propKey$232 &&
-            !nextProps.hasOwnProperty(propKey$248))
+          ((propKey$229 = lastProps[propKey$245]),
+          lastProps.hasOwnProperty(propKey$245) &&
+            null != propKey$229 &&
+            !nextProps.hasOwnProperty(propKey$245))
         )
-          switch (propKey$248) {
+          switch (propKey$245) {
             case "selected":
               domElement.selected = !1;
               break;
@@ -15860,34 +15750,34 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
               setProp(
                 domElement,
                 tag,
-                propKey$248,
+                propKey$245,
                 null,
                 nextProps,
-                propKey$232
+                propKey$229
               );
           }
       for (lastDefaultValue in nextProps)
         if (
-          ((propKey$232 = nextProps[lastDefaultValue]),
+          ((propKey$229 = nextProps[lastDefaultValue]),
           (propKey = lastProps[lastDefaultValue]),
           nextProps.hasOwnProperty(lastDefaultValue) &&
-            propKey$232 !== propKey &&
-            (null != propKey$232 || null != propKey))
+            propKey$229 !== propKey &&
+            (null != propKey$229 || null != propKey))
         )
           switch (lastDefaultValue) {
             case "selected":
-              propKey$232 !== propKey && (viewTransitionMutationContext = !0);
+              propKey$229 !== propKey && (viewTransitionMutationContext = !0);
               domElement.selected =
-                propKey$232 &&
-                "function" !== typeof propKey$232 &&
-                "symbol" !== typeof propKey$232;
+                propKey$229 &&
+                "function" !== typeof propKey$229 &&
+                "symbol" !== typeof propKey$229;
               break;
             default:
               setProp(
                 domElement,
                 tag,
                 lastDefaultValue,
-                propKey$232,
+                propKey$229,
                 nextProps,
                 propKey
               );
@@ -15908,24 +15798,24 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
     case "track":
     case "wbr":
     case "menuitem":
-      for (var propKey$253 in lastProps)
-        (propKey$232 = lastProps[propKey$253]),
-          lastProps.hasOwnProperty(propKey$253) &&
-            null != propKey$232 &&
-            !nextProps.hasOwnProperty(propKey$253) &&
-            setProp(domElement, tag, propKey$253, null, nextProps, propKey$232);
+      for (var propKey$250 in lastProps)
+        (propKey$229 = lastProps[propKey$250]),
+          lastProps.hasOwnProperty(propKey$250) &&
+            null != propKey$229 &&
+            !nextProps.hasOwnProperty(propKey$250) &&
+            setProp(domElement, tag, propKey$250, null, nextProps, propKey$229);
       for (checked in nextProps)
         if (
-          ((propKey$232 = nextProps[checked]),
+          ((propKey$229 = nextProps[checked]),
           (propKey = lastProps[checked]),
           nextProps.hasOwnProperty(checked) &&
-            propKey$232 !== propKey &&
-            (null != propKey$232 || null != propKey))
+            propKey$229 !== propKey &&
+            (null != propKey$229 || null != propKey))
         )
           switch (checked) {
             case "children":
             case "dangerouslySetInnerHTML":
-              if (null != propKey$232)
+              if (null != propKey$229)
                 throw Error(formatProdErrorMessage(137, tag));
               break;
             default:
@@ -15933,7 +15823,7 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
                 domElement,
                 tag,
                 checked,
-                propKey$232,
+                propKey$229,
                 nextProps,
                 propKey
               );
@@ -15941,49 +15831,49 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
       return;
     default:
       if (isCustomElement(tag)) {
-        for (var propKey$258 in lastProps)
-          (propKey$232 = lastProps[propKey$258]),
-            lastProps.hasOwnProperty(propKey$258) &&
-              void 0 !== propKey$232 &&
-              !nextProps.hasOwnProperty(propKey$258) &&
+        for (var propKey$255 in lastProps)
+          (propKey$229 = lastProps[propKey$255]),
+            lastProps.hasOwnProperty(propKey$255) &&
+              void 0 !== propKey$229 &&
+              !nextProps.hasOwnProperty(propKey$255) &&
               setPropOnCustomElement(
                 domElement,
                 tag,
-                propKey$258,
+                propKey$255,
                 void 0,
                 nextProps,
-                propKey$232
+                propKey$229
               );
         for (defaultChecked in nextProps)
-          (propKey$232 = nextProps[defaultChecked]),
+          (propKey$229 = nextProps[defaultChecked]),
             (propKey = lastProps[defaultChecked]),
             !nextProps.hasOwnProperty(defaultChecked) ||
-              propKey$232 === propKey ||
-              (void 0 === propKey$232 && void 0 === propKey) ||
+              propKey$229 === propKey ||
+              (void 0 === propKey$229 && void 0 === propKey) ||
               setPropOnCustomElement(
                 domElement,
                 tag,
                 defaultChecked,
-                propKey$232,
+                propKey$229,
                 nextProps,
                 propKey
               );
         return;
       }
   }
-  for (var propKey$263 in lastProps)
-    (propKey$232 = lastProps[propKey$263]),
-      lastProps.hasOwnProperty(propKey$263) &&
-        null != propKey$232 &&
-        !nextProps.hasOwnProperty(propKey$263) &&
-        setProp(domElement, tag, propKey$263, null, nextProps, propKey$232);
+  for (var propKey$260 in lastProps)
+    (propKey$229 = lastProps[propKey$260]),
+      lastProps.hasOwnProperty(propKey$260) &&
+        null != propKey$229 &&
+        !nextProps.hasOwnProperty(propKey$260) &&
+        setProp(domElement, tag, propKey$260, null, nextProps, propKey$229);
   for (lastProp in nextProps)
-    (propKey$232 = nextProps[lastProp]),
+    (propKey$229 = nextProps[lastProp]),
       (propKey = lastProps[lastProp]),
       !nextProps.hasOwnProperty(lastProp) ||
-        propKey$232 === propKey ||
-        (null == propKey$232 && null == propKey) ||
-        setProp(domElement, tag, lastProp, propKey$232, nextProps, propKey);
+        propKey$229 === propKey ||
+        (null == propKey$229 && null == propKey) ||
+        setProp(domElement, tag, lastProp, propKey$229, nextProps, propKey);
 }
 var eventsEnabled = null,
   selectionInformation = null;
@@ -16067,56 +15957,21 @@ function handleErrorInNextTick(error) {
     throw error;
   });
 }
-function isSingletonScope(type) {
-  return "head" === type;
-}
 function clearSuspenseBoundary(parentInstance, suspenseInstance) {
   var node = suspenseInstance,
-    possiblePreambleContribution = 0,
     depth = 0;
   do {
     var nextNode = node.nextSibling;
     parentInstance.removeChild(node);
     if (nextNode && 8 === nextNode.nodeType)
       if (((node = nextNode.data), "/$" === node)) {
-        if (
-          0 < possiblePreambleContribution &&
-          8 > possiblePreambleContribution
-        ) {
-          node = possiblePreambleContribution;
-          var ownerDocument = parentInstance.ownerDocument;
-          node & 1 && releaseSingletonInstance(ownerDocument.documentElement);
-          node & 2 && releaseSingletonInstance(ownerDocument.body);
-          if (node & 4)
-            for (
-              node = ownerDocument.head,
-                releaseSingletonInstance(node),
-                ownerDocument = node.firstChild;
-              ownerDocument;
-
-            ) {
-              var nextNode$jscomp$0 = ownerDocument.nextSibling,
-                nodeName = ownerDocument.nodeName;
-              ownerDocument[internalHoistableMarker] ||
-                "SCRIPT" === nodeName ||
-                "STYLE" === nodeName ||
-                ("LINK" === nodeName &&
-                  "stylesheet" === ownerDocument.rel.toLowerCase()) ||
-                node.removeChild(ownerDocument);
-              ownerDocument = nextNode$jscomp$0;
-            }
-        }
         if (0 === depth) {
           parentInstance.removeChild(nextNode);
           retryIfBlockedOn(suspenseInstance);
           return;
         }
         depth--;
-      } else
-        "$" === node || "$?" === node || "$!" === node
-          ? depth++
-          : (possiblePreambleContribution = node.charCodeAt(0) - 48);
-    else possiblePreambleContribution = 0;
+      } else ("$" !== node && "$?" !== node && "$!" !== node) || depth++;
     node = nextNode;
   } while (node);
   retryIfBlockedOn(suspenseInstance);
@@ -16169,7 +16024,6 @@ function measureInstance(instance) {
 }
 function startViewTransition(
   rootContainer,
-  transitionTypes,
   mutationCallback,
   layoutCallback,
   afterMutationCallback,
@@ -16214,7 +16068,7 @@ function startViewTransition(
           );
         afterMutationCallback();
       },
-      types: transitionTypes
+      types: null
     });
     ownerDocument.__reactViewTransition = transition;
     transition.ready.then(spawnedWorkCallback, spawnedWorkCallback);
@@ -16404,7 +16258,6 @@ function getNextHydratable(node) {
   }
   return node;
 }
-var previousHydratableOnEnteringScopedSingleton = null;
 function getParentSuspenseInstance(targetInstance) {
   targetInstance = targetInstance.previousSibling;
   for (var depth = 0; targetInstance; ) {
@@ -16438,19 +16291,12 @@ function resolveSingletonInstance(type, props, rootContainerInstance) {
       throw Error(formatProdErrorMessage(451));
   }
 }
-function releaseSingletonInstance(instance) {
-  for (var attributes = instance.attributes; attributes.length; )
-    instance.removeAttributeNode(attributes[0]);
-  detachDeletedInstance(instance);
-}
 var preloadPropsMap = new Map(),
   preconnectsSet = new Set();
 function getHoistableRoot(container) {
   return "function" === typeof container.getRootNode
     ? container.getRootNode()
-    : 9 === container.nodeType
-      ? container
-      : container.ownerDocument;
+    : container.ownerDocument;
 }
 var previousDispatcher = ReactDOMSharedInternals.d;
 ReactDOMSharedInternals.d = {
@@ -16744,26 +16590,26 @@ function getResource(type, currentProps, pendingProps, currentResource) {
         "string" === typeof pendingProps.precedence
       ) {
         type = getStyleKey(pendingProps.href);
-        var styles$271 = getResourcesFromRoot(
+        var styles$268 = getResourcesFromRoot(
             JSCompiler_inline_result
           ).hoistableStyles,
-          resource$272 = styles$271.get(type);
-        resource$272 ||
+          resource$269 = styles$268.get(type);
+        resource$269 ||
           ((JSCompiler_inline_result =
             JSCompiler_inline_result.ownerDocument || JSCompiler_inline_result),
-          (resource$272 = {
+          (resource$269 = {
             type: "stylesheet",
             instance: null,
             count: 0,
             state: { loading: 0, preload: null }
           }),
-          styles$271.set(type, resource$272),
-          (styles$271 = JSCompiler_inline_result.querySelector(
+          styles$268.set(type, resource$269),
+          (styles$268 = JSCompiler_inline_result.querySelector(
             getStylesheetSelectorFromKey(type)
           )) &&
-            !styles$271._p &&
-            ((resource$272.instance = styles$271),
-            (resource$272.state.loading = 5)),
+            !styles$268._p &&
+            ((resource$269.instance = styles$268),
+            (resource$269.state.loading = 5)),
           preloadPropsMap.has(type) ||
             ((pendingProps = {
               rel: "preload",
@@ -16776,16 +16622,16 @@ function getResource(type, currentProps, pendingProps, currentResource) {
               referrerPolicy: pendingProps.referrerPolicy
             }),
             preloadPropsMap.set(type, pendingProps),
-            styles$271 ||
+            styles$268 ||
               preloadStylesheet(
                 JSCompiler_inline_result,
                 type,
                 pendingProps,
-                resource$272.state
+                resource$269.state
               )));
         if (currentProps && null === currentResource)
           throw Error(formatProdErrorMessage(528, ""));
-        return resource$272;
+        return resource$269;
       }
       if (currentProps && null !== currentResource)
         throw Error(formatProdErrorMessage(529, ""));
@@ -16882,37 +16728,37 @@ function acquireResource(hoistableRoot, resource, props) {
         return (resource.instance = instance);
       case "stylesheet":
         styleProps = getStyleKey(props.href);
-        var instance$277 = hoistableRoot.querySelector(
+        var instance$274 = hoistableRoot.querySelector(
           getStylesheetSelectorFromKey(styleProps)
         );
-        if (instance$277)
+        if (instance$274)
           return (
             (resource.state.loading |= 4),
-            (resource.instance = instance$277),
-            markNodeAsHoistable(instance$277),
-            instance$277
+            (resource.instance = instance$274),
+            markNodeAsHoistable(instance$274),
+            instance$274
           );
         instance = stylesheetPropsFromRawProps(props);
         (styleProps = preloadPropsMap.get(styleProps)) &&
           adoptPreloadPropsForStylesheet(instance, styleProps);
-        instance$277 = (
+        instance$274 = (
           hoistableRoot.ownerDocument || hoistableRoot
         ).createElement("link");
-        markNodeAsHoistable(instance$277);
-        var linkInstance = instance$277;
+        markNodeAsHoistable(instance$274);
+        var linkInstance = instance$274;
         linkInstance._p = new Promise(function (resolve, reject) {
           linkInstance.onload = resolve;
           linkInstance.onerror = reject;
         });
-        setInitialProperties(instance$277, "link", instance);
+        setInitialProperties(instance$274, "link", instance);
         resource.state.loading |= 4;
-        insertStylesheet(instance$277, props.precedence, hoistableRoot);
-        return (resource.instance = instance$277);
+        insertStylesheet(instance$274, props.precedence, hoistableRoot);
+        return (resource.instance = instance$274);
       case "script":
-        instance$277 = getScriptKey(props.src);
+        instance$274 = getScriptKey(props.src);
         if (
           (styleProps = hoistableRoot.querySelector(
-            getScriptSelectorFromKey(instance$277)
+            getScriptSelectorFromKey(instance$274)
           ))
         )
           return (
@@ -16921,7 +16767,7 @@ function acquireResource(hoistableRoot, resource, props) {
             styleProps
           );
         instance = props;
-        if ((styleProps = preloadPropsMap.get(instance$277)))
+        if ((styleProps = preloadPropsMap.get(instance$274)))
           (instance = assign({}, props)),
             adoptPreloadPropsForScript(instance, styleProps);
         hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;
@@ -17253,7 +17099,6 @@ function FiberRootNode(
   this.pooledCache = null;
   this.pooledCacheLanes = 0;
   this.formState = formState;
-  this.gestures = null;
   this.incompleteTransitions = new Map();
   this.passiveEffectDuration = this.effectDuration = -0;
   this.memoizedUpdaters = new Set();
@@ -17958,16 +17803,16 @@ ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function (target) {
     0 === i && attemptExplicitHydrationTarget(target);
   }
 };
-var isomorphicReactPackageVersion$jscomp$inline_1976 = React.version;
+var isomorphicReactPackageVersion$jscomp$inline_1947 = React.version;
 if (
-  "19.1.0-experimental-e670e72f-20250214" !==
-  isomorphicReactPackageVersion$jscomp$inline_1976
+  "19.1.0-experimental-b3a95caf-20250113" !==
+  isomorphicReactPackageVersion$jscomp$inline_1947
 )
   throw Error(
     formatProdErrorMessage(
       527,
-      isomorphicReactPackageVersion$jscomp$inline_1976,
-      "19.1.0-experimental-e670e72f-20250214"
+      isomorphicReactPackageVersion$jscomp$inline_1947,
+      "19.1.0-experimental-b3a95caf-20250113"
     )
   );
 ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
@@ -17987,24 +17832,24 @@ ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
     null === componentOrElement ? null : componentOrElement.stateNode;
   return componentOrElement;
 };
-var internals$jscomp$inline_2504 = {
+var internals$jscomp$inline_2471 = {
   bundleType: 0,
-  version: "19.1.0-experimental-e670e72f-20250214",
+  version: "19.1.0-experimental-b3a95caf-20250113",
   rendererPackageName: "react-dom",
   currentDispatcherRef: ReactSharedInternals,
-  reconcilerVersion: "19.1.0-experimental-e670e72f-20250214"
+  reconcilerVersion: "19.1.0-experimental-b3a95caf-20250113"
 };
 if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
-  var hook$jscomp$inline_2505 = __REACT_DEVTOOLS_GLOBAL_HOOK__;
+  var hook$jscomp$inline_2472 = __REACT_DEVTOOLS_GLOBAL_HOOK__;
   if (
-    !hook$jscomp$inline_2505.isDisabled &&
-    hook$jscomp$inline_2505.supportsFiber
+    !hook$jscomp$inline_2472.isDisabled &&
+    hook$jscomp$inline_2472.supportsFiber
   )
     try {
-      (rendererID = hook$jscomp$inline_2505.inject(
-        internals$jscomp$inline_2504
+      (rendererID = hook$jscomp$inline_2472.inject(
+        internals$jscomp$inline_2471
       )),
-        (injectedHook = hook$jscomp$inline_2505);
+        (injectedHook = hook$jscomp$inline_2472);
     } catch (err) {}
 }
 function noop() {}
@@ -18071,7 +17916,9 @@ exports.createRoot = function (container, options) {
     null
   );
   container[internalContainerInstanceKey] = options.current;
-  listenToAllSupportedEvents(container);
+  listenToAllSupportedEvents(
+    8 === container.nodeType ? container.parentNode : container
+  );
   return new ReactDOMRoot(options);
 };
 exports.flushSync = function (fn) {
@@ -18257,7 +18104,7 @@ exports.useFormState = function (action, initialState, permalink) {
 exports.useFormStatus = function () {
   return ReactSharedInternals.H.useHostTransitionStatus();
 };
-exports.version = "19.1.0-experimental-e670e72f-20250214";
+exports.version = "19.1.0-experimental-b3a95caf-20250113";
 "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
   "function" ===
     typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&
diff --git a/node_modules/react-dom/cjs/react-dom-server-legacy.browser.development.js b/node_modules/react-dom/cjs/react-dom-server-legacy.browser.development.js
index 98952f1..221485b 100644
--- a/node_modules/react-dom/cjs/react-dom-server-legacy.browser.development.js
+++ b/node_modules/react-dom/cjs/react-dom-server-legacy.browser.development.js
@@ -762,14 +762,6 @@
         moduleScriptResources: {}
       };
     }
-    function createPreambleState() {
-      return {
-        htmlChunks: null,
-        headChunks: null,
-        bodyChunks: null,
-        contribution: NoContribution
-      };
-    }
     function createFormatContext(insertionMode, selectedValue, tagScope) {
       return {
         insertionMode: insertionMode,
@@ -829,26 +821,16 @@
             null,
             parentContext.tagScope
           );
-        case "head":
-          if (parentContext.insertionMode < HTML_MODE)
-            return createFormatContext(
-              HTML_HEAD_MODE,
-              null,
-              parentContext.tagScope
-            );
-          break;
-        case "html":
-          if (parentContext.insertionMode === ROOT_HTML_MODE)
-            return createFormatContext(
-              HTML_HTML_MODE,
-              null,
-              parentContext.tagScope
-            );
       }
-      return parentContext.insertionMode >= HTML_TABLE_MODE ||
-        parentContext.insertionMode < HTML_MODE
+      return parentContext.insertionMode >= HTML_TABLE_MODE
         ? createFormatContext(HTML_MODE, null, parentContext.tagScope)
-        : parentContext;
+        : parentContext.insertionMode === ROOT_HTML_MODE
+          ? "html" === type
+            ? createFormatContext(HTML_HTML_MODE, null, parentContext.tagScope)
+            : createFormatContext(HTML_MODE, null, parentContext.tagScope)
+          : parentContext.insertionMode === HTML_HTML_MODE
+            ? createFormatContext(HTML_MODE, null, parentContext.tagScope)
+            : parentContext;
     }
     function pushStyleAttribute(target, style) {
       if ("object" !== typeof style)
@@ -1477,29 +1459,6 @@
       target.push(endChunkForTag("script"));
       return null;
     }
-    function pushStartSingletonElement(target, props, tag) {
-      target.push(startChunkForTag(tag));
-      var innerHTML = (tag = null),
-        propKey;
-      for (propKey in props)
-        if (hasOwnProperty.call(props, propKey)) {
-          var propValue = props[propKey];
-          if (null != propValue)
-            switch (propKey) {
-              case "children":
-                tag = propValue;
-                break;
-              case "dangerouslySetInnerHTML":
-                innerHTML = propValue;
-                break;
-              default:
-                pushAttribute(target, propKey, propValue);
-            }
-        }
-      target.push(endOfStartTag);
-      pushInnerHTML(target, innerHTML, tag);
-      return tag;
-    }
     function pushStartGenericElement(target, props, tag) {
       target.push(startChunkForTag(tag));
       var innerHTML = (tag = null),
@@ -1540,7 +1499,6 @@
       props,
       resumableState,
       renderState,
-      preambleState,
       hoistableState,
       formatContext,
       textEmbedded,
@@ -2695,13 +2653,13 @@
         case "missing-glyph":
           break;
         case "head":
-          if (formatContext.insertionMode < HTML_MODE) {
-            var preamble = preambleState || renderState.preamble;
-            if (preamble.headChunks)
-              throw Error("The `<head>` tag may only be rendered once.");
-            preamble.headChunks = [];
-            var JSCompiler_inline_result$jscomp$9 = pushStartSingletonElement(
-              preamble.headChunks,
+          if (
+            formatContext.insertionMode < HTML_MODE &&
+            null === renderState.headChunks
+          ) {
+            renderState.headChunks = [];
+            var JSCompiler_inline_result$jscomp$9 = pushStartGenericElement(
+              renderState.headChunks,
               props,
               "head"
             );
@@ -2712,42 +2670,24 @@
               "head"
             );
           return JSCompiler_inline_result$jscomp$9;
-        case "body":
-          if (formatContext.insertionMode < HTML_MODE) {
-            var preamble$jscomp$0 = preambleState || renderState.preamble;
-            if (preamble$jscomp$0.bodyChunks)
-              throw Error("The `<body>` tag may only be rendered once.");
-            preamble$jscomp$0.bodyChunks = [];
-            var JSCompiler_inline_result$jscomp$10 = pushStartSingletonElement(
-              preamble$jscomp$0.bodyChunks,
-              props,
-              "body"
-            );
-          } else
-            JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
-              target$jscomp$0,
-              props,
-              "body"
-            );
-          return JSCompiler_inline_result$jscomp$10;
         case "html":
-          if (formatContext.insertionMode === ROOT_HTML_MODE) {
-            var preamble$jscomp$1 = preambleState || renderState.preamble;
-            if (preamble$jscomp$1.htmlChunks)
-              throw Error("The `<html>` tag may only be rendered once.");
-            preamble$jscomp$1.htmlChunks = [doctypeChunk];
-            var JSCompiler_inline_result$jscomp$11 = pushStartSingletonElement(
-              preamble$jscomp$1.htmlChunks,
+          if (
+            formatContext.insertionMode === ROOT_HTML_MODE &&
+            null === renderState.htmlChunks
+          ) {
+            renderState.htmlChunks = [doctypeChunk];
+            var JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
+              renderState.htmlChunks,
               props,
               "html"
             );
           } else
-            JSCompiler_inline_result$jscomp$11 = pushStartGenericElement(
+            JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
               target$jscomp$0,
               props,
               "html"
             );
-          return JSCompiler_inline_result$jscomp$11;
+          return JSCompiler_inline_result$jscomp$10;
         default:
           if (-1 !== type.indexOf("-")) {
             target$jscomp$0.push(startChunkForTag(type));
@@ -2814,21 +2754,6 @@
         ((chunk = "</" + tag + ">"), endTagCache.set(tag, chunk));
       return chunk;
     }
-    function hoistPreambleState(renderState, preambleState) {
-      renderState = renderState.preamble;
-      null === renderState.htmlChunks &&
-        preambleState.htmlChunks &&
-        ((renderState.htmlChunks = preambleState.htmlChunks),
-        (preambleState.contribution |= 1));
-      null === renderState.headChunks &&
-        preambleState.headChunks &&
-        ((renderState.headChunks = preambleState.headChunks),
-        (preambleState.contribution |= 4));
-      null === renderState.bodyChunks &&
-        preambleState.bodyChunks &&
-        ((renderState.bodyChunks = preambleState.bodyChunks),
-        (preambleState.contribution |= 2));
-    }
     function writeBootstrap(destination, renderState) {
       renderState = renderState.bootstrapChunks;
       for (var i = 0; i < renderState.length - 1; i++)
@@ -2848,18 +2773,10 @@
       destination.push(renderState);
       return destination.push(startPendingSuspenseBoundary2);
     }
-    function writePreambleContribution(destination, preambleState) {
-      preambleState = preambleState.contribution;
-      preambleState !== NoContribution &&
-        (destination.push(boundaryPreambleContributionChunkStart),
-        destination.push("" + preambleState),
-        destination.push(boundaryPreambleContributionChunkEnd));
-    }
     function writeStartSegment(destination, renderState, formatContext, id) {
       switch (formatContext.insertionMode) {
         case ROOT_HTML_MODE:
         case HTML_HTML_MODE:
-        case HTML_HEAD_MODE:
         case HTML_MODE:
           return (
             destination.push(startSegmentHTML),
@@ -2924,7 +2841,6 @@
       switch (formatContext.insertionMode) {
         case ROOT_HTML_MODE:
         case HTML_HTML_MODE:
-        case HTML_HEAD_MODE:
         case HTML_MODE:
           return destination.push(endSegmentHTML);
         case SVG_MODE:
@@ -3421,7 +3337,8 @@
         segmentPrefix: idPrefix + "S:",
         boundaryPrefix: idPrefix + "B:",
         startInlineScript: "<script>",
-        preamble: createPreambleState(),
+        htmlChunks: null,
+        headChunks: null,
         externalRuntimeScript: null,
         bootstrapChunks: bootstrapChunks,
         importMapChunks: [],
@@ -3551,7 +3468,8 @@
         segmentPrefix: idPrefix.segmentPrefix,
         boundaryPrefix: idPrefix.boundaryPrefix,
         startInlineScript: idPrefix.startInlineScript,
-        preamble: idPrefix.preamble,
+        htmlChunks: idPrefix.htmlChunks,
+        headChunks: idPrefix.headChunks,
         externalRuntimeScript: idPrefix.externalRuntimeScript,
         bootstrapChunks: idPrefix.bootstrapChunks,
         importMapChunks: idPrefix.importMapChunks,
@@ -4085,12 +4003,6 @@
           index
         );
     }
-    function unsupportedRefresh() {
-      throw Error("Cache cannot be refreshed during server rendering.");
-    }
-    function unsupportedStartGesture() {
-      throw Error("startGesture cannot be called during server rendering.");
-    }
     function noop$1() {}
     function disabledLog() {}
     function disableLogs() {
@@ -4420,7 +4332,7 @@
       this.status = 10;
       this.fatalError = null;
       this.pendingRootTasks = this.allPendingTasks = this.nextSegmentId = 0;
-      this.completedPreambleSegments = this.completedRootSegment = null;
+      this.completedRootSegment = null;
       this.abortableTasks = abortSet;
       this.pingedTasks = [];
       this.clientRenderedBoundaries = [];
@@ -4480,7 +4392,6 @@
         null,
         renderState,
         null,
-        null,
         resumableState.abortableTasks,
         null,
         rootFormatContext,
@@ -4501,12 +4412,7 @@
         ((request.flushScheduled = null !== request.destination),
         performWork(request));
     }
-    function createSuspenseBoundary(
-      request,
-      fallbackAbortableTasks,
-      contentPreamble,
-      fallbackPreamble
-    ) {
+    function createSuspenseBoundary(request, fallbackAbortableTasks) {
       return {
         status: PENDING,
         rootSegmentID: -1,
@@ -4518,8 +4424,6 @@
         errorDigest: null,
         contentState: createHoistableState(),
         fallbackState: createHoistableState(),
-        contentPreamble: contentPreamble,
-        fallbackPreamble: fallbackPreamble,
         trackedContentKeyPath: null,
         trackedFallbackNode: null,
         errorMessage: null,
@@ -4534,7 +4438,6 @@
       childIndex,
       blockedBoundary,
       blockedSegment,
-      blockedPreamble,
       hoistableState,
       abortSet,
       keyPath,
@@ -4559,7 +4462,6 @@
         },
         blockedBoundary: blockedBoundary,
         blockedSegment: blockedSegment,
-        blockedPreamble: blockedPreamble,
         hoistableState: hoistableState,
         abortSet: abortSet,
         keyPath: keyPath,
@@ -4606,7 +4508,6 @@
         },
         blockedBoundary: blockedBoundary,
         blockedSegment: null,
-        blockedPreamble: null,
         hoistableState: hoistableState,
         abortSet: abortSet,
         keyPath: keyPath,
@@ -4631,12 +4532,11 @@
     ) {
       return {
         status: PENDING,
-        parentFlushed: !1,
         id: -1,
         index: index,
+        parentFlushed: !1,
         chunks: [],
         children: [],
-        preambleChildren: [],
         parentFormatContext: parentFormatContext,
         boundary: boundary,
         lastPushedText: lastPushedText,
@@ -5339,7 +5239,6 @@
             props,
             request.resumableState,
             request.renderState,
-            task.blockedPreamble,
             task.hoistableState,
             task.formatContext,
             segment.lastPushedText,
@@ -5348,45 +5247,9 @@
           segment.lastPushedText = !1;
           var _prevContext = task.formatContext,
             _prevKeyPath2 = task.keyPath;
+          task.formatContext = getChildFormatContext(_prevContext, type, props);
           task.keyPath = keyPath;
-          if (
-            (task.formatContext = getChildFormatContext(
-              _prevContext,
-              type,
-              props
-            )).insertionMode === HTML_HEAD_MODE
-          ) {
-            var preambleSegment = createPendingSegment(
-              request,
-              0,
-              null,
-              task.formatContext,
-              !1,
-              !1
-            );
-            segment.preambleChildren.push(preambleSegment);
-            var preambleTask = createRenderTask(
-              request,
-              null,
-              _children,
-              -1,
-              task.blockedBoundary,
-              preambleSegment,
-              task.blockedPreamble,
-              task.hoistableState,
-              request.abortableTasks,
-              task.keyPath,
-              task.formatContext,
-              task.context,
-              task.treeContext,
-              task.componentStack,
-              task.isFallback,
-              emptyContextObject,
-              task.debugTask
-            );
-            pushComponentStack(preambleTask);
-            request.pingedTasks.push(preambleTask);
-          } else renderNode(request, task, _children, -1);
+          renderNode(request, task, _children, -1);
           task.formatContext = _prevContext;
           task.keyPath = _prevKeyPath2;
           a: {
@@ -5423,9 +5286,6 @@
                   resumableState.hasHtml = !0;
                   break a;
                 }
-                break;
-              case "head":
-                if (_prevContext.insertionMode <= HTML_HTML_MODE) break a;
             }
             target.push(endChunkForTag(type));
           }
@@ -5479,26 +5339,12 @@
             } else {
               var prevKeyPath$jscomp$3 = task.keyPath,
                 parentBoundary = task.blockedBoundary,
-                parentPreamble = task.blockedPreamble,
                 parentHoistableState = task.hoistableState,
                 parentSegment = task.blockedSegment,
                 fallback = props.fallback,
                 content = props.children,
-                fallbackAbortSet = new Set();
-              var newBoundary =
-                task.formatContext.insertionMode < HTML_MODE
-                  ? createSuspenseBoundary(
-                      request,
-                      fallbackAbortSet,
-                      createPreambleState(),
-                      createPreambleState()
-                    )
-                  : createSuspenseBoundary(
-                      request,
-                      fallbackAbortSet,
-                      null,
-                      null
-                    );
+                fallbackAbortSet = new Set(),
+                newBoundary = createSuspenseBoundary(request, fallbackAbortSet);
               null !== request.trackedPostpones &&
                 (newBoundary.trackedContentKeyPath = keyPath);
               var boundarySegment = createPendingSegment(
@@ -5538,7 +5384,6 @@
                 );
                 newBoundary.trackedFallbackNode = fallbackReplayNode;
                 task.blockedSegment = boundarySegment;
-                task.blockedPreamble = newBoundary.fallbackPreamble;
                 task.keyPath = fallbackKeyPath;
                 boundarySegment.status = 6;
                 try {
@@ -5557,7 +5402,6 @@
                   );
                 } finally {
                   (task.blockedSegment = parentSegment),
-                    (task.blockedPreamble = parentPreamble),
                     (task.keyPath = prevKeyPath$jscomp$3);
                 }
                 var suspendedPrimaryTask = createRenderTask(
@@ -5567,7 +5411,6 @@
                   -1,
                   newBoundary,
                   contentRootSegment,
-                  newBoundary.contentPreamble,
                   newBoundary.contentState,
                   task.abortSet,
                   keyPath,
@@ -5583,7 +5426,6 @@
                 request.pingedTasks.push(suspendedPrimaryTask);
               } else {
                 task.blockedBoundary = newBoundary;
-                task.blockedPreamble = newBoundary.contentPreamble;
                 task.hoistableState = newBoundary.contentState;
                 task.blockedSegment = contentRootSegment;
                 task.keyPath = keyPath;
@@ -5603,9 +5445,6 @@
                       newBoundary.status === PENDING)
                   ) {
                     newBoundary.status = COMPLETED;
-                    0 === request.pendingRootTasks &&
-                      task.blockedPreamble &&
-                      preparePreamble(request);
                     break a;
                   }
                 } catch (thrownValue$2) {
@@ -5645,7 +5484,6 @@
                   untrackBoundary(request, newBoundary);
                 } finally {
                   (task.blockedBoundary = parentBoundary),
-                    (task.blockedPreamble = parentPreamble),
                     (task.hoistableState = parentHoistableState),
                     (task.blockedSegment = parentSegment),
                     (task.keyPath = prevKeyPath$jscomp$3);
@@ -5657,7 +5495,6 @@
                   -1,
                   parentBoundary,
                   boundarySegment,
-                  newBoundary.fallbackPreamble,
                   newBoundary.fallbackState,
                   fallbackAbortSet,
                   [keyPath[0], "Suspense Fallback", keyPath[2]],
@@ -5896,27 +5733,17 @@
                 previousReplaySet = task.replay,
                 parentBoundary = task.blockedBoundary,
                 parentHoistableState = task.hoistableState,
-                content = props.children,
-                fallback = props.fallback,
-                fallbackAbortSet = new Set();
-              props =
-                task.formatContext.insertionMode < HTML_MODE
-                  ? createSuspenseBoundary(
-                      request,
-                      fallbackAbortSet,
-                      createPreambleState(),
-                      createPreambleState()
-                    )
-                  : createSuspenseBoundary(
-                      request,
-                      fallbackAbortSet,
-                      null,
-                      null
-                    );
-              props.parentFlushed = !0;
-              props.rootSegmentID = type;
-              task.blockedBoundary = props;
-              task.hoistableState = props.contentState;
+                content = props.children;
+              props = props.fallback;
+              var fallbackAbortSet = new Set(),
+                resumedBoundary = createSuspenseBoundary(
+                  request,
+                  fallbackAbortSet
+                );
+              resumedBoundary.parentFlushed = !0;
+              resumedBoundary.rootSegmentID = type;
+              task.blockedBoundary = resumedBoundary;
+              task.hoistableState = resumedBoundary.contentState;
               task.keyPath = keyPath;
               task.replay = { nodes: ref, slots: name, pendingTasks: 1 };
               try {
@@ -5929,13 +5756,16 @@
                     "Couldn't find all resumable slots by key/index during replaying. The tree doesn't match so React will fallback to client rendering."
                   );
                 task.replay.pendingTasks--;
-                if (0 === props.pendingTasks && props.status === PENDING) {
-                  props.status = COMPLETED;
-                  request.completedBoundaries.push(props);
+                if (
+                  0 === resumedBoundary.pendingTasks &&
+                  resumedBoundary.status === PENDING
+                ) {
+                  resumedBoundary.status = COMPLETED;
+                  request.completedBoundaries.push(resumedBoundary);
                   break a;
                 }
               } catch (error) {
-                (props.status = CLIENT_RENDERED),
+                (resumedBoundary.status = CLIENT_RENDERED),
                   (childNodes = getThrownInfo(task.componentStack)),
                   "object" === typeof error &&
                   null !== error &&
@@ -5953,9 +5783,15 @@
                         childNodes,
                         task.debugTask
                       )),
-                  encodeErrorForBoundary(props, replay, error, childNodes, !1),
+                  encodeErrorForBoundary(
+                    resumedBoundary,
+                    replay,
+                    error,
+                    childNodes,
+                    !1
+                  ),
                   task.replay.pendingTasks--,
-                  request.clientRenderedBoundaries.push(props);
+                  request.clientRenderedBoundaries.push(resumedBoundary);
               } finally {
                 (task.blockedBoundary = parentBoundary),
                   (task.hoistableState = parentHoistableState),
@@ -5966,10 +5802,10 @@
                 request,
                 null,
                 { nodes: keyOrIndex, slots: node, pendingTasks: 0 },
-                fallback,
+                props,
                 -1,
                 parentBoundary,
-                props.fallbackState,
+                resumedBoundary.fallbackState,
                 fallbackAbortSet,
                 [keyPath[0], "Suspense Fallback", keyPath[2]],
                 task.formatContext,
@@ -6514,7 +6350,6 @@
         task.childIndex,
         task.blockedBoundary,
         newSegment,
-        task.blockedPreamble,
         task.hoistableState,
         task.abortSet,
         task.keyPath,
@@ -6732,12 +6567,7 @@
             errorDigest = errorDigest$jscomp$0,
             errorInfo = errorInfo$jscomp$0,
             wasAborted = aborted,
-            resumedBoundary = createSuspenseBoundary(
-              request,
-              new Set(),
-              null,
-              null
-            );
+            resumedBoundary = createSuspenseBoundary(request, new Set());
           resumedBoundary.parentFlushed = !0;
           resumedBoundary.rootSegmentID = node;
           resumedBoundary.status = CLIENT_RENDERED;
@@ -6947,7 +6777,6 @@
     }
     function completeShell(request) {
       null === request.trackedPostpones && safelyEmitEarlyPreloads(request, !0);
-      null === request.trackedPostpones && preparePreamble(request);
       request.onShellError = noop;
       request = request.onShellReady;
       request();
@@ -6960,7 +6789,6 @@
           : null === request.completedRootSegment ||
               request.completedRootSegment.status !== POSTPONED
       );
-      preparePreamble(request);
       request = request.onAllReady;
       request();
     }
@@ -7005,11 +6833,7 @@
                     abortTaskSoft,
                     request
                   ),
-                  boundary.fallbackAbortableTasks.clear(),
-                  0 === request.pendingRootTasks &&
-                    null === request.trackedPostpones &&
-                    null !== boundary.contentPreamble &&
-                    preparePreamble(request)))
+                  boundary.fallbackAbortableTasks.clear()))
               : null !== segment &&
                 segment.parentFlushed &&
                 segment.status === COMPLETED &&
@@ -7267,11 +7091,7 @@
                             ),
                             untrackBoundary(request, boundary),
                             boundary.parentFlushed &&
-                              request.clientRenderedBoundaries.push(boundary),
-                            0 === request.pendingRootTasks &&
-                              null === request.trackedPostpones &&
-                              null !== boundary.contentPreamble &&
-                              preparePreamble(request)));
+                              request.clientRenderedBoundaries.push(boundary)));
                       request.allPendingTasks--;
                       0 === request.allPendingTasks && completeAll(request);
                     }
@@ -7301,85 +7121,6 @@
         }
       }
     }
-    function preparePreambleFromSubtree(
-      request,
-      segment,
-      collectedPreambleSegments
-    ) {
-      segment.preambleChildren.length &&
-        collectedPreambleSegments.push(segment.preambleChildren);
-      for (var pendingPreambles = !1, i = 0; i < segment.children.length; i++)
-        pendingPreambles =
-          preparePreambleFromSegment(
-            request,
-            segment.children[i],
-            collectedPreambleSegments
-          ) || pendingPreambles;
-      return pendingPreambles;
-    }
-    function preparePreambleFromSegment(
-      request,
-      segment,
-      collectedPreambleSegments
-    ) {
-      var boundary = segment.boundary;
-      if (null === boundary)
-        return preparePreambleFromSubtree(
-          request,
-          segment,
-          collectedPreambleSegments
-        );
-      var preamble = boundary.contentPreamble,
-        fallbackPreamble = boundary.fallbackPreamble;
-      if (null === preamble || null === fallbackPreamble) return !1;
-      switch (boundary.status) {
-        case COMPLETED:
-          hoistPreambleState(request.renderState, preamble);
-          segment = boundary.completedSegments[0];
-          if (!segment)
-            throw Error(
-              "A previously unvisited boundary must have exactly one root segment. This is a bug in React."
-            );
-          return preparePreambleFromSubtree(
-            request,
-            segment,
-            collectedPreambleSegments
-          );
-        case POSTPONED:
-          if (null !== request.trackedPostpones) return !0;
-        case CLIENT_RENDERED:
-          if (segment.status === COMPLETED)
-            return (
-              hoistPreambleState(request.renderState, fallbackPreamble),
-              preparePreambleFromSubtree(
-                request,
-                segment,
-                collectedPreambleSegments
-              )
-            );
-        default:
-          return !0;
-      }
-    }
-    function preparePreamble(request) {
-      if (
-        request.completedRootSegment &&
-        null === request.completedPreambleSegments
-      ) {
-        var collectedPreambleSegments = [],
-          hasPendingPreambles = preparePreambleFromSegment(
-            request,
-            request.completedRootSegment,
-            collectedPreambleSegments
-          ),
-          preamble = request.renderState.preamble;
-        if (
-          !1 === hasPendingPreambles ||
-          (preamble.headChunks && preamble.bodyChunks)
-        )
-          request.completedPreambleSegments = collectedPreambleSegments;
-      }
-    }
     function flushSubtree(request, destination, segment, hoistableState) {
       segment.parentFlushed = !0;
       switch (segment.status) {
@@ -7427,8 +7168,8 @@
         if (!request.renderState.generateStaticMarkup) {
           var errorDigest = boundary.errorDigest,
             errorMessage = boundary.errorMessage,
-            errorStack = boundary.errorStack,
-            errorComponentStack = boundary.errorComponentStack;
+            errorStack = boundary.errorStack;
+          boundary = boundary.errorComponentStack;
           destination.push(startClientRenderedSuspenseBoundary);
           destination.push(clientRenderedSuspenseBoundaryError1);
           errorDigest &&
@@ -7452,22 +7193,20 @@
             destination.push(
               clientRenderedSuspenseBoundaryErrorAttrInterstitial
             ));
-          errorComponentStack &&
+          boundary &&
             (destination.push(clientRenderedSuspenseBoundaryError1D),
-            (errorComponentStack = escapeTextForBrowser(errorComponentStack)),
-            destination.push(errorComponentStack),
+            (errorStack = escapeTextForBrowser(boundary)),
+            destination.push(errorStack),
             destination.push(
               clientRenderedSuspenseBoundaryErrorAttrInterstitial
             ));
           destination.push(clientRenderedSuspenseBoundaryError2);
         }
         flushSubtree(request, destination, segment, hoistableState);
-        request.renderState.generateStaticMarkup
-          ? (destination = !0)
-          : ((request = boundary.fallbackPreamble) &&
-              writePreambleContribution(destination, request),
-            (destination = destination.push(endSuspenseBoundary)));
-        return destination;
+        request = request.renderState.generateStaticMarkup
+          ? !0
+          : destination.push(endSuspenseBoundary);
+        return request;
       }
       if (boundary.status !== COMPLETED)
         return (
@@ -7481,9 +7220,12 @@
             boundary.rootSegmentID
           ),
           hoistableState &&
-            ((boundary = boundary.fallbackState),
-            boundary.styles.forEach(hoistStyleQueueDependency, hoistableState),
-            boundary.stylesheets.forEach(
+            ((errorStack = boundary.fallbackState),
+            errorStack.styles.forEach(
+              hoistStyleQueueDependency,
+              hoistableState
+            ),
+            errorStack.stylesheets.forEach(
               hoistStylesheetDependency,
               hoistableState
             )),
@@ -7514,12 +7256,10 @@
           "A previously unvisited boundary must have exactly one root segment. This is a bug in React."
         );
       flushSegment(request, destination, segment[0], hoistableState);
-      request.renderState.generateStaticMarkup
-        ? (destination = !0)
-        : ((request = boundary.contentPreamble) &&
-            writePreambleContribution(destination, request),
-          (destination = destination.push(endSuspenseBoundary)));
-      return destination;
+      request = request.renderState.generateStaticMarkup
+        ? !0
+        : destination.push(endSuspenseBoundary);
+      return request;
     }
     function flushSegmentContainer(
       request,
@@ -7670,8 +7410,6 @@
             completedRootSegment = request.completedRootSegment;
           if (null !== completedRootSegment) {
             if (completedRootSegment.status === POSTPONED) return;
-            var completedPreambleSegments = request.completedPreambleSegments;
-            if (null === completedPreambleSegments) return;
             var renderState = request.renderState;
             if (
               (0 !== request.allPendingTasks ||
@@ -7686,9 +7424,8 @@
                 ((resumableState.scriptResources[src] = EXISTS),
                 renderState.scripts.add(chunks));
             }
-            var preamble = renderState.preamble,
-              htmlChunks = preamble.htmlChunks,
-              headChunks = preamble.headChunks,
+            var htmlChunks = renderState.htmlChunks,
+              headChunks = renderState.headChunks,
               i$jscomp$0;
             if (htmlChunks) {
               for (i$jscomp$0 = 0; i$jscomp$0 < htmlChunks.length; i$jscomp$0++)
@@ -7751,38 +7488,11 @@
               i$jscomp$0++
             )
               destination.push(hoistableChunks[i$jscomp$0]);
-            for (
-              renderState = hoistableChunks.length = 0;
-              renderState < completedPreambleSegments.length;
-              renderState++
-            ) {
-              var segments = completedPreambleSegments[renderState];
-              for (
-                _renderState$external = 0;
-                _renderState$external < segments.length;
-                _renderState$external++
-              )
-                flushSegment(
-                  request,
-                  destination,
-                  segments[_renderState$external],
-                  null
-                );
-            }
-            var preamble$jscomp$0 = request.renderState.preamble,
-              headChunks$jscomp$0 = preamble$jscomp$0.headChunks;
-            if (preamble$jscomp$0.htmlChunks || headChunks$jscomp$0) {
+            hoistableChunks.length = 0;
+            if (htmlChunks && null === headChunks) {
               var chunk$jscomp$0 = endChunkForTag("head");
               destination.push(chunk$jscomp$0);
             }
-            var bodyChunks = preamble$jscomp$0.bodyChunks;
-            if (bodyChunks)
-              for (
-                completedPreambleSegments = 0;
-                completedPreambleSegments < bodyChunks.length;
-                completedPreambleSegments++
-              )
-                destination.push(bodyChunks[completedPreambleSegments]);
             flushSegment(request, destination, completedRootSegment, null);
             request.completedRootSegment = null;
             writeBootstrap(destination, request.renderState);
@@ -8148,7 +7858,6 @@
       REACT_SCOPE_TYPE = Symbol.for("react.scope"),
       REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen"),
       REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden"),
-      REACT_MEMO_CACHE_SENTINEL = Symbol.for("react.memo_cache_sentinel"),
       REACT_POSTPONE_TYPE = Symbol.for("react.postpone"),
       REACT_VIEW_TRANSITION_TYPE = Symbol.for("react.view_transition"),
       MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
@@ -9205,17 +8914,15 @@
     Object.freeze(PRELOAD_NO_CREDS);
     var scriptRegex = /(<\/|<)(s)(cript)/gi;
     var didWarnForNewBooleanPropsWithEmptyValue = {};
-    var NoContribution = 0,
-      ROOT_HTML_MODE = 0,
+    var ROOT_HTML_MODE = 0,
       HTML_HTML_MODE = 1,
       HTML_MODE = 2,
-      HTML_HEAD_MODE = 3,
-      SVG_MODE = 4,
-      MATHML_MODE = 5,
-      HTML_TABLE_MODE = 6,
-      HTML_TABLE_BODY_MODE = 7,
-      HTML_TABLE_ROW_MODE = 8,
-      HTML_COLGROUP_MODE = 9,
+      SVG_MODE = 3,
+      MATHML_MODE = 4,
+      HTML_TABLE_MODE = 5,
+      HTML_TABLE_BODY_MODE = 6,
+      HTML_TABLE_ROW_MODE = 7,
+      HTML_COLGROUP_MODE = 8,
       styleNameCache = new Map(),
       styleAttributeStart = ' style="',
       styleAssign = ":",
@@ -9261,8 +8968,6 @@
       clientRenderedSuspenseBoundaryError1C = ' data-stck="',
       clientRenderedSuspenseBoundaryError1D = ' data-cstck="',
       clientRenderedSuspenseBoundaryError2 = "></template>",
-      boundaryPreambleContributionChunkStart = "\x3c!--",
-      boundaryPreambleContributionChunkEnd = "--\x3e",
       startSegmentHTML = '<div hidden id="',
       startSegmentHTML2 = '">',
       endSegmentHTML = "</div>",
@@ -9504,20 +9209,8 @@
           resolveCurrentlyRenderingComponent();
           return NotPending;
         },
-        useMemoCache: function (size) {
-          for (var data = Array(size), i = 0; i < size; i++)
-            data[i] = REACT_MEMO_CACHE_SENTINEL;
-          return data;
-        },
-        useCacheRefresh: function () {
-          return unsupportedRefresh;
-        },
         useEffectEvent: function () {
           return throwOnUseEffectEventCall;
-        },
-        useSwipeTransition: function (previous, current) {
-          resolveCurrentlyRenderingComponent();
-          return [current, unsupportedStartGesture];
         }
       },
       currentResumableState = null,
@@ -9598,5 +9291,5 @@
         'The server used "renderToString" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to "renderToReadableStream" which supports Suspense on the server'
       );
     };
-    exports.version = "19.1.0-experimental-e670e72f-20250214";
+    exports.version = "19.1.0-experimental-b3a95caf-20250113";
   })();
diff --git a/node_modules/react-dom/cjs/react-dom-server-legacy.browser.production.js b/node_modules/react-dom/cjs/react-dom-server-legacy.browser.production.js
index 498c522..602d27e 100644
--- a/node_modules/react-dom/cjs/react-dom-server-legacy.browser.production.js
+++ b/node_modules/react-dom/cjs/react-dom-server-legacy.browser.production.js
@@ -66,7 +66,6 @@ var REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"),
   REACT_SCOPE_TYPE = Symbol.for("react.scope"),
   REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen"),
   REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden"),
-  REACT_MEMO_CACHE_SENTINEL = Symbol.for("react.memo_cache_sentinel"),
   REACT_POSTPONE_TYPE = Symbol.for("react.postpone"),
   REACT_VIEW_TRANSITION_TYPE = Symbol.for("react.view_transition"),
   MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
@@ -333,14 +332,6 @@ function createResumableState(
     moduleScriptResources: {}
   };
 }
-function createPreambleState() {
-  return {
-    htmlChunks: null,
-    headChunks: null,
-    bodyChunks: null,
-    contribution: 0
-  };
-}
 function createFormatContext(insertionMode, selectedValue, tagScope) {
   return {
     insertionMode: insertionMode,
@@ -359,34 +350,33 @@ function getChildFormatContext(parentContext, type, props) {
         parentContext.tagScope
       );
     case "svg":
-      return createFormatContext(4, null, parentContext.tagScope);
+      return createFormatContext(3, null, parentContext.tagScope);
     case "picture":
       return createFormatContext(2, null, parentContext.tagScope | 2);
     case "math":
-      return createFormatContext(5, null, parentContext.tagScope);
+      return createFormatContext(4, null, parentContext.tagScope);
     case "foreignObject":
       return createFormatContext(2, null, parentContext.tagScope);
     case "table":
-      return createFormatContext(6, null, parentContext.tagScope);
+      return createFormatContext(5, null, parentContext.tagScope);
     case "thead":
     case "tbody":
     case "tfoot":
-      return createFormatContext(7, null, parentContext.tagScope);
+      return createFormatContext(6, null, parentContext.tagScope);
     case "colgroup":
-      return createFormatContext(9, null, parentContext.tagScope);
-    case "tr":
       return createFormatContext(8, null, parentContext.tagScope);
-    case "head":
-      if (2 > parentContext.insertionMode)
-        return createFormatContext(3, null, parentContext.tagScope);
-      break;
-    case "html":
-      if (0 === parentContext.insertionMode)
-        return createFormatContext(1, null, parentContext.tagScope);
+    case "tr":
+      return createFormatContext(7, null, parentContext.tagScope);
   }
-  return 6 <= parentContext.insertionMode || 2 > parentContext.insertionMode
+  return 5 <= parentContext.insertionMode
     ? createFormatContext(2, null, parentContext.tagScope)
-    : parentContext;
+    : 0 === parentContext.insertionMode
+      ? "html" === type
+        ? createFormatContext(1, null, parentContext.tagScope)
+        : createFormatContext(2, null, parentContext.tagScope)
+      : 1 === parentContext.insertionMode
+        ? createFormatContext(2, null, parentContext.tagScope)
+        : parentContext;
 }
 var styleNameCache = new Map();
 function pushStyleAttribute(target, style) {
@@ -795,29 +785,6 @@ function pushScriptImpl(target, props) {
   target.push(endChunkForTag("script"));
   return null;
 }
-function pushStartSingletonElement(target, props, tag) {
-  target.push(startChunkForTag(tag));
-  var innerHTML = (tag = null),
-    propKey;
-  for (propKey in props)
-    if (hasOwnProperty.call(props, propKey)) {
-      var propValue = props[propKey];
-      if (null != propValue)
-        switch (propKey) {
-          case "children":
-            tag = propValue;
-            break;
-          case "dangerouslySetInnerHTML":
-            innerHTML = propValue;
-            break;
-          default:
-            pushAttribute(target, propKey, propValue);
-        }
-    }
-  target.push(">");
-  pushInnerHTML(target, innerHTML, tag);
-  return tag;
-}
 function pushStartGenericElement(target, props, tag) {
   target.push(startChunkForTag(tag));
   var innerHTML = (tag = null),
@@ -861,7 +828,6 @@ function pushStartInstance(
   props,
   resumableState,
   renderState,
-  preambleState,
   hoistableState,
   formatContext,
   textEmbedded,
@@ -1332,7 +1298,7 @@ function pushStartInstance(
       return JSCompiler_inline_result$jscomp$2;
     case "title":
       if (
-        4 === formatContext.insertionMode ||
+        3 === formatContext.insertionMode ||
         formatContext.tagScope & 1 ||
         null != props.itemProp
       )
@@ -1351,7 +1317,7 @@ function pushStartInstance(
         href = props.href,
         precedence = props.precedence;
       if (
-        4 === formatContext.insertionMode ||
+        3 === formatContext.insertionMode ||
         formatContext.tagScope & 1 ||
         null != props.itemProp ||
         "string" !== typeof rel ||
@@ -1433,7 +1399,7 @@ function pushStartInstance(
         "symbol" === typeof asyncProp ||
         props.onLoad ||
         props.onError ||
-        4 === formatContext.insertionMode ||
+        3 === formatContext.insertionMode ||
         formatContext.tagScope & 1 ||
         null != props.itemProp
       )
@@ -1474,7 +1440,7 @@ function pushStartInstance(
       var precedence$jscomp$0 = props.precedence,
         href$jscomp$0 = props.href;
       if (
-        4 === formatContext.insertionMode ||
+        3 === formatContext.insertionMode ||
         formatContext.tagScope & 1 ||
         null != props.itemProp ||
         "string" !== typeof precedence$jscomp$0 ||
@@ -1577,7 +1543,7 @@ function pushStartInstance(
       return JSCompiler_inline_result$jscomp$6;
     case "meta":
       if (
-        4 === formatContext.insertionMode ||
+        3 === formatContext.insertionMode ||
         formatContext.tagScope & 1 ||
         null != props.itemProp
       )
@@ -1750,13 +1716,10 @@ function pushStartInstance(
     case "missing-glyph":
       break;
     case "head":
-      if (2 > formatContext.insertionMode) {
-        var preamble = preambleState || renderState.preamble;
-        if (preamble.headChunks)
-          throw Error(formatProdErrorMessage(545, "`<head>`"));
-        preamble.headChunks = [];
-        var JSCompiler_inline_result$jscomp$9 = pushStartSingletonElement(
-          preamble.headChunks,
+      if (2 > formatContext.insertionMode && null === renderState.headChunks) {
+        renderState.headChunks = [];
+        var JSCompiler_inline_result$jscomp$9 = pushStartGenericElement(
+          renderState.headChunks,
           props,
           "head"
         );
@@ -1767,42 +1730,24 @@ function pushStartInstance(
           "head"
         );
       return JSCompiler_inline_result$jscomp$9;
-    case "body":
-      if (2 > formatContext.insertionMode) {
-        var preamble$jscomp$0 = preambleState || renderState.preamble;
-        if (preamble$jscomp$0.bodyChunks)
-          throw Error(formatProdErrorMessage(545, "`<body>`"));
-        preamble$jscomp$0.bodyChunks = [];
-        var JSCompiler_inline_result$jscomp$10 = pushStartSingletonElement(
-          preamble$jscomp$0.bodyChunks,
-          props,
-          "body"
-        );
-      } else
-        JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
-          target$jscomp$0,
-          props,
-          "body"
-        );
-      return JSCompiler_inline_result$jscomp$10;
     case "html":
-      if (0 === formatContext.insertionMode) {
-        var preamble$jscomp$1 = preambleState || renderState.preamble;
-        if (preamble$jscomp$1.htmlChunks)
-          throw Error(formatProdErrorMessage(545, "`<html>`"));
-        preamble$jscomp$1.htmlChunks = [""];
-        var JSCompiler_inline_result$jscomp$11 = pushStartSingletonElement(
-          preamble$jscomp$1.htmlChunks,
+      if (
+        0 === formatContext.insertionMode &&
+        null === renderState.htmlChunks
+      ) {
+        renderState.htmlChunks = [""];
+        var JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
+          renderState.htmlChunks,
           props,
           "html"
         );
       } else
-        JSCompiler_inline_result$jscomp$11 = pushStartGenericElement(
+        JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
           target$jscomp$0,
           props,
           "html"
         );
-      return JSCompiler_inline_result$jscomp$11;
+      return JSCompiler_inline_result$jscomp$10;
     default:
       if (-1 !== type.indexOf("-")) {
         target$jscomp$0.push(startChunkForTag(type));
@@ -1863,21 +1808,6 @@ function endChunkForTag(tag) {
   void 0 === chunk && ((chunk = "</" + tag + ">"), endTagCache.set(tag, chunk));
   return chunk;
 }
-function hoistPreambleState(renderState, preambleState) {
-  renderState = renderState.preamble;
-  null === renderState.htmlChunks &&
-    preambleState.htmlChunks &&
-    ((renderState.htmlChunks = preambleState.htmlChunks),
-    (preambleState.contribution |= 1));
-  null === renderState.headChunks &&
-    preambleState.headChunks &&
-    ((renderState.headChunks = preambleState.headChunks),
-    (preambleState.contribution |= 4));
-  null === renderState.bodyChunks &&
-    preambleState.bodyChunks &&
-    ((renderState.bodyChunks = preambleState.bodyChunks),
-    (preambleState.contribution |= 2));
-}
 function writeBootstrap(destination, renderState) {
   renderState = renderState.bootstrapChunks;
   for (var i = 0; i < renderState.length - 1; i++)
@@ -1894,18 +1824,10 @@ function writeStartPendingSuspenseBoundary(destination, renderState, id) {
   destination.push(renderState);
   return destination.push('"></template>');
 }
-function writePreambleContribution(destination, preambleState) {
-  preambleState = preambleState.contribution;
-  0 !== preambleState &&
-    (destination.push("\x3c!--"),
-    destination.push("" + preambleState),
-    destination.push("--\x3e"));
-}
 function writeStartSegment(destination, renderState, formatContext, id) {
   switch (formatContext.insertionMode) {
     case 0:
     case 1:
-    case 3:
     case 2:
       return (
         destination.push('<div hidden id="'),
@@ -1914,7 +1836,7 @@ function writeStartSegment(destination, renderState, formatContext, id) {
         destination.push(renderState),
         destination.push('">')
       );
-    case 4:
+    case 3:
       return (
         destination.push('<svg aria-hidden="true" style="display:none" id="'),
         destination.push(renderState.segmentPrefix),
@@ -1922,7 +1844,7 @@ function writeStartSegment(destination, renderState, formatContext, id) {
         destination.push(renderState),
         destination.push('">')
       );
-    case 5:
+    case 4:
       return (
         destination.push('<math aria-hidden="true" style="display:none" id="'),
         destination.push(renderState.segmentPrefix),
@@ -1930,7 +1852,7 @@ function writeStartSegment(destination, renderState, formatContext, id) {
         destination.push(renderState),
         destination.push('">')
       );
-    case 6:
+    case 5:
       return (
         destination.push('<table hidden id="'),
         destination.push(renderState.segmentPrefix),
@@ -1938,7 +1860,7 @@ function writeStartSegment(destination, renderState, formatContext, id) {
         destination.push(renderState),
         destination.push('">')
       );
-    case 7:
+    case 6:
       return (
         destination.push('<table hidden><tbody id="'),
         destination.push(renderState.segmentPrefix),
@@ -1946,7 +1868,7 @@ function writeStartSegment(destination, renderState, formatContext, id) {
         destination.push(renderState),
         destination.push('">')
       );
-    case 8:
+    case 7:
       return (
         destination.push('<table hidden><tr id="'),
         destination.push(renderState.segmentPrefix),
@@ -1954,7 +1876,7 @@ function writeStartSegment(destination, renderState, formatContext, id) {
         destination.push(renderState),
         destination.push('">')
       );
-    case 9:
+    case 8:
       return (
         destination.push('<table hidden><colgroup id="'),
         destination.push(renderState.segmentPrefix),
@@ -1970,20 +1892,19 @@ function writeEndSegment(destination, formatContext) {
   switch (formatContext.insertionMode) {
     case 0:
     case 1:
-    case 3:
     case 2:
       return destination.push("</div>");
-    case 4:
+    case 3:
       return destination.push("</svg>");
-    case 5:
+    case 4:
       return destination.push("</math>");
-    case 6:
+    case 5:
       return destination.push("</table>");
-    case 7:
+    case 6:
       return destination.push("</tbody></table>");
-    case 8:
+    case 7:
       return destination.push("</tr></table>");
-    case 9:
+    case 8:
       return destination.push("</colgroup></table>");
     default:
       throw Error(formatProdErrorMessage(397));
@@ -2746,17 +2667,16 @@ function createRenderState(resumableState, generateStaticMarkup) {
       "\x3c/script>"
     );
   bootstrapScriptContent = idPrefix + "P:";
-  var JSCompiler_object_inline_segmentPrefix_1704 = idPrefix + "S:";
+  var JSCompiler_object_inline_segmentPrefix_1641 = idPrefix + "S:";
   idPrefix += "B:";
-  var JSCompiler_object_inline_preamble_1707 = createPreambleState(),
-    JSCompiler_object_inline_preconnects_1717 = new Set(),
-    JSCompiler_object_inline_fontPreloads_1718 = new Set(),
-    JSCompiler_object_inline_highImagePreloads_1719 = new Set(),
-    JSCompiler_object_inline_styles_1720 = new Map(),
-    JSCompiler_object_inline_bootstrapScripts_1721 = new Set(),
-    JSCompiler_object_inline_scripts_1722 = new Set(),
-    JSCompiler_object_inline_bulkPreloads_1723 = new Set(),
-    JSCompiler_object_inline_preloads_1724 = {
+  var JSCompiler_object_inline_preconnects_1655 = new Set(),
+    JSCompiler_object_inline_fontPreloads_1656 = new Set(),
+    JSCompiler_object_inline_highImagePreloads_1657 = new Set(),
+    JSCompiler_object_inline_styles_1658 = new Map(),
+    JSCompiler_object_inline_bootstrapScripts_1659 = new Set(),
+    JSCompiler_object_inline_scripts_1660 = new Set(),
+    JSCompiler_object_inline_bulkPreloads_1661 = new Set(),
+    JSCompiler_object_inline_preloads_1662 = {
       images: new Map(),
       stylesheets: new Map(),
       scripts: new Map(),
@@ -2793,7 +2713,7 @@ function createRenderState(resumableState, generateStaticMarkup) {
       scriptConfig.moduleScriptResources[href] = null;
       scriptConfig = [];
       pushLinkImpl(scriptConfig, props);
-      JSCompiler_object_inline_bootstrapScripts_1721.add(scriptConfig);
+      JSCompiler_object_inline_bootstrapScripts_1659.add(scriptConfig);
       bootstrapChunks.push('<script src="', escapeTextForBrowser(src));
       "string" === typeof integrity &&
         bootstrapChunks.push('" integrity="', escapeTextForBrowser(integrity));
@@ -2834,7 +2754,7 @@ function createRenderState(resumableState, generateStaticMarkup) {
         (props.moduleScriptResources[scriptConfig] = null),
         (props = []),
         pushLinkImpl(props, integrity),
-        JSCompiler_object_inline_bootstrapScripts_1721.add(props),
+        JSCompiler_object_inline_bootstrapScripts_1659.add(props),
         bootstrapChunks.push(
           '<script type="module" src="',
           escapeTextForBrowser(i)
@@ -2849,10 +2769,11 @@ function createRenderState(resumableState, generateStaticMarkup) {
         bootstrapChunks.push('" async="">\x3c/script>');
   return {
     placeholderPrefix: bootstrapScriptContent,
-    segmentPrefix: JSCompiler_object_inline_segmentPrefix_1704,
+    segmentPrefix: JSCompiler_object_inline_segmentPrefix_1641,
     boundaryPrefix: idPrefix,
     startInlineScript: "<script>",
-    preamble: JSCompiler_object_inline_preamble_1707,
+    htmlChunks: null,
+    headChunks: null,
     externalRuntimeScript: null,
     bootstrapChunks: bootstrapChunks,
     importMapChunks: [],
@@ -2868,14 +2789,14 @@ function createRenderState(resumableState, generateStaticMarkup) {
     charsetChunks: [],
     viewportChunks: [],
     hoistableChunks: [],
-    preconnects: JSCompiler_object_inline_preconnects_1717,
-    fontPreloads: JSCompiler_object_inline_fontPreloads_1718,
-    highImagePreloads: JSCompiler_object_inline_highImagePreloads_1719,
-    styles: JSCompiler_object_inline_styles_1720,
-    bootstrapScripts: JSCompiler_object_inline_bootstrapScripts_1721,
-    scripts: JSCompiler_object_inline_scripts_1722,
-    bulkPreloads: JSCompiler_object_inline_bulkPreloads_1723,
-    preloads: JSCompiler_object_inline_preloads_1724,
+    preconnects: JSCompiler_object_inline_preconnects_1655,
+    fontPreloads: JSCompiler_object_inline_fontPreloads_1656,
+    highImagePreloads: JSCompiler_object_inline_highImagePreloads_1657,
+    styles: JSCompiler_object_inline_styles_1658,
+    bootstrapScripts: JSCompiler_object_inline_bootstrapScripts_1659,
+    scripts: JSCompiler_object_inline_scripts_1660,
+    bulkPreloads: JSCompiler_object_inline_bulkPreloads_1661,
+    preloads: JSCompiler_object_inline_preloads_1662,
     stylesToHoist: !1,
     generateStaticMarkup: generateStaticMarkup
   };
@@ -3324,12 +3245,6 @@ function readPreviousThenableFromState() {
       index
     );
 }
-function unsupportedRefresh() {
-  throw Error(formatProdErrorMessage(393));
-}
-function unsupportedStartGesture() {
-  throw Error(formatProdErrorMessage(547));
-}
 function noop$1() {}
 var HooksDispatcher = {
     readContext: function (context) {
@@ -3411,20 +3326,8 @@ var HooksDispatcher = {
       resolveCurrentlyRenderingComponent();
       return sharedNotPendingObject;
     },
-    useMemoCache: function (size) {
-      for (var data = Array(size), i = 0; i < size; i++)
-        data[i] = REACT_MEMO_CACHE_SENTINEL;
-      return data;
-    },
-    useCacheRefresh: function () {
-      return unsupportedRefresh;
-    },
     useEffectEvent: function () {
       return throwOnUseEffectEventCall;
-    },
-    useSwipeTransition: function (previous, current) {
-      resolveCurrentlyRenderingComponent();
-      return [current, unsupportedStartGesture];
     }
   },
   currentResumableState = null,
@@ -3673,7 +3576,7 @@ function RequestInstance(
   this.status = 10;
   this.fatalError = null;
   this.pendingRootTasks = this.allPendingTasks = this.nextSegmentId = 0;
-  this.completedPreambleSegments = this.completedRootSegment = null;
+  this.completedRootSegment = null;
   this.abortableTasks = abortSet;
   this.pingedTasks = [];
   this.clientRenderedBoundaries = [];
@@ -3732,7 +3635,6 @@ function createRequest(
     null,
     renderState,
     null,
-    null,
     resumableState.abortableTasks,
     null,
     rootFormatContext,
@@ -3752,12 +3654,7 @@ function pingTask(request, task) {
     ((request.flushScheduled = null !== request.destination),
     performWork(request));
 }
-function createSuspenseBoundary(
-  request,
-  fallbackAbortableTasks,
-  contentPreamble,
-  fallbackPreamble
-) {
+function createSuspenseBoundary(request, fallbackAbortableTasks) {
   return {
     status: 0,
     rootSegmentID: -1,
@@ -3769,8 +3666,6 @@ function createSuspenseBoundary(
     errorDigest: null,
     contentState: createHoistableState(),
     fallbackState: createHoistableState(),
-    contentPreamble: contentPreamble,
-    fallbackPreamble: fallbackPreamble,
     trackedContentKeyPath: null,
     trackedFallbackNode: null
   };
@@ -3782,7 +3677,6 @@ function createRenderTask(
   childIndex,
   blockedBoundary,
   blockedSegment,
-  blockedPreamble,
   hoistableState,
   abortSet,
   keyPath,
@@ -3805,7 +3699,6 @@ function createRenderTask(
     },
     blockedBoundary: blockedBoundary,
     blockedSegment: blockedSegment,
-    blockedPreamble: blockedPreamble,
     hoistableState: hoistableState,
     abortSet: abortSet,
     keyPath: keyPath,
@@ -3849,7 +3742,6 @@ function createReplayTask(
     },
     blockedBoundary: blockedBoundary,
     blockedSegment: null,
-    blockedPreamble: null,
     hoistableState: hoistableState,
     abortSet: abortSet,
     keyPath: keyPath,
@@ -3873,12 +3765,11 @@ function createPendingSegment(
 ) {
   return {
     status: 0,
-    parentFlushed: !1,
     id: -1,
     index: index,
+    parentFlushed: !1,
     chunks: [],
     children: [],
-    preambleChildren: [],
     parentFormatContext: parentFormatContext,
     boundary: boundary,
     lastPushedText: lastPushedText,
@@ -4110,13 +4001,12 @@ function renderElement(request, task, keyPath, type, props, ref) {
         (task.formatContext = defaultProps),
         (task.keyPath = initialState);
     else {
-      ref = pushStartInstance(
+      initialState = pushStartInstance(
         newProps.chunks,
         type,
         props,
         request.resumableState,
         request.renderState,
-        task.blockedPreamble,
         task.hoistableState,
         task.formatContext,
         newProps.lastPushedText,
@@ -4124,42 +4014,12 @@ function renderElement(request, task, keyPath, type, props, ref) {
       );
       newProps.lastPushedText = !1;
       defaultProps = task.formatContext;
-      initialState = task.keyPath;
+      ref = task.keyPath;
+      task.formatContext = getChildFormatContext(defaultProps, type, props);
       task.keyPath = keyPath;
-      3 ===
-      (task.formatContext = getChildFormatContext(defaultProps, type, props))
-        .insertionMode
-        ? ((keyPath = createPendingSegment(
-            request,
-            0,
-            null,
-            task.formatContext,
-            !1,
-            !1
-          )),
-          newProps.preambleChildren.push(keyPath),
-          (keyPath = createRenderTask(
-            request,
-            null,
-            ref,
-            -1,
-            task.blockedBoundary,
-            keyPath,
-            task.blockedPreamble,
-            task.hoistableState,
-            request.abortableTasks,
-            task.keyPath,
-            task.formatContext,
-            task.context,
-            task.treeContext,
-            task.componentStack,
-            task.isFallback
-          )),
-          pushComponentStack(keyPath),
-          request.pingedTasks.push(keyPath))
-        : renderNode(request, task, ref, -1);
+      renderNode(request, task, initialState, -1);
       task.formatContext = defaultProps;
-      task.keyPath = initialState;
+      task.keyPath = ref;
       a: {
         task = newProps.chunks;
         request = request.resumableState;
@@ -4194,9 +4054,6 @@ function renderElement(request, task, keyPath, type, props, ref) {
               request.hasHtml = !0;
               break a;
             }
-            break;
-          case "head":
-            if (1 >= defaultProps.insertionMode) break a;
         }
         task.push(endChunkForTag(type));
       }
@@ -4246,34 +4103,25 @@ function renderElement(request, task, keyPath, type, props, ref) {
           }
         } else {
           type = task.keyPath;
-          var parentBoundary = task.blockedBoundary;
-          ref = task.blockedPreamble;
-          var parentHoistableState = task.hoistableState;
-          propName$33 = task.blockedSegment;
-          propName = props.fallback;
+          var parentBoundary = task.blockedBoundary,
+            parentHoistableState = task.hoistableState;
+          ref = task.blockedSegment;
+          propName$33 = props.fallback;
           props = props.children;
           var fallbackAbortSet = new Set();
-          var newBoundary =
-            2 > task.formatContext.insertionMode
-              ? createSuspenseBoundary(
-                  request,
-                  fallbackAbortSet,
-                  createPreambleState(),
-                  createPreambleState()
-                )
-              : createSuspenseBoundary(request, fallbackAbortSet, null, null);
+          propName = createSuspenseBoundary(request, fallbackAbortSet);
           null !== request.trackedPostpones &&
-            (newBoundary.trackedContentKeyPath = keyPath);
+            (propName.trackedContentKeyPath = keyPath);
           var boundarySegment = createPendingSegment(
             request,
-            propName$33.chunks.length,
-            newBoundary,
+            ref.chunks.length,
+            propName,
             task.formatContext,
             !1,
             !1
           );
-          propName$33.children.push(boundarySegment);
-          propName$33.lastPushedText = !1;
+          ref.children.push(boundarySegment);
+          ref.lastPushedText = !1;
           var contentRootSegment = createPendingSegment(
             request,
             0,
@@ -4287,13 +4135,12 @@ function renderElement(request, task, keyPath, type, props, ref) {
             newProps = [keyPath[0], "Suspense Fallback", keyPath[2]];
             defaultProps = [newProps[1], newProps[2], [], null];
             request.trackedPostpones.workingMap.set(newProps, defaultProps);
-            newBoundary.trackedFallbackNode = defaultProps;
+            propName.trackedFallbackNode = defaultProps;
             task.blockedSegment = boundarySegment;
-            task.blockedPreamble = newBoundary.fallbackPreamble;
             task.keyPath = newProps;
             boundarySegment.status = 6;
             try {
-              renderNode(request, task, propName, -1),
+              renderNode(request, task, propName$33, -1),
                 pushSegmentFinale(
                   boundarySegment.chunks,
                   request.renderState,
@@ -4307,19 +4154,16 @@ function renderElement(request, task, keyPath, type, props, ref) {
                 thrownValue)
               );
             } finally {
-              (task.blockedSegment = propName$33),
-                (task.blockedPreamble = ref),
-                (task.keyPath = type);
+              (task.blockedSegment = ref), (task.keyPath = type);
             }
             task = createRenderTask(
               request,
               null,
               props,
               -1,
-              newBoundary,
+              propName,
               contentRootSegment,
-              newBoundary.contentPreamble,
-              newBoundary.contentState,
+              propName.contentState,
               task.abortSet,
               keyPath,
               task.formatContext,
@@ -4331,9 +4175,8 @@ function renderElement(request, task, keyPath, type, props, ref) {
             pushComponentStack(task);
             request.pingedTasks.push(task);
           } else {
-            task.blockedBoundary = newBoundary;
-            task.blockedPreamble = newBoundary.contentPreamble;
-            task.hoistableState = newBoundary.contentState;
+            task.blockedBoundary = propName;
+            task.hoistableState = propName.contentState;
             task.blockedSegment = contentRootSegment;
             task.keyPath = keyPath;
             contentRootSegment.status = 6;
@@ -4347,17 +4190,14 @@ function renderElement(request, task, keyPath, type, props, ref) {
                   contentRootSegment.textEmbedded
                 ),
                 (contentRootSegment.status = 1),
-                queueCompletedSegment(newBoundary, contentRootSegment),
-                0 === newBoundary.pendingTasks && 0 === newBoundary.status)
+                queueCompletedSegment(propName, contentRootSegment),
+                0 === propName.pendingTasks && 0 === propName.status)
               ) {
-                newBoundary.status = 1;
-                0 === request.pendingRootTasks &&
-                  task.blockedPreamble &&
-                  preparePreamble(request);
+                propName.status = 1;
                 break a;
               }
             } catch (thrownValue$28) {
-              (newBoundary.status = 4),
+              (propName.status = 4),
                 12 === request.status
                   ? ((contentRootSegment.status = 3),
                     (newProps = request.fatalError))
@@ -4374,24 +4214,22 @@ function renderElement(request, task, keyPath, type, props, ref) {
                       newProps,
                       defaultProps
                     )),
-                (newBoundary.errorDigest = initialState),
-                untrackBoundary(request, newBoundary);
+                (propName.errorDigest = initialState),
+                untrackBoundary(request, propName);
             } finally {
               (task.blockedBoundary = parentBoundary),
-                (task.blockedPreamble = ref),
                 (task.hoistableState = parentHoistableState),
-                (task.blockedSegment = propName$33),
+                (task.blockedSegment = ref),
                 (task.keyPath = type);
             }
             task = createRenderTask(
               request,
               null,
-              propName,
+              propName$33,
               -1,
               parentBoundary,
               boundarySegment,
-              newBoundary.fallbackPreamble,
-              newBoundary.fallbackState,
+              propName.fallbackState,
               fallbackAbortSet,
               [keyPath[0], "Suspense Fallback", keyPath[2]],
               task.formatContext,
@@ -4410,9 +4248,9 @@ function renderElement(request, task, keyPath, type, props, ref) {
       switch (type.$$typeof) {
         case REACT_FORWARD_REF_TYPE:
           if ("ref" in props)
-            for (newBoundary in ((newProps = {}), props))
-              "ref" !== newBoundary &&
-                (newProps[newBoundary] = props[newBoundary]);
+            for (boundarySegment in ((newProps = {}), props))
+              "ref" !== boundarySegment &&
+                (newProps[boundarySegment] = props[boundarySegment]);
           else newProps = props;
           type = renderWithHooks(
             request,
@@ -4606,27 +4444,17 @@ function retryNode(request, task) {
                         previousReplaySet = task.replay,
                         parentBoundary = task.blockedBoundary,
                         parentHoistableState = task.hoistableState,
-                        content = props.children,
-                        fallback = props.fallback,
-                        fallbackAbortSet = new Set();
-                      props =
-                        2 > task.formatContext.insertionMode
-                          ? createSuspenseBoundary(
-                              request,
-                              fallbackAbortSet,
-                              createPreambleState(),
-                              createPreambleState()
-                            )
-                          : createSuspenseBoundary(
-                              request,
-                              fallbackAbortSet,
-                              null,
-                              null
-                            );
-                      props.parentFlushed = !0;
-                      props.rootSegmentID = ref;
-                      task.blockedBoundary = props;
-                      task.hoistableState = props.contentState;
+                        content = props.children;
+                      props = props.fallback;
+                      var fallbackAbortSet = new Set(),
+                        resumedBoundary = createSuspenseBoundary(
+                          request,
+                          fallbackAbortSet
+                        );
+                      resumedBoundary.parentFlushed = !0;
+                      resumedBoundary.rootSegmentID = ref;
+                      task.blockedBoundary = resumedBoundary;
+                      task.hoistableState = resumedBoundary.contentState;
                       task.keyPath = key;
                       task.replay = {
                         nodes: replay,
@@ -4641,13 +4469,16 @@ function retryNode(request, task) {
                         )
                           throw Error(formatProdErrorMessage(488));
                         task.replay.pendingTasks--;
-                        if (0 === props.pendingTasks && 0 === props.status) {
-                          props.status = 1;
-                          request.completedBoundaries.push(props);
+                        if (
+                          0 === resumedBoundary.pendingTasks &&
+                          0 === resumedBoundary.status
+                        ) {
+                          resumedBoundary.status = 1;
+                          request.completedBoundaries.push(resumedBoundary);
                           break b;
                         }
                       } catch (error) {
-                        (props.status = 4),
+                        (resumedBoundary.status = 4),
                           (childNodes = getThrownInfo(task.componentStack)),
                           "object" === typeof error &&
                           null !== error &&
@@ -4659,9 +4490,11 @@ function retryNode(request, task) {
                                 error,
                                 childNodes
                               )),
-                          (props.errorDigest = type),
+                          (resumedBoundary.errorDigest = type),
                           task.replay.pendingTasks--,
-                          request.clientRenderedBoundaries.push(props);
+                          request.clientRenderedBoundaries.push(
+                            resumedBoundary
+                          );
                       } finally {
                         (task.blockedBoundary = parentBoundary),
                           (task.hoistableState = parentHoistableState),
@@ -4676,10 +4509,10 @@ function retryNode(request, task) {
                           slots: node$jscomp$0,
                           pendingTasks: 0
                         },
-                        fallback,
+                        props,
                         -1,
                         parentBoundary,
-                        props.fallbackState,
+                        resumedBoundary.fallbackState,
                         fallbackAbortSet,
                         [key[0], "Suspense Fallback", key[2]],
                         task.formatContext,
@@ -5007,7 +4840,6 @@ function spawnNewSuspendedRenderTask(request, task, thenableState) {
     task.childIndex,
     task.blockedBoundary,
     newSegment,
-    task.blockedPreamble,
     task.hoistableState,
     task.abortSet,
     task.keyPath,
@@ -5193,12 +5025,7 @@ function abortRemainingReplayNodes(
       node = node[5];
       var request = request$jscomp$0,
         errorDigest = errorDigest$jscomp$0,
-        resumedBoundary = createSuspenseBoundary(
-          request,
-          new Set(),
-          null,
-          null
-        );
+        resumedBoundary = createSuspenseBoundary(request, new Set());
       resumedBoundary.parentFlushed = !0;
       resumedBoundary.rootSegmentID = node;
       resumedBoundary.status = 4;
@@ -5382,7 +5209,6 @@ function safelyEmitEarlyPreloads(request, shellComplete) {
 }
 function completeShell(request) {
   null === request.trackedPostpones && safelyEmitEarlyPreloads(request, !0);
-  null === request.trackedPostpones && preparePreamble(request);
   request.onShellError = noop;
   request = request.onShellReady;
   request();
@@ -5395,7 +5221,6 @@ function completeAll(request) {
       : null === request.completedRootSegment ||
           5 !== request.completedRootSegment.status
   );
-  preparePreamble(request);
   request = request.onAllReady;
   request();
 }
@@ -5434,11 +5259,7 @@ function finishedTask(request, boundary, segment) {
               request.completedBoundaries.push(boundary),
             1 === boundary.status &&
               (boundary.fallbackAbortableTasks.forEach(abortTaskSoft, request),
-              boundary.fallbackAbortableTasks.clear(),
-              0 === request.pendingRootTasks &&
-                null === request.trackedPostpones &&
-                null !== boundary.contentPreamble &&
-                preparePreamble(request)))
+              boundary.fallbackAbortableTasks.clear()))
           : null !== segment &&
             segment.parentFlushed &&
             1 === segment.status &&
@@ -5633,11 +5454,7 @@ function performWork(request$jscomp$1) {
                         (boundary.errorDigest = request$jscomp$0),
                         untrackBoundary(request, boundary),
                         boundary.parentFlushed &&
-                          request.clientRenderedBoundaries.push(boundary),
-                        0 === request.pendingRootTasks &&
-                          null === request.trackedPostpones &&
-                          null !== boundary.contentPreamble &&
-                          preparePreamble(request)));
+                          request.clientRenderedBoundaries.push(boundary)));
                   request.allPendingTasks--;
                   0 === request.allPendingTasks && completeAll(request);
                 }
@@ -5661,82 +5478,6 @@ function performWork(request$jscomp$1) {
     }
   }
 }
-function preparePreambleFromSubtree(
-  request,
-  segment,
-  collectedPreambleSegments
-) {
-  segment.preambleChildren.length &&
-    collectedPreambleSegments.push(segment.preambleChildren);
-  for (var pendingPreambles = !1, i = 0; i < segment.children.length; i++)
-    pendingPreambles =
-      preparePreambleFromSegment(
-        request,
-        segment.children[i],
-        collectedPreambleSegments
-      ) || pendingPreambles;
-  return pendingPreambles;
-}
-function preparePreambleFromSegment(
-  request,
-  segment,
-  collectedPreambleSegments
-) {
-  var boundary = segment.boundary;
-  if (null === boundary)
-    return preparePreambleFromSubtree(
-      request,
-      segment,
-      collectedPreambleSegments
-    );
-  var preamble = boundary.contentPreamble,
-    fallbackPreamble = boundary.fallbackPreamble;
-  if (null === preamble || null === fallbackPreamble) return !1;
-  switch (boundary.status) {
-    case 1:
-      hoistPreambleState(request.renderState, preamble);
-      segment = boundary.completedSegments[0];
-      if (!segment) throw Error(formatProdErrorMessage(391));
-      return preparePreambleFromSubtree(
-        request,
-        segment,
-        collectedPreambleSegments
-      );
-    case 5:
-      if (null !== request.trackedPostpones) return !0;
-    case 4:
-      if (1 === segment.status)
-        return (
-          hoistPreambleState(request.renderState, fallbackPreamble),
-          preparePreambleFromSubtree(
-            request,
-            segment,
-            collectedPreambleSegments
-          )
-        );
-    default:
-      return !0;
-  }
-}
-function preparePreamble(request) {
-  if (
-    request.completedRootSegment &&
-    null === request.completedPreambleSegments
-  ) {
-    var collectedPreambleSegments = [],
-      hasPendingPreambles = preparePreambleFromSegment(
-        request,
-        request.completedRootSegment,
-        collectedPreambleSegments
-      ),
-      preamble = request.renderState.preamble;
-    if (
-      !1 === hasPendingPreambles ||
-      (preamble.headChunks && preamble.bodyChunks)
-    )
-      request.completedPreambleSegments = collectedPreambleSegments;
-  }
-}
 function flushSubtree(request, destination, segment, hoistableState) {
   segment.parentFlushed = !0;
   switch (segment.status) {
@@ -5778,26 +5519,24 @@ function flushSegment(request, destination, segment, hoistableState) {
   if (null === boundary)
     return flushSubtree(request, destination, segment, hoistableState);
   boundary.parentFlushed = !0;
-  if (4 === boundary.status) {
-    if (!request.renderState.generateStaticMarkup) {
-      var errorDigest = boundary.errorDigest;
-      destination.push("\x3c!--$!--\x3e");
-      destination.push("<template");
-      errorDigest &&
-        (destination.push(' data-dgst="'),
-        (errorDigest = escapeTextForBrowser(errorDigest)),
-        destination.push(errorDigest),
-        destination.push('"'));
-      destination.push("></template>");
-    }
-    flushSubtree(request, destination, segment, hoistableState);
-    request.renderState.generateStaticMarkup
-      ? (destination = !0)
-      : ((request = boundary.fallbackPreamble) &&
-          writePreambleContribution(destination, request),
-        (destination = destination.push("\x3c!--/$--\x3e")));
-    return destination;
-  }
+  if (4 === boundary.status)
+    return (
+      request.renderState.generateStaticMarkup ||
+        ((boundary = boundary.errorDigest),
+        destination.push("\x3c!--$!--\x3e"),
+        destination.push("<template"),
+        boundary &&
+          (destination.push(' data-dgst="'),
+          (boundary = escapeTextForBrowser(boundary)),
+          destination.push(boundary),
+          destination.push('"')),
+        destination.push("></template>")),
+      flushSubtree(request, destination, segment, hoistableState),
+      (request = request.renderState.generateStaticMarkup
+        ? !0
+        : destination.push("\x3c!--/$--\x3e")),
+      request
+    );
   if (1 !== boundary.status)
     return (
       0 === boundary.status &&
@@ -5840,12 +5579,10 @@ function flushSegment(request, destination, segment, hoistableState) {
   segment = boundary.completedSegments;
   if (1 !== segment.length) throw Error(formatProdErrorMessage(391));
   flushSegment(request, destination, segment[0], hoistableState);
-  request.renderState.generateStaticMarkup
-    ? (destination = !0)
-    : ((request = boundary.contentPreamble) &&
-        writePreambleContribution(destination, request),
-      (destination = destination.push("\x3c!--/$--\x3e")));
-  return destination;
+  request = request.renderState.generateStaticMarkup
+    ? !0
+    : destination.push("\x3c!--/$--\x3e");
+  return request;
 }
 function flushSegmentContainer(request, destination, segment, hoistableState) {
   writeStartSegment(
@@ -5969,8 +5706,6 @@ function flushCompletedQueues(request, destination) {
         completedRootSegment = request.completedRootSegment;
       if (null !== completedRootSegment) {
         if (5 === completedRootSegment.status) return;
-        var completedPreambleSegments = request.completedPreambleSegments;
-        if (null === completedPreambleSegments) return;
         var renderState = request.renderState;
         if (
           (0 !== request.allPendingTasks ||
@@ -5985,9 +5720,8 @@ function flushCompletedQueues(request, destination) {
             ((resumableState.scriptResources[src] = null),
             renderState.scripts.add(chunks));
         }
-        var preamble = renderState.preamble,
-          htmlChunks = preamble.htmlChunks,
-          headChunks = preamble.headChunks,
+        var htmlChunks = renderState.htmlChunks,
+          headChunks = renderState.headChunks,
           i$jscomp$0;
         if (htmlChunks) {
           for (i$jscomp$0 = 0; i$jscomp$0 < htmlChunks.length; i$jscomp$0++)
@@ -6030,38 +5764,11 @@ function flushCompletedQueues(request, destination) {
         var hoistableChunks = renderState.hoistableChunks;
         for (i$jscomp$0 = 0; i$jscomp$0 < hoistableChunks.length; i$jscomp$0++)
           destination.push(hoistableChunks[i$jscomp$0]);
-        for (
-          renderState = hoistableChunks.length = 0;
-          renderState < completedPreambleSegments.length;
-          renderState++
-        ) {
-          var segments = completedPreambleSegments[renderState];
-          for (
-            _renderState$external = 0;
-            _renderState$external < segments.length;
-            _renderState$external++
-          )
-            flushSegment(
-              request,
-              destination,
-              segments[_renderState$external],
-              null
-            );
-        }
-        var preamble$jscomp$0 = request.renderState.preamble,
-          headChunks$jscomp$0 = preamble$jscomp$0.headChunks;
-        if (preamble$jscomp$0.htmlChunks || headChunks$jscomp$0) {
+        hoistableChunks.length = 0;
+        if (htmlChunks && null === headChunks) {
           var chunk$jscomp$0 = endChunkForTag("head");
           destination.push(chunk$jscomp$0);
         }
-        var bodyChunks = preamble$jscomp$0.bodyChunks;
-        if (bodyChunks)
-          for (
-            completedPreambleSegments = 0;
-            completedPreambleSegments < bodyChunks.length;
-            completedPreambleSegments++
-          )
-            destination.push(bodyChunks[completedPreambleSegments]);
         flushSegment(request, destination, completedRootSegment, null);
         request.completedRootSegment = null;
         writeBootstrap(destination, request.renderState);
@@ -6349,4 +6056,4 @@ exports.renderToString = function (children, options) {
     'The server used "renderToString" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to "renderToReadableStream" which supports Suspense on the server'
   );
 };
-exports.version = "19.1.0-experimental-e670e72f-20250214";
+exports.version = "19.1.0-experimental-b3a95caf-20250113";
diff --git a/node_modules/react-dom/cjs/react-dom-server-legacy.node.development.js b/node_modules/react-dom/cjs/react-dom-server-legacy.node.development.js
index 1b46eb1..354a05e 100644
--- a/node_modules/react-dom/cjs/react-dom-server-legacy.node.development.js
+++ b/node_modules/react-dom/cjs/react-dom-server-legacy.node.development.js
@@ -762,14 +762,6 @@
         moduleScriptResources: {}
       };
     }
-    function createPreambleState() {
-      return {
-        htmlChunks: null,
-        headChunks: null,
-        bodyChunks: null,
-        contribution: NoContribution
-      };
-    }
     function createFormatContext(insertionMode, selectedValue, tagScope) {
       return {
         insertionMode: insertionMode,
@@ -829,26 +821,16 @@
             null,
             parentContext.tagScope
           );
-        case "head":
-          if (parentContext.insertionMode < HTML_MODE)
-            return createFormatContext(
-              HTML_HEAD_MODE,
-              null,
-              parentContext.tagScope
-            );
-          break;
-        case "html":
-          if (parentContext.insertionMode === ROOT_HTML_MODE)
-            return createFormatContext(
-              HTML_HTML_MODE,
-              null,
-              parentContext.tagScope
-            );
       }
-      return parentContext.insertionMode >= HTML_TABLE_MODE ||
-        parentContext.insertionMode < HTML_MODE
+      return parentContext.insertionMode >= HTML_TABLE_MODE
         ? createFormatContext(HTML_MODE, null, parentContext.tagScope)
-        : parentContext;
+        : parentContext.insertionMode === ROOT_HTML_MODE
+          ? "html" === type
+            ? createFormatContext(HTML_HTML_MODE, null, parentContext.tagScope)
+            : createFormatContext(HTML_MODE, null, parentContext.tagScope)
+          : parentContext.insertionMode === HTML_HTML_MODE
+            ? createFormatContext(HTML_MODE, null, parentContext.tagScope)
+            : parentContext;
     }
     function pushStyleAttribute(target, style) {
       if ("object" !== typeof style)
@@ -1477,29 +1459,6 @@
       target.push(endChunkForTag("script"));
       return null;
     }
-    function pushStartSingletonElement(target, props, tag) {
-      target.push(startChunkForTag(tag));
-      var innerHTML = (tag = null),
-        propKey;
-      for (propKey in props)
-        if (hasOwnProperty.call(props, propKey)) {
-          var propValue = props[propKey];
-          if (null != propValue)
-            switch (propKey) {
-              case "children":
-                tag = propValue;
-                break;
-              case "dangerouslySetInnerHTML":
-                innerHTML = propValue;
-                break;
-              default:
-                pushAttribute(target, propKey, propValue);
-            }
-        }
-      target.push(endOfStartTag);
-      pushInnerHTML(target, innerHTML, tag);
-      return tag;
-    }
     function pushStartGenericElement(target, props, tag) {
       target.push(startChunkForTag(tag));
       var innerHTML = (tag = null),
@@ -1540,7 +1499,6 @@
       props,
       resumableState,
       renderState,
-      preambleState,
       hoistableState,
       formatContext,
       textEmbedded,
@@ -2695,13 +2653,13 @@
         case "missing-glyph":
           break;
         case "head":
-          if (formatContext.insertionMode < HTML_MODE) {
-            var preamble = preambleState || renderState.preamble;
-            if (preamble.headChunks)
-              throw Error("The `<head>` tag may only be rendered once.");
-            preamble.headChunks = [];
-            var JSCompiler_inline_result$jscomp$9 = pushStartSingletonElement(
-              preamble.headChunks,
+          if (
+            formatContext.insertionMode < HTML_MODE &&
+            null === renderState.headChunks
+          ) {
+            renderState.headChunks = [];
+            var JSCompiler_inline_result$jscomp$9 = pushStartGenericElement(
+              renderState.headChunks,
               props,
               "head"
             );
@@ -2712,42 +2670,24 @@
               "head"
             );
           return JSCompiler_inline_result$jscomp$9;
-        case "body":
-          if (formatContext.insertionMode < HTML_MODE) {
-            var preamble$jscomp$0 = preambleState || renderState.preamble;
-            if (preamble$jscomp$0.bodyChunks)
-              throw Error("The `<body>` tag may only be rendered once.");
-            preamble$jscomp$0.bodyChunks = [];
-            var JSCompiler_inline_result$jscomp$10 = pushStartSingletonElement(
-              preamble$jscomp$0.bodyChunks,
-              props,
-              "body"
-            );
-          } else
-            JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
-              target$jscomp$0,
-              props,
-              "body"
-            );
-          return JSCompiler_inline_result$jscomp$10;
         case "html":
-          if (formatContext.insertionMode === ROOT_HTML_MODE) {
-            var preamble$jscomp$1 = preambleState || renderState.preamble;
-            if (preamble$jscomp$1.htmlChunks)
-              throw Error("The `<html>` tag may only be rendered once.");
-            preamble$jscomp$1.htmlChunks = [doctypeChunk];
-            var JSCompiler_inline_result$jscomp$11 = pushStartSingletonElement(
-              preamble$jscomp$1.htmlChunks,
+          if (
+            formatContext.insertionMode === ROOT_HTML_MODE &&
+            null === renderState.htmlChunks
+          ) {
+            renderState.htmlChunks = [doctypeChunk];
+            var JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
+              renderState.htmlChunks,
               props,
               "html"
             );
           } else
-            JSCompiler_inline_result$jscomp$11 = pushStartGenericElement(
+            JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
               target$jscomp$0,
               props,
               "html"
             );
-          return JSCompiler_inline_result$jscomp$11;
+          return JSCompiler_inline_result$jscomp$10;
         default:
           if (-1 !== type.indexOf("-")) {
             target$jscomp$0.push(startChunkForTag(type));
@@ -2814,21 +2754,6 @@
         ((chunk = "</" + tag + ">"), endTagCache.set(tag, chunk));
       return chunk;
     }
-    function hoistPreambleState(renderState, preambleState) {
-      renderState = renderState.preamble;
-      null === renderState.htmlChunks &&
-        preambleState.htmlChunks &&
-        ((renderState.htmlChunks = preambleState.htmlChunks),
-        (preambleState.contribution |= 1));
-      null === renderState.headChunks &&
-        preambleState.headChunks &&
-        ((renderState.headChunks = preambleState.headChunks),
-        (preambleState.contribution |= 4));
-      null === renderState.bodyChunks &&
-        preambleState.bodyChunks &&
-        ((renderState.bodyChunks = preambleState.bodyChunks),
-        (preambleState.contribution |= 2));
-    }
     function writeBootstrap(destination, renderState) {
       renderState = renderState.bootstrapChunks;
       for (var i = 0; i < renderState.length - 1; i++)
@@ -2848,18 +2773,10 @@
       destination.push(renderState);
       return destination.push(startPendingSuspenseBoundary2);
     }
-    function writePreambleContribution(destination, preambleState) {
-      preambleState = preambleState.contribution;
-      preambleState !== NoContribution &&
-        (destination.push(boundaryPreambleContributionChunkStart),
-        destination.push("" + preambleState),
-        destination.push(boundaryPreambleContributionChunkEnd));
-    }
     function writeStartSegment(destination, renderState, formatContext, id) {
       switch (formatContext.insertionMode) {
         case ROOT_HTML_MODE:
         case HTML_HTML_MODE:
-        case HTML_HEAD_MODE:
         case HTML_MODE:
           return (
             destination.push(startSegmentHTML),
@@ -2924,7 +2841,6 @@
       switch (formatContext.insertionMode) {
         case ROOT_HTML_MODE:
         case HTML_HTML_MODE:
-        case HTML_HEAD_MODE:
         case HTML_MODE:
           return destination.push(endSegmentHTML);
         case SVG_MODE:
@@ -3421,7 +3337,8 @@
         segmentPrefix: idPrefix + "S:",
         boundaryPrefix: idPrefix + "B:",
         startInlineScript: "<script>",
-        preamble: createPreambleState(),
+        htmlChunks: null,
+        headChunks: null,
         externalRuntimeScript: null,
         bootstrapChunks: bootstrapChunks,
         importMapChunks: [],
@@ -3551,7 +3468,8 @@
         segmentPrefix: idPrefix.segmentPrefix,
         boundaryPrefix: idPrefix.boundaryPrefix,
         startInlineScript: idPrefix.startInlineScript,
-        preamble: idPrefix.preamble,
+        htmlChunks: idPrefix.htmlChunks,
+        headChunks: idPrefix.headChunks,
         externalRuntimeScript: idPrefix.externalRuntimeScript,
         bootstrapChunks: idPrefix.bootstrapChunks,
         importMapChunks: idPrefix.importMapChunks,
@@ -4085,12 +4003,6 @@
           index
         );
     }
-    function unsupportedRefresh() {
-      throw Error("Cache cannot be refreshed during server rendering.");
-    }
-    function unsupportedStartGesture() {
-      throw Error("startGesture cannot be called during server rendering.");
-    }
     function noop$1() {}
     function disabledLog() {}
     function disableLogs() {
@@ -4420,7 +4332,7 @@
       this.status = 10;
       this.fatalError = null;
       this.pendingRootTasks = this.allPendingTasks = this.nextSegmentId = 0;
-      this.completedPreambleSegments = this.completedRootSegment = null;
+      this.completedRootSegment = null;
       this.abortableTasks = abortSet;
       this.pingedTasks = [];
       this.clientRenderedBoundaries = [];
@@ -4480,7 +4392,6 @@
         null,
         renderState,
         null,
-        null,
         resumableState.abortableTasks,
         null,
         rootFormatContext,
@@ -4501,12 +4412,7 @@
         ((request.flushScheduled = null !== request.destination),
         performWork(request));
     }
-    function createSuspenseBoundary(
-      request,
-      fallbackAbortableTasks,
-      contentPreamble,
-      fallbackPreamble
-    ) {
+    function createSuspenseBoundary(request, fallbackAbortableTasks) {
       return {
         status: PENDING,
         rootSegmentID: -1,
@@ -4518,8 +4424,6 @@
         errorDigest: null,
         contentState: createHoistableState(),
         fallbackState: createHoistableState(),
-        contentPreamble: contentPreamble,
-        fallbackPreamble: fallbackPreamble,
         trackedContentKeyPath: null,
         trackedFallbackNode: null,
         errorMessage: null,
@@ -4534,7 +4438,6 @@
       childIndex,
       blockedBoundary,
       blockedSegment,
-      blockedPreamble,
       hoistableState,
       abortSet,
       keyPath,
@@ -4559,7 +4462,6 @@
         },
         blockedBoundary: blockedBoundary,
         blockedSegment: blockedSegment,
-        blockedPreamble: blockedPreamble,
         hoistableState: hoistableState,
         abortSet: abortSet,
         keyPath: keyPath,
@@ -4606,7 +4508,6 @@
         },
         blockedBoundary: blockedBoundary,
         blockedSegment: null,
-        blockedPreamble: null,
         hoistableState: hoistableState,
         abortSet: abortSet,
         keyPath: keyPath,
@@ -4631,12 +4532,11 @@
     ) {
       return {
         status: PENDING,
-        parentFlushed: !1,
         id: -1,
         index: index,
+        parentFlushed: !1,
         chunks: [],
         children: [],
-        preambleChildren: [],
         parentFormatContext: parentFormatContext,
         boundary: boundary,
         lastPushedText: lastPushedText,
@@ -5339,7 +5239,6 @@
             props,
             request.resumableState,
             request.renderState,
-            task.blockedPreamble,
             task.hoistableState,
             task.formatContext,
             segment.lastPushedText,
@@ -5348,45 +5247,9 @@
           segment.lastPushedText = !1;
           var _prevContext = task.formatContext,
             _prevKeyPath2 = task.keyPath;
+          task.formatContext = getChildFormatContext(_prevContext, type, props);
           task.keyPath = keyPath;
-          if (
-            (task.formatContext = getChildFormatContext(
-              _prevContext,
-              type,
-              props
-            )).insertionMode === HTML_HEAD_MODE
-          ) {
-            var preambleSegment = createPendingSegment(
-              request,
-              0,
-              null,
-              task.formatContext,
-              !1,
-              !1
-            );
-            segment.preambleChildren.push(preambleSegment);
-            var preambleTask = createRenderTask(
-              request,
-              null,
-              _children,
-              -1,
-              task.blockedBoundary,
-              preambleSegment,
-              task.blockedPreamble,
-              task.hoistableState,
-              request.abortableTasks,
-              task.keyPath,
-              task.formatContext,
-              task.context,
-              task.treeContext,
-              task.componentStack,
-              task.isFallback,
-              emptyContextObject,
-              task.debugTask
-            );
-            pushComponentStack(preambleTask);
-            request.pingedTasks.push(preambleTask);
-          } else renderNode(request, task, _children, -1);
+          renderNode(request, task, _children, -1);
           task.formatContext = _prevContext;
           task.keyPath = _prevKeyPath2;
           a: {
@@ -5423,9 +5286,6 @@
                   resumableState.hasHtml = !0;
                   break a;
                 }
-                break;
-              case "head":
-                if (_prevContext.insertionMode <= HTML_HTML_MODE) break a;
             }
             target.push(endChunkForTag(type));
           }
@@ -5479,26 +5339,12 @@
             } else {
               var prevKeyPath$jscomp$3 = task.keyPath,
                 parentBoundary = task.blockedBoundary,
-                parentPreamble = task.blockedPreamble,
                 parentHoistableState = task.hoistableState,
                 parentSegment = task.blockedSegment,
                 fallback = props.fallback,
                 content = props.children,
-                fallbackAbortSet = new Set();
-              var newBoundary =
-                task.formatContext.insertionMode < HTML_MODE
-                  ? createSuspenseBoundary(
-                      request,
-                      fallbackAbortSet,
-                      createPreambleState(),
-                      createPreambleState()
-                    )
-                  : createSuspenseBoundary(
-                      request,
-                      fallbackAbortSet,
-                      null,
-                      null
-                    );
+                fallbackAbortSet = new Set(),
+                newBoundary = createSuspenseBoundary(request, fallbackAbortSet);
               null !== request.trackedPostpones &&
                 (newBoundary.trackedContentKeyPath = keyPath);
               var boundarySegment = createPendingSegment(
@@ -5538,7 +5384,6 @@
                 );
                 newBoundary.trackedFallbackNode = fallbackReplayNode;
                 task.blockedSegment = boundarySegment;
-                task.blockedPreamble = newBoundary.fallbackPreamble;
                 task.keyPath = fallbackKeyPath;
                 boundarySegment.status = 6;
                 try {
@@ -5557,7 +5402,6 @@
                   );
                 } finally {
                   (task.blockedSegment = parentSegment),
-                    (task.blockedPreamble = parentPreamble),
                     (task.keyPath = prevKeyPath$jscomp$3);
                 }
                 var suspendedPrimaryTask = createRenderTask(
@@ -5567,7 +5411,6 @@
                   -1,
                   newBoundary,
                   contentRootSegment,
-                  newBoundary.contentPreamble,
                   newBoundary.contentState,
                   task.abortSet,
                   keyPath,
@@ -5583,7 +5426,6 @@
                 request.pingedTasks.push(suspendedPrimaryTask);
               } else {
                 task.blockedBoundary = newBoundary;
-                task.blockedPreamble = newBoundary.contentPreamble;
                 task.hoistableState = newBoundary.contentState;
                 task.blockedSegment = contentRootSegment;
                 task.keyPath = keyPath;
@@ -5603,9 +5445,6 @@
                       newBoundary.status === PENDING)
                   ) {
                     newBoundary.status = COMPLETED;
-                    0 === request.pendingRootTasks &&
-                      task.blockedPreamble &&
-                      preparePreamble(request);
                     break a;
                   }
                 } catch (thrownValue$2) {
@@ -5645,7 +5484,6 @@
                   untrackBoundary(request, newBoundary);
                 } finally {
                   (task.blockedBoundary = parentBoundary),
-                    (task.blockedPreamble = parentPreamble),
                     (task.hoistableState = parentHoistableState),
                     (task.blockedSegment = parentSegment),
                     (task.keyPath = prevKeyPath$jscomp$3);
@@ -5657,7 +5495,6 @@
                   -1,
                   parentBoundary,
                   boundarySegment,
-                  newBoundary.fallbackPreamble,
                   newBoundary.fallbackState,
                   fallbackAbortSet,
                   [keyPath[0], "Suspense Fallback", keyPath[2]],
@@ -5896,27 +5733,17 @@
                 previousReplaySet = task.replay,
                 parentBoundary = task.blockedBoundary,
                 parentHoistableState = task.hoistableState,
-                content = props.children,
-                fallback = props.fallback,
-                fallbackAbortSet = new Set();
-              props =
-                task.formatContext.insertionMode < HTML_MODE
-                  ? createSuspenseBoundary(
-                      request,
-                      fallbackAbortSet,
-                      createPreambleState(),
-                      createPreambleState()
-                    )
-                  : createSuspenseBoundary(
-                      request,
-                      fallbackAbortSet,
-                      null,
-                      null
-                    );
-              props.parentFlushed = !0;
-              props.rootSegmentID = type;
-              task.blockedBoundary = props;
-              task.hoistableState = props.contentState;
+                content = props.children;
+              props = props.fallback;
+              var fallbackAbortSet = new Set(),
+                resumedBoundary = createSuspenseBoundary(
+                  request,
+                  fallbackAbortSet
+                );
+              resumedBoundary.parentFlushed = !0;
+              resumedBoundary.rootSegmentID = type;
+              task.blockedBoundary = resumedBoundary;
+              task.hoistableState = resumedBoundary.contentState;
               task.keyPath = keyPath;
               task.replay = { nodes: ref, slots: name, pendingTasks: 1 };
               try {
@@ -5929,13 +5756,16 @@
                     "Couldn't find all resumable slots by key/index during replaying. The tree doesn't match so React will fallback to client rendering."
                   );
                 task.replay.pendingTasks--;
-                if (0 === props.pendingTasks && props.status === PENDING) {
-                  props.status = COMPLETED;
-                  request.completedBoundaries.push(props);
+                if (
+                  0 === resumedBoundary.pendingTasks &&
+                  resumedBoundary.status === PENDING
+                ) {
+                  resumedBoundary.status = COMPLETED;
+                  request.completedBoundaries.push(resumedBoundary);
                   break a;
                 }
               } catch (error) {
-                (props.status = CLIENT_RENDERED),
+                (resumedBoundary.status = CLIENT_RENDERED),
                   (childNodes = getThrownInfo(task.componentStack)),
                   "object" === typeof error &&
                   null !== error &&
@@ -5953,9 +5783,15 @@
                         childNodes,
                         task.debugTask
                       )),
-                  encodeErrorForBoundary(props, replay, error, childNodes, !1),
+                  encodeErrorForBoundary(
+                    resumedBoundary,
+                    replay,
+                    error,
+                    childNodes,
+                    !1
+                  ),
                   task.replay.pendingTasks--,
-                  request.clientRenderedBoundaries.push(props);
+                  request.clientRenderedBoundaries.push(resumedBoundary);
               } finally {
                 (task.blockedBoundary = parentBoundary),
                   (task.hoistableState = parentHoistableState),
@@ -5966,10 +5802,10 @@
                 request,
                 null,
                 { nodes: keyOrIndex, slots: node, pendingTasks: 0 },
-                fallback,
+                props,
                 -1,
                 parentBoundary,
-                props.fallbackState,
+                resumedBoundary.fallbackState,
                 fallbackAbortSet,
                 [keyPath[0], "Suspense Fallback", keyPath[2]],
                 task.formatContext,
@@ -6514,7 +6350,6 @@
         task.childIndex,
         task.blockedBoundary,
         newSegment,
-        task.blockedPreamble,
         task.hoistableState,
         task.abortSet,
         task.keyPath,
@@ -6732,12 +6567,7 @@
             errorDigest = errorDigest$jscomp$0,
             errorInfo = errorInfo$jscomp$0,
             wasAborted = aborted,
-            resumedBoundary = createSuspenseBoundary(
-              request,
-              new Set(),
-              null,
-              null
-            );
+            resumedBoundary = createSuspenseBoundary(request, new Set());
           resumedBoundary.parentFlushed = !0;
           resumedBoundary.rootSegmentID = node;
           resumedBoundary.status = CLIENT_RENDERED;
@@ -6947,7 +6777,6 @@
     }
     function completeShell(request) {
       null === request.trackedPostpones && safelyEmitEarlyPreloads(request, !0);
-      null === request.trackedPostpones && preparePreamble(request);
       request.onShellError = noop;
       request = request.onShellReady;
       request();
@@ -6960,7 +6789,6 @@
           : null === request.completedRootSegment ||
               request.completedRootSegment.status !== POSTPONED
       );
-      preparePreamble(request);
       request = request.onAllReady;
       request();
     }
@@ -7005,11 +6833,7 @@
                     abortTaskSoft,
                     request
                   ),
-                  boundary.fallbackAbortableTasks.clear(),
-                  0 === request.pendingRootTasks &&
-                    null === request.trackedPostpones &&
-                    null !== boundary.contentPreamble &&
-                    preparePreamble(request)))
+                  boundary.fallbackAbortableTasks.clear()))
               : null !== segment &&
                 segment.parentFlushed &&
                 segment.status === COMPLETED &&
@@ -7267,11 +7091,7 @@
                             ),
                             untrackBoundary(request, boundary),
                             boundary.parentFlushed &&
-                              request.clientRenderedBoundaries.push(boundary),
-                            0 === request.pendingRootTasks &&
-                              null === request.trackedPostpones &&
-                              null !== boundary.contentPreamble &&
-                              preparePreamble(request)));
+                              request.clientRenderedBoundaries.push(boundary)));
                       request.allPendingTasks--;
                       0 === request.allPendingTasks && completeAll(request);
                     }
@@ -7301,85 +7121,6 @@
         }
       }
     }
-    function preparePreambleFromSubtree(
-      request,
-      segment,
-      collectedPreambleSegments
-    ) {
-      segment.preambleChildren.length &&
-        collectedPreambleSegments.push(segment.preambleChildren);
-      for (var pendingPreambles = !1, i = 0; i < segment.children.length; i++)
-        pendingPreambles =
-          preparePreambleFromSegment(
-            request,
-            segment.children[i],
-            collectedPreambleSegments
-          ) || pendingPreambles;
-      return pendingPreambles;
-    }
-    function preparePreambleFromSegment(
-      request,
-      segment,
-      collectedPreambleSegments
-    ) {
-      var boundary = segment.boundary;
-      if (null === boundary)
-        return preparePreambleFromSubtree(
-          request,
-          segment,
-          collectedPreambleSegments
-        );
-      var preamble = boundary.contentPreamble,
-        fallbackPreamble = boundary.fallbackPreamble;
-      if (null === preamble || null === fallbackPreamble) return !1;
-      switch (boundary.status) {
-        case COMPLETED:
-          hoistPreambleState(request.renderState, preamble);
-          segment = boundary.completedSegments[0];
-          if (!segment)
-            throw Error(
-              "A previously unvisited boundary must have exactly one root segment. This is a bug in React."
-            );
-          return preparePreambleFromSubtree(
-            request,
-            segment,
-            collectedPreambleSegments
-          );
-        case POSTPONED:
-          if (null !== request.trackedPostpones) return !0;
-        case CLIENT_RENDERED:
-          if (segment.status === COMPLETED)
-            return (
-              hoistPreambleState(request.renderState, fallbackPreamble),
-              preparePreambleFromSubtree(
-                request,
-                segment,
-                collectedPreambleSegments
-              )
-            );
-        default:
-          return !0;
-      }
-    }
-    function preparePreamble(request) {
-      if (
-        request.completedRootSegment &&
-        null === request.completedPreambleSegments
-      ) {
-        var collectedPreambleSegments = [],
-          hasPendingPreambles = preparePreambleFromSegment(
-            request,
-            request.completedRootSegment,
-            collectedPreambleSegments
-          ),
-          preamble = request.renderState.preamble;
-        if (
-          !1 === hasPendingPreambles ||
-          (preamble.headChunks && preamble.bodyChunks)
-        )
-          request.completedPreambleSegments = collectedPreambleSegments;
-      }
-    }
     function flushSubtree(request, destination, segment, hoistableState) {
       segment.parentFlushed = !0;
       switch (segment.status) {
@@ -7427,8 +7168,8 @@
         if (!request.renderState.generateStaticMarkup) {
           var errorDigest = boundary.errorDigest,
             errorMessage = boundary.errorMessage,
-            errorStack = boundary.errorStack,
-            errorComponentStack = boundary.errorComponentStack;
+            errorStack = boundary.errorStack;
+          boundary = boundary.errorComponentStack;
           destination.push(startClientRenderedSuspenseBoundary);
           destination.push(clientRenderedSuspenseBoundaryError1);
           errorDigest &&
@@ -7452,22 +7193,20 @@
             destination.push(
               clientRenderedSuspenseBoundaryErrorAttrInterstitial
             ));
-          errorComponentStack &&
+          boundary &&
             (destination.push(clientRenderedSuspenseBoundaryError1D),
-            (errorComponentStack = escapeTextForBrowser(errorComponentStack)),
-            destination.push(errorComponentStack),
+            (errorStack = escapeTextForBrowser(boundary)),
+            destination.push(errorStack),
             destination.push(
               clientRenderedSuspenseBoundaryErrorAttrInterstitial
             ));
           destination.push(clientRenderedSuspenseBoundaryError2);
         }
         flushSubtree(request, destination, segment, hoistableState);
-        request.renderState.generateStaticMarkup
-          ? (destination = !0)
-          : ((request = boundary.fallbackPreamble) &&
-              writePreambleContribution(destination, request),
-            (destination = destination.push(endSuspenseBoundary)));
-        return destination;
+        request = request.renderState.generateStaticMarkup
+          ? !0
+          : destination.push(endSuspenseBoundary);
+        return request;
       }
       if (boundary.status !== COMPLETED)
         return (
@@ -7481,9 +7220,12 @@
             boundary.rootSegmentID
           ),
           hoistableState &&
-            ((boundary = boundary.fallbackState),
-            boundary.styles.forEach(hoistStyleQueueDependency, hoistableState),
-            boundary.stylesheets.forEach(
+            ((errorStack = boundary.fallbackState),
+            errorStack.styles.forEach(
+              hoistStyleQueueDependency,
+              hoistableState
+            ),
+            errorStack.stylesheets.forEach(
               hoistStylesheetDependency,
               hoistableState
             )),
@@ -7514,12 +7256,10 @@
           "A previously unvisited boundary must have exactly one root segment. This is a bug in React."
         );
       flushSegment(request, destination, segment[0], hoistableState);
-      request.renderState.generateStaticMarkup
-        ? (destination = !0)
-        : ((request = boundary.contentPreamble) &&
-            writePreambleContribution(destination, request),
-          (destination = destination.push(endSuspenseBoundary)));
-      return destination;
+      request = request.renderState.generateStaticMarkup
+        ? !0
+        : destination.push(endSuspenseBoundary);
+      return request;
     }
     function flushSegmentContainer(
       request,
@@ -7670,8 +7410,6 @@
             completedRootSegment = request.completedRootSegment;
           if (null !== completedRootSegment) {
             if (completedRootSegment.status === POSTPONED) return;
-            var completedPreambleSegments = request.completedPreambleSegments;
-            if (null === completedPreambleSegments) return;
             var renderState = request.renderState;
             if (
               (0 !== request.allPendingTasks ||
@@ -7686,9 +7424,8 @@
                 ((resumableState.scriptResources[src] = EXISTS),
                 renderState.scripts.add(chunks));
             }
-            var preamble = renderState.preamble,
-              htmlChunks = preamble.htmlChunks,
-              headChunks = preamble.headChunks,
+            var htmlChunks = renderState.htmlChunks,
+              headChunks = renderState.headChunks,
               i$jscomp$0;
             if (htmlChunks) {
               for (i$jscomp$0 = 0; i$jscomp$0 < htmlChunks.length; i$jscomp$0++)
@@ -7751,38 +7488,11 @@
               i$jscomp$0++
             )
               destination.push(hoistableChunks[i$jscomp$0]);
-            for (
-              renderState = hoistableChunks.length = 0;
-              renderState < completedPreambleSegments.length;
-              renderState++
-            ) {
-              var segments = completedPreambleSegments[renderState];
-              for (
-                _renderState$external = 0;
-                _renderState$external < segments.length;
-                _renderState$external++
-              )
-                flushSegment(
-                  request,
-                  destination,
-                  segments[_renderState$external],
-                  null
-                );
-            }
-            var preamble$jscomp$0 = request.renderState.preamble,
-              headChunks$jscomp$0 = preamble$jscomp$0.headChunks;
-            if (preamble$jscomp$0.htmlChunks || headChunks$jscomp$0) {
+            hoistableChunks.length = 0;
+            if (htmlChunks && null === headChunks) {
               var chunk$jscomp$0 = endChunkForTag("head");
               destination.push(chunk$jscomp$0);
             }
-            var bodyChunks = preamble$jscomp$0.bodyChunks;
-            if (bodyChunks)
-              for (
-                completedPreambleSegments = 0;
-                completedPreambleSegments < bodyChunks.length;
-                completedPreambleSegments++
-              )
-                destination.push(bodyChunks[completedPreambleSegments]);
             flushSegment(request, destination, completedRootSegment, null);
             request.completedRootSegment = null;
             writeBootstrap(destination, request.renderState);
@@ -8148,7 +7858,6 @@
       REACT_SCOPE_TYPE = Symbol.for("react.scope"),
       REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen"),
       REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden"),
-      REACT_MEMO_CACHE_SENTINEL = Symbol.for("react.memo_cache_sentinel"),
       REACT_POSTPONE_TYPE = Symbol.for("react.postpone"),
       REACT_VIEW_TRANSITION_TYPE = Symbol.for("react.view_transition"),
       MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
@@ -9205,17 +8914,15 @@
     Object.freeze(PRELOAD_NO_CREDS);
     var scriptRegex = /(<\/|<)(s)(cript)/gi;
     var didWarnForNewBooleanPropsWithEmptyValue = {};
-    var NoContribution = 0,
-      ROOT_HTML_MODE = 0,
+    var ROOT_HTML_MODE = 0,
       HTML_HTML_MODE = 1,
       HTML_MODE = 2,
-      HTML_HEAD_MODE = 3,
-      SVG_MODE = 4,
-      MATHML_MODE = 5,
-      HTML_TABLE_MODE = 6,
-      HTML_TABLE_BODY_MODE = 7,
-      HTML_TABLE_ROW_MODE = 8,
-      HTML_COLGROUP_MODE = 9,
+      SVG_MODE = 3,
+      MATHML_MODE = 4,
+      HTML_TABLE_MODE = 5,
+      HTML_TABLE_BODY_MODE = 6,
+      HTML_TABLE_ROW_MODE = 7,
+      HTML_COLGROUP_MODE = 8,
       styleNameCache = new Map(),
       styleAttributeStart = ' style="',
       styleAssign = ":",
@@ -9261,8 +8968,6 @@
       clientRenderedSuspenseBoundaryError1C = ' data-stck="',
       clientRenderedSuspenseBoundaryError1D = ' data-cstck="',
       clientRenderedSuspenseBoundaryError2 = "></template>",
-      boundaryPreambleContributionChunkStart = "\x3c!--",
-      boundaryPreambleContributionChunkEnd = "--\x3e",
       startSegmentHTML = '<div hidden id="',
       startSegmentHTML2 = '">',
       endSegmentHTML = "</div>",
@@ -9504,20 +9209,8 @@
           resolveCurrentlyRenderingComponent();
           return NotPending;
         },
-        useMemoCache: function (size) {
-          for (var data = Array(size), i = 0; i < size; i++)
-            data[i] = REACT_MEMO_CACHE_SENTINEL;
-          return data;
-        },
-        useCacheRefresh: function () {
-          return unsupportedRefresh;
-        },
         useEffectEvent: function () {
           return throwOnUseEffectEventCall;
-        },
-        useSwipeTransition: function (previous, current) {
-          resolveCurrentlyRenderingComponent();
-          return [current, unsupportedStartGesture];
         }
       },
       currentResumableState = null,
@@ -9598,5 +9291,5 @@
         'The server used "renderToString" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to "renderToPipeableStream" which supports Suspense on the server'
       );
     };
-    exports.version = "19.1.0-experimental-e670e72f-20250214";
+    exports.version = "19.1.0-experimental-b3a95caf-20250113";
   })();
diff --git a/node_modules/react-dom/cjs/react-dom-server-legacy.node.production.js b/node_modules/react-dom/cjs/react-dom-server-legacy.node.production.js
index 7a6807f..4e86876 100644
--- a/node_modules/react-dom/cjs/react-dom-server-legacy.node.production.js
+++ b/node_modules/react-dom/cjs/react-dom-server-legacy.node.production.js
@@ -51,7 +51,6 @@ var React = require("react"),
   REACT_SCOPE_TYPE = Symbol.for("react.scope"),
   REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen"),
   REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden"),
-  REACT_MEMO_CACHE_SENTINEL = Symbol.for("react.memo_cache_sentinel"),
   REACT_POSTPONE_TYPE = Symbol.for("react.postpone"),
   REACT_VIEW_TRANSITION_TYPE = Symbol.for("react.view_transition"),
   MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
@@ -318,14 +317,6 @@ function createResumableState(
     moduleScriptResources: {}
   };
 }
-function createPreambleState() {
-  return {
-    htmlChunks: null,
-    headChunks: null,
-    bodyChunks: null,
-    contribution: 0
-  };
-}
 function createFormatContext(insertionMode, selectedValue, tagScope) {
   return {
     insertionMode: insertionMode,
@@ -344,34 +335,33 @@ function getChildFormatContext(parentContext, type, props) {
         parentContext.tagScope
       );
     case "svg":
-      return createFormatContext(4, null, parentContext.tagScope);
+      return createFormatContext(3, null, parentContext.tagScope);
     case "picture":
       return createFormatContext(2, null, parentContext.tagScope | 2);
     case "math":
-      return createFormatContext(5, null, parentContext.tagScope);
+      return createFormatContext(4, null, parentContext.tagScope);
     case "foreignObject":
       return createFormatContext(2, null, parentContext.tagScope);
     case "table":
-      return createFormatContext(6, null, parentContext.tagScope);
+      return createFormatContext(5, null, parentContext.tagScope);
     case "thead":
     case "tbody":
     case "tfoot":
-      return createFormatContext(7, null, parentContext.tagScope);
+      return createFormatContext(6, null, parentContext.tagScope);
     case "colgroup":
-      return createFormatContext(9, null, parentContext.tagScope);
-    case "tr":
       return createFormatContext(8, null, parentContext.tagScope);
-    case "head":
-      if (2 > parentContext.insertionMode)
-        return createFormatContext(3, null, parentContext.tagScope);
-      break;
-    case "html":
-      if (0 === parentContext.insertionMode)
-        return createFormatContext(1, null, parentContext.tagScope);
+    case "tr":
+      return createFormatContext(7, null, parentContext.tagScope);
   }
-  return 6 <= parentContext.insertionMode || 2 > parentContext.insertionMode
+  return 5 <= parentContext.insertionMode
     ? createFormatContext(2, null, parentContext.tagScope)
-    : parentContext;
+    : 0 === parentContext.insertionMode
+      ? "html" === type
+        ? createFormatContext(1, null, parentContext.tagScope)
+        : createFormatContext(2, null, parentContext.tagScope)
+      : 1 === parentContext.insertionMode
+        ? createFormatContext(2, null, parentContext.tagScope)
+        : parentContext;
 }
 var styleNameCache = new Map();
 function pushStyleAttribute(target, style) {
@@ -796,29 +786,6 @@ function pushScriptImpl(target, props) {
   target.push(endChunkForTag("script"));
   return null;
 }
-function pushStartSingletonElement(target, props, tag) {
-  target.push(startChunkForTag(tag));
-  var innerHTML = (tag = null),
-    propKey;
-  for (propKey in props)
-    if (hasOwnProperty.call(props, propKey)) {
-      var propValue = props[propKey];
-      if (null != propValue)
-        switch (propKey) {
-          case "children":
-            tag = propValue;
-            break;
-          case "dangerouslySetInnerHTML":
-            innerHTML = propValue;
-            break;
-          default:
-            pushAttribute(target, propKey, propValue);
-        }
-    }
-  target.push(">");
-  pushInnerHTML(target, innerHTML, tag);
-  return tag;
-}
 function pushStartGenericElement(target, props, tag) {
   target.push(startChunkForTag(tag));
   var innerHTML = (tag = null),
@@ -861,7 +828,6 @@ function pushStartInstance(
   props,
   resumableState,
   renderState,
-  preambleState,
   hoistableState,
   formatContext,
   textEmbedded,
@@ -1341,7 +1307,7 @@ function pushStartInstance(
       return JSCompiler_inline_result$jscomp$2;
     case "title":
       if (
-        4 === formatContext.insertionMode ||
+        3 === formatContext.insertionMode ||
         formatContext.tagScope & 1 ||
         null != props.itemProp
       )
@@ -1360,7 +1326,7 @@ function pushStartInstance(
         href = props.href,
         precedence = props.precedence;
       if (
-        4 === formatContext.insertionMode ||
+        3 === formatContext.insertionMode ||
         formatContext.tagScope & 1 ||
         null != props.itemProp ||
         "string" !== typeof rel ||
@@ -1442,7 +1408,7 @@ function pushStartInstance(
         "symbol" === typeof asyncProp ||
         props.onLoad ||
         props.onError ||
-        4 === formatContext.insertionMode ||
+        3 === formatContext.insertionMode ||
         formatContext.tagScope & 1 ||
         null != props.itemProp
       )
@@ -1483,7 +1449,7 @@ function pushStartInstance(
       var precedence$jscomp$0 = props.precedence,
         href$jscomp$0 = props.href;
       if (
-        4 === formatContext.insertionMode ||
+        3 === formatContext.insertionMode ||
         formatContext.tagScope & 1 ||
         null != props.itemProp ||
         "string" !== typeof precedence$jscomp$0 ||
@@ -1586,7 +1552,7 @@ function pushStartInstance(
       return JSCompiler_inline_result$jscomp$6;
     case "meta":
       if (
-        4 === formatContext.insertionMode ||
+        3 === formatContext.insertionMode ||
         formatContext.tagScope & 1 ||
         null != props.itemProp
       )
@@ -1764,13 +1730,10 @@ function pushStartInstance(
     case "missing-glyph":
       break;
     case "head":
-      if (2 > formatContext.insertionMode) {
-        var preamble = preambleState || renderState.preamble;
-        if (preamble.headChunks)
-          throw Error("The `<head>` tag may only be rendered once.");
-        preamble.headChunks = [];
-        var JSCompiler_inline_result$jscomp$9 = pushStartSingletonElement(
-          preamble.headChunks,
+      if (2 > formatContext.insertionMode && null === renderState.headChunks) {
+        renderState.headChunks = [];
+        var JSCompiler_inline_result$jscomp$9 = pushStartGenericElement(
+          renderState.headChunks,
           props,
           "head"
         );
@@ -1781,42 +1744,24 @@ function pushStartInstance(
           "head"
         );
       return JSCompiler_inline_result$jscomp$9;
-    case "body":
-      if (2 > formatContext.insertionMode) {
-        var preamble$jscomp$0 = preambleState || renderState.preamble;
-        if (preamble$jscomp$0.bodyChunks)
-          throw Error("The `<body>` tag may only be rendered once.");
-        preamble$jscomp$0.bodyChunks = [];
-        var JSCompiler_inline_result$jscomp$10 = pushStartSingletonElement(
-          preamble$jscomp$0.bodyChunks,
-          props,
-          "body"
-        );
-      } else
-        JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
-          target$jscomp$0,
-          props,
-          "body"
-        );
-      return JSCompiler_inline_result$jscomp$10;
     case "html":
-      if (0 === formatContext.insertionMode) {
-        var preamble$jscomp$1 = preambleState || renderState.preamble;
-        if (preamble$jscomp$1.htmlChunks)
-          throw Error("The `<html>` tag may only be rendered once.");
-        preamble$jscomp$1.htmlChunks = [""];
-        var JSCompiler_inline_result$jscomp$11 = pushStartSingletonElement(
-          preamble$jscomp$1.htmlChunks,
+      if (
+        0 === formatContext.insertionMode &&
+        null === renderState.htmlChunks
+      ) {
+        renderState.htmlChunks = [""];
+        var JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
+          renderState.htmlChunks,
           props,
           "html"
         );
       } else
-        JSCompiler_inline_result$jscomp$11 = pushStartGenericElement(
+        JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
           target$jscomp$0,
           props,
           "html"
         );
-      return JSCompiler_inline_result$jscomp$11;
+      return JSCompiler_inline_result$jscomp$10;
     default:
       if (-1 !== type.indexOf("-")) {
         target$jscomp$0.push(startChunkForTag(type));
@@ -1877,21 +1822,6 @@ function endChunkForTag(tag) {
   void 0 === chunk && ((chunk = "</" + tag + ">"), endTagCache.set(tag, chunk));
   return chunk;
 }
-function hoistPreambleState(renderState, preambleState) {
-  renderState = renderState.preamble;
-  null === renderState.htmlChunks &&
-    preambleState.htmlChunks &&
-    ((renderState.htmlChunks = preambleState.htmlChunks),
-    (preambleState.contribution |= 1));
-  null === renderState.headChunks &&
-    preambleState.headChunks &&
-    ((renderState.headChunks = preambleState.headChunks),
-    (preambleState.contribution |= 4));
-  null === renderState.bodyChunks &&
-    preambleState.bodyChunks &&
-    ((renderState.bodyChunks = preambleState.bodyChunks),
-    (preambleState.contribution |= 2));
-}
 function writeBootstrap(destination, renderState) {
   renderState = renderState.bootstrapChunks;
   for (var i = 0; i < renderState.length - 1; i++)
@@ -1911,18 +1841,10 @@ function writeStartPendingSuspenseBoundary(destination, renderState, id) {
   destination.push(renderState);
   return destination.push('"></template>');
 }
-function writePreambleContribution(destination, preambleState) {
-  preambleState = preambleState.contribution;
-  0 !== preambleState &&
-    (destination.push("\x3c!--"),
-    destination.push("" + preambleState),
-    destination.push("--\x3e"));
-}
 function writeStartSegment(destination, renderState, formatContext, id) {
   switch (formatContext.insertionMode) {
     case 0:
     case 1:
-    case 3:
     case 2:
       return (
         destination.push('<div hidden id="'),
@@ -1931,7 +1853,7 @@ function writeStartSegment(destination, renderState, formatContext, id) {
         destination.push(renderState),
         destination.push('">')
       );
-    case 4:
+    case 3:
       return (
         destination.push('<svg aria-hidden="true" style="display:none" id="'),
         destination.push(renderState.segmentPrefix),
@@ -1939,7 +1861,7 @@ function writeStartSegment(destination, renderState, formatContext, id) {
         destination.push(renderState),
         destination.push('">')
       );
-    case 5:
+    case 4:
       return (
         destination.push('<math aria-hidden="true" style="display:none" id="'),
         destination.push(renderState.segmentPrefix),
@@ -1947,7 +1869,7 @@ function writeStartSegment(destination, renderState, formatContext, id) {
         destination.push(renderState),
         destination.push('">')
       );
-    case 6:
+    case 5:
       return (
         destination.push('<table hidden id="'),
         destination.push(renderState.segmentPrefix),
@@ -1955,7 +1877,7 @@ function writeStartSegment(destination, renderState, formatContext, id) {
         destination.push(renderState),
         destination.push('">')
       );
-    case 7:
+    case 6:
       return (
         destination.push('<table hidden><tbody id="'),
         destination.push(renderState.segmentPrefix),
@@ -1963,7 +1885,7 @@ function writeStartSegment(destination, renderState, formatContext, id) {
         destination.push(renderState),
         destination.push('">')
       );
-    case 8:
+    case 7:
       return (
         destination.push('<table hidden><tr id="'),
         destination.push(renderState.segmentPrefix),
@@ -1971,7 +1893,7 @@ function writeStartSegment(destination, renderState, formatContext, id) {
         destination.push(renderState),
         destination.push('">')
       );
-    case 9:
+    case 8:
       return (
         destination.push('<table hidden><colgroup id="'),
         destination.push(renderState.segmentPrefix),
@@ -1987,20 +1909,19 @@ function writeEndSegment(destination, formatContext) {
   switch (formatContext.insertionMode) {
     case 0:
     case 1:
-    case 3:
     case 2:
       return destination.push("</div>");
-    case 4:
+    case 3:
       return destination.push("</svg>");
-    case 5:
+    case 4:
       return destination.push("</math>");
-    case 6:
+    case 5:
       return destination.push("</table>");
-    case 7:
+    case 6:
       return destination.push("</tbody></table>");
-    case 8:
+    case 7:
       return destination.push("</tr></table>");
-    case 9:
+    case 8:
       return destination.push("</colgroup></table>");
     default:
       throw Error("Unknown insertion mode. This is a bug in React.");
@@ -2767,17 +2688,16 @@ function createRenderState(resumableState, generateStaticMarkup) {
       "\x3c/script>"
     );
   bootstrapScriptContent = idPrefix + "P:";
-  var JSCompiler_object_inline_segmentPrefix_1704 = idPrefix + "S:";
+  var JSCompiler_object_inline_segmentPrefix_1641 = idPrefix + "S:";
   idPrefix += "B:";
-  var JSCompiler_object_inline_preamble_1707 = createPreambleState(),
-    JSCompiler_object_inline_preconnects_1717 = new Set(),
-    JSCompiler_object_inline_fontPreloads_1718 = new Set(),
-    JSCompiler_object_inline_highImagePreloads_1719 = new Set(),
-    JSCompiler_object_inline_styles_1720 = new Map(),
-    JSCompiler_object_inline_bootstrapScripts_1721 = new Set(),
-    JSCompiler_object_inline_scripts_1722 = new Set(),
-    JSCompiler_object_inline_bulkPreloads_1723 = new Set(),
-    JSCompiler_object_inline_preloads_1724 = {
+  var JSCompiler_object_inline_preconnects_1655 = new Set(),
+    JSCompiler_object_inline_fontPreloads_1656 = new Set(),
+    JSCompiler_object_inline_highImagePreloads_1657 = new Set(),
+    JSCompiler_object_inline_styles_1658 = new Map(),
+    JSCompiler_object_inline_bootstrapScripts_1659 = new Set(),
+    JSCompiler_object_inline_scripts_1660 = new Set(),
+    JSCompiler_object_inline_bulkPreloads_1661 = new Set(),
+    JSCompiler_object_inline_preloads_1662 = {
       images: new Map(),
       stylesheets: new Map(),
       scripts: new Map(),
@@ -2814,7 +2734,7 @@ function createRenderState(resumableState, generateStaticMarkup) {
       scriptConfig.moduleScriptResources[href] = null;
       scriptConfig = [];
       pushLinkImpl(scriptConfig, props);
-      JSCompiler_object_inline_bootstrapScripts_1721.add(scriptConfig);
+      JSCompiler_object_inline_bootstrapScripts_1659.add(scriptConfig);
       bootstrapChunks.push('<script src="', escapeTextForBrowser(src));
       "string" === typeof integrity &&
         bootstrapChunks.push('" integrity="', escapeTextForBrowser(integrity));
@@ -2855,7 +2775,7 @@ function createRenderState(resumableState, generateStaticMarkup) {
         (props.moduleScriptResources[scriptConfig] = null),
         (props = []),
         pushLinkImpl(props, integrity),
-        JSCompiler_object_inline_bootstrapScripts_1721.add(props),
+        JSCompiler_object_inline_bootstrapScripts_1659.add(props),
         bootstrapChunks.push(
           '<script type="module" src="',
           escapeTextForBrowser(i)
@@ -2870,10 +2790,11 @@ function createRenderState(resumableState, generateStaticMarkup) {
         bootstrapChunks.push('" async="">\x3c/script>');
   return {
     placeholderPrefix: bootstrapScriptContent,
-    segmentPrefix: JSCompiler_object_inline_segmentPrefix_1704,
+    segmentPrefix: JSCompiler_object_inline_segmentPrefix_1641,
     boundaryPrefix: idPrefix,
     startInlineScript: "<script>",
-    preamble: JSCompiler_object_inline_preamble_1707,
+    htmlChunks: null,
+    headChunks: null,
     externalRuntimeScript: null,
     bootstrapChunks: bootstrapChunks,
     importMapChunks: [],
@@ -2889,14 +2810,14 @@ function createRenderState(resumableState, generateStaticMarkup) {
     charsetChunks: [],
     viewportChunks: [],
     hoistableChunks: [],
-    preconnects: JSCompiler_object_inline_preconnects_1717,
-    fontPreloads: JSCompiler_object_inline_fontPreloads_1718,
-    highImagePreloads: JSCompiler_object_inline_highImagePreloads_1719,
-    styles: JSCompiler_object_inline_styles_1720,
-    bootstrapScripts: JSCompiler_object_inline_bootstrapScripts_1721,
-    scripts: JSCompiler_object_inline_scripts_1722,
-    bulkPreloads: JSCompiler_object_inline_bulkPreloads_1723,
-    preloads: JSCompiler_object_inline_preloads_1724,
+    preconnects: JSCompiler_object_inline_preconnects_1655,
+    fontPreloads: JSCompiler_object_inline_fontPreloads_1656,
+    highImagePreloads: JSCompiler_object_inline_highImagePreloads_1657,
+    styles: JSCompiler_object_inline_styles_1658,
+    bootstrapScripts: JSCompiler_object_inline_bootstrapScripts_1659,
+    scripts: JSCompiler_object_inline_scripts_1660,
+    bulkPreloads: JSCompiler_object_inline_bulkPreloads_1661,
+    preloads: JSCompiler_object_inline_preloads_1662,
     stylesToHoist: !1,
     generateStaticMarkup: generateStaticMarkup
   };
@@ -3370,12 +3291,6 @@ function readPreviousThenableFromState() {
       index
     );
 }
-function unsupportedRefresh() {
-  throw Error("Cache cannot be refreshed during server rendering.");
-}
-function unsupportedStartGesture() {
-  throw Error("startGesture cannot be called during server rendering.");
-}
 function noop$1() {}
 var HooksDispatcher = {
     readContext: function (context) {
@@ -3462,20 +3377,8 @@ var HooksDispatcher = {
       resolveCurrentlyRenderingComponent();
       return sharedNotPendingObject;
     },
-    useMemoCache: function (size) {
-      for (var data = Array(size), i = 0; i < size; i++)
-        data[i] = REACT_MEMO_CACHE_SENTINEL;
-      return data;
-    },
-    useCacheRefresh: function () {
-      return unsupportedRefresh;
-    },
     useEffectEvent: function () {
       return throwOnUseEffectEventCall;
-    },
-    useSwipeTransition: function (previous, current) {
-      resolveCurrentlyRenderingComponent();
-      return [current, unsupportedStartGesture];
     }
   },
   currentResumableState = null,
@@ -3724,7 +3627,7 @@ function RequestInstance(
   this.status = 10;
   this.fatalError = null;
   this.pendingRootTasks = this.allPendingTasks = this.nextSegmentId = 0;
-  this.completedPreambleSegments = this.completedRootSegment = null;
+  this.completedRootSegment = null;
   this.abortableTasks = abortSet;
   this.pingedTasks = [];
   this.clientRenderedBoundaries = [];
@@ -3783,7 +3686,6 @@ function createRequest(
     null,
     renderState,
     null,
-    null,
     resumableState.abortableTasks,
     null,
     rootFormatContext,
@@ -3803,12 +3705,7 @@ function pingTask(request, task) {
     ((request.flushScheduled = null !== request.destination),
     performWork(request));
 }
-function createSuspenseBoundary(
-  request,
-  fallbackAbortableTasks,
-  contentPreamble,
-  fallbackPreamble
-) {
+function createSuspenseBoundary(request, fallbackAbortableTasks) {
   return {
     status: 0,
     rootSegmentID: -1,
@@ -3820,8 +3717,6 @@ function createSuspenseBoundary(
     errorDigest: null,
     contentState: createHoistableState(),
     fallbackState: createHoistableState(),
-    contentPreamble: contentPreamble,
-    fallbackPreamble: fallbackPreamble,
     trackedContentKeyPath: null,
     trackedFallbackNode: null
   };
@@ -3833,7 +3728,6 @@ function createRenderTask(
   childIndex,
   blockedBoundary,
   blockedSegment,
-  blockedPreamble,
   hoistableState,
   abortSet,
   keyPath,
@@ -3856,7 +3750,6 @@ function createRenderTask(
     },
     blockedBoundary: blockedBoundary,
     blockedSegment: blockedSegment,
-    blockedPreamble: blockedPreamble,
     hoistableState: hoistableState,
     abortSet: abortSet,
     keyPath: keyPath,
@@ -3900,7 +3793,6 @@ function createReplayTask(
     },
     blockedBoundary: blockedBoundary,
     blockedSegment: null,
-    blockedPreamble: null,
     hoistableState: hoistableState,
     abortSet: abortSet,
     keyPath: keyPath,
@@ -3924,12 +3816,11 @@ function createPendingSegment(
 ) {
   return {
     status: 0,
-    parentFlushed: !1,
     id: -1,
     index: index,
+    parentFlushed: !1,
     chunks: [],
     children: [],
-    preambleChildren: [],
     parentFormatContext: parentFormatContext,
     boundary: boundary,
     lastPushedText: lastPushedText,
@@ -4161,13 +4052,12 @@ function renderElement(request, task, keyPath, type, props, ref) {
         (task.formatContext = defaultProps),
         (task.keyPath = initialState);
     else {
-      ref = pushStartInstance(
+      initialState = pushStartInstance(
         newProps.chunks,
         type,
         props,
         request.resumableState,
         request.renderState,
-        task.blockedPreamble,
         task.hoistableState,
         task.formatContext,
         newProps.lastPushedText,
@@ -4175,42 +4065,12 @@ function renderElement(request, task, keyPath, type, props, ref) {
       );
       newProps.lastPushedText = !1;
       defaultProps = task.formatContext;
-      initialState = task.keyPath;
+      ref = task.keyPath;
+      task.formatContext = getChildFormatContext(defaultProps, type, props);
       task.keyPath = keyPath;
-      3 ===
-      (task.formatContext = getChildFormatContext(defaultProps, type, props))
-        .insertionMode
-        ? ((keyPath = createPendingSegment(
-            request,
-            0,
-            null,
-            task.formatContext,
-            !1,
-            !1
-          )),
-          newProps.preambleChildren.push(keyPath),
-          (keyPath = createRenderTask(
-            request,
-            null,
-            ref,
-            -1,
-            task.blockedBoundary,
-            keyPath,
-            task.blockedPreamble,
-            task.hoistableState,
-            request.abortableTasks,
-            task.keyPath,
-            task.formatContext,
-            task.context,
-            task.treeContext,
-            task.componentStack,
-            task.isFallback
-          )),
-          pushComponentStack(keyPath),
-          request.pingedTasks.push(keyPath))
-        : renderNode(request, task, ref, -1);
+      renderNode(request, task, initialState, -1);
       task.formatContext = defaultProps;
-      task.keyPath = initialState;
+      task.keyPath = ref;
       a: {
         task = newProps.chunks;
         request = request.resumableState;
@@ -4245,9 +4105,6 @@ function renderElement(request, task, keyPath, type, props, ref) {
               request.hasHtml = !0;
               break a;
             }
-            break;
-          case "head":
-            if (1 >= defaultProps.insertionMode) break a;
         }
         task.push(endChunkForTag(type));
       }
@@ -4297,34 +4154,25 @@ function renderElement(request, task, keyPath, type, props, ref) {
           }
         } else {
           type = task.keyPath;
-          var parentBoundary = task.blockedBoundary;
-          ref = task.blockedPreamble;
-          var parentHoistableState = task.hoistableState;
-          propName$33 = task.blockedSegment;
-          propName = props.fallback;
+          var parentBoundary = task.blockedBoundary,
+            parentHoistableState = task.hoistableState;
+          ref = task.blockedSegment;
+          propName$33 = props.fallback;
           props = props.children;
           var fallbackAbortSet = new Set();
-          var newBoundary =
-            2 > task.formatContext.insertionMode
-              ? createSuspenseBoundary(
-                  request,
-                  fallbackAbortSet,
-                  createPreambleState(),
-                  createPreambleState()
-                )
-              : createSuspenseBoundary(request, fallbackAbortSet, null, null);
+          propName = createSuspenseBoundary(request, fallbackAbortSet);
           null !== request.trackedPostpones &&
-            (newBoundary.trackedContentKeyPath = keyPath);
+            (propName.trackedContentKeyPath = keyPath);
           var boundarySegment = createPendingSegment(
             request,
-            propName$33.chunks.length,
-            newBoundary,
+            ref.chunks.length,
+            propName,
             task.formatContext,
             !1,
             !1
           );
-          propName$33.children.push(boundarySegment);
-          propName$33.lastPushedText = !1;
+          ref.children.push(boundarySegment);
+          ref.lastPushedText = !1;
           var contentRootSegment = createPendingSegment(
             request,
             0,
@@ -4338,13 +4186,12 @@ function renderElement(request, task, keyPath, type, props, ref) {
             newProps = [keyPath[0], "Suspense Fallback", keyPath[2]];
             defaultProps = [newProps[1], newProps[2], [], null];
             request.trackedPostpones.workingMap.set(newProps, defaultProps);
-            newBoundary.trackedFallbackNode = defaultProps;
+            propName.trackedFallbackNode = defaultProps;
             task.blockedSegment = boundarySegment;
-            task.blockedPreamble = newBoundary.fallbackPreamble;
             task.keyPath = newProps;
             boundarySegment.status = 6;
             try {
-              renderNode(request, task, propName, -1),
+              renderNode(request, task, propName$33, -1),
                 pushSegmentFinale(
                   boundarySegment.chunks,
                   request.renderState,
@@ -4358,19 +4205,16 @@ function renderElement(request, task, keyPath, type, props, ref) {
                 thrownValue)
               );
             } finally {
-              (task.blockedSegment = propName$33),
-                (task.blockedPreamble = ref),
-                (task.keyPath = type);
+              (task.blockedSegment = ref), (task.keyPath = type);
             }
             task = createRenderTask(
               request,
               null,
               props,
               -1,
-              newBoundary,
+              propName,
               contentRootSegment,
-              newBoundary.contentPreamble,
-              newBoundary.contentState,
+              propName.contentState,
               task.abortSet,
               keyPath,
               task.formatContext,
@@ -4382,9 +4226,8 @@ function renderElement(request, task, keyPath, type, props, ref) {
             pushComponentStack(task);
             request.pingedTasks.push(task);
           } else {
-            task.blockedBoundary = newBoundary;
-            task.blockedPreamble = newBoundary.contentPreamble;
-            task.hoistableState = newBoundary.contentState;
+            task.blockedBoundary = propName;
+            task.hoistableState = propName.contentState;
             task.blockedSegment = contentRootSegment;
             task.keyPath = keyPath;
             contentRootSegment.status = 6;
@@ -4398,17 +4241,14 @@ function renderElement(request, task, keyPath, type, props, ref) {
                   contentRootSegment.textEmbedded
                 ),
                 (contentRootSegment.status = 1),
-                queueCompletedSegment(newBoundary, contentRootSegment),
-                0 === newBoundary.pendingTasks && 0 === newBoundary.status)
+                queueCompletedSegment(propName, contentRootSegment),
+                0 === propName.pendingTasks && 0 === propName.status)
               ) {
-                newBoundary.status = 1;
-                0 === request.pendingRootTasks &&
-                  task.blockedPreamble &&
-                  preparePreamble(request);
+                propName.status = 1;
                 break a;
               }
             } catch (thrownValue$28) {
-              (newBoundary.status = 4),
+              (propName.status = 4),
                 12 === request.status
                   ? ((contentRootSegment.status = 3),
                     (newProps = request.fatalError))
@@ -4425,24 +4265,22 @@ function renderElement(request, task, keyPath, type, props, ref) {
                       newProps,
                       defaultProps
                     )),
-                (newBoundary.errorDigest = initialState),
-                untrackBoundary(request, newBoundary);
+                (propName.errorDigest = initialState),
+                untrackBoundary(request, propName);
             } finally {
               (task.blockedBoundary = parentBoundary),
-                (task.blockedPreamble = ref),
                 (task.hoistableState = parentHoistableState),
-                (task.blockedSegment = propName$33),
+                (task.blockedSegment = ref),
                 (task.keyPath = type);
             }
             task = createRenderTask(
               request,
               null,
-              propName,
+              propName$33,
               -1,
               parentBoundary,
               boundarySegment,
-              newBoundary.fallbackPreamble,
-              newBoundary.fallbackState,
+              propName.fallbackState,
               fallbackAbortSet,
               [keyPath[0], "Suspense Fallback", keyPath[2]],
               task.formatContext,
@@ -4461,9 +4299,9 @@ function renderElement(request, task, keyPath, type, props, ref) {
       switch (type.$$typeof) {
         case REACT_FORWARD_REF_TYPE:
           if ("ref" in props)
-            for (newBoundary in ((newProps = {}), props))
-              "ref" !== newBoundary &&
-                (newProps[newBoundary] = props[newBoundary]);
+            for (boundarySegment in ((newProps = {}), props))
+              "ref" !== boundarySegment &&
+                (newProps[boundarySegment] = props[boundarySegment]);
           else newProps = props;
           type = renderWithHooks(
             request,
@@ -4665,27 +4503,17 @@ function retryNode(request, task) {
                         previousReplaySet = task.replay,
                         parentBoundary = task.blockedBoundary,
                         parentHoistableState = task.hoistableState,
-                        content = props.children,
-                        fallback = props.fallback,
-                        fallbackAbortSet = new Set();
-                      props =
-                        2 > task.formatContext.insertionMode
-                          ? createSuspenseBoundary(
-                              request,
-                              fallbackAbortSet,
-                              createPreambleState(),
-                              createPreambleState()
-                            )
-                          : createSuspenseBoundary(
-                              request,
-                              fallbackAbortSet,
-                              null,
-                              null
-                            );
-                      props.parentFlushed = !0;
-                      props.rootSegmentID = ref;
-                      task.blockedBoundary = props;
-                      task.hoistableState = props.contentState;
+                        content = props.children;
+                      props = props.fallback;
+                      var fallbackAbortSet = new Set(),
+                        resumedBoundary = createSuspenseBoundary(
+                          request,
+                          fallbackAbortSet
+                        );
+                      resumedBoundary.parentFlushed = !0;
+                      resumedBoundary.rootSegmentID = ref;
+                      task.blockedBoundary = resumedBoundary;
+                      task.hoistableState = resumedBoundary.contentState;
                       task.keyPath = key;
                       task.replay = {
                         nodes: replay,
@@ -4702,13 +4530,16 @@ function retryNode(request, task) {
                             "Couldn't find all resumable slots by key/index during replaying. The tree doesn't match so React will fallback to client rendering."
                           );
                         task.replay.pendingTasks--;
-                        if (0 === props.pendingTasks && 0 === props.status) {
-                          props.status = 1;
-                          request.completedBoundaries.push(props);
+                        if (
+                          0 === resumedBoundary.pendingTasks &&
+                          0 === resumedBoundary.status
+                        ) {
+                          resumedBoundary.status = 1;
+                          request.completedBoundaries.push(resumedBoundary);
                           break b;
                         }
                       } catch (error) {
-                        (props.status = 4),
+                        (resumedBoundary.status = 4),
                           (childNodes = getThrownInfo(task.componentStack)),
                           "object" === typeof error &&
                           null !== error &&
@@ -4720,9 +4551,11 @@ function retryNode(request, task) {
                                 error,
                                 childNodes
                               )),
-                          (props.errorDigest = type),
+                          (resumedBoundary.errorDigest = type),
                           task.replay.pendingTasks--,
-                          request.clientRenderedBoundaries.push(props);
+                          request.clientRenderedBoundaries.push(
+                            resumedBoundary
+                          );
                       } finally {
                         (task.blockedBoundary = parentBoundary),
                           (task.hoistableState = parentHoistableState),
@@ -4737,10 +4570,10 @@ function retryNode(request, task) {
                           slots: node$jscomp$0,
                           pendingTasks: 0
                         },
-                        fallback,
+                        props,
                         -1,
                         parentBoundary,
-                        props.fallbackState,
+                        resumedBoundary.fallbackState,
                         fallbackAbortSet,
                         [key[0], "Suspense Fallback", key[2]],
                         task.formatContext,
@@ -5078,7 +4911,6 @@ function spawnNewSuspendedRenderTask(request, task, thenableState) {
     task.childIndex,
     task.blockedBoundary,
     newSegment,
-    task.blockedPreamble,
     task.hoistableState,
     task.abortSet,
     task.keyPath,
@@ -5264,12 +5096,7 @@ function abortRemainingReplayNodes(
       node = node[5];
       var request = request$jscomp$0,
         errorDigest = errorDigest$jscomp$0,
-        resumedBoundary = createSuspenseBoundary(
-          request,
-          new Set(),
-          null,
-          null
-        );
+        resumedBoundary = createSuspenseBoundary(request, new Set());
       resumedBoundary.parentFlushed = !0;
       resumedBoundary.rootSegmentID = node;
       resumedBoundary.status = 4;
@@ -5459,7 +5286,6 @@ function safelyEmitEarlyPreloads(request, shellComplete) {
 }
 function completeShell(request) {
   null === request.trackedPostpones && safelyEmitEarlyPreloads(request, !0);
-  null === request.trackedPostpones && preparePreamble(request);
   request.onShellError = noop;
   request = request.onShellReady;
   request();
@@ -5472,7 +5298,6 @@ function completeAll(request) {
       : null === request.completedRootSegment ||
           5 !== request.completedRootSegment.status
   );
-  preparePreamble(request);
   request = request.onAllReady;
   request();
 }
@@ -5513,11 +5338,7 @@ function finishedTask(request, boundary, segment) {
               request.completedBoundaries.push(boundary),
             1 === boundary.status &&
               (boundary.fallbackAbortableTasks.forEach(abortTaskSoft, request),
-              boundary.fallbackAbortableTasks.clear(),
-              0 === request.pendingRootTasks &&
-                null === request.trackedPostpones &&
-                null !== boundary.contentPreamble &&
-                preparePreamble(request)))
+              boundary.fallbackAbortableTasks.clear()))
           : null !== segment &&
             segment.parentFlushed &&
             1 === segment.status &&
@@ -5714,11 +5535,7 @@ function performWork(request$jscomp$1) {
                         (boundary.errorDigest = request$jscomp$0),
                         untrackBoundary(request, boundary),
                         boundary.parentFlushed &&
-                          request.clientRenderedBoundaries.push(boundary),
-                        0 === request.pendingRootTasks &&
-                          null === request.trackedPostpones &&
-                          null !== boundary.contentPreamble &&
-                          preparePreamble(request)));
+                          request.clientRenderedBoundaries.push(boundary)));
                   request.allPendingTasks--;
                   0 === request.allPendingTasks && completeAll(request);
                 }
@@ -5742,85 +5559,6 @@ function performWork(request$jscomp$1) {
     }
   }
 }
-function preparePreambleFromSubtree(
-  request,
-  segment,
-  collectedPreambleSegments
-) {
-  segment.preambleChildren.length &&
-    collectedPreambleSegments.push(segment.preambleChildren);
-  for (var pendingPreambles = !1, i = 0; i < segment.children.length; i++)
-    pendingPreambles =
-      preparePreambleFromSegment(
-        request,
-        segment.children[i],
-        collectedPreambleSegments
-      ) || pendingPreambles;
-  return pendingPreambles;
-}
-function preparePreambleFromSegment(
-  request,
-  segment,
-  collectedPreambleSegments
-) {
-  var boundary = segment.boundary;
-  if (null === boundary)
-    return preparePreambleFromSubtree(
-      request,
-      segment,
-      collectedPreambleSegments
-    );
-  var preamble = boundary.contentPreamble,
-    fallbackPreamble = boundary.fallbackPreamble;
-  if (null === preamble || null === fallbackPreamble) return !1;
-  switch (boundary.status) {
-    case 1:
-      hoistPreambleState(request.renderState, preamble);
-      segment = boundary.completedSegments[0];
-      if (!segment)
-        throw Error(
-          "A previously unvisited boundary must have exactly one root segment. This is a bug in React."
-        );
-      return preparePreambleFromSubtree(
-        request,
-        segment,
-        collectedPreambleSegments
-      );
-    case 5:
-      if (null !== request.trackedPostpones) return !0;
-    case 4:
-      if (1 === segment.status)
-        return (
-          hoistPreambleState(request.renderState, fallbackPreamble),
-          preparePreambleFromSubtree(
-            request,
-            segment,
-            collectedPreambleSegments
-          )
-        );
-    default:
-      return !0;
-  }
-}
-function preparePreamble(request) {
-  if (
-    request.completedRootSegment &&
-    null === request.completedPreambleSegments
-  ) {
-    var collectedPreambleSegments = [],
-      hasPendingPreambles = preparePreambleFromSegment(
-        request,
-        request.completedRootSegment,
-        collectedPreambleSegments
-      ),
-      preamble = request.renderState.preamble;
-    if (
-      !1 === hasPendingPreambles ||
-      (preamble.headChunks && preamble.bodyChunks)
-    )
-      request.completedPreambleSegments = collectedPreambleSegments;
-  }
-}
 function flushSubtree(request, destination, segment, hoistableState) {
   segment.parentFlushed = !0;
   switch (segment.status) {
@@ -5864,26 +5602,24 @@ function flushSegment(request, destination, segment, hoistableState) {
   if (null === boundary)
     return flushSubtree(request, destination, segment, hoistableState);
   boundary.parentFlushed = !0;
-  if (4 === boundary.status) {
-    if (!request.renderState.generateStaticMarkup) {
-      var errorDigest = boundary.errorDigest;
-      destination.push("\x3c!--$!--\x3e");
-      destination.push("<template");
-      errorDigest &&
-        (destination.push(' data-dgst="'),
-        (errorDigest = escapeTextForBrowser(errorDigest)),
-        destination.push(errorDigest),
-        destination.push('"'));
-      destination.push("></template>");
-    }
-    flushSubtree(request, destination, segment, hoistableState);
-    request.renderState.generateStaticMarkup
-      ? (destination = !0)
-      : ((request = boundary.fallbackPreamble) &&
-          writePreambleContribution(destination, request),
-        (destination = destination.push("\x3c!--/$--\x3e")));
-    return destination;
-  }
+  if (4 === boundary.status)
+    return (
+      request.renderState.generateStaticMarkup ||
+        ((boundary = boundary.errorDigest),
+        destination.push("\x3c!--$!--\x3e"),
+        destination.push("<template"),
+        boundary &&
+          (destination.push(' data-dgst="'),
+          (boundary = escapeTextForBrowser(boundary)),
+          destination.push(boundary),
+          destination.push('"')),
+        destination.push("></template>")),
+      flushSubtree(request, destination, segment, hoistableState),
+      (request = request.renderState.generateStaticMarkup
+        ? !0
+        : destination.push("\x3c!--/$--\x3e")),
+      request
+    );
   if (1 !== boundary.status)
     return (
       0 === boundary.status &&
@@ -5929,12 +5665,10 @@ function flushSegment(request, destination, segment, hoistableState) {
       "A previously unvisited boundary must have exactly one root segment. This is a bug in React."
     );
   flushSegment(request, destination, segment[0], hoistableState);
-  request.renderState.generateStaticMarkup
-    ? (destination = !0)
-    : ((request = boundary.contentPreamble) &&
-        writePreambleContribution(destination, request),
-      (destination = destination.push("\x3c!--/$--\x3e")));
-  return destination;
+  request = request.renderState.generateStaticMarkup
+    ? !0
+    : destination.push("\x3c!--/$--\x3e");
+  return request;
 }
 function flushSegmentContainer(request, destination, segment, hoistableState) {
   writeStartSegment(
@@ -6060,8 +5794,6 @@ function flushCompletedQueues(request, destination) {
         completedRootSegment = request.completedRootSegment;
       if (null !== completedRootSegment) {
         if (5 === completedRootSegment.status) return;
-        var completedPreambleSegments = request.completedPreambleSegments;
-        if (null === completedPreambleSegments) return;
         var renderState = request.renderState;
         if (
           (0 !== request.allPendingTasks ||
@@ -6076,9 +5808,8 @@ function flushCompletedQueues(request, destination) {
             ((resumableState.scriptResources[src] = null),
             renderState.scripts.add(chunks));
         }
-        var preamble = renderState.preamble,
-          htmlChunks = preamble.htmlChunks,
-          headChunks = preamble.headChunks,
+        var htmlChunks = renderState.htmlChunks,
+          headChunks = renderState.headChunks,
           i$jscomp$0;
         if (htmlChunks) {
           for (i$jscomp$0 = 0; i$jscomp$0 < htmlChunks.length; i$jscomp$0++)
@@ -6121,38 +5852,11 @@ function flushCompletedQueues(request, destination) {
         var hoistableChunks = renderState.hoistableChunks;
         for (i$jscomp$0 = 0; i$jscomp$0 < hoistableChunks.length; i$jscomp$0++)
           destination.push(hoistableChunks[i$jscomp$0]);
-        for (
-          renderState = hoistableChunks.length = 0;
-          renderState < completedPreambleSegments.length;
-          renderState++
-        ) {
-          var segments = completedPreambleSegments[renderState];
-          for (
-            _renderState$external = 0;
-            _renderState$external < segments.length;
-            _renderState$external++
-          )
-            flushSegment(
-              request,
-              destination,
-              segments[_renderState$external],
-              null
-            );
-        }
-        var preamble$jscomp$0 = request.renderState.preamble,
-          headChunks$jscomp$0 = preamble$jscomp$0.headChunks;
-        if (preamble$jscomp$0.htmlChunks || headChunks$jscomp$0) {
+        hoistableChunks.length = 0;
+        if (htmlChunks && null === headChunks) {
           var chunk$jscomp$0 = endChunkForTag("head");
           destination.push(chunk$jscomp$0);
         }
-        var bodyChunks = preamble$jscomp$0.bodyChunks;
-        if (bodyChunks)
-          for (
-            completedPreambleSegments = 0;
-            completedPreambleSegments < bodyChunks.length;
-            completedPreambleSegments++
-          )
-            destination.push(bodyChunks[completedPreambleSegments]);
         flushSegment(request, destination, completedRootSegment, null);
         request.completedRootSegment = null;
         writeBootstrap(destination, request.renderState);
@@ -6443,4 +6147,4 @@ exports.renderToString = function (children, options) {
     'The server used "renderToString" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to "renderToPipeableStream" which supports Suspense on the server'
   );
 };
-exports.version = "19.1.0-experimental-e670e72f-20250214";
+exports.version = "19.1.0-experimental-b3a95caf-20250113";
diff --git a/node_modules/react-dom/cjs/react-dom-server.browser.development.js b/node_modules/react-dom/cjs/react-dom-server.browser.development.js
index 6d7347a..530298b 100644
--- a/node_modules/react-dom/cjs/react-dom-server.browser.development.js
+++ b/node_modules/react-dom/cjs/react-dom-server.browser.development.js
@@ -879,7 +879,8 @@
         segmentPrefix: stringToPrecomputedChunk(idPrefix + "S:"),
         boundaryPrefix: stringToPrecomputedChunk(idPrefix + "B:"),
         startInlineScript: inlineScriptWithNonce,
-        preamble: createPreambleState(),
+        htmlChunks: null,
+        headChunks: null,
         externalRuntimeScript: externalRuntimeScript,
         bootstrapChunks: bootstrapChunks,
         importMapChunks: externalRuntimeConfig,
@@ -1050,14 +1051,6 @@
         moduleScriptResources: {}
       };
     }
-    function createPreambleState() {
-      return {
-        htmlChunks: null,
-        headChunks: null,
-        bodyChunks: null,
-        contribution: NoContribution
-      };
-    }
     function createFormatContext(insertionMode, selectedValue, tagScope) {
       return {
         insertionMode: insertionMode,
@@ -1128,26 +1121,16 @@
             null,
             parentContext.tagScope
           );
-        case "head":
-          if (parentContext.insertionMode < HTML_MODE)
-            return createFormatContext(
-              HTML_HEAD_MODE,
-              null,
-              parentContext.tagScope
-            );
-          break;
-        case "html":
-          if (parentContext.insertionMode === ROOT_HTML_MODE)
-            return createFormatContext(
-              HTML_HTML_MODE,
-              null,
-              parentContext.tagScope
-            );
       }
-      return parentContext.insertionMode >= HTML_TABLE_MODE ||
-        parentContext.insertionMode < HTML_MODE
+      return parentContext.insertionMode >= HTML_TABLE_MODE
         ? createFormatContext(HTML_MODE, null, parentContext.tagScope)
-        : parentContext;
+        : parentContext.insertionMode === ROOT_HTML_MODE
+          ? "html" === type
+            ? createFormatContext(HTML_HTML_MODE, null, parentContext.tagScope)
+            : createFormatContext(HTML_MODE, null, parentContext.tagScope)
+          : parentContext.insertionMode === HTML_HTML_MODE
+            ? createFormatContext(HTML_MODE, null, parentContext.tagScope)
+            : parentContext;
     }
     function pushTextInstance(target, text, renderState, textEmbedded) {
       if ("" === text) return textEmbedded;
@@ -1799,29 +1782,6 @@
       target.push(endChunkForTag("script"));
       return null;
     }
-    function pushStartSingletonElement(target, props, tag) {
-      target.push(startChunkForTag(tag));
-      var innerHTML = (tag = null),
-        propKey;
-      for (propKey in props)
-        if (hasOwnProperty.call(props, propKey)) {
-          var propValue = props[propKey];
-          if (null != propValue)
-            switch (propKey) {
-              case "children":
-                tag = propValue;
-                break;
-              case "dangerouslySetInnerHTML":
-                innerHTML = propValue;
-                break;
-              default:
-                pushAttribute(target, propKey, propValue);
-            }
-        }
-      target.push(endOfStartTag);
-      pushInnerHTML(target, innerHTML, tag);
-      return tag;
-    }
     function pushStartGenericElement(target, props, tag) {
       target.push(startChunkForTag(tag));
       var innerHTML = (tag = null),
@@ -1862,7 +1822,6 @@
       props,
       resumableState,
       renderState,
-      preambleState,
       hoistableState,
       formatContext,
       textEmbedded,
@@ -3031,13 +2990,13 @@
         case "missing-glyph":
           break;
         case "head":
-          if (formatContext.insertionMode < HTML_MODE) {
-            var preamble = preambleState || renderState.preamble;
-            if (preamble.headChunks)
-              throw Error("The `<head>` tag may only be rendered once.");
-            preamble.headChunks = [];
-            var JSCompiler_inline_result$jscomp$9 = pushStartSingletonElement(
-              preamble.headChunks,
+          if (
+            formatContext.insertionMode < HTML_MODE &&
+            null === renderState.headChunks
+          ) {
+            renderState.headChunks = [];
+            var JSCompiler_inline_result$jscomp$9 = pushStartGenericElement(
+              renderState.headChunks,
               props,
               "head"
             );
@@ -3048,42 +3007,24 @@
               "head"
             );
           return JSCompiler_inline_result$jscomp$9;
-        case "body":
-          if (formatContext.insertionMode < HTML_MODE) {
-            var preamble$jscomp$0 = preambleState || renderState.preamble;
-            if (preamble$jscomp$0.bodyChunks)
-              throw Error("The `<body>` tag may only be rendered once.");
-            preamble$jscomp$0.bodyChunks = [];
-            var JSCompiler_inline_result$jscomp$10 = pushStartSingletonElement(
-              preamble$jscomp$0.bodyChunks,
-              props,
-              "body"
-            );
-          } else
-            JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
-              target$jscomp$0,
-              props,
-              "body"
-            );
-          return JSCompiler_inline_result$jscomp$10;
         case "html":
-          if (formatContext.insertionMode === ROOT_HTML_MODE) {
-            var preamble$jscomp$1 = preambleState || renderState.preamble;
-            if (preamble$jscomp$1.htmlChunks)
-              throw Error("The `<html>` tag may only be rendered once.");
-            preamble$jscomp$1.htmlChunks = [doctypeChunk];
-            var JSCompiler_inline_result$jscomp$11 = pushStartSingletonElement(
-              preamble$jscomp$1.htmlChunks,
+          if (
+            formatContext.insertionMode === ROOT_HTML_MODE &&
+            null === renderState.htmlChunks
+          ) {
+            renderState.htmlChunks = [doctypeChunk];
+            var JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
+              renderState.htmlChunks,
               props,
               "html"
             );
           } else
-            JSCompiler_inline_result$jscomp$11 = pushStartGenericElement(
+            JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
               target$jscomp$0,
               props,
               "html"
             );
-          return JSCompiler_inline_result$jscomp$11;
+          return JSCompiler_inline_result$jscomp$10;
         default:
           if (-1 !== type.indexOf("-")) {
             target$jscomp$0.push(startChunkForTag(type));
@@ -3153,21 +3094,6 @@
         endTagCache.set(tag, chunk));
       return chunk;
     }
-    function hoistPreambleState(renderState, preambleState) {
-      renderState = renderState.preamble;
-      null === renderState.htmlChunks &&
-        preambleState.htmlChunks &&
-        ((renderState.htmlChunks = preambleState.htmlChunks),
-        (preambleState.contribution |= 1));
-      null === renderState.headChunks &&
-        preambleState.headChunks &&
-        ((renderState.headChunks = preambleState.headChunks),
-        (preambleState.contribution |= 4));
-      null === renderState.bodyChunks &&
-        preambleState.bodyChunks &&
-        ((renderState.bodyChunks = preambleState.bodyChunks),
-        (preambleState.contribution |= 2));
-    }
     function writeBootstrap(destination, renderState) {
       renderState = renderState.bootstrapChunks;
       for (var i = 0; i < renderState.length - 1; i++)
@@ -3188,18 +3114,10 @@
       writeChunk(destination, stringToChunk(id.toString(16)));
       return writeChunkAndReturn(destination, startPendingSuspenseBoundary2);
     }
-    function writePreambleContribution(destination, preambleState) {
-      preambleState = preambleState.contribution;
-      preambleState !== NoContribution &&
-        (writeChunk(destination, boundaryPreambleContributionChunkStart),
-        writeChunk(destination, stringToChunk("" + preambleState)),
-        writeChunk(destination, boundaryPreambleContributionChunkEnd));
-    }
     function writeStartSegment(destination, renderState, formatContext, id) {
       switch (formatContext.insertionMode) {
         case ROOT_HTML_MODE:
         case HTML_HTML_MODE:
-        case HTML_HEAD_MODE:
         case HTML_MODE:
           return (
             writeChunk(destination, startSegmentHTML),
@@ -3257,7 +3175,6 @@
       switch (formatContext.insertionMode) {
         case ROOT_HTML_MODE:
         case HTML_HTML_MODE:
-        case HTML_HEAD_MODE:
         case HTML_MODE:
           return writeChunkAndReturn(destination, endSegmentHTML);
         case SVG_MODE:
@@ -4262,12 +4179,6 @@
           index
         );
     }
-    function unsupportedRefresh() {
-      throw Error("Cache cannot be refreshed during server rendering.");
-    }
-    function unsupportedStartGesture() {
-      throw Error("startGesture cannot be called during server rendering.");
-    }
     function noop$1() {}
     function disabledLog() {}
     function disableLogs() {
@@ -4606,7 +4517,7 @@
       this.status = 10;
       this.fatalError = null;
       this.pendingRootTasks = this.allPendingTasks = this.nextSegmentId = 0;
-      this.completedPreambleSegments = this.completedRootSegment = null;
+      this.completedRootSegment = null;
       this.abortableTasks = abortSet;
       this.pingedTasks = [];
       this.clientRenderedBoundaries = [];
@@ -4666,7 +4577,6 @@
         null,
         renderState,
         null,
-        null,
         resumableState.abortableTasks,
         null,
         rootFormatContext,
@@ -4761,7 +4671,6 @@
             null,
             onAllReady,
             null,
-            null,
             renderState.abortableTasks,
             null,
             postponedState.rootFormatContext,
@@ -4843,12 +4752,7 @@
               return performWork(request);
             }));
     }
-    function createSuspenseBoundary(
-      request,
-      fallbackAbortableTasks,
-      contentPreamble,
-      fallbackPreamble
-    ) {
+    function createSuspenseBoundary(request, fallbackAbortableTasks) {
       return {
         status: PENDING,
         rootSegmentID: -1,
@@ -4860,8 +4764,6 @@
         errorDigest: null,
         contentState: createHoistableState(),
         fallbackState: createHoistableState(),
-        contentPreamble: contentPreamble,
-        fallbackPreamble: fallbackPreamble,
         trackedContentKeyPath: null,
         trackedFallbackNode: null,
         errorMessage: null,
@@ -4876,7 +4778,6 @@
       childIndex,
       blockedBoundary,
       blockedSegment,
-      blockedPreamble,
       hoistableState,
       abortSet,
       keyPath,
@@ -4901,7 +4802,6 @@
         },
         blockedBoundary: blockedBoundary,
         blockedSegment: blockedSegment,
-        blockedPreamble: blockedPreamble,
         hoistableState: hoistableState,
         abortSet: abortSet,
         keyPath: keyPath,
@@ -4948,7 +4848,6 @@
         },
         blockedBoundary: blockedBoundary,
         blockedSegment: null,
-        blockedPreamble: null,
         hoistableState: hoistableState,
         abortSet: abortSet,
         keyPath: keyPath,
@@ -4973,12 +4872,11 @@
     ) {
       return {
         status: PENDING,
-        parentFlushed: !1,
         id: -1,
         index: index,
+        parentFlushed: !1,
         chunks: [],
         children: [],
-        preambleChildren: [],
         parentFormatContext: parentFormatContext,
         boundary: boundary,
         lastPushedText: lastPushedText,
@@ -5682,7 +5580,6 @@
             props,
             request.resumableState,
             request.renderState,
-            task.blockedPreamble,
             task.hoistableState,
             task.formatContext,
             segment.lastPushedText,
@@ -5691,45 +5588,9 @@
           segment.lastPushedText = !1;
           var _prevContext = task.formatContext,
             _prevKeyPath2 = task.keyPath;
+          task.formatContext = getChildFormatContext(_prevContext, type, props);
           task.keyPath = keyPath;
-          if (
-            (task.formatContext = getChildFormatContext(
-              _prevContext,
-              type,
-              props
-            )).insertionMode === HTML_HEAD_MODE
-          ) {
-            var preambleSegment = createPendingSegment(
-              request,
-              0,
-              null,
-              task.formatContext,
-              !1,
-              !1
-            );
-            segment.preambleChildren.push(preambleSegment);
-            var preambleTask = createRenderTask(
-              request,
-              null,
-              _children,
-              -1,
-              task.blockedBoundary,
-              preambleSegment,
-              task.blockedPreamble,
-              task.hoistableState,
-              request.abortableTasks,
-              task.keyPath,
-              task.formatContext,
-              task.context,
-              task.treeContext,
-              task.componentStack,
-              task.isFallback,
-              emptyContextObject,
-              task.debugTask
-            );
-            pushComponentStack(preambleTask);
-            request.pingedTasks.push(preambleTask);
-          } else renderNode(request, task, _children, -1);
+          renderNode(request, task, _children, -1);
           task.formatContext = _prevContext;
           task.keyPath = _prevKeyPath2;
           a: {
@@ -5766,9 +5627,6 @@
                   resumableState.hasHtml = !0;
                   break a;
                 }
-                break;
-              case "head":
-                if (_prevContext.insertionMode <= HTML_HTML_MODE) break a;
             }
             target.push(endChunkForTag(type));
           }
@@ -5822,26 +5680,12 @@
             } else {
               var prevKeyPath$jscomp$3 = task.keyPath,
                 parentBoundary = task.blockedBoundary,
-                parentPreamble = task.blockedPreamble,
                 parentHoistableState = task.hoistableState,
                 parentSegment = task.blockedSegment,
                 fallback = props.fallback,
                 content = props.children,
-                fallbackAbortSet = new Set();
-              var newBoundary =
-                task.formatContext.insertionMode < HTML_MODE
-                  ? createSuspenseBoundary(
-                      request,
-                      fallbackAbortSet,
-                      createPreambleState(),
-                      createPreambleState()
-                    )
-                  : createSuspenseBoundary(
-                      request,
-                      fallbackAbortSet,
-                      null,
-                      null
-                    );
+                fallbackAbortSet = new Set(),
+                newBoundary = createSuspenseBoundary(request, fallbackAbortSet);
               null !== request.trackedPostpones &&
                 (newBoundary.trackedContentKeyPath = keyPath);
               var boundarySegment = createPendingSegment(
@@ -5881,7 +5725,6 @@
                 );
                 newBoundary.trackedFallbackNode = fallbackReplayNode;
                 task.blockedSegment = boundarySegment;
-                task.blockedPreamble = newBoundary.fallbackPreamble;
                 task.keyPath = fallbackKeyPath;
                 boundarySegment.status = 6;
                 try {
@@ -5897,7 +5740,6 @@
                   );
                 } finally {
                   (task.blockedSegment = parentSegment),
-                    (task.blockedPreamble = parentPreamble),
                     (task.keyPath = prevKeyPath$jscomp$3);
                 }
                 var suspendedPrimaryTask = createRenderTask(
@@ -5907,7 +5749,6 @@
                   -1,
                   newBoundary,
                   contentRootSegment,
-                  newBoundary.contentPreamble,
                   newBoundary.contentState,
                   task.abortSet,
                   keyPath,
@@ -5923,7 +5764,6 @@
                 request.pingedTasks.push(suspendedPrimaryTask);
               } else {
                 task.blockedBoundary = newBoundary;
-                task.blockedPreamble = newBoundary.contentPreamble;
                 task.hoistableState = newBoundary.contentState;
                 task.blockedSegment = contentRootSegment;
                 task.keyPath = keyPath;
@@ -5940,9 +5780,6 @@
                       newBoundary.status === PENDING)
                   ) {
                     newBoundary.status = COMPLETED;
-                    0 === request.pendingRootTasks &&
-                      task.blockedPreamble &&
-                      preparePreamble(request);
                     break a;
                   }
                 } catch (thrownValue$2) {
@@ -5982,7 +5819,6 @@
                   untrackBoundary(request, newBoundary);
                 } finally {
                   (task.blockedBoundary = parentBoundary),
-                    (task.blockedPreamble = parentPreamble),
                     (task.hoistableState = parentHoistableState),
                     (task.blockedSegment = parentSegment),
                     (task.keyPath = prevKeyPath$jscomp$3);
@@ -5994,7 +5830,6 @@
                   -1,
                   parentBoundary,
                   boundarySegment,
-                  newBoundary.fallbackPreamble,
                   newBoundary.fallbackState,
                   fallbackAbortSet,
                   [keyPath[0], "Suspense Fallback", keyPath[2]],
@@ -6233,27 +6068,17 @@
                 previousReplaySet = task.replay,
                 parentBoundary = task.blockedBoundary,
                 parentHoistableState = task.hoistableState,
-                content = props.children,
-                fallback = props.fallback,
-                fallbackAbortSet = new Set();
-              props =
-                task.formatContext.insertionMode < HTML_MODE
-                  ? createSuspenseBoundary(
-                      request,
-                      fallbackAbortSet,
-                      createPreambleState(),
-                      createPreambleState()
-                    )
-                  : createSuspenseBoundary(
-                      request,
-                      fallbackAbortSet,
-                      null,
-                      null
-                    );
-              props.parentFlushed = !0;
-              props.rootSegmentID = type;
-              task.blockedBoundary = props;
-              task.hoistableState = props.contentState;
+                content = props.children;
+              props = props.fallback;
+              var fallbackAbortSet = new Set(),
+                resumedBoundary = createSuspenseBoundary(
+                  request,
+                  fallbackAbortSet
+                );
+              resumedBoundary.parentFlushed = !0;
+              resumedBoundary.rootSegmentID = type;
+              task.blockedBoundary = resumedBoundary;
+              task.hoistableState = resumedBoundary.contentState;
               task.keyPath = keyPath;
               task.replay = { nodes: ref, slots: name, pendingTasks: 1 };
               try {
@@ -6266,13 +6091,16 @@
                     "Couldn't find all resumable slots by key/index during replaying. The tree doesn't match so React will fallback to client rendering."
                   );
                 task.replay.pendingTasks--;
-                if (0 === props.pendingTasks && props.status === PENDING) {
-                  props.status = COMPLETED;
-                  request.completedBoundaries.push(props);
+                if (
+                  0 === resumedBoundary.pendingTasks &&
+                  resumedBoundary.status === PENDING
+                ) {
+                  resumedBoundary.status = COMPLETED;
+                  request.completedBoundaries.push(resumedBoundary);
                   break a;
                 }
               } catch (error) {
-                (props.status = CLIENT_RENDERED),
+                (resumedBoundary.status = CLIENT_RENDERED),
                   (childNodes = getThrownInfo(task.componentStack)),
                   "object" === typeof error &&
                   null !== error &&
@@ -6290,9 +6118,15 @@
                         childNodes,
                         task.debugTask
                       )),
-                  encodeErrorForBoundary(props, replay, error, childNodes, !1),
+                  encodeErrorForBoundary(
+                    resumedBoundary,
+                    replay,
+                    error,
+                    childNodes,
+                    !1
+                  ),
                   task.replay.pendingTasks--,
-                  request.clientRenderedBoundaries.push(props);
+                  request.clientRenderedBoundaries.push(resumedBoundary);
               } finally {
                 (task.blockedBoundary = parentBoundary),
                   (task.hoistableState = parentHoistableState),
@@ -6303,10 +6137,10 @@
                 request,
                 null,
                 { nodes: keyOrIndex, slots: node, pendingTasks: 0 },
-                fallback,
+                props,
                 -1,
                 parentBoundary,
-                props.fallbackState,
+                resumedBoundary.fallbackState,
                 fallbackAbortSet,
                 [keyPath[0], "Suspense Fallback", keyPath[2]],
                 task.formatContext,
@@ -6851,7 +6685,6 @@
         task.childIndex,
         task.blockedBoundary,
         newSegment,
-        task.blockedPreamble,
         task.hoistableState,
         task.abortSet,
         task.keyPath,
@@ -7069,12 +6902,7 @@
             errorDigest = errorDigest$jscomp$0,
             errorInfo = errorInfo$jscomp$0,
             wasAborted = aborted,
-            resumedBoundary = createSuspenseBoundary(
-              request,
-              new Set(),
-              null,
-              null
-            );
+            resumedBoundary = createSuspenseBoundary(request, new Set());
           resumedBoundary.parentFlushed = !0;
           resumedBoundary.rootSegmentID = node;
           resumedBoundary.status = CLIENT_RENDERED;
@@ -7284,7 +7112,6 @@
     }
     function completeShell(request) {
       null === request.trackedPostpones && safelyEmitEarlyPreloads(request, !0);
-      null === request.trackedPostpones && preparePreamble(request);
       request.onShellError = noop;
       request = request.onShellReady;
       request();
@@ -7297,7 +7124,6 @@
           : null === request.completedRootSegment ||
               request.completedRootSegment.status !== POSTPONED
       );
-      preparePreamble(request);
       request = request.onAllReady;
       request();
     }
@@ -7342,11 +7168,7 @@
                     abortTaskSoft,
                     request
                   ),
-                  boundary.fallbackAbortableTasks.clear(),
-                  0 === request.pendingRootTasks &&
-                    null === request.trackedPostpones &&
-                    null !== boundary.contentPreamble &&
-                    preparePreamble(request)))
+                  boundary.fallbackAbortableTasks.clear()))
               : null !== segment &&
                 segment.parentFlushed &&
                 segment.status === COMPLETED &&
@@ -7601,11 +7423,7 @@
                             ),
                             untrackBoundary(request, boundary),
                             boundary.parentFlushed &&
-                              request.clientRenderedBoundaries.push(boundary),
-                            0 === request.pendingRootTasks &&
-                              null === request.trackedPostpones &&
-                              null !== boundary.contentPreamble &&
-                              preparePreamble(request)));
+                              request.clientRenderedBoundaries.push(boundary)));
                       request.allPendingTasks--;
                       0 === request.allPendingTasks && completeAll(request);
                     }
@@ -7635,85 +7453,6 @@
         }
       }
     }
-    function preparePreambleFromSubtree(
-      request,
-      segment,
-      collectedPreambleSegments
-    ) {
-      segment.preambleChildren.length &&
-        collectedPreambleSegments.push(segment.preambleChildren);
-      for (var pendingPreambles = !1, i = 0; i < segment.children.length; i++)
-        pendingPreambles =
-          preparePreambleFromSegment(
-            request,
-            segment.children[i],
-            collectedPreambleSegments
-          ) || pendingPreambles;
-      return pendingPreambles;
-    }
-    function preparePreambleFromSegment(
-      request,
-      segment,
-      collectedPreambleSegments
-    ) {
-      var boundary = segment.boundary;
-      if (null === boundary)
-        return preparePreambleFromSubtree(
-          request,
-          segment,
-          collectedPreambleSegments
-        );
-      var preamble = boundary.contentPreamble,
-        fallbackPreamble = boundary.fallbackPreamble;
-      if (null === preamble || null === fallbackPreamble) return !1;
-      switch (boundary.status) {
-        case COMPLETED:
-          hoistPreambleState(request.renderState, preamble);
-          segment = boundary.completedSegments[0];
-          if (!segment)
-            throw Error(
-              "A previously unvisited boundary must have exactly one root segment. This is a bug in React."
-            );
-          return preparePreambleFromSubtree(
-            request,
-            segment,
-            collectedPreambleSegments
-          );
-        case POSTPONED:
-          if (null !== request.trackedPostpones) return !0;
-        case CLIENT_RENDERED:
-          if (segment.status === COMPLETED)
-            return (
-              hoistPreambleState(request.renderState, fallbackPreamble),
-              preparePreambleFromSubtree(
-                request,
-                segment,
-                collectedPreambleSegments
-              )
-            );
-        default:
-          return !0;
-      }
-    }
-    function preparePreamble(request) {
-      if (
-        request.completedRootSegment &&
-        null === request.completedPreambleSegments
-      ) {
-        var collectedPreambleSegments = [],
-          hasPendingPreambles = preparePreambleFromSegment(
-            request,
-            request.completedRootSegment,
-            collectedPreambleSegments
-          ),
-          preamble = request.renderState.preamble;
-        if (
-          !1 === hasPendingPreambles ||
-          (preamble.headChunks && preamble.bodyChunks)
-        )
-          request.completedPreambleSegments = collectedPreambleSegments;
-      }
-    }
     function flushSubtree(request, destination, segment, hoistableState) {
       segment.parentFlushed = !0;
       switch (segment.status) {
@@ -7761,8 +7500,8 @@
       if (boundary.status === CLIENT_RENDERED) {
         var errorDigest = boundary.errorDigest,
           errorMessage = boundary.errorMessage,
-          errorStack = boundary.errorStack,
-          errorComponentStack = boundary.errorComponentStack;
+          errorStack = boundary.errorStack;
+        boundary = boundary.errorComponentStack;
         writeChunkAndReturn(destination, startClientRenderedSuspenseBoundary);
         writeChunk(destination, clientRenderedSuspenseBoundaryError1);
         errorDigest &&
@@ -7795,11 +7534,11 @@
             destination,
             clientRenderedSuspenseBoundaryErrorAttrInterstitial
           ));
-        errorComponentStack &&
+        boundary &&
           (writeChunk(destination, clientRenderedSuspenseBoundaryError1D),
           writeChunk(
             destination,
-            stringToChunk(escapeTextForBrowser(errorComponentStack))
+            stringToChunk(escapeTextForBrowser(boundary))
           ),
           writeChunk(
             destination,
@@ -7807,14 +7546,9 @@
           ));
         writeChunkAndReturn(destination, clientRenderedSuspenseBoundaryError2);
         flushSubtree(request, destination, segment, hoistableState);
-        (request = boundary.fallbackPreamble) &&
-          writePreambleContribution(destination, request);
-        return writeChunkAndReturn(destination, endSuspenseBoundary);
-      }
-      if (boundary.status !== COMPLETED)
-        return (
-          boundary.status === PENDING &&
-            (boundary.rootSegmentID = request.nextSegmentId++),
+      } else if (boundary.status !== COMPLETED)
+        boundary.status === PENDING &&
+          (boundary.rootSegmentID = request.nextSegmentId++),
           0 < boundary.completedSegments.length &&
             request.partialBoundaries.push(boundary),
           writeStartPendingSuspenseBoundary(
@@ -7829,34 +7563,32 @@
               hoistStylesheetDependency,
               hoistableState
             )),
-          flushSubtree(request, destination, segment, hoistableState),
-          writeChunkAndReturn(destination, endSuspenseBoundary)
-        );
-      if (boundary.byteSize > request.progressiveChunkSize)
-        return (
-          (boundary.rootSegmentID = request.nextSegmentId++),
+          flushSubtree(request, destination, segment, hoistableState);
+      else if (boundary.byteSize > request.progressiveChunkSize)
+        (boundary.rootSegmentID = request.nextSegmentId++),
           request.completedBoundaries.push(boundary),
           writeStartPendingSuspenseBoundary(
             destination,
             request.renderState,
             boundary.rootSegmentID
           ),
-          flushSubtree(request, destination, segment, hoistableState),
-          writeChunkAndReturn(destination, endSuspenseBoundary)
-        );
-      hoistableState &&
-        ((segment = boundary.contentState),
-        segment.styles.forEach(hoistStyleQueueDependency, hoistableState),
-        segment.stylesheets.forEach(hoistStylesheetDependency, hoistableState));
-      writeChunkAndReturn(destination, startCompletedSuspenseBoundary);
-      segment = boundary.completedSegments;
-      if (1 !== segment.length)
-        throw Error(
-          "A previously unvisited boundary must have exactly one root segment. This is a bug in React."
-        );
-      flushSegment(request, destination, segment[0], hoistableState);
-      (request = boundary.contentPreamble) &&
-        writePreambleContribution(destination, request);
+          flushSubtree(request, destination, segment, hoistableState);
+      else {
+        hoistableState &&
+          ((segment = boundary.contentState),
+          segment.styles.forEach(hoistStyleQueueDependency, hoistableState),
+          segment.stylesheets.forEach(
+            hoistStylesheetDependency,
+            hoistableState
+          ));
+        writeChunkAndReturn(destination, startCompletedSuspenseBoundary);
+        segment = boundary.completedSegments;
+        if (1 !== segment.length)
+          throw Error(
+            "A previously unvisited boundary must have exactly one root segment. This is a bug in React."
+          );
+        flushSegment(request, destination, segment[0], hoistableState);
+      }
       return writeChunkAndReturn(destination, endSuspenseBoundary);
     }
     function flushSegmentContainer(
@@ -8017,8 +7749,6 @@
             completedRootSegment = request.completedRootSegment;
           if (null !== completedRootSegment) {
             if (completedRootSegment.status === POSTPONED) return;
-            var completedPreambleSegments = request.completedPreambleSegments;
-            if (null === completedPreambleSegments) return;
             var renderState = request.renderState;
             if (
               (0 !== request.allPendingTasks ||
@@ -8033,9 +7763,8 @@
                 ((resumableState.scriptResources[src] = EXISTS),
                 renderState.scripts.add(chunks));
             }
-            var preamble = renderState.preamble,
-              htmlChunks = preamble.htmlChunks,
-              headChunks = preamble.headChunks,
+            var htmlChunks = renderState.htmlChunks,
+              headChunks = renderState.headChunks,
               i$jscomp$0;
             if (htmlChunks) {
               for (i$jscomp$0 = 0; i$jscomp$0 < htmlChunks.length; i$jscomp$0++)
@@ -8096,36 +7825,10 @@
               i$jscomp$0++
             )
               writeChunk(destination, hoistableChunks[i$jscomp$0]);
-            for (
-              renderState = hoistableChunks.length = 0;
-              renderState < completedPreambleSegments.length;
-              renderState++
-            ) {
-              var segments = completedPreambleSegments[renderState];
-              for (
-                _renderState$external = 0;
-                _renderState$external < segments.length;
-                _renderState$external++
-              )
-                flushSegment(
-                  request,
-                  destination,
-                  segments[_renderState$external],
-                  null
-                );
-            }
-            var preamble$jscomp$0 = request.renderState.preamble,
-              headChunks$jscomp$0 = preamble$jscomp$0.headChunks;
-            (preamble$jscomp$0.htmlChunks || headChunks$jscomp$0) &&
+            hoistableChunks.length = 0;
+            htmlChunks &&
+              null === headChunks &&
               writeChunk(destination, endChunkForTag("head"));
-            var bodyChunks = preamble$jscomp$0.bodyChunks;
-            if (bodyChunks)
-              for (
-                completedPreambleSegments = 0;
-                completedPreambleSegments < bodyChunks.length;
-                completedPreambleSegments++
-              )
-                writeChunk(destination, bodyChunks[completedPreambleSegments]);
             flushSegment(request, destination, completedRootSegment, null);
             request.completedRootSegment = null;
             writeBootstrap(destination, request.renderState);
@@ -8466,19 +8169,11 @@
       )
         return (request.trackedPostpones = null);
       if (
-        null === request.completedRootSegment ||
-        (request.completedRootSegment.status !== POSTPONED &&
-          null !== request.completedPreambleSegments)
+        null !== request.completedRootSegment &&
+        request.completedRootSegment.status === POSTPONED
       ) {
-        var replaySlots = trackedPostpones.rootSlots;
-        var resumableState = request.resumableState;
-        resumableState.bootstrapScriptContent = void 0;
-        resumableState.bootstrapScripts = void 0;
-        resumableState.bootstrapModules = void 0;
-      } else {
-        replaySlots = request.completedRootSegment.id;
-        resumableState = request.resumableState;
-        var renderState = request.renderState;
+        var resumableState = request.resumableState,
+          renderState = request.renderState;
         resumableState.nextFormID = 0;
         resumableState.hasBody = !1;
         resumableState.hasHtml = !1;
@@ -8490,23 +8185,27 @@
         resumableState.scriptResources = {};
         resumableState.moduleUnknownResources = {};
         resumableState.moduleScriptResources = {};
-      }
+      } else
+        (resumableState = request.resumableState),
+          (resumableState.bootstrapScriptContent = void 0),
+          (resumableState.bootstrapScripts = void 0),
+          (resumableState.bootstrapModules = void 0);
       return {
         nextSegmentId: request.nextSegmentId,
         rootFormatContext: request.rootFormatContext,
         progressiveChunkSize: request.progressiveChunkSize,
         resumableState: request.resumableState,
         replayNodes: trackedPostpones.rootNodes,
-        replaySlots: replaySlots
+        replaySlots: trackedPostpones.rootSlots
       };
     }
     function ensureCorrectIsomorphicReactVersion() {
       var isomorphicReactPackageVersion = React.version;
-      if ("19.1.0-experimental-e670e72f-20250214" !== isomorphicReactPackageVersion)
+      if ("19.1.0-experimental-b3a95caf-20250113" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The "react" and "react-dom" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              "\n  - react-dom:  19.1.0-experimental-e670e72f-20250214\nLearn more: https://react.dev/warnings/version-mismatch")
+              "\n  - react-dom:  19.1.0-experimental-b3a95caf-20250113\nLearn more: https://react.dev/warnings/version-mismatch")
         );
     }
     var React = require("react"),
@@ -8527,7 +8226,6 @@
       REACT_SCOPE_TYPE = Symbol.for("react.scope"),
       REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen"),
       REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden"),
-      REACT_MEMO_CACHE_SENTINEL = Symbol.for("react.memo_cache_sentinel"),
       REACT_POSTPONE_TYPE = Symbol.for("react.postpone"),
       REACT_VIEW_TRANSITION_TYPE = Symbol.for("react.view_transition"),
       MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
@@ -9615,17 +9313,15 @@
       ),
       importMapScriptEnd = stringToPrecomputedChunk("\x3c/script>");
     var didWarnForNewBooleanPropsWithEmptyValue = {};
-    var NoContribution = 0,
-      ROOT_HTML_MODE = 0,
+    var ROOT_HTML_MODE = 0,
       HTML_HTML_MODE = 1,
       HTML_MODE = 2,
-      HTML_HEAD_MODE = 3,
-      SVG_MODE = 4,
-      MATHML_MODE = 5,
-      HTML_TABLE_MODE = 6,
-      HTML_TABLE_BODY_MODE = 7,
-      HTML_TABLE_ROW_MODE = 8,
-      HTML_COLGROUP_MODE = 9,
+      SVG_MODE = 3,
+      MATHML_MODE = 4,
+      HTML_TABLE_MODE = 5,
+      HTML_TABLE_BODY_MODE = 6,
+      HTML_TABLE_ROW_MODE = 7,
+      HTML_COLGROUP_MODE = 8,
       textSeparator = stringToPrecomputedChunk("\x3c!-- --\x3e"),
       styleNameCache = new Map(),
       styleAttributeStart = stringToPrecomputedChunk(' style="'),
@@ -9691,9 +9387,6 @@
         stringToPrecomputedChunk(' data-cstck="'),
       clientRenderedSuspenseBoundaryError2 =
         stringToPrecomputedChunk("></template>"),
-      boundaryPreambleContributionChunkStart =
-        stringToPrecomputedChunk("\x3c!--"),
-      boundaryPreambleContributionChunkEnd = stringToPrecomputedChunk("--\x3e"),
       startSegmentHTML = stringToPrecomputedChunk('<div hidden id="'),
       startSegmentHTML2 = stringToPrecomputedChunk('">'),
       endSegmentHTML = stringToPrecomputedChunk("</div>"),
@@ -9960,20 +9653,8 @@
           resolveCurrentlyRenderingComponent();
           return NotPending;
         },
-        useMemoCache: function (size) {
-          for (var data = Array(size), i = 0; i < size; i++)
-            data[i] = REACT_MEMO_CACHE_SENTINEL;
-          return data;
-        },
-        useCacheRefresh: function () {
-          return unsupportedRefresh;
-        },
         useEffectEvent: function () {
           return throwOnUseEffectEventCall;
-        },
-        useSwipeTransition: function (previous, current) {
-          resolveCurrentlyRenderingComponent();
-          return [current, unsupportedStartGesture];
         }
       },
       currentResumableState = null,
@@ -10292,5 +9973,5 @@
         startWork(request);
       });
     };
-    exports.version = "19.1.0-experimental-e670e72f-20250214";
+    exports.version = "19.1.0-experimental-b3a95caf-20250113";
   })();
diff --git a/node_modules/react-dom/cjs/react-dom-server.browser.production.js b/node_modules/react-dom/cjs/react-dom-server.browser.production.js
index aff7c27..37204c6 100644
--- a/node_modules/react-dom/cjs/react-dom-server.browser.production.js
+++ b/node_modules/react-dom/cjs/react-dom-server.browser.production.js
@@ -66,7 +66,6 @@ var REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"),
   REACT_SCOPE_TYPE = Symbol.for("react.scope"),
   REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen"),
   REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden"),
-  REACT_MEMO_CACHE_SENTINEL = Symbol.for("react.memo_cache_sentinel"),
   REACT_POSTPONE_TYPE = Symbol.for("react.postpone"),
   REACT_VIEW_TRANSITION_TYPE = Symbol.for("react.view_transition"),
   MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
@@ -460,7 +459,8 @@ function createRenderState(
     segmentPrefix: stringToPrecomputedChunk(idPrefix + "S:"),
     boundaryPrefix: stringToPrecomputedChunk(idPrefix + "B:"),
     startInlineScript: inlineScriptWithNonce,
-    preamble: createPreambleState(),
+    htmlChunks: null,
+    headChunks: null,
     externalRuntimeScript: externalRuntimeScript,
     bootstrapChunks: bootstrapChunks,
     importMapChunks: externalRuntimeConfig,
@@ -634,14 +634,6 @@ function createResumableState(
     moduleScriptResources: {}
   };
 }
-function createPreambleState() {
-  return {
-    htmlChunks: null,
-    headChunks: null,
-    bodyChunks: null,
-    contribution: 0
-  };
-}
 function createFormatContext(insertionMode, selectedValue, tagScope) {
   return {
     insertionMode: insertionMode,
@@ -652,9 +644,9 @@ function createFormatContext(insertionMode, selectedValue, tagScope) {
 function createRootFormatContext(namespaceURI) {
   return createFormatContext(
     "http://www.w3.org/2000/svg" === namespaceURI
-      ? 4
+      ? 3
       : "http://www.w3.org/1998/Math/MathML" === namespaceURI
-        ? 5
+        ? 4
         : 0,
     null,
     0
@@ -671,34 +663,33 @@ function getChildFormatContext(parentContext, type, props) {
         parentContext.tagScope
       );
     case "svg":
-      return createFormatContext(4, null, parentContext.tagScope);
+      return createFormatContext(3, null, parentContext.tagScope);
     case "picture":
       return createFormatContext(2, null, parentContext.tagScope | 2);
     case "math":
-      return createFormatContext(5, null, parentContext.tagScope);
+      return createFormatContext(4, null, parentContext.tagScope);
     case "foreignObject":
       return createFormatContext(2, null, parentContext.tagScope);
     case "table":
-      return createFormatContext(6, null, parentContext.tagScope);
+      return createFormatContext(5, null, parentContext.tagScope);
     case "thead":
     case "tbody":
     case "tfoot":
-      return createFormatContext(7, null, parentContext.tagScope);
+      return createFormatContext(6, null, parentContext.tagScope);
     case "colgroup":
-      return createFormatContext(9, null, parentContext.tagScope);
-    case "tr":
       return createFormatContext(8, null, parentContext.tagScope);
-    case "head":
-      if (2 > parentContext.insertionMode)
-        return createFormatContext(3, null, parentContext.tagScope);
-      break;
-    case "html":
-      if (0 === parentContext.insertionMode)
-        return createFormatContext(1, null, parentContext.tagScope);
+    case "tr":
+      return createFormatContext(7, null, parentContext.tagScope);
   }
-  return 6 <= parentContext.insertionMode || 2 > parentContext.insertionMode
+  return 5 <= parentContext.insertionMode
     ? createFormatContext(2, null, parentContext.tagScope)
-    : parentContext;
+    : 0 === parentContext.insertionMode
+      ? "html" === type
+        ? createFormatContext(1, null, parentContext.tagScope)
+        : createFormatContext(2, null, parentContext.tagScope)
+      : 1 === parentContext.insertionMode
+        ? createFormatContext(2, null, parentContext.tagScope)
+        : parentContext;
 }
 var textSeparator = stringToPrecomputedChunk("\x3c!-- --\x3e");
 function pushTextInstance(target, text, renderState, textEmbedded) {
@@ -1209,29 +1200,6 @@ function pushScriptImpl(target, props) {
   target.push(endChunkForTag("script"));
   return null;
 }
-function pushStartSingletonElement(target, props, tag) {
-  target.push(startChunkForTag(tag));
-  var innerHTML = (tag = null),
-    propKey;
-  for (propKey in props)
-    if (hasOwnProperty.call(props, propKey)) {
-      var propValue = props[propKey];
-      if (null != propValue)
-        switch (propKey) {
-          case "children":
-            tag = propValue;
-            break;
-          case "dangerouslySetInnerHTML":
-            innerHTML = propValue;
-            break;
-          default:
-            pushAttribute(target, propKey, propValue);
-        }
-    }
-  target.push(endOfStartTag);
-  pushInnerHTML(target, innerHTML, tag);
-  return tag;
-}
 function pushStartGenericElement(target, props, tag) {
   target.push(startChunkForTag(tag));
   var innerHTML = (tag = null),
@@ -1277,7 +1245,6 @@ function pushStartInstance(
   props,
   resumableState,
   renderState,
-  preambleState,
   hoistableState,
   formatContext,
   textEmbedded,
@@ -1756,7 +1723,7 @@ function pushStartInstance(
       return JSCompiler_inline_result$jscomp$2;
     case "title":
       if (
-        4 === formatContext.insertionMode ||
+        3 === formatContext.insertionMode ||
         formatContext.tagScope & 1 ||
         null != props.itemProp
       )
@@ -1775,7 +1742,7 @@ function pushStartInstance(
         href = props.href,
         precedence = props.precedence;
       if (
-        4 === formatContext.insertionMode ||
+        3 === formatContext.insertionMode ||
         formatContext.tagScope & 1 ||
         null != props.itemProp ||
         "string" !== typeof rel ||
@@ -1857,7 +1824,7 @@ function pushStartInstance(
         "symbol" === typeof asyncProp ||
         props.onLoad ||
         props.onError ||
-        4 === formatContext.insertionMode ||
+        3 === formatContext.insertionMode ||
         formatContext.tagScope & 1 ||
         null != props.itemProp
       )
@@ -1898,7 +1865,7 @@ function pushStartInstance(
       var precedence$jscomp$0 = props.precedence,
         href$jscomp$0 = props.href;
       if (
-        4 === formatContext.insertionMode ||
+        3 === formatContext.insertionMode ||
         formatContext.tagScope & 1 ||
         null != props.itemProp ||
         "string" !== typeof precedence$jscomp$0 ||
@@ -2007,7 +1974,7 @@ function pushStartInstance(
       return JSCompiler_inline_result$jscomp$6;
     case "meta":
       if (
-        4 === formatContext.insertionMode ||
+        3 === formatContext.insertionMode ||
         formatContext.tagScope & 1 ||
         null != props.itemProp
       )
@@ -2180,13 +2147,10 @@ function pushStartInstance(
     case "missing-glyph":
       break;
     case "head":
-      if (2 > formatContext.insertionMode) {
-        var preamble = preambleState || renderState.preamble;
-        if (preamble.headChunks)
-          throw Error(formatProdErrorMessage(545, "`<head>`"));
-        preamble.headChunks = [];
-        var JSCompiler_inline_result$jscomp$9 = pushStartSingletonElement(
-          preamble.headChunks,
+      if (2 > formatContext.insertionMode && null === renderState.headChunks) {
+        renderState.headChunks = [];
+        var JSCompiler_inline_result$jscomp$9 = pushStartGenericElement(
+          renderState.headChunks,
           props,
           "head"
         );
@@ -2197,42 +2161,24 @@ function pushStartInstance(
           "head"
         );
       return JSCompiler_inline_result$jscomp$9;
-    case "body":
-      if (2 > formatContext.insertionMode) {
-        var preamble$jscomp$0 = preambleState || renderState.preamble;
-        if (preamble$jscomp$0.bodyChunks)
-          throw Error(formatProdErrorMessage(545, "`<body>`"));
-        preamble$jscomp$0.bodyChunks = [];
-        var JSCompiler_inline_result$jscomp$10 = pushStartSingletonElement(
-          preamble$jscomp$0.bodyChunks,
-          props,
-          "body"
-        );
-      } else
-        JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
-          target$jscomp$0,
-          props,
-          "body"
-        );
-      return JSCompiler_inline_result$jscomp$10;
     case "html":
-      if (0 === formatContext.insertionMode) {
-        var preamble$jscomp$1 = preambleState || renderState.preamble;
-        if (preamble$jscomp$1.htmlChunks)
-          throw Error(formatProdErrorMessage(545, "`<html>`"));
-        preamble$jscomp$1.htmlChunks = [doctypeChunk];
-        var JSCompiler_inline_result$jscomp$11 = pushStartSingletonElement(
-          preamble$jscomp$1.htmlChunks,
+      if (
+        0 === formatContext.insertionMode &&
+        null === renderState.htmlChunks
+      ) {
+        renderState.htmlChunks = [doctypeChunk];
+        var JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
+          renderState.htmlChunks,
           props,
           "html"
         );
       } else
-        JSCompiler_inline_result$jscomp$11 = pushStartGenericElement(
+        JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
           target$jscomp$0,
           props,
           "html"
         );
-      return JSCompiler_inline_result$jscomp$11;
+      return JSCompiler_inline_result$jscomp$10;
     default:
       if (-1 !== type.indexOf("-")) {
         target$jscomp$0.push(startChunkForTag(type));
@@ -2295,21 +2241,6 @@ function endChunkForTag(tag) {
     endTagCache.set(tag, chunk));
   return chunk;
 }
-function hoistPreambleState(renderState, preambleState) {
-  renderState = renderState.preamble;
-  null === renderState.htmlChunks &&
-    preambleState.htmlChunks &&
-    ((renderState.htmlChunks = preambleState.htmlChunks),
-    (preambleState.contribution |= 1));
-  null === renderState.headChunks &&
-    preambleState.headChunks &&
-    ((renderState.headChunks = preambleState.headChunks),
-    (preambleState.contribution |= 4));
-  null === renderState.bodyChunks &&
-    preambleState.bodyChunks &&
-    ((renderState.bodyChunks = preambleState.bodyChunks),
-    (preambleState.contribution |= 2));
-}
 function writeBootstrap(destination, renderState) {
   renderState = renderState.bootstrapChunks;
   for (var i = 0; i < renderState.length - 1; i++)
@@ -2347,16 +2278,6 @@ function writeStartPendingSuspenseBoundary(destination, renderState, id) {
   writeChunk(destination, stringToChunk(id.toString(16)));
   return writeChunkAndReturn(destination, startPendingSuspenseBoundary2);
 }
-var boundaryPreambleContributionChunkStart =
-    stringToPrecomputedChunk("\x3c!--"),
-  boundaryPreambleContributionChunkEnd = stringToPrecomputedChunk("--\x3e");
-function writePreambleContribution(destination, preambleState) {
-  preambleState = preambleState.contribution;
-  0 !== preambleState &&
-    (writeChunk(destination, boundaryPreambleContributionChunkStart),
-    writeChunk(destination, stringToChunk("" + preambleState)),
-    writeChunk(destination, boundaryPreambleContributionChunkEnd));
-}
 var startSegmentHTML = stringToPrecomputedChunk('<div hidden id="'),
   startSegmentHTML2 = stringToPrecomputedChunk('">'),
   endSegmentHTML = stringToPrecomputedChunk("</div>"),
@@ -2388,7 +2309,6 @@ function writeStartSegment(destination, renderState, formatContext, id) {
   switch (formatContext.insertionMode) {
     case 0:
     case 1:
-    case 3:
     case 2:
       return (
         writeChunk(destination, startSegmentHTML),
@@ -2396,42 +2316,42 @@ function writeStartSegment(destination, renderState, formatContext, id) {
         writeChunk(destination, stringToChunk(id.toString(16))),
         writeChunkAndReturn(destination, startSegmentHTML2)
       );
-    case 4:
+    case 3:
       return (
         writeChunk(destination, startSegmentSVG),
         writeChunk(destination, renderState.segmentPrefix),
         writeChunk(destination, stringToChunk(id.toString(16))),
         writeChunkAndReturn(destination, startSegmentSVG2)
       );
-    case 5:
+    case 4:
       return (
         writeChunk(destination, startSegmentMathML),
         writeChunk(destination, renderState.segmentPrefix),
         writeChunk(destination, stringToChunk(id.toString(16))),
         writeChunkAndReturn(destination, startSegmentMathML2)
       );
-    case 6:
+    case 5:
       return (
         writeChunk(destination, startSegmentTable),
         writeChunk(destination, renderState.segmentPrefix),
         writeChunk(destination, stringToChunk(id.toString(16))),
         writeChunkAndReturn(destination, startSegmentTable2)
       );
-    case 7:
+    case 6:
       return (
         writeChunk(destination, startSegmentTableBody),
         writeChunk(destination, renderState.segmentPrefix),
         writeChunk(destination, stringToChunk(id.toString(16))),
         writeChunkAndReturn(destination, startSegmentTableBody2)
       );
-    case 8:
+    case 7:
       return (
         writeChunk(destination, startSegmentTableRow),
         writeChunk(destination, renderState.segmentPrefix),
         writeChunk(destination, stringToChunk(id.toString(16))),
         writeChunkAndReturn(destination, startSegmentTableRow2)
       );
-    case 9:
+    case 8:
       return (
         writeChunk(destination, startSegmentColGroup),
         writeChunk(destination, renderState.segmentPrefix),
@@ -2446,20 +2366,19 @@ function writeEndSegment(destination, formatContext) {
   switch (formatContext.insertionMode) {
     case 0:
     case 1:
-    case 3:
     case 2:
       return writeChunkAndReturn(destination, endSegmentHTML);
-    case 4:
+    case 3:
       return writeChunkAndReturn(destination, endSegmentSVG);
-    case 5:
+    case 4:
       return writeChunkAndReturn(destination, endSegmentMathML);
-    case 6:
+    case 5:
       return writeChunkAndReturn(destination, endSegmentTable);
-    case 7:
+    case 6:
       return writeChunkAndReturn(destination, endSegmentTableBody);
-    case 8:
+    case 7:
       return writeChunkAndReturn(destination, endSegmentTableRow);
-    case 9:
+    case 8:
       return writeChunkAndReturn(destination, endSegmentColGroup);
     default:
       throw Error(formatProdErrorMessage(397));
@@ -3726,12 +3645,6 @@ function readPreviousThenableFromState() {
       index
     );
 }
-function unsupportedRefresh() {
-  throw Error(formatProdErrorMessage(393));
-}
-function unsupportedStartGesture() {
-  throw Error(formatProdErrorMessage(547));
-}
 function noop$1() {}
 var HooksDispatcher = {
     readContext: function (context) {
@@ -3812,20 +3725,8 @@ var HooksDispatcher = {
       resolveCurrentlyRenderingComponent();
       return sharedNotPendingObject;
     },
-    useMemoCache: function (size) {
-      for (var data = Array(size), i = 0; i < size; i++)
-        data[i] = REACT_MEMO_CACHE_SENTINEL;
-      return data;
-    },
-    useCacheRefresh: function () {
-      return unsupportedRefresh;
-    },
     useEffectEvent: function () {
       return throwOnUseEffectEventCall;
-    },
-    useSwipeTransition: function (previous, current) {
-      resolveCurrentlyRenderingComponent();
-      return [current, unsupportedStartGesture];
     }
   },
   currentResumableState = null,
@@ -4083,7 +3984,7 @@ function RequestInstance(
   this.status = 10;
   this.fatalError = null;
   this.pendingRootTasks = this.allPendingTasks = this.nextSegmentId = 0;
-  this.completedPreambleSegments = this.completedRootSegment = null;
+  this.completedRootSegment = null;
   this.abortableTasks = abortSet;
   this.pingedTasks = [];
   this.clientRenderedBoundaries = [];
@@ -4142,7 +4043,6 @@ function createRequest(
     null,
     renderState,
     null,
-    null,
     resumableState.abortableTasks,
     null,
     rootFormatContext,
@@ -4235,7 +4135,6 @@ function resumeRequest(
         null,
         onAllReady,
         null,
-        null,
         renderState.abortableTasks,
         null,
         postponedState.rootFormatContext,
@@ -4314,12 +4213,7 @@ function pingTask(request, task) {
           return performWork(request);
         }));
 }
-function createSuspenseBoundary(
-  request,
-  fallbackAbortableTasks,
-  contentPreamble,
-  fallbackPreamble
-) {
+function createSuspenseBoundary(request, fallbackAbortableTasks) {
   return {
     status: 0,
     rootSegmentID: -1,
@@ -4331,8 +4225,6 @@ function createSuspenseBoundary(
     errorDigest: null,
     contentState: createHoistableState(),
     fallbackState: createHoistableState(),
-    contentPreamble: contentPreamble,
-    fallbackPreamble: fallbackPreamble,
     trackedContentKeyPath: null,
     trackedFallbackNode: null
   };
@@ -4344,7 +4236,6 @@ function createRenderTask(
   childIndex,
   blockedBoundary,
   blockedSegment,
-  blockedPreamble,
   hoistableState,
   abortSet,
   keyPath,
@@ -4367,7 +4258,6 @@ function createRenderTask(
     },
     blockedBoundary: blockedBoundary,
     blockedSegment: blockedSegment,
-    blockedPreamble: blockedPreamble,
     hoistableState: hoistableState,
     abortSet: abortSet,
     keyPath: keyPath,
@@ -4411,7 +4301,6 @@ function createReplayTask(
     },
     blockedBoundary: blockedBoundary,
     blockedSegment: null,
-    blockedPreamble: null,
     hoistableState: hoistableState,
     abortSet: abortSet,
     keyPath: keyPath,
@@ -4435,12 +4324,11 @@ function createPendingSegment(
 ) {
   return {
     status: 0,
-    parentFlushed: !1,
     id: -1,
     index: index,
+    parentFlushed: !1,
     chunks: [],
     children: [],
-    preambleChildren: [],
     parentFormatContext: parentFormatContext,
     boundary: boundary,
     lastPushedText: lastPushedText,
@@ -4672,13 +4560,12 @@ function renderElement(request, task, keyPath, type, props, ref) {
         (task.formatContext = defaultProps),
         (task.keyPath = initialState);
     else {
-      ref = pushStartInstance(
+      initialState = pushStartInstance(
         newProps.chunks,
         type,
         props,
         request.resumableState,
         request.renderState,
-        task.blockedPreamble,
         task.hoistableState,
         task.formatContext,
         newProps.lastPushedText,
@@ -4686,42 +4573,12 @@ function renderElement(request, task, keyPath, type, props, ref) {
       );
       newProps.lastPushedText = !1;
       defaultProps = task.formatContext;
-      initialState = task.keyPath;
+      ref = task.keyPath;
+      task.formatContext = getChildFormatContext(defaultProps, type, props);
       task.keyPath = keyPath;
-      3 ===
-      (task.formatContext = getChildFormatContext(defaultProps, type, props))
-        .insertionMode
-        ? ((keyPath = createPendingSegment(
-            request,
-            0,
-            null,
-            task.formatContext,
-            !1,
-            !1
-          )),
-          newProps.preambleChildren.push(keyPath),
-          (keyPath = createRenderTask(
-            request,
-            null,
-            ref,
-            -1,
-            task.blockedBoundary,
-            keyPath,
-            task.blockedPreamble,
-            task.hoistableState,
-            request.abortableTasks,
-            task.keyPath,
-            task.formatContext,
-            task.context,
-            task.treeContext,
-            task.componentStack,
-            task.isFallback
-          )),
-          pushComponentStack(keyPath),
-          request.pingedTasks.push(keyPath))
-        : renderNode(request, task, ref, -1);
+      renderNode(request, task, initialState, -1);
       task.formatContext = defaultProps;
-      task.keyPath = initialState;
+      task.keyPath = ref;
       a: {
         task = newProps.chunks;
         request = request.resumableState;
@@ -4756,9 +4613,6 @@ function renderElement(request, task, keyPath, type, props, ref) {
               request.hasHtml = !0;
               break a;
             }
-            break;
-          case "head":
-            if (1 >= defaultProps.insertionMode) break a;
         }
         task.push(endChunkForTag(type));
       }
@@ -4808,34 +4662,25 @@ function renderElement(request, task, keyPath, type, props, ref) {
           }
         } else {
           type = task.keyPath;
-          var parentBoundary = task.blockedBoundary;
-          ref = task.blockedPreamble;
-          var parentHoistableState = task.hoistableState;
-          propName$34 = task.blockedSegment;
-          propName = props.fallback;
+          var parentBoundary = task.blockedBoundary,
+            parentHoistableState = task.hoistableState;
+          ref = task.blockedSegment;
+          propName$34 = props.fallback;
           props = props.children;
           var fallbackAbortSet = new Set();
-          var newBoundary =
-            2 > task.formatContext.insertionMode
-              ? createSuspenseBoundary(
-                  request,
-                  fallbackAbortSet,
-                  createPreambleState(),
-                  createPreambleState()
-                )
-              : createSuspenseBoundary(request, fallbackAbortSet, null, null);
+          propName = createSuspenseBoundary(request, fallbackAbortSet);
           null !== request.trackedPostpones &&
-            (newBoundary.trackedContentKeyPath = keyPath);
+            (propName.trackedContentKeyPath = keyPath);
           var boundarySegment = createPendingSegment(
             request,
-            propName$34.chunks.length,
-            newBoundary,
+            ref.chunks.length,
+            propName,
             task.formatContext,
             !1,
             !1
           );
-          propName$34.children.push(boundarySegment);
-          propName$34.lastPushedText = !1;
+          ref.children.push(boundarySegment);
+          ref.lastPushedText = !1;
           var contentRootSegment = createPendingSegment(
             request,
             0,
@@ -4849,13 +4694,12 @@ function renderElement(request, task, keyPath, type, props, ref) {
             newProps = [keyPath[0], "Suspense Fallback", keyPath[2]];
             defaultProps = [newProps[1], newProps[2], [], null];
             request.trackedPostpones.workingMap.set(newProps, defaultProps);
-            newBoundary.trackedFallbackNode = defaultProps;
+            propName.trackedFallbackNode = defaultProps;
             task.blockedSegment = boundarySegment;
-            task.blockedPreamble = newBoundary.fallbackPreamble;
             task.keyPath = newProps;
             boundarySegment.status = 6;
             try {
-              renderNode(request, task, propName, -1),
+              renderNode(request, task, propName$34, -1),
                 boundarySegment.lastPushedText &&
                   boundarySegment.textEmbedded &&
                   boundarySegment.chunks.push(textSeparator),
@@ -4866,19 +4710,16 @@ function renderElement(request, task, keyPath, type, props, ref) {
                 thrownValue)
               );
             } finally {
-              (task.blockedSegment = propName$34),
-                (task.blockedPreamble = ref),
-                (task.keyPath = type);
+              (task.blockedSegment = ref), (task.keyPath = type);
             }
             task = createRenderTask(
               request,
               null,
               props,
               -1,
-              newBoundary,
+              propName,
               contentRootSegment,
-              newBoundary.contentPreamble,
-              newBoundary.contentState,
+              propName.contentState,
               task.abortSet,
               keyPath,
               task.formatContext,
@@ -4890,9 +4731,8 @@ function renderElement(request, task, keyPath, type, props, ref) {
             pushComponentStack(task);
             request.pingedTasks.push(task);
           } else {
-            task.blockedBoundary = newBoundary;
-            task.blockedPreamble = newBoundary.contentPreamble;
-            task.hoistableState = newBoundary.contentState;
+            task.blockedBoundary = propName;
+            task.hoistableState = propName.contentState;
             task.blockedSegment = contentRootSegment;
             task.keyPath = keyPath;
             contentRootSegment.status = 6;
@@ -4903,17 +4743,14 @@ function renderElement(request, task, keyPath, type, props, ref) {
                   contentRootSegment.textEmbedded &&
                   contentRootSegment.chunks.push(textSeparator),
                 (contentRootSegment.status = 1),
-                queueCompletedSegment(newBoundary, contentRootSegment),
-                0 === newBoundary.pendingTasks && 0 === newBoundary.status)
+                queueCompletedSegment(propName, contentRootSegment),
+                0 === propName.pendingTasks && 0 === propName.status)
               ) {
-                newBoundary.status = 1;
-                0 === request.pendingRootTasks &&
-                  task.blockedPreamble &&
-                  preparePreamble(request);
+                propName.status = 1;
                 break a;
               }
             } catch (thrownValue$29) {
-              (newBoundary.status = 4),
+              (propName.status = 4),
                 12 === request.status
                   ? ((contentRootSegment.status = 3),
                     (newProps = request.fatalError))
@@ -4930,24 +4767,22 @@ function renderElement(request, task, keyPath, type, props, ref) {
                       newProps,
                       defaultProps
                     )),
-                (newBoundary.errorDigest = initialState),
-                untrackBoundary(request, newBoundary);
+                (propName.errorDigest = initialState),
+                untrackBoundary(request, propName);
             } finally {
               (task.blockedBoundary = parentBoundary),
-                (task.blockedPreamble = ref),
                 (task.hoistableState = parentHoistableState),
-                (task.blockedSegment = propName$34),
+                (task.blockedSegment = ref),
                 (task.keyPath = type);
             }
             task = createRenderTask(
               request,
               null,
-              propName,
+              propName$34,
               -1,
               parentBoundary,
               boundarySegment,
-              newBoundary.fallbackPreamble,
-              newBoundary.fallbackState,
+              propName.fallbackState,
               fallbackAbortSet,
               [keyPath[0], "Suspense Fallback", keyPath[2]],
               task.formatContext,
@@ -4966,9 +4801,9 @@ function renderElement(request, task, keyPath, type, props, ref) {
       switch (type.$$typeof) {
         case REACT_FORWARD_REF_TYPE:
           if ("ref" in props)
-            for (newBoundary in ((newProps = {}), props))
-              "ref" !== newBoundary &&
-                (newProps[newBoundary] = props[newBoundary]);
+            for (boundarySegment in ((newProps = {}), props))
+              "ref" !== boundarySegment &&
+                (newProps[boundarySegment] = props[boundarySegment]);
           else newProps = props;
           type = renderWithHooks(
             request,
@@ -5162,27 +4997,17 @@ function retryNode(request, task) {
                         previousReplaySet = task.replay,
                         parentBoundary = task.blockedBoundary,
                         parentHoistableState = task.hoistableState,
-                        content = props.children,
-                        fallback = props.fallback,
-                        fallbackAbortSet = new Set();
-                      props =
-                        2 > task.formatContext.insertionMode
-                          ? createSuspenseBoundary(
-                              request,
-                              fallbackAbortSet,
-                              createPreambleState(),
-                              createPreambleState()
-                            )
-                          : createSuspenseBoundary(
-                              request,
-                              fallbackAbortSet,
-                              null,
-                              null
-                            );
-                      props.parentFlushed = !0;
-                      props.rootSegmentID = ref;
-                      task.blockedBoundary = props;
-                      task.hoistableState = props.contentState;
+                        content = props.children;
+                      props = props.fallback;
+                      var fallbackAbortSet = new Set(),
+                        resumedBoundary = createSuspenseBoundary(
+                          request,
+                          fallbackAbortSet
+                        );
+                      resumedBoundary.parentFlushed = !0;
+                      resumedBoundary.rootSegmentID = ref;
+                      task.blockedBoundary = resumedBoundary;
+                      task.hoistableState = resumedBoundary.contentState;
                       task.keyPath = key;
                       task.replay = {
                         nodes: replay,
@@ -5197,13 +5022,16 @@ function retryNode(request, task) {
                         )
                           throw Error(formatProdErrorMessage(488));
                         task.replay.pendingTasks--;
-                        if (0 === props.pendingTasks && 0 === props.status) {
-                          props.status = 1;
-                          request.completedBoundaries.push(props);
+                        if (
+                          0 === resumedBoundary.pendingTasks &&
+                          0 === resumedBoundary.status
+                        ) {
+                          resumedBoundary.status = 1;
+                          request.completedBoundaries.push(resumedBoundary);
                           break b;
                         }
                       } catch (error) {
-                        (props.status = 4),
+                        (resumedBoundary.status = 4),
                           (childNodes = getThrownInfo(task.componentStack)),
                           "object" === typeof error &&
                           null !== error &&
@@ -5215,9 +5043,11 @@ function retryNode(request, task) {
                                 error,
                                 childNodes
                               )),
-                          (props.errorDigest = type),
+                          (resumedBoundary.errorDigest = type),
                           task.replay.pendingTasks--,
-                          request.clientRenderedBoundaries.push(props);
+                          request.clientRenderedBoundaries.push(
+                            resumedBoundary
+                          );
                       } finally {
                         (task.blockedBoundary = parentBoundary),
                           (task.hoistableState = parentHoistableState),
@@ -5232,10 +5062,10 @@ function retryNode(request, task) {
                           slots: node$jscomp$0,
                           pendingTasks: 0
                         },
-                        fallback,
+                        props,
                         -1,
                         parentBoundary,
-                        props.fallbackState,
+                        resumedBoundary.fallbackState,
                         fallbackAbortSet,
                         [key[0], "Suspense Fallback", key[2]],
                         task.formatContext,
@@ -5563,7 +5393,6 @@ function spawnNewSuspendedRenderTask(request, task, thenableState) {
     task.childIndex,
     task.blockedBoundary,
     newSegment,
-    task.blockedPreamble,
     task.hoistableState,
     task.abortSet,
     task.keyPath,
@@ -5749,12 +5578,7 @@ function abortRemainingReplayNodes(
       node = node[5];
       var request = request$jscomp$0,
         errorDigest = errorDigest$jscomp$0,
-        resumedBoundary = createSuspenseBoundary(
-          request,
-          new Set(),
-          null,
-          null
-        );
+        resumedBoundary = createSuspenseBoundary(request, new Set());
       resumedBoundary.parentFlushed = !0;
       resumedBoundary.rootSegmentID = node;
       resumedBoundary.status = 4;
@@ -5938,7 +5762,6 @@ function safelyEmitEarlyPreloads(request, shellComplete) {
 }
 function completeShell(request) {
   null === request.trackedPostpones && safelyEmitEarlyPreloads(request, !0);
-  null === request.trackedPostpones && preparePreamble(request);
   request.onShellError = noop;
   request = request.onShellReady;
   request();
@@ -5951,7 +5774,6 @@ function completeAll(request) {
       : null === request.completedRootSegment ||
           5 !== request.completedRootSegment.status
   );
-  preparePreamble(request);
   request = request.onAllReady;
   request();
 }
@@ -5990,11 +5812,7 @@ function finishedTask(request, boundary, segment) {
               request.completedBoundaries.push(boundary),
             1 === boundary.status &&
               (boundary.fallbackAbortableTasks.forEach(abortTaskSoft, request),
-              boundary.fallbackAbortableTasks.clear(),
-              0 === request.pendingRootTasks &&
-                null === request.trackedPostpones &&
-                null !== boundary.contentPreamble &&
-                preparePreamble(request)))
+              boundary.fallbackAbortableTasks.clear()))
           : null !== segment &&
             segment.parentFlushed &&
             1 === segment.status &&
@@ -6186,11 +6004,7 @@ function performWork(request$jscomp$1) {
                         (boundary.errorDigest = request$jscomp$0),
                         untrackBoundary(request, boundary),
                         boundary.parentFlushed &&
-                          request.clientRenderedBoundaries.push(boundary),
-                        0 === request.pendingRootTasks &&
-                          null === request.trackedPostpones &&
-                          null !== boundary.contentPreamble &&
-                          preparePreamble(request)));
+                          request.clientRenderedBoundaries.push(boundary)));
                   request.allPendingTasks--;
                   0 === request.allPendingTasks && completeAll(request);
                 }
@@ -6214,82 +6028,6 @@ function performWork(request$jscomp$1) {
     }
   }
 }
-function preparePreambleFromSubtree(
-  request,
-  segment,
-  collectedPreambleSegments
-) {
-  segment.preambleChildren.length &&
-    collectedPreambleSegments.push(segment.preambleChildren);
-  for (var pendingPreambles = !1, i = 0; i < segment.children.length; i++)
-    pendingPreambles =
-      preparePreambleFromSegment(
-        request,
-        segment.children[i],
-        collectedPreambleSegments
-      ) || pendingPreambles;
-  return pendingPreambles;
-}
-function preparePreambleFromSegment(
-  request,
-  segment,
-  collectedPreambleSegments
-) {
-  var boundary = segment.boundary;
-  if (null === boundary)
-    return preparePreambleFromSubtree(
-      request,
-      segment,
-      collectedPreambleSegments
-    );
-  var preamble = boundary.contentPreamble,
-    fallbackPreamble = boundary.fallbackPreamble;
-  if (null === preamble || null === fallbackPreamble) return !1;
-  switch (boundary.status) {
-    case 1:
-      hoistPreambleState(request.renderState, preamble);
-      segment = boundary.completedSegments[0];
-      if (!segment) throw Error(formatProdErrorMessage(391));
-      return preparePreambleFromSubtree(
-        request,
-        segment,
-        collectedPreambleSegments
-      );
-    case 5:
-      if (null !== request.trackedPostpones) return !0;
-    case 4:
-      if (1 === segment.status)
-        return (
-          hoistPreambleState(request.renderState, fallbackPreamble),
-          preparePreambleFromSubtree(
-            request,
-            segment,
-            collectedPreambleSegments
-          )
-        );
-    default:
-      return !0;
-  }
-}
-function preparePreamble(request) {
-  if (
-    request.completedRootSegment &&
-    null === request.completedPreambleSegments
-  ) {
-    var collectedPreambleSegments = [],
-      hasPendingPreambles = preparePreambleFromSegment(
-        request,
-        request.completedRootSegment,
-        collectedPreambleSegments
-      ),
-      preamble = request.renderState.preamble;
-    if (
-      !1 === hasPendingPreambles ||
-      (preamble.headChunks && preamble.bodyChunks)
-    )
-      request.completedPreambleSegments = collectedPreambleSegments;
-  }
-}
 function flushSubtree(request, destination, segment, hoistableState) {
   segment.parentFlushed = !0;
   switch (segment.status) {
@@ -6332,27 +6070,21 @@ function flushSegment(request, destination, segment, hoistableState) {
   if (null === boundary)
     return flushSubtree(request, destination, segment, hoistableState);
   boundary.parentFlushed = !0;
-  if (4 === boundary.status) {
-    var errorDigest = boundary.errorDigest;
-    writeChunkAndReturn(destination, startClientRenderedSuspenseBoundary);
-    writeChunk(destination, clientRenderedSuspenseBoundaryError1);
-    errorDigest &&
-      (writeChunk(destination, clientRenderedSuspenseBoundaryError1A),
-      writeChunk(destination, stringToChunk(escapeTextForBrowser(errorDigest))),
-      writeChunk(
-        destination,
-        clientRenderedSuspenseBoundaryErrorAttrInterstitial
-      ));
-    writeChunkAndReturn(destination, clientRenderedSuspenseBoundaryError2);
-    flushSubtree(request, destination, segment, hoistableState);
-    (request = boundary.fallbackPreamble) &&
-      writePreambleContribution(destination, request);
-    return writeChunkAndReturn(destination, endSuspenseBoundary);
-  }
-  if (1 !== boundary.status)
-    return (
-      0 === boundary.status &&
-        (boundary.rootSegmentID = request.nextSegmentId++),
+  if (4 === boundary.status)
+    (boundary = boundary.errorDigest),
+      writeChunkAndReturn(destination, startClientRenderedSuspenseBoundary),
+      writeChunk(destination, clientRenderedSuspenseBoundaryError1),
+      boundary &&
+        (writeChunk(destination, clientRenderedSuspenseBoundaryError1A),
+        writeChunk(destination, stringToChunk(escapeTextForBrowser(boundary))),
+        writeChunk(
+          destination,
+          clientRenderedSuspenseBoundaryErrorAttrInterstitial
+        )),
+      writeChunkAndReturn(destination, clientRenderedSuspenseBoundaryError2),
+      flushSubtree(request, destination, segment, hoistableState);
+  else if (1 !== boundary.status)
+    0 === boundary.status && (boundary.rootSegmentID = request.nextSegmentId++),
       0 < boundary.completedSegments.length &&
         request.partialBoundaries.push(boundary),
       writeStartPendingSuspenseBoundary(
@@ -6367,31 +6099,26 @@ function flushSegment(request, destination, segment, hoistableState) {
           hoistStylesheetDependency,
           hoistableState
         )),
-      flushSubtree(request, destination, segment, hoistableState),
-      writeChunkAndReturn(destination, endSuspenseBoundary)
-    );
-  if (boundary.byteSize > request.progressiveChunkSize)
-    return (
-      (boundary.rootSegmentID = request.nextSegmentId++),
+      flushSubtree(request, destination, segment, hoistableState);
+  else if (boundary.byteSize > request.progressiveChunkSize)
+    (boundary.rootSegmentID = request.nextSegmentId++),
       request.completedBoundaries.push(boundary),
       writeStartPendingSuspenseBoundary(
         destination,
         request.renderState,
         boundary.rootSegmentID
       ),
-      flushSubtree(request, destination, segment, hoistableState),
-      writeChunkAndReturn(destination, endSuspenseBoundary)
-    );
-  hoistableState &&
-    ((segment = boundary.contentState),
-    segment.styles.forEach(hoistStyleQueueDependency, hoistableState),
-    segment.stylesheets.forEach(hoistStylesheetDependency, hoistableState));
-  writeChunkAndReturn(destination, startCompletedSuspenseBoundary);
-  segment = boundary.completedSegments;
-  if (1 !== segment.length) throw Error(formatProdErrorMessage(391));
-  flushSegment(request, destination, segment[0], hoistableState);
-  (request = boundary.contentPreamble) &&
-    writePreambleContribution(destination, request);
+      flushSubtree(request, destination, segment, hoistableState);
+  else {
+    hoistableState &&
+      ((segment = boundary.contentState),
+      segment.styles.forEach(hoistStyleQueueDependency, hoistableState),
+      segment.stylesheets.forEach(hoistStylesheetDependency, hoistableState));
+    writeChunkAndReturn(destination, startCompletedSuspenseBoundary);
+    segment = boundary.completedSegments;
+    if (1 !== segment.length) throw Error(formatProdErrorMessage(391));
+    flushSegment(request, destination, segment[0], hoistableState);
+  }
   return writeChunkAndReturn(destination, endSuspenseBoundary);
 }
 function flushSegmentContainer(request, destination, segment, hoistableState) {
@@ -6517,8 +6244,6 @@ function flushCompletedQueues(request, destination) {
         completedRootSegment = request.completedRootSegment;
       if (null !== completedRootSegment) {
         if (5 === completedRootSegment.status) return;
-        var completedPreambleSegments = request.completedPreambleSegments;
-        if (null === completedPreambleSegments) return;
         var renderState = request.renderState;
         if (
           (0 !== request.allPendingTasks ||
@@ -6533,9 +6258,8 @@ function flushCompletedQueues(request, destination) {
             ((resumableState.scriptResources[src] = null),
             renderState.scripts.add(chunks));
         }
-        var preamble = renderState.preamble,
-          htmlChunks = preamble.htmlChunks,
-          headChunks = preamble.headChunks,
+        var htmlChunks = renderState.htmlChunks,
+          headChunks = renderState.headChunks,
           i$jscomp$0;
         if (htmlChunks) {
           for (i$jscomp$0 = 0; i$jscomp$0 < htmlChunks.length; i$jscomp$0++)
@@ -6576,36 +6300,10 @@ function flushCompletedQueues(request, destination) {
         var hoistableChunks = renderState.hoistableChunks;
         for (i$jscomp$0 = 0; i$jscomp$0 < hoistableChunks.length; i$jscomp$0++)
           writeChunk(destination, hoistableChunks[i$jscomp$0]);
-        for (
-          renderState = hoistableChunks.length = 0;
-          renderState < completedPreambleSegments.length;
-          renderState++
-        ) {
-          var segments = completedPreambleSegments[renderState];
-          for (
-            _renderState$external = 0;
-            _renderState$external < segments.length;
-            _renderState$external++
-          )
-            flushSegment(
-              request,
-              destination,
-              segments[_renderState$external],
-              null
-            );
-        }
-        var preamble$jscomp$0 = request.renderState.preamble,
-          headChunks$jscomp$0 = preamble$jscomp$0.headChunks;
-        (preamble$jscomp$0.htmlChunks || headChunks$jscomp$0) &&
+        hoistableChunks.length = 0;
+        htmlChunks &&
+          null === headChunks &&
           writeChunk(destination, endChunkForTag("head"));
-        var bodyChunks = preamble$jscomp$0.bodyChunks;
-        if (bodyChunks)
-          for (
-            completedPreambleSegments = 0;
-            completedPreambleSegments < bodyChunks.length;
-            completedPreambleSegments++
-          )
-            writeChunk(destination, bodyChunks[completedPreambleSegments]);
         flushSegment(request, destination, completedRootSegment, null);
         request.completedRootSegment = null;
         writeBootstrap(destination, request.renderState);
@@ -6854,19 +6552,11 @@ function getPostponedState(request) {
   )
     return (request.trackedPostpones = null);
   if (
-    null === request.completedRootSegment ||
-    (5 !== request.completedRootSegment.status &&
-      null !== request.completedPreambleSegments)
+    null !== request.completedRootSegment &&
+    5 === request.completedRootSegment.status
   ) {
-    var replaySlots = trackedPostpones.rootSlots;
-    var resumableState = request.resumableState;
-    resumableState.bootstrapScriptContent = void 0;
-    resumableState.bootstrapScripts = void 0;
-    resumableState.bootstrapModules = void 0;
-  } else {
-    replaySlots = request.completedRootSegment.id;
-    resumableState = request.resumableState;
-    var renderState = request.renderState;
+    var resumableState = request.resumableState,
+      renderState = request.renderState;
     resumableState.nextFormID = 0;
     resumableState.hasBody = !1;
     resumableState.hasHtml = !1;
@@ -6878,24 +6568,28 @@ function getPostponedState(request) {
     resumableState.scriptResources = {};
     resumableState.moduleUnknownResources = {};
     resumableState.moduleScriptResources = {};
-  }
+  } else
+    (resumableState = request.resumableState),
+      (resumableState.bootstrapScriptContent = void 0),
+      (resumableState.bootstrapScripts = void 0),
+      (resumableState.bootstrapModules = void 0);
   return {
     nextSegmentId: request.nextSegmentId,
     rootFormatContext: request.rootFormatContext,
     progressiveChunkSize: request.progressiveChunkSize,
     resumableState: request.resumableState,
     replayNodes: trackedPostpones.rootNodes,
-    replaySlots: replaySlots
+    replaySlots: trackedPostpones.rootSlots
   };
 }
 function ensureCorrectIsomorphicReactVersion() {
   var isomorphicReactPackageVersion = React.version;
-  if ("19.1.0-experimental-e670e72f-20250214" !== isomorphicReactPackageVersion)
+  if ("19.1.0-experimental-b3a95caf-20250113" !== isomorphicReactPackageVersion)
     throw Error(
       formatProdErrorMessage(
         527,
         isomorphicReactPackageVersion,
-        "19.1.0-experimental-e670e72f-20250214"
+        "19.1.0-experimental-b3a95caf-20250113"
       )
     );
 }
@@ -7150,4 +6844,4 @@ exports.resumeAndPrerender = function (children, postponedState, options) {
     startWork(request);
   });
 };
-exports.version = "19.1.0-experimental-e670e72f-20250214";
+exports.version = "19.1.0-experimental-b3a95caf-20250113";
diff --git a/node_modules/react-dom/cjs/react-dom-server.bun.development.js b/node_modules/react-dom/cjs/react-dom-server.bun.development.js
index e50175a..74ecefc 100644
--- a/node_modules/react-dom/cjs/react-dom-server.bun.development.js
+++ b/node_modules/react-dom/cjs/react-dom-server.bun.development.js
@@ -27,7 +27,6 @@ var React = require("react"),
   REACT_SCOPE_TYPE = Symbol.for("react.scope"),
   REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen"),
   REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden"),
-  REACT_MEMO_CACHE_SENTINEL = Symbol.for("react.memo_cache_sentinel"),
   REACT_POSTPONE_TYPE = Symbol.for("react.postpone"),
   REACT_VIEW_TRANSITION_TYPE = Symbol.for("react.view_transition"),
   MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
@@ -1446,26 +1445,26 @@ function createRenderState(
       "React expected a positive non-zero `maxHeadersLength` option but found %s instead. When using the `onHeaders` option you may supply an optional `maxHeadersLength` option as well however, when setting this value to zero or less no headers will be captured.",
       0 === maxHeadersLength ? "zero" : maxHeadersLength
     );
-  importMap = onHeaders
-    ? {
-        preconnects: "",
-        fontPreloads: "",
-        highImagePreloads: "",
-        remainingCapacity:
-          2 + ("number" === typeof maxHeadersLength ? maxHeadersLength : 2e3)
-      }
-    : null;
-  onHeaders = {
+  importMap = {
     placeholderPrefix: idPrefix + "P:",
     segmentPrefix: idPrefix + "S:",
     boundaryPrefix: idPrefix + "B:",
     startInlineScript: inlineScriptWithNonce,
-    preamble: createPreambleState(),
+    htmlChunks: null,
+    headChunks: null,
     externalRuntimeScript: externalRuntimeScript,
     bootstrapChunks: bootstrapChunks,
     importMapChunks: externalRuntimeConfig,
     onHeaders: onHeaders,
-    headers: importMap,
+    headers: onHeaders
+      ? {
+          preconnects: "",
+          fontPreloads: "",
+          highImagePreloads: "",
+          remainingCapacity:
+            2 + ("number" === typeof maxHeadersLength ? maxHeadersLength : 2e3)
+        }
+      : null,
     resets: {
       font: {},
       dns: {},
@@ -1494,53 +1493,51 @@ function createRenderState(
     stylesToHoist: !1
   };
   if (void 0 !== bootstrapScripts)
-    for (
-      inlineScriptWithNonce = 0;
-      inlineScriptWithNonce < bootstrapScripts.length;
-      inlineScriptWithNonce++
-    )
-      (idPrefix = bootstrapScripts[inlineScriptWithNonce]),
-        (maxHeadersLength = importMap = void 0),
+    for (onHeaders = 0; onHeaders < bootstrapScripts.length; onHeaders++)
+      (maxHeadersLength = bootstrapScripts[onHeaders]),
+        (externalRuntimeScript = idPrefix = void 0),
         (externalRuntimeConfig = {
           rel: "preload",
           as: "script",
           fetchPriority: "low",
           nonce: nonce
         }),
-        "string" === typeof idPrefix
-          ? (externalRuntimeConfig.href = externalRuntimeScript = idPrefix)
-          : ((externalRuntimeConfig.href = externalRuntimeScript =
-              idPrefix.src),
-            (externalRuntimeConfig.integrity = maxHeadersLength =
-              "string" === typeof idPrefix.integrity
-                ? idPrefix.integrity
+        "string" === typeof maxHeadersLength
+          ? (externalRuntimeConfig.href = inlineScriptWithNonce =
+              maxHeadersLength)
+          : ((externalRuntimeConfig.href = inlineScriptWithNonce =
+              maxHeadersLength.src),
+            (externalRuntimeConfig.integrity = externalRuntimeScript =
+              "string" === typeof maxHeadersLength.integrity
+                ? maxHeadersLength.integrity
                 : void 0),
-            (externalRuntimeConfig.crossOrigin = importMap =
-              "string" === typeof idPrefix || null == idPrefix.crossOrigin
+            (externalRuntimeConfig.crossOrigin = idPrefix =
+              "string" === typeof maxHeadersLength ||
+              null == maxHeadersLength.crossOrigin
                 ? void 0
-                : "use-credentials" === idPrefix.crossOrigin
+                : "use-credentials" === maxHeadersLength.crossOrigin
                   ? "use-credentials"
                   : "")),
         preloadBootstrapScriptOrModule(
           resumableState,
-          onHeaders,
-          externalRuntimeScript,
+          importMap,
+          inlineScriptWithNonce,
           externalRuntimeConfig
         ),
         bootstrapChunks.push(
           '<script src="',
-          escapeTextForBrowser(externalRuntimeScript)
+          escapeTextForBrowser(inlineScriptWithNonce)
         ),
         nonce && bootstrapChunks.push('" nonce="', escapeTextForBrowser(nonce)),
-        "string" === typeof maxHeadersLength &&
+        "string" === typeof externalRuntimeScript &&
           bootstrapChunks.push(
             '" integrity="',
-            escapeTextForBrowser(maxHeadersLength)
+            escapeTextForBrowser(externalRuntimeScript)
           ),
-        "string" === typeof importMap &&
+        "string" === typeof idPrefix &&
           bootstrapChunks.push(
             '" crossorigin="',
-            escapeTextForBrowser(importMap)
+            escapeTextForBrowser(idPrefix)
           ),
         bootstrapChunks.push('" async="">\x3c/script>');
   if (void 0 !== bootstrapModules)
@@ -1549,50 +1546,46 @@ function createRenderState(
       bootstrapScripts < bootstrapModules.length;
       bootstrapScripts++
     )
-      (inlineScriptWithNonce = bootstrapModules[bootstrapScripts]),
-        (importMap = externalRuntimeScript = void 0),
-        (maxHeadersLength = {
+      (onHeaders = bootstrapModules[bootstrapScripts]),
+        (idPrefix = inlineScriptWithNonce = void 0),
+        (externalRuntimeScript = {
           rel: "modulepreload",
           fetchPriority: "low",
           nonce: nonce
         }),
-        "string" === typeof inlineScriptWithNonce
-          ? (maxHeadersLength.href = idPrefix = inlineScriptWithNonce)
-          : ((maxHeadersLength.href = idPrefix = inlineScriptWithNonce.src),
-            (maxHeadersLength.integrity = importMap =
-              "string" === typeof inlineScriptWithNonce.integrity
-                ? inlineScriptWithNonce.integrity
+        "string" === typeof onHeaders
+          ? (externalRuntimeScript.href = maxHeadersLength = onHeaders)
+          : ((externalRuntimeScript.href = maxHeadersLength = onHeaders.src),
+            (externalRuntimeScript.integrity = idPrefix =
+              "string" === typeof onHeaders.integrity
+                ? onHeaders.integrity
                 : void 0),
-            (maxHeadersLength.crossOrigin = externalRuntimeScript =
-              "string" === typeof inlineScriptWithNonce ||
-              null == inlineScriptWithNonce.crossOrigin
+            (externalRuntimeScript.crossOrigin = inlineScriptWithNonce =
+              "string" === typeof onHeaders || null == onHeaders.crossOrigin
                 ? void 0
-                : "use-credentials" === inlineScriptWithNonce.crossOrigin
+                : "use-credentials" === onHeaders.crossOrigin
                   ? "use-credentials"
                   : "")),
         preloadBootstrapScriptOrModule(
           resumableState,
-          onHeaders,
-          idPrefix,
-          maxHeadersLength
+          importMap,
+          maxHeadersLength,
+          externalRuntimeScript
         ),
         bootstrapChunks.push(
           '<script type="module" src="',
-          escapeTextForBrowser(idPrefix)
+          escapeTextForBrowser(maxHeadersLength)
         ),
         nonce && bootstrapChunks.push('" nonce="', escapeTextForBrowser(nonce)),
-        "string" === typeof importMap &&
-          bootstrapChunks.push(
-            '" integrity="',
-            escapeTextForBrowser(importMap)
-          ),
-        "string" === typeof externalRuntimeScript &&
+        "string" === typeof idPrefix &&
+          bootstrapChunks.push('" integrity="', escapeTextForBrowser(idPrefix)),
+        "string" === typeof inlineScriptWithNonce &&
           bootstrapChunks.push(
             '" crossorigin="',
-            escapeTextForBrowser(externalRuntimeScript)
+            escapeTextForBrowser(inlineScriptWithNonce)
           ),
         bootstrapChunks.push('" async="">\x3c/script>');
-  return onHeaders;
+  return importMap;
 }
 function createResumableState(
   identifierPrefix,
@@ -1623,25 +1616,15 @@ function createResumableState(
     moduleScriptResources: {}
   };
 }
-var NoContribution = 0;
-function createPreambleState() {
-  return {
-    htmlChunks: null,
-    headChunks: null,
-    bodyChunks: null,
-    contribution: NoContribution
-  };
-}
 var ROOT_HTML_MODE = 0,
   HTML_HTML_MODE = 1,
   HTML_MODE = 2,
-  HTML_HEAD_MODE = 3,
-  SVG_MODE = 4,
-  MATHML_MODE = 5,
-  HTML_TABLE_MODE = 6,
-  HTML_TABLE_BODY_MODE = 7,
-  HTML_TABLE_ROW_MODE = 8,
-  HTML_COLGROUP_MODE = 9;
+  SVG_MODE = 3,
+  MATHML_MODE = 4,
+  HTML_TABLE_MODE = 5,
+  HTML_TABLE_BODY_MODE = 6,
+  HTML_TABLE_ROW_MODE = 7,
+  HTML_COLGROUP_MODE = 8;
 function createFormatContext(insertionMode, selectedValue, tagScope) {
   return {
     insertionMode: insertionMode,
@@ -1700,26 +1683,16 @@ function getChildFormatContext(parentContext, type, props) {
         null,
         parentContext.tagScope
       );
-    case "head":
-      if (parentContext.insertionMode < HTML_MODE)
-        return createFormatContext(
-          HTML_HEAD_MODE,
-          null,
-          parentContext.tagScope
-        );
-      break;
-    case "html":
-      if (parentContext.insertionMode === ROOT_HTML_MODE)
-        return createFormatContext(
-          HTML_HTML_MODE,
-          null,
-          parentContext.tagScope
-        );
   }
-  return parentContext.insertionMode >= HTML_TABLE_MODE ||
-    parentContext.insertionMode < HTML_MODE
+  return parentContext.insertionMode >= HTML_TABLE_MODE
     ? createFormatContext(HTML_MODE, null, parentContext.tagScope)
-    : parentContext;
+    : parentContext.insertionMode === ROOT_HTML_MODE
+      ? "html" === type
+        ? createFormatContext(HTML_HTML_MODE, null, parentContext.tagScope)
+        : createFormatContext(HTML_MODE, null, parentContext.tagScope)
+      : parentContext.insertionMode === HTML_HTML_MODE
+        ? createFormatContext(HTML_MODE, null, parentContext.tagScope)
+        : parentContext;
 }
 function pushTextInstance(target, text, renderState, textEmbedded) {
   if ("" === text) return textEmbedded;
@@ -2372,29 +2345,6 @@ function pushScriptImpl(target, props) {
   target.push(endChunkForTag("script"));
   return null;
 }
-function pushStartSingletonElement(target, props, tag) {
-  target.push(startChunkForTag(tag));
-  var innerHTML = (tag = null),
-    propKey;
-  for (propKey in props)
-    if (hasOwnProperty.call(props, propKey)) {
-      var propValue = props[propKey];
-      if (null != propValue)
-        switch (propKey) {
-          case "children":
-            tag = propValue;
-            break;
-          case "dangerouslySetInnerHTML":
-            innerHTML = propValue;
-            break;
-          default:
-            pushAttribute(target, propKey, propValue);
-        }
-    }
-  target.push(endOfStartTag);
-  pushInnerHTML(target, innerHTML, tag);
-  return tag;
-}
 function pushStartGenericElement(target, props, tag) {
   target.push(startChunkForTag(tag));
   var innerHTML = (tag = null),
@@ -2437,7 +2387,6 @@ function pushStartInstance(
   props,
   resumableState,
   renderState,
-  preambleState,
   hoistableState,
   formatContext,
   textEmbedded,
@@ -3572,13 +3521,13 @@ function pushStartInstance(
     case "missing-glyph":
       break;
     case "head":
-      if (formatContext.insertionMode < HTML_MODE) {
-        var preamble = preambleState || renderState.preamble;
-        if (preamble.headChunks)
-          throw Error("The `<head>` tag may only be rendered once.");
-        preamble.headChunks = [];
-        var JSCompiler_inline_result$jscomp$9 = pushStartSingletonElement(
-          preamble.headChunks,
+      if (
+        formatContext.insertionMode < HTML_MODE &&
+        null === renderState.headChunks
+      ) {
+        renderState.headChunks = [];
+        var JSCompiler_inline_result$jscomp$9 = pushStartGenericElement(
+          renderState.headChunks,
           props,
           "head"
         );
@@ -3589,42 +3538,24 @@ function pushStartInstance(
           "head"
         );
       return JSCompiler_inline_result$jscomp$9;
-    case "body":
-      if (formatContext.insertionMode < HTML_MODE) {
-        var preamble$jscomp$0 = preambleState || renderState.preamble;
-        if (preamble$jscomp$0.bodyChunks)
-          throw Error("The `<body>` tag may only be rendered once.");
-        preamble$jscomp$0.bodyChunks = [];
-        var JSCompiler_inline_result$jscomp$10 = pushStartSingletonElement(
-          preamble$jscomp$0.bodyChunks,
-          props,
-          "body"
-        );
-      } else
-        JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
-          target$jscomp$0,
-          props,
-          "body"
-        );
-      return JSCompiler_inline_result$jscomp$10;
     case "html":
-      if (formatContext.insertionMode === ROOT_HTML_MODE) {
-        var preamble$jscomp$1 = preambleState || renderState.preamble;
-        if (preamble$jscomp$1.htmlChunks)
-          throw Error("The `<html>` tag may only be rendered once.");
-        preamble$jscomp$1.htmlChunks = ["<!DOCTYPE html>"];
-        var JSCompiler_inline_result$jscomp$11 = pushStartSingletonElement(
-          preamble$jscomp$1.htmlChunks,
+      if (
+        formatContext.insertionMode === ROOT_HTML_MODE &&
+        null === renderState.htmlChunks
+      ) {
+        renderState.htmlChunks = ["<!DOCTYPE html>"];
+        var JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
+          renderState.htmlChunks,
           props,
           "html"
         );
       } else
-        JSCompiler_inline_result$jscomp$11 = pushStartGenericElement(
+        JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
           target$jscomp$0,
           props,
           "html"
         );
-      return JSCompiler_inline_result$jscomp$11;
+      return JSCompiler_inline_result$jscomp$10;
     default:
       if (-1 !== type.indexOf("-")) {
         target$jscomp$0.push(startChunkForTag(type));
@@ -3685,21 +3616,6 @@ function endChunkForTag(tag) {
   void 0 === chunk && ((chunk = "</" + tag + ">"), endTagCache.set(tag, chunk));
   return chunk;
 }
-function hoistPreambleState(renderState, preambleState) {
-  renderState = renderState.preamble;
-  null === renderState.htmlChunks &&
-    preambleState.htmlChunks &&
-    ((renderState.htmlChunks = preambleState.htmlChunks),
-    (preambleState.contribution |= 1));
-  null === renderState.headChunks &&
-    preambleState.headChunks &&
-    ((renderState.headChunks = preambleState.headChunks),
-    (preambleState.contribution |= 4));
-  null === renderState.bodyChunks &&
-    preambleState.bodyChunks &&
-    ((renderState.bodyChunks = preambleState.bodyChunks),
-    (preambleState.contribution |= 2));
-}
 function writeBootstrap(destination, renderState) {
   renderState = renderState.bootstrapChunks;
   for (var i = 0; i < renderState.length - 1; i++)
@@ -3732,15 +3648,6 @@ function writeStartPendingSuspenseBoundary(destination, renderState, id) {
   writeChunk(destination, id.toString(16));
   return !!destination.write(startPendingSuspenseBoundary2);
 }
-var boundaryPreambleContributionChunkStart = "\x3c!--",
-  boundaryPreambleContributionChunkEnd = "--\x3e";
-function writePreambleContribution(destination, preambleState) {
-  preambleState = preambleState.contribution;
-  preambleState !== NoContribution &&
-    (writeChunk(destination, boundaryPreambleContributionChunkStart),
-    writeChunk(destination, "" + preambleState),
-    writeChunk(destination, boundaryPreambleContributionChunkEnd));
-}
 var startSegmentHTML = '<div hidden id="',
   startSegmentHTML2 = '">',
   endSegmentHTML = "</div>",
@@ -3766,7 +3673,6 @@ function writeStartSegment(destination, renderState, formatContext, id) {
   switch (formatContext.insertionMode) {
     case ROOT_HTML_MODE:
     case HTML_HTML_MODE:
-    case HTML_HEAD_MODE:
     case HTML_MODE:
       return (
         writeChunk(destination, startSegmentHTML),
@@ -3824,7 +3730,6 @@ function writeEndSegment(destination, formatContext) {
   switch (formatContext.insertionMode) {
     case ROOT_HTML_MODE:
     case HTML_HTML_MODE:
-    case HTML_HEAD_MODE:
     case HTML_MODE:
       return !!destination.write(endSegmentHTML);
     case SVG_MODE:
@@ -5253,12 +5158,6 @@ function readPreviousThenableFromState() {
       index
     );
 }
-function unsupportedRefresh() {
-  throw Error("Cache cannot be refreshed during server rendering.");
-}
-function unsupportedStartGesture() {
-  throw Error("startGesture cannot be called during server rendering.");
-}
 function noop$1() {}
 var HooksDispatcher = {
     readContext: readContext,
@@ -5341,20 +5240,8 @@ var HooksDispatcher = {
       resolveCurrentlyRenderingComponent();
       return NotPending;
     },
-    useMemoCache: function (size) {
-      for (var data = Array(size), i = 0; i < size; i++)
-        data[i] = REACT_MEMO_CACHE_SENTINEL;
-      return data;
-    },
-    useCacheRefresh: function () {
-      return unsupportedRefresh;
-    },
     useEffectEvent: function () {
       return throwOnUseEffectEventCall;
-    },
-    useSwipeTransition: function (previous, current) {
-      resolveCurrentlyRenderingComponent();
-      return [current, unsupportedStartGesture];
     }
   },
   currentResumableState = null,
@@ -5736,7 +5623,7 @@ function RequestInstance(
   this.status = 10;
   this.fatalError = null;
   this.pendingRootTasks = this.allPendingTasks = this.nextSegmentId = 0;
-  this.completedPreambleSegments = this.completedRootSegment = null;
+  this.completedRootSegment = null;
   this.abortableTasks = abortSet;
   this.pingedTasks = [];
   this.clientRenderedBoundaries = [];
@@ -5796,7 +5683,6 @@ function createRequest(
     null,
     renderState,
     null,
-    null,
     resumableState.abortableTasks,
     null,
     rootFormatContext,
@@ -5824,12 +5710,7 @@ function pingTask(request, task) {
           return performWork(request);
         }, 0));
 }
-function createSuspenseBoundary(
-  request,
-  fallbackAbortableTasks,
-  contentPreamble,
-  fallbackPreamble
-) {
+function createSuspenseBoundary(request, fallbackAbortableTasks) {
   return {
     status: PENDING,
     rootSegmentID: -1,
@@ -5841,8 +5722,6 @@ function createSuspenseBoundary(
     errorDigest: null,
     contentState: createHoistableState(),
     fallbackState: createHoistableState(),
-    contentPreamble: contentPreamble,
-    fallbackPreamble: fallbackPreamble,
     trackedContentKeyPath: null,
     trackedFallbackNode: null,
     errorMessage: null,
@@ -5857,7 +5736,6 @@ function createRenderTask(
   childIndex,
   blockedBoundary,
   blockedSegment,
-  blockedPreamble,
   hoistableState,
   abortSet,
   keyPath,
@@ -5882,7 +5760,6 @@ function createRenderTask(
     },
     blockedBoundary: blockedBoundary,
     blockedSegment: blockedSegment,
-    blockedPreamble: blockedPreamble,
     hoistableState: hoistableState,
     abortSet: abortSet,
     keyPath: keyPath,
@@ -5929,7 +5806,6 @@ function createReplayTask(
     },
     blockedBoundary: blockedBoundary,
     blockedSegment: null,
-    blockedPreamble: null,
     hoistableState: hoistableState,
     abortSet: abortSet,
     keyPath: keyPath,
@@ -5954,12 +5830,11 @@ function createPendingSegment(
 ) {
   return {
     status: PENDING,
-    parentFlushed: !1,
     id: -1,
     index: index,
+    parentFlushed: !1,
     chunks: [],
     children: [],
-    preambleChildren: [],
     parentFormatContext: parentFormatContext,
     boundary: boundary,
     lastPushedText: lastPushedText,
@@ -6624,7 +6499,6 @@ function renderElement(request, task, keyPath, type, props, ref) {
         props,
         request.resumableState,
         request.renderState,
-        task.blockedPreamble,
         task.hoistableState,
         task.formatContext,
         segment.lastPushedText,
@@ -6633,42 +6507,9 @@ function renderElement(request, task, keyPath, type, props, ref) {
       segment.lastPushedText = !1;
       var _prevContext = task.formatContext,
         _prevKeyPath2 = task.keyPath;
+      task.formatContext = getChildFormatContext(_prevContext, type, props);
       task.keyPath = keyPath;
-      if (
-        (task.formatContext = getChildFormatContext(_prevContext, type, props))
-          .insertionMode === HTML_HEAD_MODE
-      ) {
-        var preambleSegment = createPendingSegment(
-          request,
-          0,
-          null,
-          task.formatContext,
-          !1,
-          !1
-        );
-        segment.preambleChildren.push(preambleSegment);
-        var preambleTask = createRenderTask(
-          request,
-          null,
-          _children,
-          -1,
-          task.blockedBoundary,
-          preambleSegment,
-          task.blockedPreamble,
-          task.hoistableState,
-          request.abortableTasks,
-          task.keyPath,
-          task.formatContext,
-          task.context,
-          task.treeContext,
-          task.componentStack,
-          task.isFallback,
-          emptyContextObject,
-          task.debugTask
-        );
-        pushComponentStack(preambleTask);
-        request.pingedTasks.push(preambleTask);
-      } else renderNode(request, task, _children, -1);
+      renderNode(request, task, _children, -1);
       task.formatContext = _prevContext;
       task.keyPath = _prevKeyPath2;
       a: {
@@ -6705,9 +6546,6 @@ function renderElement(request, task, keyPath, type, props, ref) {
               resumableState.hasHtml = !0;
               break a;
             }
-            break;
-          case "head":
-            if (_prevContext.insertionMode <= HTML_HTML_MODE) break a;
         }
         target.push(endChunkForTag(type));
       }
@@ -6759,21 +6597,12 @@ function renderElement(request, task, keyPath, type, props, ref) {
         } else {
           var prevKeyPath$jscomp$3 = task.keyPath,
             parentBoundary = task.blockedBoundary,
-            parentPreamble = task.blockedPreamble,
             parentHoistableState = task.hoistableState,
             parentSegment = task.blockedSegment,
             fallback = props.fallback,
             content = props.children,
-            fallbackAbortSet = new Set();
-          var newBoundary =
-            task.formatContext.insertionMode < HTML_MODE
-              ? createSuspenseBoundary(
-                  request,
-                  fallbackAbortSet,
-                  createPreambleState(),
-                  createPreambleState()
-                )
-              : createSuspenseBoundary(request, fallbackAbortSet, null, null);
+            fallbackAbortSet = new Set(),
+            newBoundary = createSuspenseBoundary(request, fallbackAbortSet);
           null !== request.trackedPostpones &&
             (newBoundary.trackedContentKeyPath = keyPath);
           var boundarySegment = createPendingSegment(
@@ -6809,7 +6638,6 @@ function renderElement(request, task, keyPath, type, props, ref) {
             );
             newBoundary.trackedFallbackNode = fallbackReplayNode;
             task.blockedSegment = boundarySegment;
-            task.blockedPreamble = newBoundary.fallbackPreamble;
             task.keyPath = fallbackKeyPath;
             boundarySegment.status = 6;
             try {
@@ -6825,7 +6653,6 @@ function renderElement(request, task, keyPath, type, props, ref) {
               );
             } finally {
               (task.blockedSegment = parentSegment),
-                (task.blockedPreamble = parentPreamble),
                 (task.keyPath = prevKeyPath$jscomp$3);
             }
             var suspendedPrimaryTask = createRenderTask(
@@ -6835,7 +6662,6 @@ function renderElement(request, task, keyPath, type, props, ref) {
               -1,
               newBoundary,
               contentRootSegment,
-              newBoundary.contentPreamble,
               newBoundary.contentState,
               task.abortSet,
               keyPath,
@@ -6851,7 +6677,6 @@ function renderElement(request, task, keyPath, type, props, ref) {
             request.pingedTasks.push(suspendedPrimaryTask);
           } else {
             task.blockedBoundary = newBoundary;
-            task.blockedPreamble = newBoundary.contentPreamble;
             task.hoistableState = newBoundary.contentState;
             task.blockedSegment = contentRootSegment;
             task.keyPath = keyPath;
@@ -6868,9 +6693,6 @@ function renderElement(request, task, keyPath, type, props, ref) {
                   newBoundary.status === PENDING)
               ) {
                 newBoundary.status = COMPLETED;
-                0 === request.pendingRootTasks &&
-                  task.blockedPreamble &&
-                  preparePreamble(request);
                 break a;
               }
             } catch (thrownValue$2) {
@@ -6904,7 +6726,6 @@ function renderElement(request, task, keyPath, type, props, ref) {
               untrackBoundary(request, newBoundary);
             } finally {
               (task.blockedBoundary = parentBoundary),
-                (task.blockedPreamble = parentPreamble),
                 (task.hoistableState = parentHoistableState),
                 (task.blockedSegment = parentSegment),
                 (task.keyPath = prevKeyPath$jscomp$3);
@@ -6916,7 +6737,6 @@ function renderElement(request, task, keyPath, type, props, ref) {
               -1,
               parentBoundary,
               boundarySegment,
-              newBoundary.fallbackPreamble,
               newBoundary.fallbackState,
               fallbackAbortSet,
               [keyPath[0], "Suspense Fallback", keyPath[2]],
@@ -7152,22 +6972,14 @@ function replayElement(
             previousReplaySet = task.replay,
             parentBoundary = task.blockedBoundary,
             parentHoistableState = task.hoistableState,
-            content = props.children,
-            fallback = props.fallback,
-            fallbackAbortSet = new Set();
-          props =
-            task.formatContext.insertionMode < HTML_MODE
-              ? createSuspenseBoundary(
-                  request,
-                  fallbackAbortSet,
-                  createPreambleState(),
-                  createPreambleState()
-                )
-              : createSuspenseBoundary(request, fallbackAbortSet, null, null);
-          props.parentFlushed = !0;
-          props.rootSegmentID = type;
-          task.blockedBoundary = props;
-          task.hoistableState = props.contentState;
+            content = props.children;
+          props = props.fallback;
+          var fallbackAbortSet = new Set(),
+            resumedBoundary = createSuspenseBoundary(request, fallbackAbortSet);
+          resumedBoundary.parentFlushed = !0;
+          resumedBoundary.rootSegmentID = type;
+          task.blockedBoundary = resumedBoundary;
+          task.hoistableState = resumedBoundary.contentState;
           task.keyPath = keyPath;
           task.replay = { nodes: ref, slots: name, pendingTasks: 1 };
           try {
@@ -7177,13 +6989,16 @@ function replayElement(
                 "Couldn't find all resumable slots by key/index during replaying. The tree doesn't match so React will fallback to client rendering."
               );
             task.replay.pendingTasks--;
-            if (0 === props.pendingTasks && props.status === PENDING) {
-              props.status = COMPLETED;
-              request.completedBoundaries.push(props);
+            if (
+              0 === resumedBoundary.pendingTasks &&
+              resumedBoundary.status === PENDING
+            ) {
+              resumedBoundary.status = COMPLETED;
+              request.completedBoundaries.push(resumedBoundary);
               break a;
             }
           } catch (error) {
-            (props.status = CLIENT_RENDERED),
+            (resumedBoundary.status = CLIENT_RENDERED),
               (childNodes = getThrownInfo(task.componentStack)),
               "object" === typeof error &&
               null !== error &&
@@ -7201,9 +7016,15 @@ function replayElement(
                     childNodes,
                     task.debugTask
                   )),
-              encodeErrorForBoundary(props, replay, error, childNodes, !1),
+              encodeErrorForBoundary(
+                resumedBoundary,
+                replay,
+                error,
+                childNodes,
+                !1
+              ),
               task.replay.pendingTasks--,
-              request.clientRenderedBoundaries.push(props);
+              request.clientRenderedBoundaries.push(resumedBoundary);
           } finally {
             (task.blockedBoundary = parentBoundary),
               (task.hoistableState = parentHoistableState),
@@ -7214,10 +7035,10 @@ function replayElement(
             request,
             null,
             { nodes: keyOrIndex, slots: node, pendingTasks: 0 },
-            fallback,
+            props,
             -1,
             parentBoundary,
-            props.fallbackState,
+            resumedBoundary.fallbackState,
             fallbackAbortSet,
             [keyPath[0], "Suspense Fallback", keyPath[2]],
             task.formatContext,
@@ -7753,7 +7574,6 @@ function spawnNewSuspendedRenderTask(request, task, thenableState) {
     task.childIndex,
     task.blockedBoundary,
     newSegment,
-    task.blockedPreamble,
     task.hoistableState,
     task.abortSet,
     task.keyPath,
@@ -7958,12 +7778,7 @@ function abortRemainingReplayNodes(
         errorDigest = errorDigest$jscomp$0,
         errorInfo = errorInfo$jscomp$0,
         wasAborted = aborted,
-        resumedBoundary = createSuspenseBoundary(
-          request,
-          new Set(),
-          null,
-          null
-        );
+        resumedBoundary = createSuspenseBoundary(request, new Set());
       resumedBoundary.parentFlushed = !0;
       resumedBoundary.rootSegmentID = node;
       resumedBoundary.status = CLIENT_RENDERED;
@@ -8167,7 +7982,6 @@ function safelyEmitEarlyPreloads(request, shellComplete) {
 }
 function completeShell(request) {
   null === request.trackedPostpones && safelyEmitEarlyPreloads(request, !0);
-  null === request.trackedPostpones && preparePreamble(request);
   request.onShellError = noop;
   request = request.onShellReady;
   request();
@@ -8180,7 +7994,6 @@ function completeAll(request) {
       : null === request.completedRootSegment ||
           request.completedRootSegment.status !== POSTPONED
   );
-  preparePreamble(request);
   request = request.onAllReady;
   request();
 }
@@ -8222,11 +8035,7 @@ function finishedTask(request, boundary, segment) {
               request.completedBoundaries.push(boundary),
             boundary.status === COMPLETED &&
               (boundary.fallbackAbortableTasks.forEach(abortTaskSoft, request),
-              boundary.fallbackAbortableTasks.clear(),
-              0 === request.pendingRootTasks &&
-                null === request.trackedPostpones &&
-                null !== boundary.contentPreamble &&
-                preparePreamble(request)))
+              boundary.fallbackAbortableTasks.clear()))
           : null !== segment &&
             segment.parentFlushed &&
             segment.status === COMPLETED &&
@@ -8473,11 +8282,7 @@ function performWork(request$jscomp$1) {
                         ),
                         untrackBoundary(request, boundary),
                         boundary.parentFlushed &&
-                          request.clientRenderedBoundaries.push(boundary),
-                        0 === request.pendingRootTasks &&
-                          null === request.trackedPostpones &&
-                          null !== boundary.contentPreamble &&
-                          preparePreamble(request)));
+                          request.clientRenderedBoundaries.push(boundary)));
                   request.allPendingTasks--;
                   0 === request.allPendingTasks && completeAll(request);
                 }
@@ -8504,85 +8309,6 @@ function performWork(request$jscomp$1) {
     }
   }
 }
-function preparePreambleFromSubtree(
-  request,
-  segment,
-  collectedPreambleSegments
-) {
-  segment.preambleChildren.length &&
-    collectedPreambleSegments.push(segment.preambleChildren);
-  for (var pendingPreambles = !1, i = 0; i < segment.children.length; i++)
-    pendingPreambles =
-      preparePreambleFromSegment(
-        request,
-        segment.children[i],
-        collectedPreambleSegments
-      ) || pendingPreambles;
-  return pendingPreambles;
-}
-function preparePreambleFromSegment(
-  request,
-  segment,
-  collectedPreambleSegments
-) {
-  var boundary = segment.boundary;
-  if (null === boundary)
-    return preparePreambleFromSubtree(
-      request,
-      segment,
-      collectedPreambleSegments
-    );
-  var preamble = boundary.contentPreamble,
-    fallbackPreamble = boundary.fallbackPreamble;
-  if (null === preamble || null === fallbackPreamble) return !1;
-  switch (boundary.status) {
-    case COMPLETED:
-      hoistPreambleState(request.renderState, preamble);
-      segment = boundary.completedSegments[0];
-      if (!segment)
-        throw Error(
-          "A previously unvisited boundary must have exactly one root segment. This is a bug in React."
-        );
-      return preparePreambleFromSubtree(
-        request,
-        segment,
-        collectedPreambleSegments
-      );
-    case POSTPONED:
-      if (null !== request.trackedPostpones) return !0;
-    case CLIENT_RENDERED:
-      if (segment.status === COMPLETED)
-        return (
-          hoistPreambleState(request.renderState, fallbackPreamble),
-          preparePreambleFromSubtree(
-            request,
-            segment,
-            collectedPreambleSegments
-          )
-        );
-    default:
-      return !0;
-  }
-}
-function preparePreamble(request) {
-  if (
-    request.completedRootSegment &&
-    null === request.completedPreambleSegments
-  ) {
-    var collectedPreambleSegments = [],
-      hasPendingPreambles = preparePreambleFromSegment(
-        request,
-        request.completedRootSegment,
-        collectedPreambleSegments
-      ),
-      preamble = request.renderState.preamble;
-    if (
-      !1 === hasPendingPreambles ||
-      (preamble.headChunks && preamble.bodyChunks)
-    )
-      request.completedPreambleSegments = collectedPreambleSegments;
-  }
-}
 function flushSubtree(request, destination, segment, hoistableState) {
   segment.parentFlushed = !0;
   switch (segment.status) {
@@ -8629,8 +8355,8 @@ function flushSegment(request, destination, segment, hoistableState) {
   if (boundary.status === CLIENT_RENDERED) {
     var errorDigest = boundary.errorDigest,
       errorMessage = boundary.errorMessage,
-      errorStack = boundary.errorStack,
-      errorComponentStack = boundary.errorComponentStack;
+      errorStack = boundary.errorStack;
+    boundary = boundary.errorComponentStack;
     destination.write(startClientRenderedSuspenseBoundary);
     writeChunk(destination, clientRenderedSuspenseBoundaryError1);
     errorDigest &&
@@ -8654,23 +8380,18 @@ function flushSegment(request, destination, segment, hoistableState) {
         destination,
         clientRenderedSuspenseBoundaryErrorAttrInterstitial
       ));
-    errorComponentStack &&
+    boundary &&
       (writeChunk(destination, clientRenderedSuspenseBoundaryError1D),
-      writeChunk(destination, escapeTextForBrowser(errorComponentStack)),
+      writeChunk(destination, escapeTextForBrowser(boundary)),
       writeChunk(
         destination,
         clientRenderedSuspenseBoundaryErrorAttrInterstitial
       ));
     destination.write(clientRenderedSuspenseBoundaryError2);
     flushSubtree(request, destination, segment, hoistableState);
-    (request = boundary.fallbackPreamble) &&
-      writePreambleContribution(destination, request);
-    return !!destination.write(endSuspenseBoundary);
-  }
-  if (boundary.status !== COMPLETED)
-    return (
-      boundary.status === PENDING &&
-        (boundary.rootSegmentID = request.nextSegmentId++),
+  } else if (boundary.status !== COMPLETED)
+    boundary.status === PENDING &&
+      (boundary.rootSegmentID = request.nextSegmentId++),
       0 < boundary.completedSegments.length &&
         request.partialBoundaries.push(boundary),
       writeStartPendingSuspenseBoundary(
@@ -8685,34 +8406,29 @@ function flushSegment(request, destination, segment, hoistableState) {
           hoistStylesheetDependency,
           hoistableState
         )),
-      flushSubtree(request, destination, segment, hoistableState),
-      !!destination.write(endSuspenseBoundary)
-    );
-  if (boundary.byteSize > request.progressiveChunkSize)
-    return (
-      (boundary.rootSegmentID = request.nextSegmentId++),
+      flushSubtree(request, destination, segment, hoistableState);
+  else if (boundary.byteSize > request.progressiveChunkSize)
+    (boundary.rootSegmentID = request.nextSegmentId++),
       request.completedBoundaries.push(boundary),
       writeStartPendingSuspenseBoundary(
         destination,
         request.renderState,
         boundary.rootSegmentID
       ),
-      flushSubtree(request, destination, segment, hoistableState),
-      !!destination.write(endSuspenseBoundary)
-    );
-  hoistableState &&
-    ((segment = boundary.contentState),
-    segment.styles.forEach(hoistStyleQueueDependency, hoistableState),
-    segment.stylesheets.forEach(hoistStylesheetDependency, hoistableState));
-  destination.write(startCompletedSuspenseBoundary);
-  segment = boundary.completedSegments;
-  if (1 !== segment.length)
-    throw Error(
-      "A previously unvisited boundary must have exactly one root segment. This is a bug in React."
-    );
-  flushSegment(request, destination, segment[0], hoistableState);
-  (request = boundary.contentPreamble) &&
-    writePreambleContribution(destination, request);
+      flushSubtree(request, destination, segment, hoistableState);
+  else {
+    hoistableState &&
+      ((segment = boundary.contentState),
+      segment.styles.forEach(hoistStyleQueueDependency, hoistableState),
+      segment.stylesheets.forEach(hoistStylesheetDependency, hoistableState));
+    destination.write(startCompletedSuspenseBoundary);
+    segment = boundary.completedSegments;
+    if (1 !== segment.length)
+      throw Error(
+        "A previously unvisited boundary must have exactly one root segment. This is a bug in React."
+      );
+    flushSegment(request, destination, segment[0], hoistableState);
+  }
   return !!destination.write(endSuspenseBoundary);
 }
 function flushSegmentContainer(request, destination, segment, hoistableState) {
@@ -8845,8 +8561,6 @@ function flushCompletedQueues(request, destination) {
         completedRootSegment = request.completedRootSegment;
       if (null !== completedRootSegment) {
         if (completedRootSegment.status === POSTPONED) return;
-        var completedPreambleSegments = request.completedPreambleSegments;
-        if (null === completedPreambleSegments) return;
         var renderState = request.renderState;
         if (
           (0 !== request.allPendingTasks ||
@@ -8861,9 +8575,8 @@ function flushCompletedQueues(request, destination) {
             ((resumableState.scriptResources[src] = EXISTS),
             renderState.scripts.add(chunks));
         }
-        var preamble = renderState.preamble,
-          htmlChunks = preamble.htmlChunks,
-          headChunks = preamble.headChunks,
+        var htmlChunks = renderState.htmlChunks,
+          headChunks = renderState.headChunks,
           i$jscomp$0;
         if (htmlChunks) {
           for (i$jscomp$0 = 0; i$jscomp$0 < htmlChunks.length; i$jscomp$0++)
@@ -8904,36 +8617,10 @@ function flushCompletedQueues(request, destination) {
         var hoistableChunks = renderState.hoistableChunks;
         for (i$jscomp$0 = 0; i$jscomp$0 < hoistableChunks.length; i$jscomp$0++)
           writeChunk(destination, hoistableChunks[i$jscomp$0]);
-        for (
-          renderState = hoistableChunks.length = 0;
-          renderState < completedPreambleSegments.length;
-          renderState++
-        ) {
-          var segments = completedPreambleSegments[renderState];
-          for (
-            _renderState$external = 0;
-            _renderState$external < segments.length;
-            _renderState$external++
-          )
-            flushSegment(
-              request,
-              destination,
-              segments[_renderState$external],
-              null
-            );
-        }
-        var preamble$jscomp$0 = request.renderState.preamble,
-          headChunks$jscomp$0 = preamble$jscomp$0.headChunks;
-        (preamble$jscomp$0.htmlChunks || headChunks$jscomp$0) &&
+        hoistableChunks.length = 0;
+        htmlChunks &&
+          null === headChunks &&
           writeChunk(destination, endChunkForTag("head"));
-        var bodyChunks = preamble$jscomp$0.bodyChunks;
-        if (bodyChunks)
-          for (
-            completedPreambleSegments = 0;
-            completedPreambleSegments < bodyChunks.length;
-            completedPreambleSegments++
-          )
-            writeChunk(destination, bodyChunks[completedPreambleSegments]);
         flushSegment(request, destination, completedRootSegment, null);
         request.completedRootSegment = null;
         writeBootstrap(destination, request.renderState);
@@ -9214,15 +8901,15 @@ function addToReplayParent(node, parentKeyPath, trackedPostpones) {
     parentNode[2].push(node);
   }
 }
-var isomorphicReactPackageVersion$jscomp$inline_780 = React.version;
+var isomorphicReactPackageVersion$jscomp$inline_747 = React.version;
 if (
-  "19.1.0-experimental-e670e72f-20250214" !==
-  isomorphicReactPackageVersion$jscomp$inline_780
+  "19.1.0-experimental-b3a95caf-20250113" !==
+  isomorphicReactPackageVersion$jscomp$inline_747
 )
   throw Error(
     'Incompatible React versions: The "react" and "react-dom" packages must have the exact same version. Instead got:\n  - react:      ' +
-      (isomorphicReactPackageVersion$jscomp$inline_780 +
-        "\n  - react-dom:  19.1.0-experimental-e670e72f-20250214\nLearn more: https://react.dev/warnings/version-mismatch")
+      (isomorphicReactPackageVersion$jscomp$inline_747 +
+        "\n  - react-dom:  19.1.0-experimental-b3a95caf-20250113\nLearn more: https://react.dev/warnings/version-mismatch")
   );
 exports.renderToReadableStream = function (children, options) {
   return new Promise(function (resolve, reject) {
@@ -9315,4 +9002,4 @@ exports.renderToReadableStream = function (children, options) {
     startWork(request$jscomp$0);
   });
 };
-exports.version = "19.1.0-experimental-e670e72f-20250214";
+exports.version = "19.1.0-experimental-b3a95caf-20250113";
diff --git a/node_modules/react-dom/cjs/react-dom-server.bun.production.js b/node_modules/react-dom/cjs/react-dom-server.bun.production.js
index 9d31ca7..b72106e 100644
--- a/node_modules/react-dom/cjs/react-dom-server.bun.production.js
+++ b/node_modules/react-dom/cjs/react-dom-server.bun.production.js
@@ -27,7 +27,6 @@ var React = require("react"),
   REACT_SCOPE_TYPE = Symbol.for("react.scope"),
   REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen"),
   REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden"),
-  REACT_MEMO_CACHE_SENTINEL = Symbol.for("react.memo_cache_sentinel"),
   REACT_POSTPONE_TYPE = Symbol.for("react.postpone"),
   REACT_VIEW_TRANSITION_TYPE = Symbol.for("react.view_transition"),
   MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
@@ -274,26 +273,26 @@ function createRenderState(
       ("" + JSON.stringify(importMap)).replace(scriptRegex, scriptReplacer)
     ),
     externalRuntimeConfig.push("\x3c/script>"));
-  importMap = onHeaders
-    ? {
-        preconnects: "",
-        fontPreloads: "",
-        highImagePreloads: "",
-        remainingCapacity:
-          2 + ("number" === typeof maxHeadersLength ? maxHeadersLength : 2e3)
-      }
-    : null;
-  onHeaders = {
+  importMap = {
     placeholderPrefix: idPrefix + "P:",
     segmentPrefix: idPrefix + "S:",
     boundaryPrefix: idPrefix + "B:",
     startInlineScript: inlineScriptWithNonce,
-    preamble: createPreambleState(),
+    htmlChunks: null,
+    headChunks: null,
     externalRuntimeScript: externalRuntimeScript,
     bootstrapChunks: bootstrapChunks,
     importMapChunks: externalRuntimeConfig,
     onHeaders: onHeaders,
-    headers: importMap,
+    headers: onHeaders
+      ? {
+          preconnects: "",
+          fontPreloads: "",
+          highImagePreloads: "",
+          remainingCapacity:
+            2 + ("number" === typeof maxHeadersLength ? maxHeadersLength : 2e3)
+        }
+      : null,
     resets: {
       font: {},
       dns: {},
@@ -322,27 +321,25 @@ function createRenderState(
     stylesToHoist: !1
   };
   if (void 0 !== bootstrapScripts)
-    for (
-      inlineScriptWithNonce = 0;
-      inlineScriptWithNonce < bootstrapScripts.length;
-      inlineScriptWithNonce++
-    )
-      (externalRuntimeConfig = bootstrapScripts[inlineScriptWithNonce]),
-        (importMap = externalRuntimeScript = void 0),
-        (maxHeadersLength = {
+    for (onHeaders = 0; onHeaders < bootstrapScripts.length; onHeaders++)
+      (externalRuntimeConfig = bootstrapScripts[onHeaders]),
+        (idPrefix = inlineScriptWithNonce = void 0),
+        (externalRuntimeScript = {
           rel: "preload",
           as: "script",
           fetchPriority: "low",
           nonce: nonce
         }),
         "string" === typeof externalRuntimeConfig
-          ? (maxHeadersLength.href = idPrefix = externalRuntimeConfig)
-          : ((maxHeadersLength.href = idPrefix = externalRuntimeConfig.src),
-            (maxHeadersLength.integrity = importMap =
+          ? (externalRuntimeScript.href = maxHeadersLength =
+              externalRuntimeConfig)
+          : ((externalRuntimeScript.href = maxHeadersLength =
+              externalRuntimeConfig.src),
+            (externalRuntimeScript.integrity = idPrefix =
               "string" === typeof externalRuntimeConfig.integrity
                 ? externalRuntimeConfig.integrity
                 : void 0),
-            (maxHeadersLength.crossOrigin = externalRuntimeScript =
+            (externalRuntimeScript.crossOrigin = inlineScriptWithNonce =
               "string" === typeof externalRuntimeConfig ||
               null == externalRuntimeConfig.crossOrigin
                 ? void 0
@@ -350,24 +347,24 @@ function createRenderState(
                   ? "use-credentials"
                   : "")),
         (externalRuntimeConfig = resumableState),
-        (bootstrapScriptContent = idPrefix),
+        (bootstrapScriptContent = maxHeadersLength),
         (externalRuntimeConfig.scriptResources[bootstrapScriptContent] = null),
         (externalRuntimeConfig.moduleScriptResources[bootstrapScriptContent] =
           null),
         (externalRuntimeConfig = []),
-        pushLinkImpl(externalRuntimeConfig, maxHeadersLength),
-        onHeaders.bootstrapScripts.add(externalRuntimeConfig),
-        bootstrapChunks.push('<script src="', escapeTextForBrowser(idPrefix)),
+        pushLinkImpl(externalRuntimeConfig, externalRuntimeScript),
+        importMap.bootstrapScripts.add(externalRuntimeConfig),
+        bootstrapChunks.push(
+          '<script src="',
+          escapeTextForBrowser(maxHeadersLength)
+        ),
         nonce && bootstrapChunks.push('" nonce="', escapeTextForBrowser(nonce)),
-        "string" === typeof importMap &&
-          bootstrapChunks.push(
-            '" integrity="',
-            escapeTextForBrowser(importMap)
-          ),
-        "string" === typeof externalRuntimeScript &&
+        "string" === typeof idPrefix &&
+          bootstrapChunks.push('" integrity="', escapeTextForBrowser(idPrefix)),
+        "string" === typeof inlineScriptWithNonce &&
           bootstrapChunks.push(
             '" crossorigin="',
-            escapeTextForBrowser(externalRuntimeScript)
+            escapeTextForBrowser(inlineScriptWithNonce)
           ),
         bootstrapChunks.push('" async="">\x3c/script>');
   if (void 0 !== bootstrapModules)
@@ -376,51 +373,52 @@ function createRenderState(
       bootstrapScripts < bootstrapModules.length;
       bootstrapScripts++
     )
-      (maxHeadersLength = bootstrapModules[bootstrapScripts]),
-        (externalRuntimeScript = idPrefix = void 0),
-        (importMap = {
+      (externalRuntimeScript = bootstrapModules[bootstrapScripts]),
+        (inlineScriptWithNonce = maxHeadersLength = void 0),
+        (idPrefix = {
           rel: "modulepreload",
           fetchPriority: "low",
           nonce: nonce
         }),
-        "string" === typeof maxHeadersLength
-          ? (importMap.href = inlineScriptWithNonce = maxHeadersLength)
-          : ((importMap.href = inlineScriptWithNonce = maxHeadersLength.src),
-            (importMap.integrity = externalRuntimeScript =
-              "string" === typeof maxHeadersLength.integrity
-                ? maxHeadersLength.integrity
+        "string" === typeof externalRuntimeScript
+          ? (idPrefix.href = onHeaders = externalRuntimeScript)
+          : ((idPrefix.href = onHeaders = externalRuntimeScript.src),
+            (idPrefix.integrity = inlineScriptWithNonce =
+              "string" === typeof externalRuntimeScript.integrity
+                ? externalRuntimeScript.integrity
                 : void 0),
-            (importMap.crossOrigin = idPrefix =
-              "string" === typeof maxHeadersLength ||
-              null == maxHeadersLength.crossOrigin
+            (idPrefix.crossOrigin = maxHeadersLength =
+              "string" === typeof externalRuntimeScript ||
+              null == externalRuntimeScript.crossOrigin
                 ? void 0
-                : "use-credentials" === maxHeadersLength.crossOrigin
+                : "use-credentials" === externalRuntimeScript.crossOrigin
                   ? "use-credentials"
                   : "")),
-        (maxHeadersLength = resumableState),
-        (externalRuntimeConfig = inlineScriptWithNonce),
-        (maxHeadersLength.scriptResources[externalRuntimeConfig] = null),
-        (maxHeadersLength.moduleScriptResources[externalRuntimeConfig] = null),
-        (maxHeadersLength = []),
-        pushLinkImpl(maxHeadersLength, importMap),
-        onHeaders.bootstrapScripts.add(maxHeadersLength),
+        (externalRuntimeScript = resumableState),
+        (externalRuntimeConfig = onHeaders),
+        (externalRuntimeScript.scriptResources[externalRuntimeConfig] = null),
+        (externalRuntimeScript.moduleScriptResources[externalRuntimeConfig] =
+          null),
+        (externalRuntimeScript = []),
+        pushLinkImpl(externalRuntimeScript, idPrefix),
+        importMap.bootstrapScripts.add(externalRuntimeScript),
         bootstrapChunks.push(
           '<script type="module" src="',
-          escapeTextForBrowser(inlineScriptWithNonce)
+          escapeTextForBrowser(onHeaders)
         ),
         nonce && bootstrapChunks.push('" nonce="', escapeTextForBrowser(nonce)),
-        "string" === typeof externalRuntimeScript &&
+        "string" === typeof inlineScriptWithNonce &&
           bootstrapChunks.push(
             '" integrity="',
-            escapeTextForBrowser(externalRuntimeScript)
+            escapeTextForBrowser(inlineScriptWithNonce)
           ),
-        "string" === typeof idPrefix &&
+        "string" === typeof maxHeadersLength &&
           bootstrapChunks.push(
             '" crossorigin="',
-            escapeTextForBrowser(idPrefix)
+            escapeTextForBrowser(maxHeadersLength)
           ),
         bootstrapChunks.push('" async="">\x3c/script>');
-  return onHeaders;
+  return importMap;
 }
 function createResumableState(
   identifierPrefix,
@@ -451,14 +449,6 @@ function createResumableState(
     moduleScriptResources: {}
   };
 }
-function createPreambleState() {
-  return {
-    htmlChunks: null,
-    headChunks: null,
-    bodyChunks: null,
-    contribution: 0
-  };
-}
 function createFormatContext(insertionMode, selectedValue, tagScope) {
   return {
     insertionMode: insertionMode,
@@ -469,9 +459,9 @@ function createFormatContext(insertionMode, selectedValue, tagScope) {
 function createRootFormatContext(namespaceURI) {
   return createFormatContext(
     "http://www.w3.org/2000/svg" === namespaceURI
-      ? 4
+      ? 3
       : "http://www.w3.org/1998/Math/MathML" === namespaceURI
-        ? 5
+        ? 4
         : 0,
     null,
     0
@@ -488,34 +478,33 @@ function getChildFormatContext(parentContext, type, props) {
         parentContext.tagScope
       );
     case "svg":
-      return createFormatContext(4, null, parentContext.tagScope);
+      return createFormatContext(3, null, parentContext.tagScope);
     case "picture":
       return createFormatContext(2, null, parentContext.tagScope | 2);
     case "math":
-      return createFormatContext(5, null, parentContext.tagScope);
+      return createFormatContext(4, null, parentContext.tagScope);
     case "foreignObject":
       return createFormatContext(2, null, parentContext.tagScope);
     case "table":
-      return createFormatContext(6, null, parentContext.tagScope);
+      return createFormatContext(5, null, parentContext.tagScope);
     case "thead":
     case "tbody":
     case "tfoot":
-      return createFormatContext(7, null, parentContext.tagScope);
+      return createFormatContext(6, null, parentContext.tagScope);
     case "colgroup":
-      return createFormatContext(9, null, parentContext.tagScope);
-    case "tr":
       return createFormatContext(8, null, parentContext.tagScope);
-    case "head":
-      if (2 > parentContext.insertionMode)
-        return createFormatContext(3, null, parentContext.tagScope);
-      break;
-    case "html":
-      if (0 === parentContext.insertionMode)
-        return createFormatContext(1, null, parentContext.tagScope);
+    case "tr":
+      return createFormatContext(7, null, parentContext.tagScope);
   }
-  return 6 <= parentContext.insertionMode || 2 > parentContext.insertionMode
+  return 5 <= parentContext.insertionMode
     ? createFormatContext(2, null, parentContext.tagScope)
-    : parentContext;
+    : 0 === parentContext.insertionMode
+      ? "html" === type
+        ? createFormatContext(1, null, parentContext.tagScope)
+        : createFormatContext(2, null, parentContext.tagScope)
+      : 1 === parentContext.insertionMode
+        ? createFormatContext(2, null, parentContext.tagScope)
+        : parentContext;
 }
 function pushTextInstance(target, text, renderState, textEmbedded) {
   if ("" === text) return textEmbedded;
@@ -946,29 +935,6 @@ function pushScriptImpl(target, props) {
   target.push(endChunkForTag("script"));
   return null;
 }
-function pushStartSingletonElement(target, props, tag) {
-  target.push(startChunkForTag(tag));
-  var innerHTML = (tag = null),
-    propKey;
-  for (propKey in props)
-    if (hasOwnProperty.call(props, propKey)) {
-      var propValue = props[propKey];
-      if (null != propValue)
-        switch (propKey) {
-          case "children":
-            tag = propValue;
-            break;
-          case "dangerouslySetInnerHTML":
-            innerHTML = propValue;
-            break;
-          default:
-            pushAttribute(target, propKey, propValue);
-        }
-    }
-  target.push(">");
-  pushInnerHTML(target, innerHTML, tag);
-  return tag;
-}
 function pushStartGenericElement(target, props, tag) {
   target.push(startChunkForTag(tag));
   var innerHTML = (tag = null),
@@ -1011,7 +977,6 @@ function pushStartInstance(
   props,
   resumableState,
   renderState,
-  preambleState,
   hoistableState,
   formatContext,
   textEmbedded,
@@ -1491,7 +1456,7 @@ function pushStartInstance(
       return JSCompiler_inline_result$jscomp$2;
     case "title":
       if (
-        4 === formatContext.insertionMode ||
+        3 === formatContext.insertionMode ||
         formatContext.tagScope & 1 ||
         null != props.itemProp
       )
@@ -1510,7 +1475,7 @@ function pushStartInstance(
         href = props.href,
         precedence = props.precedence;
       if (
-        4 === formatContext.insertionMode ||
+        3 === formatContext.insertionMode ||
         formatContext.tagScope & 1 ||
         null != props.itemProp ||
         "string" !== typeof rel ||
@@ -1592,7 +1557,7 @@ function pushStartInstance(
         "symbol" === typeof asyncProp ||
         props.onLoad ||
         props.onError ||
-        4 === formatContext.insertionMode ||
+        3 === formatContext.insertionMode ||
         formatContext.tagScope & 1 ||
         null != props.itemProp
       )
@@ -1633,7 +1598,7 @@ function pushStartInstance(
       var precedence$jscomp$0 = props.precedence,
         href$jscomp$0 = props.href;
       if (
-        4 === formatContext.insertionMode ||
+        3 === formatContext.insertionMode ||
         formatContext.tagScope & 1 ||
         null != props.itemProp ||
         "string" !== typeof precedence$jscomp$0 ||
@@ -1736,7 +1701,7 @@ function pushStartInstance(
       return JSCompiler_inline_result$jscomp$6;
     case "meta":
       if (
-        4 === formatContext.insertionMode ||
+        3 === formatContext.insertionMode ||
         formatContext.tagScope & 1 ||
         null != props.itemProp
       )
@@ -1914,13 +1879,10 @@ function pushStartInstance(
     case "missing-glyph":
       break;
     case "head":
-      if (2 > formatContext.insertionMode) {
-        var preamble = preambleState || renderState.preamble;
-        if (preamble.headChunks)
-          throw Error("The `<head>` tag may only be rendered once.");
-        preamble.headChunks = [];
-        var JSCompiler_inline_result$jscomp$9 = pushStartSingletonElement(
-          preamble.headChunks,
+      if (2 > formatContext.insertionMode && null === renderState.headChunks) {
+        renderState.headChunks = [];
+        var JSCompiler_inline_result$jscomp$9 = pushStartGenericElement(
+          renderState.headChunks,
           props,
           "head"
         );
@@ -1931,42 +1893,24 @@ function pushStartInstance(
           "head"
         );
       return JSCompiler_inline_result$jscomp$9;
-    case "body":
-      if (2 > formatContext.insertionMode) {
-        var preamble$jscomp$0 = preambleState || renderState.preamble;
-        if (preamble$jscomp$0.bodyChunks)
-          throw Error("The `<body>` tag may only be rendered once.");
-        preamble$jscomp$0.bodyChunks = [];
-        var JSCompiler_inline_result$jscomp$10 = pushStartSingletonElement(
-          preamble$jscomp$0.bodyChunks,
-          props,
-          "body"
-        );
-      } else
-        JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
-          target$jscomp$0,
-          props,
-          "body"
-        );
-      return JSCompiler_inline_result$jscomp$10;
     case "html":
-      if (0 === formatContext.insertionMode) {
-        var preamble$jscomp$1 = preambleState || renderState.preamble;
-        if (preamble$jscomp$1.htmlChunks)
-          throw Error("The `<html>` tag may only be rendered once.");
-        preamble$jscomp$1.htmlChunks = ["<!DOCTYPE html>"];
-        var JSCompiler_inline_result$jscomp$11 = pushStartSingletonElement(
-          preamble$jscomp$1.htmlChunks,
+      if (
+        0 === formatContext.insertionMode &&
+        null === renderState.htmlChunks
+      ) {
+        renderState.htmlChunks = ["<!DOCTYPE html>"];
+        var JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
+          renderState.htmlChunks,
           props,
           "html"
         );
       } else
-        JSCompiler_inline_result$jscomp$11 = pushStartGenericElement(
+        JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
           target$jscomp$0,
           props,
           "html"
         );
-      return JSCompiler_inline_result$jscomp$11;
+      return JSCompiler_inline_result$jscomp$10;
     default:
       if (-1 !== type.indexOf("-")) {
         target$jscomp$0.push(startChunkForTag(type));
@@ -2027,21 +1971,6 @@ function endChunkForTag(tag) {
   void 0 === chunk && ((chunk = "</" + tag + ">"), endTagCache.set(tag, chunk));
   return chunk;
 }
-function hoistPreambleState(renderState, preambleState) {
-  renderState = renderState.preamble;
-  null === renderState.htmlChunks &&
-    preambleState.htmlChunks &&
-    ((renderState.htmlChunks = preambleState.htmlChunks),
-    (preambleState.contribution |= 1));
-  null === renderState.headChunks &&
-    preambleState.headChunks &&
-    ((renderState.headChunks = preambleState.headChunks),
-    (preambleState.contribution |= 4));
-  null === renderState.bodyChunks &&
-    preambleState.bodyChunks &&
-    ((renderState.bodyChunks = preambleState.bodyChunks),
-    (preambleState.contribution |= 2));
-}
 function writeBootstrap(destination, renderState) {
   renderState = renderState.bootstrapChunks;
   for (var i = 0; i < renderState.length - 1; i++)
@@ -2060,18 +1989,10 @@ function writeStartPendingSuspenseBoundary(destination, renderState, id) {
   writeChunk(destination, id.toString(16));
   return !!destination.write('"></template>');
 }
-function writePreambleContribution(destination, preambleState) {
-  preambleState = preambleState.contribution;
-  0 !== preambleState &&
-    (writeChunk(destination, "\x3c!--"),
-    writeChunk(destination, "" + preambleState),
-    writeChunk(destination, "--\x3e"));
-}
 function writeStartSegment(destination, renderState, formatContext, id) {
   switch (formatContext.insertionMode) {
     case 0:
     case 1:
-    case 3:
     case 2:
       return (
         writeChunk(destination, '<div hidden id="'),
@@ -2079,7 +2000,7 @@ function writeStartSegment(destination, renderState, formatContext, id) {
         writeChunk(destination, id.toString(16)),
         !!destination.write('">')
       );
-    case 4:
+    case 3:
       return (
         writeChunk(
           destination,
@@ -2089,7 +2010,7 @@ function writeStartSegment(destination, renderState, formatContext, id) {
         writeChunk(destination, id.toString(16)),
         !!destination.write('">')
       );
-    case 5:
+    case 4:
       return (
         writeChunk(
           destination,
@@ -2099,28 +2020,28 @@ function writeStartSegment(destination, renderState, formatContext, id) {
         writeChunk(destination, id.toString(16)),
         !!destination.write('">')
       );
-    case 6:
+    case 5:
       return (
         writeChunk(destination, '<table hidden id="'),
         writeChunk(destination, renderState.segmentPrefix),
         writeChunk(destination, id.toString(16)),
         !!destination.write('">')
       );
-    case 7:
+    case 6:
       return (
         writeChunk(destination, '<table hidden><tbody id="'),
         writeChunk(destination, renderState.segmentPrefix),
         writeChunk(destination, id.toString(16)),
         !!destination.write('">')
       );
-    case 8:
+    case 7:
       return (
         writeChunk(destination, '<table hidden><tr id="'),
         writeChunk(destination, renderState.segmentPrefix),
         writeChunk(destination, id.toString(16)),
         !!destination.write('">')
       );
-    case 9:
+    case 8:
       return (
         writeChunk(destination, '<table hidden><colgroup id="'),
         writeChunk(destination, renderState.segmentPrefix),
@@ -2135,20 +2056,19 @@ function writeEndSegment(destination, formatContext) {
   switch (formatContext.insertionMode) {
     case 0:
     case 1:
-    case 3:
     case 2:
       return !!destination.write("</div>");
-    case 4:
+    case 3:
       return !!destination.write("</svg>");
-    case 5:
+    case 4:
       return !!destination.write("</math>");
-    case 6:
+    case 5:
       return !!destination.write("</table>");
-    case 7:
+    case 6:
       return !!destination.write("</tbody></table>");
-    case 8:
+    case 7:
       return !!destination.write("</tr></table>");
-    case 9:
+    case 8:
       return !!destination.write("</colgroup></table>");
     default:
       throw Error("Unknown insertion mode. This is a bug in React.");
@@ -3359,12 +3279,6 @@ function readPreviousThenableFromState() {
       index
     );
 }
-function unsupportedRefresh() {
-  throw Error("Cache cannot be refreshed during server rendering.");
-}
-function unsupportedStartGesture() {
-  throw Error("startGesture cannot be called during server rendering.");
-}
 function noop$1() {}
 var HooksDispatcher = {
     readContext: function (context) {
@@ -3450,20 +3364,8 @@ var HooksDispatcher = {
       resolveCurrentlyRenderingComponent();
       return sharedNotPendingObject;
     },
-    useMemoCache: function (size) {
-      for (var data = Array(size), i = 0; i < size; i++)
-        data[i] = REACT_MEMO_CACHE_SENTINEL;
-      return data;
-    },
-    useCacheRefresh: function () {
-      return unsupportedRefresh;
-    },
     useEffectEvent: function () {
       return throwOnUseEffectEventCall;
-    },
-    useSwipeTransition: function (previous, current) {
-      resolveCurrentlyRenderingComponent();
-      return [current, unsupportedStartGesture];
     }
   },
   currentResumableState = null,
@@ -3721,7 +3623,7 @@ function RequestInstance(
   this.status = 10;
   this.fatalError = null;
   this.pendingRootTasks = this.allPendingTasks = this.nextSegmentId = 0;
-  this.completedPreambleSegments = this.completedRootSegment = null;
+  this.completedRootSegment = null;
   this.abortableTasks = abortSet;
   this.pingedTasks = [];
   this.clientRenderedBoundaries = [];
@@ -3780,7 +3682,6 @@ function createRequest(
     null,
     renderState,
     null,
-    null,
     resumableState.abortableTasks,
     null,
     rootFormatContext,
@@ -3806,12 +3707,7 @@ function pingTask(request, task) {
           return performWork(request);
         }, 0));
 }
-function createSuspenseBoundary(
-  request,
-  fallbackAbortableTasks,
-  contentPreamble,
-  fallbackPreamble
-) {
+function createSuspenseBoundary(request, fallbackAbortableTasks) {
   return {
     status: 0,
     rootSegmentID: -1,
@@ -3823,8 +3719,6 @@ function createSuspenseBoundary(
     errorDigest: null,
     contentState: createHoistableState(),
     fallbackState: createHoistableState(),
-    contentPreamble: contentPreamble,
-    fallbackPreamble: fallbackPreamble,
     trackedContentKeyPath: null,
     trackedFallbackNode: null
   };
@@ -3836,7 +3730,6 @@ function createRenderTask(
   childIndex,
   blockedBoundary,
   blockedSegment,
-  blockedPreamble,
   hoistableState,
   abortSet,
   keyPath,
@@ -3859,7 +3752,6 @@ function createRenderTask(
     },
     blockedBoundary: blockedBoundary,
     blockedSegment: blockedSegment,
-    blockedPreamble: blockedPreamble,
     hoistableState: hoistableState,
     abortSet: abortSet,
     keyPath: keyPath,
@@ -3903,7 +3795,6 @@ function createReplayTask(
     },
     blockedBoundary: blockedBoundary,
     blockedSegment: null,
-    blockedPreamble: null,
     hoistableState: hoistableState,
     abortSet: abortSet,
     keyPath: keyPath,
@@ -3927,12 +3818,11 @@ function createPendingSegment(
 ) {
   return {
     status: 0,
-    parentFlushed: !1,
     id: -1,
     index: index,
+    parentFlushed: !1,
     chunks: [],
     children: [],
-    preambleChildren: [],
     parentFormatContext: parentFormatContext,
     boundary: boundary,
     lastPushedText: lastPushedText,
@@ -4164,13 +4054,12 @@ function renderElement(request, task, keyPath, type, props, ref) {
         (task.formatContext = defaultProps),
         (task.keyPath = initialState);
     else {
-      ref = pushStartInstance(
+      initialState = pushStartInstance(
         newProps.chunks,
         type,
         props,
         request.resumableState,
         request.renderState,
-        task.blockedPreamble,
         task.hoistableState,
         task.formatContext,
         newProps.lastPushedText,
@@ -4178,42 +4067,12 @@ function renderElement(request, task, keyPath, type, props, ref) {
       );
       newProps.lastPushedText = !1;
       defaultProps = task.formatContext;
-      initialState = task.keyPath;
+      ref = task.keyPath;
+      task.formatContext = getChildFormatContext(defaultProps, type, props);
       task.keyPath = keyPath;
-      3 ===
-      (task.formatContext = getChildFormatContext(defaultProps, type, props))
-        .insertionMode
-        ? ((keyPath = createPendingSegment(
-            request,
-            0,
-            null,
-            task.formatContext,
-            !1,
-            !1
-          )),
-          newProps.preambleChildren.push(keyPath),
-          (keyPath = createRenderTask(
-            request,
-            null,
-            ref,
-            -1,
-            task.blockedBoundary,
-            keyPath,
-            task.blockedPreamble,
-            task.hoistableState,
-            request.abortableTasks,
-            task.keyPath,
-            task.formatContext,
-            task.context,
-            task.treeContext,
-            task.componentStack,
-            task.isFallback
-          )),
-          pushComponentStack(keyPath),
-          request.pingedTasks.push(keyPath))
-        : renderNode(request, task, ref, -1);
+      renderNode(request, task, initialState, -1);
       task.formatContext = defaultProps;
-      task.keyPath = initialState;
+      task.keyPath = ref;
       a: {
         task = newProps.chunks;
         request = request.resumableState;
@@ -4248,9 +4107,6 @@ function renderElement(request, task, keyPath, type, props, ref) {
               request.hasHtml = !0;
               break a;
             }
-            break;
-          case "head":
-            if (1 >= defaultProps.insertionMode) break a;
         }
         task.push(endChunkForTag(type));
       }
@@ -4300,34 +4156,25 @@ function renderElement(request, task, keyPath, type, props, ref) {
           }
         } else {
           type = task.keyPath;
-          var parentBoundary = task.blockedBoundary;
-          ref = task.blockedPreamble;
-          var parentHoistableState = task.hoistableState;
-          propName$33 = task.blockedSegment;
-          propName = props.fallback;
+          var parentBoundary = task.blockedBoundary,
+            parentHoistableState = task.hoistableState;
+          ref = task.blockedSegment;
+          propName$33 = props.fallback;
           props = props.children;
           var fallbackAbortSet = new Set();
-          var newBoundary =
-            2 > task.formatContext.insertionMode
-              ? createSuspenseBoundary(
-                  request,
-                  fallbackAbortSet,
-                  createPreambleState(),
-                  createPreambleState()
-                )
-              : createSuspenseBoundary(request, fallbackAbortSet, null, null);
+          propName = createSuspenseBoundary(request, fallbackAbortSet);
           null !== request.trackedPostpones &&
-            (newBoundary.trackedContentKeyPath = keyPath);
+            (propName.trackedContentKeyPath = keyPath);
           var boundarySegment = createPendingSegment(
             request,
-            propName$33.chunks.length,
-            newBoundary,
+            ref.chunks.length,
+            propName,
             task.formatContext,
             !1,
             !1
           );
-          propName$33.children.push(boundarySegment);
-          propName$33.lastPushedText = !1;
+          ref.children.push(boundarySegment);
+          ref.lastPushedText = !1;
           var contentRootSegment = createPendingSegment(
             request,
             0,
@@ -4341,13 +4188,12 @@ function renderElement(request, task, keyPath, type, props, ref) {
             newProps = [keyPath[0], "Suspense Fallback", keyPath[2]];
             defaultProps = [newProps[1], newProps[2], [], null];
             request.trackedPostpones.workingMap.set(newProps, defaultProps);
-            newBoundary.trackedFallbackNode = defaultProps;
+            propName.trackedFallbackNode = defaultProps;
             task.blockedSegment = boundarySegment;
-            task.blockedPreamble = newBoundary.fallbackPreamble;
             task.keyPath = newProps;
             boundarySegment.status = 6;
             try {
-              renderNode(request, task, propName, -1),
+              renderNode(request, task, propName$33, -1),
                 boundarySegment.lastPushedText &&
                   boundarySegment.textEmbedded &&
                   boundarySegment.chunks.push("\x3c!-- --\x3e"),
@@ -4358,19 +4204,16 @@ function renderElement(request, task, keyPath, type, props, ref) {
                 thrownValue)
               );
             } finally {
-              (task.blockedSegment = propName$33),
-                (task.blockedPreamble = ref),
-                (task.keyPath = type);
+              (task.blockedSegment = ref), (task.keyPath = type);
             }
             task = createRenderTask(
               request,
               null,
               props,
               -1,
-              newBoundary,
+              propName,
               contentRootSegment,
-              newBoundary.contentPreamble,
-              newBoundary.contentState,
+              propName.contentState,
               task.abortSet,
               keyPath,
               task.formatContext,
@@ -4382,9 +4225,8 @@ function renderElement(request, task, keyPath, type, props, ref) {
             pushComponentStack(task);
             request.pingedTasks.push(task);
           } else {
-            task.blockedBoundary = newBoundary;
-            task.blockedPreamble = newBoundary.contentPreamble;
-            task.hoistableState = newBoundary.contentState;
+            task.blockedBoundary = propName;
+            task.hoistableState = propName.contentState;
             task.blockedSegment = contentRootSegment;
             task.keyPath = keyPath;
             contentRootSegment.status = 6;
@@ -4395,17 +4237,14 @@ function renderElement(request, task, keyPath, type, props, ref) {
                   contentRootSegment.textEmbedded &&
                   contentRootSegment.chunks.push("\x3c!-- --\x3e"),
                 (contentRootSegment.status = 1),
-                queueCompletedSegment(newBoundary, contentRootSegment),
-                0 === newBoundary.pendingTasks && 0 === newBoundary.status)
+                queueCompletedSegment(propName, contentRootSegment),
+                0 === propName.pendingTasks && 0 === propName.status)
               ) {
-                newBoundary.status = 1;
-                0 === request.pendingRootTasks &&
-                  task.blockedPreamble &&
-                  preparePreamble(request);
+                propName.status = 1;
                 break a;
               }
             } catch (thrownValue$28) {
-              (newBoundary.status = 4),
+              (propName.status = 4),
                 12 === request.status
                   ? ((contentRootSegment.status = 3),
                     (newProps = request.fatalError))
@@ -4422,24 +4261,22 @@ function renderElement(request, task, keyPath, type, props, ref) {
                       newProps,
                       defaultProps
                     )),
-                (newBoundary.errorDigest = initialState),
-                untrackBoundary(request, newBoundary);
+                (propName.errorDigest = initialState),
+                untrackBoundary(request, propName);
             } finally {
               (task.blockedBoundary = parentBoundary),
-                (task.blockedPreamble = ref),
                 (task.hoistableState = parentHoistableState),
-                (task.blockedSegment = propName$33),
+                (task.blockedSegment = ref),
                 (task.keyPath = type);
             }
             task = createRenderTask(
               request,
               null,
-              propName,
+              propName$33,
               -1,
               parentBoundary,
               boundarySegment,
-              newBoundary.fallbackPreamble,
-              newBoundary.fallbackState,
+              propName.fallbackState,
               fallbackAbortSet,
               [keyPath[0], "Suspense Fallback", keyPath[2]],
               task.formatContext,
@@ -4458,9 +4295,9 @@ function renderElement(request, task, keyPath, type, props, ref) {
       switch (type.$$typeof) {
         case REACT_FORWARD_REF_TYPE:
           if ("ref" in props)
-            for (newBoundary in ((newProps = {}), props))
-              "ref" !== newBoundary &&
-                (newProps[newBoundary] = props[newBoundary]);
+            for (boundarySegment in ((newProps = {}), props))
+              "ref" !== boundarySegment &&
+                (newProps[boundarySegment] = props[boundarySegment]);
           else newProps = props;
           type = renderWithHooks(
             request,
@@ -4662,27 +4499,17 @@ function retryNode(request, task) {
                         previousReplaySet = task.replay,
                         parentBoundary = task.blockedBoundary,
                         parentHoistableState = task.hoistableState,
-                        content = props.children,
-                        fallback = props.fallback,
-                        fallbackAbortSet = new Set();
-                      props =
-                        2 > task.formatContext.insertionMode
-                          ? createSuspenseBoundary(
-                              request,
-                              fallbackAbortSet,
-                              createPreambleState(),
-                              createPreambleState()
-                            )
-                          : createSuspenseBoundary(
-                              request,
-                              fallbackAbortSet,
-                              null,
-                              null
-                            );
-                      props.parentFlushed = !0;
-                      props.rootSegmentID = ref;
-                      task.blockedBoundary = props;
-                      task.hoistableState = props.contentState;
+                        content = props.children;
+                      props = props.fallback;
+                      var fallbackAbortSet = new Set(),
+                        resumedBoundary = createSuspenseBoundary(
+                          request,
+                          fallbackAbortSet
+                        );
+                      resumedBoundary.parentFlushed = !0;
+                      resumedBoundary.rootSegmentID = ref;
+                      task.blockedBoundary = resumedBoundary;
+                      task.hoistableState = resumedBoundary.contentState;
                       task.keyPath = key;
                       task.replay = {
                         nodes: replay,
@@ -4699,13 +4526,16 @@ function retryNode(request, task) {
                             "Couldn't find all resumable slots by key/index during replaying. The tree doesn't match so React will fallback to client rendering."
                           );
                         task.replay.pendingTasks--;
-                        if (0 === props.pendingTasks && 0 === props.status) {
-                          props.status = 1;
-                          request.completedBoundaries.push(props);
+                        if (
+                          0 === resumedBoundary.pendingTasks &&
+                          0 === resumedBoundary.status
+                        ) {
+                          resumedBoundary.status = 1;
+                          request.completedBoundaries.push(resumedBoundary);
                           break b;
                         }
                       } catch (error) {
-                        (props.status = 4),
+                        (resumedBoundary.status = 4),
                           (childNodes = getThrownInfo(task.componentStack)),
                           "object" === typeof error &&
                           null !== error &&
@@ -4717,9 +4547,11 @@ function retryNode(request, task) {
                                 error,
                                 childNodes
                               )),
-                          (props.errorDigest = type),
+                          (resumedBoundary.errorDigest = type),
                           task.replay.pendingTasks--,
-                          request.clientRenderedBoundaries.push(props);
+                          request.clientRenderedBoundaries.push(
+                            resumedBoundary
+                          );
                       } finally {
                         (task.blockedBoundary = parentBoundary),
                           (task.hoistableState = parentHoistableState),
@@ -4734,10 +4566,10 @@ function retryNode(request, task) {
                           slots: node$jscomp$0,
                           pendingTasks: 0
                         },
-                        fallback,
+                        props,
                         -1,
                         parentBoundary,
-                        props.fallbackState,
+                        resumedBoundary.fallbackState,
                         fallbackAbortSet,
                         [key[0], "Suspense Fallback", key[2]],
                         task.formatContext,
@@ -5075,7 +4907,6 @@ function spawnNewSuspendedRenderTask(request, task, thenableState) {
     task.childIndex,
     task.blockedBoundary,
     newSegment,
-    task.blockedPreamble,
     task.hoistableState,
     task.abortSet,
     task.keyPath,
@@ -5261,12 +5092,7 @@ function abortRemainingReplayNodes(
       node = node[5];
       var request = request$jscomp$0,
         errorDigest = errorDigest$jscomp$0,
-        resumedBoundary = createSuspenseBoundary(
-          request,
-          new Set(),
-          null,
-          null
-        );
+        resumedBoundary = createSuspenseBoundary(request, new Set());
       resumedBoundary.parentFlushed = !0;
       resumedBoundary.rootSegmentID = node;
       resumedBoundary.status = 4;
@@ -5456,7 +5282,6 @@ function safelyEmitEarlyPreloads(request, shellComplete) {
 }
 function completeShell(request) {
   null === request.trackedPostpones && safelyEmitEarlyPreloads(request, !0);
-  null === request.trackedPostpones && preparePreamble(request);
   request.onShellError = noop;
   request = request.onShellReady;
   request();
@@ -5469,7 +5294,6 @@ function completeAll(request) {
       : null === request.completedRootSegment ||
           5 !== request.completedRootSegment.status
   );
-  preparePreamble(request);
   request = request.onAllReady;
   request();
 }
@@ -5510,11 +5334,7 @@ function finishedTask(request, boundary, segment) {
               request.completedBoundaries.push(boundary),
             1 === boundary.status &&
               (boundary.fallbackAbortableTasks.forEach(abortTaskSoft, request),
-              boundary.fallbackAbortableTasks.clear(),
-              0 === request.pendingRootTasks &&
-                null === request.trackedPostpones &&
-                null !== boundary.contentPreamble &&
-                preparePreamble(request)))
+              boundary.fallbackAbortableTasks.clear()))
           : null !== segment &&
             segment.parentFlushed &&
             1 === segment.status &&
@@ -5708,11 +5528,7 @@ function performWork(request$jscomp$1) {
                         (boundary.errorDigest = request$jscomp$0),
                         untrackBoundary(request, boundary),
                         boundary.parentFlushed &&
-                          request.clientRenderedBoundaries.push(boundary),
-                        0 === request.pendingRootTasks &&
-                          null === request.trackedPostpones &&
-                          null !== boundary.contentPreamble &&
-                          preparePreamble(request)));
+                          request.clientRenderedBoundaries.push(boundary)));
                   request.allPendingTasks--;
                   0 === request.allPendingTasks && completeAll(request);
                 }
@@ -5736,85 +5552,6 @@ function performWork(request$jscomp$1) {
     }
   }
 }
-function preparePreambleFromSubtree(
-  request,
-  segment,
-  collectedPreambleSegments
-) {
-  segment.preambleChildren.length &&
-    collectedPreambleSegments.push(segment.preambleChildren);
-  for (var pendingPreambles = !1, i = 0; i < segment.children.length; i++)
-    pendingPreambles =
-      preparePreambleFromSegment(
-        request,
-        segment.children[i],
-        collectedPreambleSegments
-      ) || pendingPreambles;
-  return pendingPreambles;
-}
-function preparePreambleFromSegment(
-  request,
-  segment,
-  collectedPreambleSegments
-) {
-  var boundary = segment.boundary;
-  if (null === boundary)
-    return preparePreambleFromSubtree(
-      request,
-      segment,
-      collectedPreambleSegments
-    );
-  var preamble = boundary.contentPreamble,
-    fallbackPreamble = boundary.fallbackPreamble;
-  if (null === preamble || null === fallbackPreamble) return !1;
-  switch (boundary.status) {
-    case 1:
-      hoistPreambleState(request.renderState, preamble);
-      segment = boundary.completedSegments[0];
-      if (!segment)
-        throw Error(
-          "A previously unvisited boundary must have exactly one root segment. This is a bug in React."
-        );
-      return preparePreambleFromSubtree(
-        request,
-        segment,
-        collectedPreambleSegments
-      );
-    case 5:
-      if (null !== request.trackedPostpones) return !0;
-    case 4:
-      if (1 === segment.status)
-        return (
-          hoistPreambleState(request.renderState, fallbackPreamble),
-          preparePreambleFromSubtree(
-            request,
-            segment,
-            collectedPreambleSegments
-          )
-        );
-    default:
-      return !0;
-  }
-}
-function preparePreamble(request) {
-  if (
-    request.completedRootSegment &&
-    null === request.completedPreambleSegments
-  ) {
-    var collectedPreambleSegments = [],
-      hasPendingPreambles = preparePreambleFromSegment(
-        request,
-        request.completedRootSegment,
-        collectedPreambleSegments
-      ),
-      preamble = request.renderState.preamble;
-    if (
-      !1 === hasPendingPreambles ||
-      (preamble.headChunks && preamble.bodyChunks)
-    )
-      request.completedPreambleSegments = collectedPreambleSegments;
-  }
-}
 function flushSubtree(request, destination, segment, hoistableState) {
   segment.parentFlushed = !0;
   switch (segment.status) {
@@ -5858,24 +5595,18 @@ function flushSegment(request, destination, segment, hoistableState) {
   if (null === boundary)
     return flushSubtree(request, destination, segment, hoistableState);
   boundary.parentFlushed = !0;
-  if (4 === boundary.status) {
-    var errorDigest = boundary.errorDigest;
-    destination.write("\x3c!--$!--\x3e");
-    writeChunk(destination, "<template");
-    errorDigest &&
-      (writeChunk(destination, ' data-dgst="'),
-      writeChunk(destination, escapeTextForBrowser(errorDigest)),
-      writeChunk(destination, '"'));
-    destination.write("></template>");
-    flushSubtree(request, destination, segment, hoistableState);
-    (request = boundary.fallbackPreamble) &&
-      writePreambleContribution(destination, request);
-    return !!destination.write("\x3c!--/$--\x3e");
-  }
-  if (1 !== boundary.status)
-    return (
-      0 === boundary.status &&
-        (boundary.rootSegmentID = request.nextSegmentId++),
+  if (4 === boundary.status)
+    (boundary = boundary.errorDigest),
+      destination.write("\x3c!--$!--\x3e"),
+      writeChunk(destination, "<template"),
+      boundary &&
+        (writeChunk(destination, ' data-dgst="'),
+        writeChunk(destination, escapeTextForBrowser(boundary)),
+        writeChunk(destination, '"')),
+      destination.write("></template>"),
+      flushSubtree(request, destination, segment, hoistableState);
+  else if (1 !== boundary.status)
+    0 === boundary.status && (boundary.rootSegmentID = request.nextSegmentId++),
       0 < boundary.completedSegments.length &&
         request.partialBoundaries.push(boundary),
       writeStartPendingSuspenseBoundary(
@@ -5890,34 +5621,29 @@ function flushSegment(request, destination, segment, hoistableState) {
           hoistStylesheetDependency,
           hoistableState
         )),
-      flushSubtree(request, destination, segment, hoistableState),
-      !!destination.write("\x3c!--/$--\x3e")
-    );
-  if (boundary.byteSize > request.progressiveChunkSize)
-    return (
-      (boundary.rootSegmentID = request.nextSegmentId++),
+      flushSubtree(request, destination, segment, hoistableState);
+  else if (boundary.byteSize > request.progressiveChunkSize)
+    (boundary.rootSegmentID = request.nextSegmentId++),
       request.completedBoundaries.push(boundary),
       writeStartPendingSuspenseBoundary(
         destination,
         request.renderState,
         boundary.rootSegmentID
       ),
-      flushSubtree(request, destination, segment, hoistableState),
-      !!destination.write("\x3c!--/$--\x3e")
-    );
-  hoistableState &&
-    ((segment = boundary.contentState),
-    segment.styles.forEach(hoistStyleQueueDependency, hoistableState),
-    segment.stylesheets.forEach(hoistStylesheetDependency, hoistableState));
-  destination.write("\x3c!--$--\x3e");
-  segment = boundary.completedSegments;
-  if (1 !== segment.length)
-    throw Error(
-      "A previously unvisited boundary must have exactly one root segment. This is a bug in React."
-    );
-  flushSegment(request, destination, segment[0], hoistableState);
-  (request = boundary.contentPreamble) &&
-    writePreambleContribution(destination, request);
+      flushSubtree(request, destination, segment, hoistableState);
+  else {
+    hoistableState &&
+      ((segment = boundary.contentState),
+      segment.styles.forEach(hoistStyleQueueDependency, hoistableState),
+      segment.stylesheets.forEach(hoistStylesheetDependency, hoistableState));
+    destination.write("\x3c!--$--\x3e");
+    segment = boundary.completedSegments;
+    if (1 !== segment.length)
+      throw Error(
+        "A previously unvisited boundary must have exactly one root segment. This is a bug in React."
+      );
+    flushSegment(request, destination, segment[0], hoistableState);
+  }
   return !!destination.write("\x3c!--/$--\x3e");
 }
 function flushSegmentContainer(request, destination, segment, hoistableState) {
@@ -6052,8 +5778,6 @@ function flushCompletedQueues(request, destination) {
         completedRootSegment = request.completedRootSegment;
       if (null !== completedRootSegment) {
         if (5 === completedRootSegment.status) return;
-        var completedPreambleSegments = request.completedPreambleSegments;
-        if (null === completedPreambleSegments) return;
         var renderState = request.renderState;
         if (
           (0 !== request.allPendingTasks ||
@@ -6068,9 +5792,8 @@ function flushCompletedQueues(request, destination) {
             ((resumableState.scriptResources[src] = null),
             renderState.scripts.add(chunks));
         }
-        var preamble = renderState.preamble,
-          htmlChunks = preamble.htmlChunks,
-          headChunks = preamble.headChunks,
+        var htmlChunks = renderState.htmlChunks,
+          headChunks = renderState.headChunks,
           i$jscomp$0;
         if (htmlChunks) {
           for (i$jscomp$0 = 0; i$jscomp$0 < htmlChunks.length; i$jscomp$0++)
@@ -6111,36 +5834,10 @@ function flushCompletedQueues(request, destination) {
         var hoistableChunks = renderState.hoistableChunks;
         for (i$jscomp$0 = 0; i$jscomp$0 < hoistableChunks.length; i$jscomp$0++)
           writeChunk(destination, hoistableChunks[i$jscomp$0]);
-        for (
-          renderState = hoistableChunks.length = 0;
-          renderState < completedPreambleSegments.length;
-          renderState++
-        ) {
-          var segments = completedPreambleSegments[renderState];
-          for (
-            _renderState$external = 0;
-            _renderState$external < segments.length;
-            _renderState$external++
-          )
-            flushSegment(
-              request,
-              destination,
-              segments[_renderState$external],
-              null
-            );
-        }
-        var preamble$jscomp$0 = request.renderState.preamble,
-          headChunks$jscomp$0 = preamble$jscomp$0.headChunks;
-        (preamble$jscomp$0.htmlChunks || headChunks$jscomp$0) &&
+        hoistableChunks.length = 0;
+        htmlChunks &&
+          null === headChunks &&
           writeChunk(destination, endChunkForTag("head"));
-        var bodyChunks = preamble$jscomp$0.bodyChunks;
-        if (bodyChunks)
-          for (
-            completedPreambleSegments = 0;
-            completedPreambleSegments < bodyChunks.length;
-            completedPreambleSegments++
-          )
-            writeChunk(destination, bodyChunks[completedPreambleSegments]);
         flushSegment(request, destination, completedRootSegment, null);
         request.completedRootSegment = null;
         writeBootstrap(destination, request.renderState);
@@ -6366,15 +6063,15 @@ function addToReplayParent(node, parentKeyPath, trackedPostpones) {
     parentNode[2].push(node);
   }
 }
-var isomorphicReactPackageVersion$jscomp$inline_810 = React.version;
+var isomorphicReactPackageVersion$jscomp$inline_777 = React.version;
 if (
-  "19.1.0-experimental-e670e72f-20250214" !==
-  isomorphicReactPackageVersion$jscomp$inline_810
+  "19.1.0-experimental-b3a95caf-20250113" !==
+  isomorphicReactPackageVersion$jscomp$inline_777
 )
   throw Error(
     'Incompatible React versions: The "react" and "react-dom" packages must have the exact same version. Instead got:\n  - react:      ' +
-      (isomorphicReactPackageVersion$jscomp$inline_810 +
-        "\n  - react-dom:  19.1.0-experimental-e670e72f-20250214\nLearn more: https://react.dev/warnings/version-mismatch")
+      (isomorphicReactPackageVersion$jscomp$inline_777 +
+        "\n  - react-dom:  19.1.0-experimental-b3a95caf-20250113\nLearn more: https://react.dev/warnings/version-mismatch")
   );
 exports.renderToReadableStream = function (children, options) {
   return new Promise(function (resolve, reject) {
@@ -6465,4 +6162,4 @@ exports.renderToReadableStream = function (children, options) {
     startWork(request);
   });
 };
-exports.version = "19.1.0-experimental-e670e72f-20250214";
+exports.version = "19.1.0-experimental-b3a95caf-20250113";
diff --git a/node_modules/react-dom/cjs/react-dom-server.edge.development.js b/node_modules/react-dom/cjs/react-dom-server.edge.development.js
index ebafc73..82bc69d 100644
--- a/node_modules/react-dom/cjs/react-dom-server.edge.development.js
+++ b/node_modules/react-dom/cjs/react-dom-server.edge.development.js
@@ -875,7 +875,8 @@
         segmentPrefix: stringToPrecomputedChunk(idPrefix + "S:"),
         boundaryPrefix: stringToPrecomputedChunk(idPrefix + "B:"),
         startInlineScript: inlineScriptWithNonce,
-        preamble: createPreambleState(),
+        htmlChunks: null,
+        headChunks: null,
         externalRuntimeScript: externalRuntimeScript,
         bootstrapChunks: bootstrapChunks,
         importMapChunks: externalRuntimeConfig,
@@ -1046,14 +1047,6 @@
         moduleScriptResources: {}
       };
     }
-    function createPreambleState() {
-      return {
-        htmlChunks: null,
-        headChunks: null,
-        bodyChunks: null,
-        contribution: NoContribution
-      };
-    }
     function createFormatContext(insertionMode, selectedValue, tagScope) {
       return {
         insertionMode: insertionMode,
@@ -1124,26 +1117,16 @@
             null,
             parentContext.tagScope
           );
-        case "head":
-          if (parentContext.insertionMode < HTML_MODE)
-            return createFormatContext(
-              HTML_HEAD_MODE,
-              null,
-              parentContext.tagScope
-            );
-          break;
-        case "html":
-          if (parentContext.insertionMode === ROOT_HTML_MODE)
-            return createFormatContext(
-              HTML_HTML_MODE,
-              null,
-              parentContext.tagScope
-            );
       }
-      return parentContext.insertionMode >= HTML_TABLE_MODE ||
-        parentContext.insertionMode < HTML_MODE
+      return parentContext.insertionMode >= HTML_TABLE_MODE
         ? createFormatContext(HTML_MODE, null, parentContext.tagScope)
-        : parentContext;
+        : parentContext.insertionMode === ROOT_HTML_MODE
+          ? "html" === type
+            ? createFormatContext(HTML_HTML_MODE, null, parentContext.tagScope)
+            : createFormatContext(HTML_MODE, null, parentContext.tagScope)
+          : parentContext.insertionMode === HTML_HTML_MODE
+            ? createFormatContext(HTML_MODE, null, parentContext.tagScope)
+            : parentContext;
     }
     function pushTextInstance(target, text, renderState, textEmbedded) {
       if ("" === text) return textEmbedded;
@@ -1795,29 +1778,6 @@
       target.push(endChunkForTag("script"));
       return null;
     }
-    function pushStartSingletonElement(target, props, tag) {
-      target.push(startChunkForTag(tag));
-      var innerHTML = (tag = null),
-        propKey;
-      for (propKey in props)
-        if (hasOwnProperty.call(props, propKey)) {
-          var propValue = props[propKey];
-          if (null != propValue)
-            switch (propKey) {
-              case "children":
-                tag = propValue;
-                break;
-              case "dangerouslySetInnerHTML":
-                innerHTML = propValue;
-                break;
-              default:
-                pushAttribute(target, propKey, propValue);
-            }
-        }
-      target.push(endOfStartTag);
-      pushInnerHTML(target, innerHTML, tag);
-      return tag;
-    }
     function pushStartGenericElement(target, props, tag) {
       target.push(startChunkForTag(tag));
       var innerHTML = (tag = null),
@@ -1858,7 +1818,6 @@
       props,
       resumableState,
       renderState,
-      preambleState,
       hoistableState,
       formatContext,
       textEmbedded,
@@ -3027,13 +2986,13 @@
         case "missing-glyph":
           break;
         case "head":
-          if (formatContext.insertionMode < HTML_MODE) {
-            var preamble = preambleState || renderState.preamble;
-            if (preamble.headChunks)
-              throw Error("The `<head>` tag may only be rendered once.");
-            preamble.headChunks = [];
-            var JSCompiler_inline_result$jscomp$9 = pushStartSingletonElement(
-              preamble.headChunks,
+          if (
+            formatContext.insertionMode < HTML_MODE &&
+            null === renderState.headChunks
+          ) {
+            renderState.headChunks = [];
+            var JSCompiler_inline_result$jscomp$9 = pushStartGenericElement(
+              renderState.headChunks,
               props,
               "head"
             );
@@ -3044,42 +3003,24 @@
               "head"
             );
           return JSCompiler_inline_result$jscomp$9;
-        case "body":
-          if (formatContext.insertionMode < HTML_MODE) {
-            var preamble$jscomp$0 = preambleState || renderState.preamble;
-            if (preamble$jscomp$0.bodyChunks)
-              throw Error("The `<body>` tag may only be rendered once.");
-            preamble$jscomp$0.bodyChunks = [];
-            var JSCompiler_inline_result$jscomp$10 = pushStartSingletonElement(
-              preamble$jscomp$0.bodyChunks,
-              props,
-              "body"
-            );
-          } else
-            JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
-              target$jscomp$0,
-              props,
-              "body"
-            );
-          return JSCompiler_inline_result$jscomp$10;
         case "html":
-          if (formatContext.insertionMode === ROOT_HTML_MODE) {
-            var preamble$jscomp$1 = preambleState || renderState.preamble;
-            if (preamble$jscomp$1.htmlChunks)
-              throw Error("The `<html>` tag may only be rendered once.");
-            preamble$jscomp$1.htmlChunks = [doctypeChunk];
-            var JSCompiler_inline_result$jscomp$11 = pushStartSingletonElement(
-              preamble$jscomp$1.htmlChunks,
+          if (
+            formatContext.insertionMode === ROOT_HTML_MODE &&
+            null === renderState.htmlChunks
+          ) {
+            renderState.htmlChunks = [doctypeChunk];
+            var JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
+              renderState.htmlChunks,
               props,
               "html"
             );
           } else
-            JSCompiler_inline_result$jscomp$11 = pushStartGenericElement(
+            JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
               target$jscomp$0,
               props,
               "html"
             );
-          return JSCompiler_inline_result$jscomp$11;
+          return JSCompiler_inline_result$jscomp$10;
         default:
           if (-1 !== type.indexOf("-")) {
             target$jscomp$0.push(startChunkForTag(type));
@@ -3149,21 +3090,6 @@
         endTagCache.set(tag, chunk));
       return chunk;
     }
-    function hoistPreambleState(renderState, preambleState) {
-      renderState = renderState.preamble;
-      null === renderState.htmlChunks &&
-        preambleState.htmlChunks &&
-        ((renderState.htmlChunks = preambleState.htmlChunks),
-        (preambleState.contribution |= 1));
-      null === renderState.headChunks &&
-        preambleState.headChunks &&
-        ((renderState.headChunks = preambleState.headChunks),
-        (preambleState.contribution |= 4));
-      null === renderState.bodyChunks &&
-        preambleState.bodyChunks &&
-        ((renderState.bodyChunks = preambleState.bodyChunks),
-        (preambleState.contribution |= 2));
-    }
     function writeBootstrap(destination, renderState) {
       renderState = renderState.bootstrapChunks;
       for (var i = 0; i < renderState.length - 1; i++)
@@ -3184,18 +3110,10 @@
       writeChunk(destination, stringToChunk(id.toString(16)));
       return writeChunkAndReturn(destination, startPendingSuspenseBoundary2);
     }
-    function writePreambleContribution(destination, preambleState) {
-      preambleState = preambleState.contribution;
-      preambleState !== NoContribution &&
-        (writeChunk(destination, boundaryPreambleContributionChunkStart),
-        writeChunk(destination, stringToChunk("" + preambleState)),
-        writeChunk(destination, boundaryPreambleContributionChunkEnd));
-    }
     function writeStartSegment(destination, renderState, formatContext, id) {
       switch (formatContext.insertionMode) {
         case ROOT_HTML_MODE:
         case HTML_HTML_MODE:
-        case HTML_HEAD_MODE:
         case HTML_MODE:
           return (
             writeChunk(destination, startSegmentHTML),
@@ -3253,7 +3171,6 @@
       switch (formatContext.insertionMode) {
         case ROOT_HTML_MODE:
         case HTML_HTML_MODE:
-        case HTML_HEAD_MODE:
         case HTML_MODE:
           return writeChunkAndReturn(destination, endSegmentHTML);
         case SVG_MODE:
@@ -4258,12 +4175,6 @@
           index
         );
     }
-    function unsupportedRefresh() {
-      throw Error("Cache cannot be refreshed during server rendering.");
-    }
-    function unsupportedStartGesture() {
-      throw Error("startGesture cannot be called during server rendering.");
-    }
     function noop$1() {}
     function disabledLog() {}
     function disableLogs() {
@@ -4608,7 +4519,7 @@
       this.status = 10;
       this.fatalError = null;
       this.pendingRootTasks = this.allPendingTasks = this.nextSegmentId = 0;
-      this.completedPreambleSegments = this.completedRootSegment = null;
+      this.completedRootSegment = null;
       this.abortableTasks = abortSet;
       this.pingedTasks = [];
       this.clientRenderedBoundaries = [];
@@ -4668,7 +4579,6 @@
         null,
         renderState,
         null,
-        null,
         resumableState.abortableTasks,
         null,
         rootFormatContext,
@@ -4763,7 +4673,6 @@
             null,
             onAllReady,
             null,
-            null,
             renderState.abortableTasks,
             null,
             postponedState.rootFormatContext,
@@ -4853,12 +4762,7 @@
               return performWork(request);
             }, 0));
     }
-    function createSuspenseBoundary(
-      request,
-      fallbackAbortableTasks,
-      contentPreamble,
-      fallbackPreamble
-    ) {
+    function createSuspenseBoundary(request, fallbackAbortableTasks) {
       return {
         status: PENDING,
         rootSegmentID: -1,
@@ -4870,8 +4774,6 @@
         errorDigest: null,
         contentState: createHoistableState(),
         fallbackState: createHoistableState(),
-        contentPreamble: contentPreamble,
-        fallbackPreamble: fallbackPreamble,
         trackedContentKeyPath: null,
         trackedFallbackNode: null,
         errorMessage: null,
@@ -4886,7 +4788,6 @@
       childIndex,
       blockedBoundary,
       blockedSegment,
-      blockedPreamble,
       hoistableState,
       abortSet,
       keyPath,
@@ -4911,7 +4812,6 @@
         },
         blockedBoundary: blockedBoundary,
         blockedSegment: blockedSegment,
-        blockedPreamble: blockedPreamble,
         hoistableState: hoistableState,
         abortSet: abortSet,
         keyPath: keyPath,
@@ -4958,7 +4858,6 @@
         },
         blockedBoundary: blockedBoundary,
         blockedSegment: null,
-        blockedPreamble: null,
         hoistableState: hoistableState,
         abortSet: abortSet,
         keyPath: keyPath,
@@ -4983,12 +4882,11 @@
     ) {
       return {
         status: PENDING,
-        parentFlushed: !1,
         id: -1,
         index: index,
+        parentFlushed: !1,
         chunks: [],
         children: [],
-        preambleChildren: [],
         parentFormatContext: parentFormatContext,
         boundary: boundary,
         lastPushedText: lastPushedText,
@@ -5692,7 +5590,6 @@
             props,
             request.resumableState,
             request.renderState,
-            task.blockedPreamble,
             task.hoistableState,
             task.formatContext,
             segment.lastPushedText,
@@ -5701,45 +5598,9 @@
           segment.lastPushedText = !1;
           var _prevContext = task.formatContext,
             _prevKeyPath2 = task.keyPath;
+          task.formatContext = getChildFormatContext(_prevContext, type, props);
           task.keyPath = keyPath;
-          if (
-            (task.formatContext = getChildFormatContext(
-              _prevContext,
-              type,
-              props
-            )).insertionMode === HTML_HEAD_MODE
-          ) {
-            var preambleSegment = createPendingSegment(
-              request,
-              0,
-              null,
-              task.formatContext,
-              !1,
-              !1
-            );
-            segment.preambleChildren.push(preambleSegment);
-            var preambleTask = createRenderTask(
-              request,
-              null,
-              _children,
-              -1,
-              task.blockedBoundary,
-              preambleSegment,
-              task.blockedPreamble,
-              task.hoistableState,
-              request.abortableTasks,
-              task.keyPath,
-              task.formatContext,
-              task.context,
-              task.treeContext,
-              task.componentStack,
-              task.isFallback,
-              emptyContextObject,
-              task.debugTask
-            );
-            pushComponentStack(preambleTask);
-            request.pingedTasks.push(preambleTask);
-          } else renderNode(request, task, _children, -1);
+          renderNode(request, task, _children, -1);
           task.formatContext = _prevContext;
           task.keyPath = _prevKeyPath2;
           a: {
@@ -5776,9 +5637,6 @@
                   resumableState.hasHtml = !0;
                   break a;
                 }
-                break;
-              case "head":
-                if (_prevContext.insertionMode <= HTML_HTML_MODE) break a;
             }
             target.push(endChunkForTag(type));
           }
@@ -5832,26 +5690,12 @@
             } else {
               var prevKeyPath$jscomp$3 = task.keyPath,
                 parentBoundary = task.blockedBoundary,
-                parentPreamble = task.blockedPreamble,
                 parentHoistableState = task.hoistableState,
                 parentSegment = task.blockedSegment,
                 fallback = props.fallback,
                 content = props.children,
-                fallbackAbortSet = new Set();
-              var newBoundary =
-                task.formatContext.insertionMode < HTML_MODE
-                  ? createSuspenseBoundary(
-                      request,
-                      fallbackAbortSet,
-                      createPreambleState(),
-                      createPreambleState()
-                    )
-                  : createSuspenseBoundary(
-                      request,
-                      fallbackAbortSet,
-                      null,
-                      null
-                    );
+                fallbackAbortSet = new Set(),
+                newBoundary = createSuspenseBoundary(request, fallbackAbortSet);
               null !== request.trackedPostpones &&
                 (newBoundary.trackedContentKeyPath = keyPath);
               var boundarySegment = createPendingSegment(
@@ -5891,7 +5735,6 @@
                 );
                 newBoundary.trackedFallbackNode = fallbackReplayNode;
                 task.blockedSegment = boundarySegment;
-                task.blockedPreamble = newBoundary.fallbackPreamble;
                 task.keyPath = fallbackKeyPath;
                 boundarySegment.status = 6;
                 try {
@@ -5907,7 +5750,6 @@
                   );
                 } finally {
                   (task.blockedSegment = parentSegment),
-                    (task.blockedPreamble = parentPreamble),
                     (task.keyPath = prevKeyPath$jscomp$3);
                 }
                 var suspendedPrimaryTask = createRenderTask(
@@ -5917,7 +5759,6 @@
                   -1,
                   newBoundary,
                   contentRootSegment,
-                  newBoundary.contentPreamble,
                   newBoundary.contentState,
                   task.abortSet,
                   keyPath,
@@ -5933,7 +5774,6 @@
                 request.pingedTasks.push(suspendedPrimaryTask);
               } else {
                 task.blockedBoundary = newBoundary;
-                task.blockedPreamble = newBoundary.contentPreamble;
                 task.hoistableState = newBoundary.contentState;
                 task.blockedSegment = contentRootSegment;
                 task.keyPath = keyPath;
@@ -5950,9 +5790,6 @@
                       newBoundary.status === PENDING)
                   ) {
                     newBoundary.status = COMPLETED;
-                    0 === request.pendingRootTasks &&
-                      task.blockedPreamble &&
-                      preparePreamble(request);
                     break a;
                   }
                 } catch (thrownValue$2) {
@@ -5992,7 +5829,6 @@
                   untrackBoundary(request, newBoundary);
                 } finally {
                   (task.blockedBoundary = parentBoundary),
-                    (task.blockedPreamble = parentPreamble),
                     (task.hoistableState = parentHoistableState),
                     (task.blockedSegment = parentSegment),
                     (task.keyPath = prevKeyPath$jscomp$3);
@@ -6004,7 +5840,6 @@
                   -1,
                   parentBoundary,
                   boundarySegment,
-                  newBoundary.fallbackPreamble,
                   newBoundary.fallbackState,
                   fallbackAbortSet,
                   [keyPath[0], "Suspense Fallback", keyPath[2]],
@@ -6243,27 +6078,17 @@
                 previousReplaySet = task.replay,
                 parentBoundary = task.blockedBoundary,
                 parentHoistableState = task.hoistableState,
-                content = props.children,
-                fallback = props.fallback,
-                fallbackAbortSet = new Set();
-              props =
-                task.formatContext.insertionMode < HTML_MODE
-                  ? createSuspenseBoundary(
-                      request,
-                      fallbackAbortSet,
-                      createPreambleState(),
-                      createPreambleState()
-                    )
-                  : createSuspenseBoundary(
-                      request,
-                      fallbackAbortSet,
-                      null,
-                      null
-                    );
-              props.parentFlushed = !0;
-              props.rootSegmentID = type;
-              task.blockedBoundary = props;
-              task.hoistableState = props.contentState;
+                content = props.children;
+              props = props.fallback;
+              var fallbackAbortSet = new Set(),
+                resumedBoundary = createSuspenseBoundary(
+                  request,
+                  fallbackAbortSet
+                );
+              resumedBoundary.parentFlushed = !0;
+              resumedBoundary.rootSegmentID = type;
+              task.blockedBoundary = resumedBoundary;
+              task.hoistableState = resumedBoundary.contentState;
               task.keyPath = keyPath;
               task.replay = { nodes: ref, slots: name, pendingTasks: 1 };
               try {
@@ -6276,13 +6101,16 @@
                     "Couldn't find all resumable slots by key/index during replaying. The tree doesn't match so React will fallback to client rendering."
                   );
                 task.replay.pendingTasks--;
-                if (0 === props.pendingTasks && props.status === PENDING) {
-                  props.status = COMPLETED;
-                  request.completedBoundaries.push(props);
+                if (
+                  0 === resumedBoundary.pendingTasks &&
+                  resumedBoundary.status === PENDING
+                ) {
+                  resumedBoundary.status = COMPLETED;
+                  request.completedBoundaries.push(resumedBoundary);
                   break a;
                 }
               } catch (error) {
-                (props.status = CLIENT_RENDERED),
+                (resumedBoundary.status = CLIENT_RENDERED),
                   (childNodes = getThrownInfo(task.componentStack)),
                   "object" === typeof error &&
                   null !== error &&
@@ -6300,9 +6128,15 @@
                         childNodes,
                         task.debugTask
                       )),
-                  encodeErrorForBoundary(props, replay, error, childNodes, !1),
+                  encodeErrorForBoundary(
+                    resumedBoundary,
+                    replay,
+                    error,
+                    childNodes,
+                    !1
+                  ),
                   task.replay.pendingTasks--,
-                  request.clientRenderedBoundaries.push(props);
+                  request.clientRenderedBoundaries.push(resumedBoundary);
               } finally {
                 (task.blockedBoundary = parentBoundary),
                   (task.hoistableState = parentHoistableState),
@@ -6313,10 +6147,10 @@
                 request,
                 null,
                 { nodes: keyOrIndex, slots: node, pendingTasks: 0 },
-                fallback,
+                props,
                 -1,
                 parentBoundary,
-                props.fallbackState,
+                resumedBoundary.fallbackState,
                 fallbackAbortSet,
                 [keyPath[0], "Suspense Fallback", keyPath[2]],
                 task.formatContext,
@@ -6861,7 +6695,6 @@
         task.childIndex,
         task.blockedBoundary,
         newSegment,
-        task.blockedPreamble,
         task.hoistableState,
         task.abortSet,
         task.keyPath,
@@ -7079,12 +6912,7 @@
             errorDigest = errorDigest$jscomp$0,
             errorInfo = errorInfo$jscomp$0,
             wasAborted = aborted,
-            resumedBoundary = createSuspenseBoundary(
-              request,
-              new Set(),
-              null,
-              null
-            );
+            resumedBoundary = createSuspenseBoundary(request, new Set());
           resumedBoundary.parentFlushed = !0;
           resumedBoundary.rootSegmentID = node;
           resumedBoundary.status = CLIENT_RENDERED;
@@ -7294,7 +7122,6 @@
     }
     function completeShell(request) {
       null === request.trackedPostpones && safelyEmitEarlyPreloads(request, !0);
-      null === request.trackedPostpones && preparePreamble(request);
       request.onShellError = noop;
       request = request.onShellReady;
       request();
@@ -7307,7 +7134,6 @@
           : null === request.completedRootSegment ||
               request.completedRootSegment.status !== POSTPONED
       );
-      preparePreamble(request);
       request = request.onAllReady;
       request();
     }
@@ -7352,11 +7178,7 @@
                     abortTaskSoft,
                     request
                   ),
-                  boundary.fallbackAbortableTasks.clear(),
-                  0 === request.pendingRootTasks &&
-                    null === request.trackedPostpones &&
-                    null !== boundary.contentPreamble &&
-                    preparePreamble(request)))
+                  boundary.fallbackAbortableTasks.clear()))
               : null !== segment &&
                 segment.parentFlushed &&
                 segment.status === COMPLETED &&
@@ -7611,11 +7433,7 @@
                             ),
                             untrackBoundary(request, boundary),
                             boundary.parentFlushed &&
-                              request.clientRenderedBoundaries.push(boundary),
-                            0 === request.pendingRootTasks &&
-                              null === request.trackedPostpones &&
-                              null !== boundary.contentPreamble &&
-                              preparePreamble(request)));
+                              request.clientRenderedBoundaries.push(boundary)));
                       request.allPendingTasks--;
                       0 === request.allPendingTasks && completeAll(request);
                     }
@@ -7645,85 +7463,6 @@
         }
       }
     }
-    function preparePreambleFromSubtree(
-      request,
-      segment,
-      collectedPreambleSegments
-    ) {
-      segment.preambleChildren.length &&
-        collectedPreambleSegments.push(segment.preambleChildren);
-      for (var pendingPreambles = !1, i = 0; i < segment.children.length; i++)
-        pendingPreambles =
-          preparePreambleFromSegment(
-            request,
-            segment.children[i],
-            collectedPreambleSegments
-          ) || pendingPreambles;
-      return pendingPreambles;
-    }
-    function preparePreambleFromSegment(
-      request,
-      segment,
-      collectedPreambleSegments
-    ) {
-      var boundary = segment.boundary;
-      if (null === boundary)
-        return preparePreambleFromSubtree(
-          request,
-          segment,
-          collectedPreambleSegments
-        );
-      var preamble = boundary.contentPreamble,
-        fallbackPreamble = boundary.fallbackPreamble;
-      if (null === preamble || null === fallbackPreamble) return !1;
-      switch (boundary.status) {
-        case COMPLETED:
-          hoistPreambleState(request.renderState, preamble);
-          segment = boundary.completedSegments[0];
-          if (!segment)
-            throw Error(
-              "A previously unvisited boundary must have exactly one root segment. This is a bug in React."
-            );
-          return preparePreambleFromSubtree(
-            request,
-            segment,
-            collectedPreambleSegments
-          );
-        case POSTPONED:
-          if (null !== request.trackedPostpones) return !0;
-        case CLIENT_RENDERED:
-          if (segment.status === COMPLETED)
-            return (
-              hoistPreambleState(request.renderState, fallbackPreamble),
-              preparePreambleFromSubtree(
-                request,
-                segment,
-                collectedPreambleSegments
-              )
-            );
-        default:
-          return !0;
-      }
-    }
-    function preparePreamble(request) {
-      if (
-        request.completedRootSegment &&
-        null === request.completedPreambleSegments
-      ) {
-        var collectedPreambleSegments = [],
-          hasPendingPreambles = preparePreambleFromSegment(
-            request,
-            request.completedRootSegment,
-            collectedPreambleSegments
-          ),
-          preamble = request.renderState.preamble;
-        if (
-          !1 === hasPendingPreambles ||
-          (preamble.headChunks && preamble.bodyChunks)
-        )
-          request.completedPreambleSegments = collectedPreambleSegments;
-      }
-    }
     function flushSubtree(request, destination, segment, hoistableState) {
       segment.parentFlushed = !0;
       switch (segment.status) {
@@ -7771,8 +7510,8 @@
       if (boundary.status === CLIENT_RENDERED) {
         var errorDigest = boundary.errorDigest,
           errorMessage = boundary.errorMessage,
-          errorStack = boundary.errorStack,
-          errorComponentStack = boundary.errorComponentStack;
+          errorStack = boundary.errorStack;
+        boundary = boundary.errorComponentStack;
         writeChunkAndReturn(destination, startClientRenderedSuspenseBoundary);
         writeChunk(destination, clientRenderedSuspenseBoundaryError1);
         errorDigest &&
@@ -7805,11 +7544,11 @@
             destination,
             clientRenderedSuspenseBoundaryErrorAttrInterstitial
           ));
-        errorComponentStack &&
+        boundary &&
           (writeChunk(destination, clientRenderedSuspenseBoundaryError1D),
           writeChunk(
             destination,
-            stringToChunk(escapeTextForBrowser(errorComponentStack))
+            stringToChunk(escapeTextForBrowser(boundary))
           ),
           writeChunk(
             destination,
@@ -7817,14 +7556,9 @@
           ));
         writeChunkAndReturn(destination, clientRenderedSuspenseBoundaryError2);
         flushSubtree(request, destination, segment, hoistableState);
-        (request = boundary.fallbackPreamble) &&
-          writePreambleContribution(destination, request);
-        return writeChunkAndReturn(destination, endSuspenseBoundary);
-      }
-      if (boundary.status !== COMPLETED)
-        return (
-          boundary.status === PENDING &&
-            (boundary.rootSegmentID = request.nextSegmentId++),
+      } else if (boundary.status !== COMPLETED)
+        boundary.status === PENDING &&
+          (boundary.rootSegmentID = request.nextSegmentId++),
           0 < boundary.completedSegments.length &&
             request.partialBoundaries.push(boundary),
           writeStartPendingSuspenseBoundary(
@@ -7839,34 +7573,32 @@
               hoistStylesheetDependency,
               hoistableState
             )),
-          flushSubtree(request, destination, segment, hoistableState),
-          writeChunkAndReturn(destination, endSuspenseBoundary)
-        );
-      if (boundary.byteSize > request.progressiveChunkSize)
-        return (
-          (boundary.rootSegmentID = request.nextSegmentId++),
+          flushSubtree(request, destination, segment, hoistableState);
+      else if (boundary.byteSize > request.progressiveChunkSize)
+        (boundary.rootSegmentID = request.nextSegmentId++),
           request.completedBoundaries.push(boundary),
           writeStartPendingSuspenseBoundary(
             destination,
             request.renderState,
             boundary.rootSegmentID
           ),
-          flushSubtree(request, destination, segment, hoistableState),
-          writeChunkAndReturn(destination, endSuspenseBoundary)
-        );
-      hoistableState &&
-        ((segment = boundary.contentState),
-        segment.styles.forEach(hoistStyleQueueDependency, hoistableState),
-        segment.stylesheets.forEach(hoistStylesheetDependency, hoistableState));
-      writeChunkAndReturn(destination, startCompletedSuspenseBoundary);
-      segment = boundary.completedSegments;
-      if (1 !== segment.length)
-        throw Error(
-          "A previously unvisited boundary must have exactly one root segment. This is a bug in React."
-        );
-      flushSegment(request, destination, segment[0], hoistableState);
-      (request = boundary.contentPreamble) &&
-        writePreambleContribution(destination, request);
+          flushSubtree(request, destination, segment, hoistableState);
+      else {
+        hoistableState &&
+          ((segment = boundary.contentState),
+          segment.styles.forEach(hoistStyleQueueDependency, hoistableState),
+          segment.stylesheets.forEach(
+            hoistStylesheetDependency,
+            hoistableState
+          ));
+        writeChunkAndReturn(destination, startCompletedSuspenseBoundary);
+        segment = boundary.completedSegments;
+        if (1 !== segment.length)
+          throw Error(
+            "A previously unvisited boundary must have exactly one root segment. This is a bug in React."
+          );
+        flushSegment(request, destination, segment[0], hoistableState);
+      }
       return writeChunkAndReturn(destination, endSuspenseBoundary);
     }
     function flushSegmentContainer(
@@ -8027,8 +7759,6 @@
             completedRootSegment = request.completedRootSegment;
           if (null !== completedRootSegment) {
             if (completedRootSegment.status === POSTPONED) return;
-            var completedPreambleSegments = request.completedPreambleSegments;
-            if (null === completedPreambleSegments) return;
             var renderState = request.renderState;
             if (
               (0 !== request.allPendingTasks ||
@@ -8043,9 +7773,8 @@
                 ((resumableState.scriptResources[src] = EXISTS),
                 renderState.scripts.add(chunks));
             }
-            var preamble = renderState.preamble,
-              htmlChunks = preamble.htmlChunks,
-              headChunks = preamble.headChunks,
+            var htmlChunks = renderState.htmlChunks,
+              headChunks = renderState.headChunks,
               i$jscomp$0;
             if (htmlChunks) {
               for (i$jscomp$0 = 0; i$jscomp$0 < htmlChunks.length; i$jscomp$0++)
@@ -8106,36 +7835,10 @@
               i$jscomp$0++
             )
               writeChunk(destination, hoistableChunks[i$jscomp$0]);
-            for (
-              renderState = hoistableChunks.length = 0;
-              renderState < completedPreambleSegments.length;
-              renderState++
-            ) {
-              var segments = completedPreambleSegments[renderState];
-              for (
-                _renderState$external = 0;
-                _renderState$external < segments.length;
-                _renderState$external++
-              )
-                flushSegment(
-                  request,
-                  destination,
-                  segments[_renderState$external],
-                  null
-                );
-            }
-            var preamble$jscomp$0 = request.renderState.preamble,
-              headChunks$jscomp$0 = preamble$jscomp$0.headChunks;
-            (preamble$jscomp$0.htmlChunks || headChunks$jscomp$0) &&
+            hoistableChunks.length = 0;
+            htmlChunks &&
+              null === headChunks &&
               writeChunk(destination, endChunkForTag("head"));
-            var bodyChunks = preamble$jscomp$0.bodyChunks;
-            if (bodyChunks)
-              for (
-                completedPreambleSegments = 0;
-                completedPreambleSegments < bodyChunks.length;
-                completedPreambleSegments++
-              )
-                writeChunk(destination, bodyChunks[completedPreambleSegments]);
             flushSegment(request, destination, completedRootSegment, null);
             request.completedRootSegment = null;
             writeBootstrap(destination, request.renderState);
@@ -8489,19 +8192,11 @@
       )
         return (request.trackedPostpones = null);
       if (
-        null === request.completedRootSegment ||
-        (request.completedRootSegment.status !== POSTPONED &&
-          null !== request.completedPreambleSegments)
+        null !== request.completedRootSegment &&
+        request.completedRootSegment.status === POSTPONED
       ) {
-        var replaySlots = trackedPostpones.rootSlots;
-        var resumableState = request.resumableState;
-        resumableState.bootstrapScriptContent = void 0;
-        resumableState.bootstrapScripts = void 0;
-        resumableState.bootstrapModules = void 0;
-      } else {
-        replaySlots = request.completedRootSegment.id;
-        resumableState = request.resumableState;
-        var renderState = request.renderState;
+        var resumableState = request.resumableState,
+          renderState = request.renderState;
         resumableState.nextFormID = 0;
         resumableState.hasBody = !1;
         resumableState.hasHtml = !1;
@@ -8513,23 +8208,27 @@
         resumableState.scriptResources = {};
         resumableState.moduleUnknownResources = {};
         resumableState.moduleScriptResources = {};
-      }
+      } else
+        (resumableState = request.resumableState),
+          (resumableState.bootstrapScriptContent = void 0),
+          (resumableState.bootstrapScripts = void 0),
+          (resumableState.bootstrapModules = void 0);
       return {
         nextSegmentId: request.nextSegmentId,
         rootFormatContext: request.rootFormatContext,
         progressiveChunkSize: request.progressiveChunkSize,
         resumableState: request.resumableState,
         replayNodes: trackedPostpones.rootNodes,
-        replaySlots: replaySlots
+        replaySlots: trackedPostpones.rootSlots
       };
     }
     function ensureCorrectIsomorphicReactVersion() {
       var isomorphicReactPackageVersion = React.version;
-      if ("19.1.0-experimental-e670e72f-20250214" !== isomorphicReactPackageVersion)
+      if ("19.1.0-experimental-b3a95caf-20250113" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The "react" and "react-dom" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              "\n  - react-dom:  19.1.0-experimental-e670e72f-20250214\nLearn more: https://react.dev/warnings/version-mismatch")
+              "\n  - react-dom:  19.1.0-experimental-b3a95caf-20250113\nLearn more: https://react.dev/warnings/version-mismatch")
         );
     }
     var React = require("react"),
@@ -8550,7 +8249,6 @@
       REACT_SCOPE_TYPE = Symbol.for("react.scope"),
       REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen"),
       REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden"),
-      REACT_MEMO_CACHE_SENTINEL = Symbol.for("react.memo_cache_sentinel"),
       REACT_POSTPONE_TYPE = Symbol.for("react.postpone"),
       REACT_VIEW_TRANSITION_TYPE = Symbol.for("react.view_transition"),
       MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
@@ -9632,17 +9330,15 @@
       ),
       importMapScriptEnd = stringToPrecomputedChunk("\x3c/script>");
     var didWarnForNewBooleanPropsWithEmptyValue = {};
-    var NoContribution = 0,
-      ROOT_HTML_MODE = 0,
+    var ROOT_HTML_MODE = 0,
       HTML_HTML_MODE = 1,
       HTML_MODE = 2,
-      HTML_HEAD_MODE = 3,
-      SVG_MODE = 4,
-      MATHML_MODE = 5,
-      HTML_TABLE_MODE = 6,
-      HTML_TABLE_BODY_MODE = 7,
-      HTML_TABLE_ROW_MODE = 8,
-      HTML_COLGROUP_MODE = 9,
+      SVG_MODE = 3,
+      MATHML_MODE = 4,
+      HTML_TABLE_MODE = 5,
+      HTML_TABLE_BODY_MODE = 6,
+      HTML_TABLE_ROW_MODE = 7,
+      HTML_COLGROUP_MODE = 8,
       textSeparator = stringToPrecomputedChunk("\x3c!-- --\x3e"),
       styleNameCache = new Map(),
       styleAttributeStart = stringToPrecomputedChunk(' style="'),
@@ -9708,9 +9404,6 @@
         stringToPrecomputedChunk(' data-cstck="'),
       clientRenderedSuspenseBoundaryError2 =
         stringToPrecomputedChunk("></template>"),
-      boundaryPreambleContributionChunkStart =
-        stringToPrecomputedChunk("\x3c!--"),
-      boundaryPreambleContributionChunkEnd = stringToPrecomputedChunk("--\x3e"),
       startSegmentHTML = stringToPrecomputedChunk('<div hidden id="'),
       startSegmentHTML2 = stringToPrecomputedChunk('">'),
       endSegmentHTML = stringToPrecomputedChunk("</div>"),
@@ -9979,20 +9672,8 @@
           resolveCurrentlyRenderingComponent();
           return NotPending;
         },
-        useMemoCache: function (size) {
-          for (var data = Array(size), i = 0; i < size; i++)
-            data[i] = REACT_MEMO_CACHE_SENTINEL;
-          return data;
-        },
-        useCacheRefresh: function () {
-          return unsupportedRefresh;
-        },
         useEffectEvent: function () {
           return throwOnUseEffectEventCall;
-        },
-        useSwipeTransition: function (previous, current) {
-          resolveCurrentlyRenderingComponent();
-          return [current, unsupportedStartGesture];
         }
       },
       currentResumableState = null,
@@ -10311,5 +9992,5 @@
         startWork(request);
       });
     };
-    exports.version = "19.1.0-experimental-e670e72f-20250214";
+    exports.version = "19.1.0-experimental-b3a95caf-20250113";
   })();
diff --git a/node_modules/react-dom/cjs/react-dom-server.edge.production.js b/node_modules/react-dom/cjs/react-dom-server.edge.production.js
index 46c8faf..4ea23d9 100644
--- a/node_modules/react-dom/cjs/react-dom-server.edge.production.js
+++ b/node_modules/react-dom/cjs/react-dom-server.edge.production.js
@@ -51,7 +51,6 @@ var React = require("react"),
   REACT_SCOPE_TYPE = Symbol.for("react.scope"),
   REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen"),
   REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden"),
-  REACT_MEMO_CACHE_SENTINEL = Symbol.for("react.memo_cache_sentinel"),
   REACT_POSTPONE_TYPE = Symbol.for("react.postpone"),
   REACT_VIEW_TRANSITION_TYPE = Symbol.for("react.view_transition"),
   MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
@@ -435,7 +434,8 @@ function createRenderState(
     segmentPrefix: stringToPrecomputedChunk(idPrefix + "S:"),
     boundaryPrefix: stringToPrecomputedChunk(idPrefix + "B:"),
     startInlineScript: inlineScriptWithNonce,
-    preamble: createPreambleState(),
+    htmlChunks: null,
+    headChunks: null,
     externalRuntimeScript: externalRuntimeScript,
     bootstrapChunks: bootstrapChunks,
     importMapChunks: externalRuntimeConfig,
@@ -609,14 +609,6 @@ function createResumableState(
     moduleScriptResources: {}
   };
 }
-function createPreambleState() {
-  return {
-    htmlChunks: null,
-    headChunks: null,
-    bodyChunks: null,
-    contribution: 0
-  };
-}
 function createFormatContext(insertionMode, selectedValue, tagScope) {
   return {
     insertionMode: insertionMode,
@@ -627,9 +619,9 @@ function createFormatContext(insertionMode, selectedValue, tagScope) {
 function createRootFormatContext(namespaceURI) {
   return createFormatContext(
     "http://www.w3.org/2000/svg" === namespaceURI
-      ? 4
+      ? 3
       : "http://www.w3.org/1998/Math/MathML" === namespaceURI
-        ? 5
+        ? 4
         : 0,
     null,
     0
@@ -646,34 +638,33 @@ function getChildFormatContext(parentContext, type, props) {
         parentContext.tagScope
       );
     case "svg":
-      return createFormatContext(4, null, parentContext.tagScope);
+      return createFormatContext(3, null, parentContext.tagScope);
     case "picture":
       return createFormatContext(2, null, parentContext.tagScope | 2);
     case "math":
-      return createFormatContext(5, null, parentContext.tagScope);
+      return createFormatContext(4, null, parentContext.tagScope);
     case "foreignObject":
       return createFormatContext(2, null, parentContext.tagScope);
     case "table":
-      return createFormatContext(6, null, parentContext.tagScope);
+      return createFormatContext(5, null, parentContext.tagScope);
     case "thead":
     case "tbody":
     case "tfoot":
-      return createFormatContext(7, null, parentContext.tagScope);
+      return createFormatContext(6, null, parentContext.tagScope);
     case "colgroup":
-      return createFormatContext(9, null, parentContext.tagScope);
-    case "tr":
       return createFormatContext(8, null, parentContext.tagScope);
-    case "head":
-      if (2 > parentContext.insertionMode)
-        return createFormatContext(3, null, parentContext.tagScope);
-      break;
-    case "html":
-      if (0 === parentContext.insertionMode)
-        return createFormatContext(1, null, parentContext.tagScope);
+    case "tr":
+      return createFormatContext(7, null, parentContext.tagScope);
   }
-  return 6 <= parentContext.insertionMode || 2 > parentContext.insertionMode
+  return 5 <= parentContext.insertionMode
     ? createFormatContext(2, null, parentContext.tagScope)
-    : parentContext;
+    : 0 === parentContext.insertionMode
+      ? "html" === type
+        ? createFormatContext(1, null, parentContext.tagScope)
+        : createFormatContext(2, null, parentContext.tagScope)
+      : 1 === parentContext.insertionMode
+        ? createFormatContext(2, null, parentContext.tagScope)
+        : parentContext;
 }
 var textSeparator = stringToPrecomputedChunk("\x3c!-- --\x3e");
 function pushTextInstance(target, text, renderState, textEmbedded) {
@@ -1200,29 +1191,6 @@ function pushScriptImpl(target, props) {
   target.push(endChunkForTag("script"));
   return null;
 }
-function pushStartSingletonElement(target, props, tag) {
-  target.push(startChunkForTag(tag));
-  var innerHTML = (tag = null),
-    propKey;
-  for (propKey in props)
-    if (hasOwnProperty.call(props, propKey)) {
-      var propValue = props[propKey];
-      if (null != propValue)
-        switch (propKey) {
-          case "children":
-            tag = propValue;
-            break;
-          case "dangerouslySetInnerHTML":
-            innerHTML = propValue;
-            break;
-          default:
-            pushAttribute(target, propKey, propValue);
-        }
-    }
-  target.push(endOfStartTag);
-  pushInnerHTML(target, innerHTML, tag);
-  return tag;
-}
 function pushStartGenericElement(target, props, tag) {
   target.push(startChunkForTag(tag));
   var innerHTML = (tag = null),
@@ -1267,7 +1235,6 @@ function pushStartInstance(
   props,
   resumableState,
   renderState,
-  preambleState,
   hoistableState,
   formatContext,
   textEmbedded,
@@ -1755,7 +1722,7 @@ function pushStartInstance(
       return JSCompiler_inline_result$jscomp$2;
     case "title":
       if (
-        4 === formatContext.insertionMode ||
+        3 === formatContext.insertionMode ||
         formatContext.tagScope & 1 ||
         null != props.itemProp
       )
@@ -1774,7 +1741,7 @@ function pushStartInstance(
         href = props.href,
         precedence = props.precedence;
       if (
-        4 === formatContext.insertionMode ||
+        3 === formatContext.insertionMode ||
         formatContext.tagScope & 1 ||
         null != props.itemProp ||
         "string" !== typeof rel ||
@@ -1856,7 +1823,7 @@ function pushStartInstance(
         "symbol" === typeof asyncProp ||
         props.onLoad ||
         props.onError ||
-        4 === formatContext.insertionMode ||
+        3 === formatContext.insertionMode ||
         formatContext.tagScope & 1 ||
         null != props.itemProp
       )
@@ -1897,7 +1864,7 @@ function pushStartInstance(
       var precedence$jscomp$0 = props.precedence,
         href$jscomp$0 = props.href;
       if (
-        4 === formatContext.insertionMode ||
+        3 === formatContext.insertionMode ||
         formatContext.tagScope & 1 ||
         null != props.itemProp ||
         "string" !== typeof precedence$jscomp$0 ||
@@ -2006,7 +1973,7 @@ function pushStartInstance(
       return JSCompiler_inline_result$jscomp$6;
     case "meta":
       if (
-        4 === formatContext.insertionMode ||
+        3 === formatContext.insertionMode ||
         formatContext.tagScope & 1 ||
         null != props.itemProp
       )
@@ -2184,13 +2151,10 @@ function pushStartInstance(
     case "missing-glyph":
       break;
     case "head":
-      if (2 > formatContext.insertionMode) {
-        var preamble = preambleState || renderState.preamble;
-        if (preamble.headChunks)
-          throw Error("The `<head>` tag may only be rendered once.");
-        preamble.headChunks = [];
-        var JSCompiler_inline_result$jscomp$9 = pushStartSingletonElement(
-          preamble.headChunks,
+      if (2 > formatContext.insertionMode && null === renderState.headChunks) {
+        renderState.headChunks = [];
+        var JSCompiler_inline_result$jscomp$9 = pushStartGenericElement(
+          renderState.headChunks,
           props,
           "head"
         );
@@ -2201,42 +2165,24 @@ function pushStartInstance(
           "head"
         );
       return JSCompiler_inline_result$jscomp$9;
-    case "body":
-      if (2 > formatContext.insertionMode) {
-        var preamble$jscomp$0 = preambleState || renderState.preamble;
-        if (preamble$jscomp$0.bodyChunks)
-          throw Error("The `<body>` tag may only be rendered once.");
-        preamble$jscomp$0.bodyChunks = [];
-        var JSCompiler_inline_result$jscomp$10 = pushStartSingletonElement(
-          preamble$jscomp$0.bodyChunks,
-          props,
-          "body"
-        );
-      } else
-        JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
-          target$jscomp$0,
-          props,
-          "body"
-        );
-      return JSCompiler_inline_result$jscomp$10;
     case "html":
-      if (0 === formatContext.insertionMode) {
-        var preamble$jscomp$1 = preambleState || renderState.preamble;
-        if (preamble$jscomp$1.htmlChunks)
-          throw Error("The `<html>` tag may only be rendered once.");
-        preamble$jscomp$1.htmlChunks = [doctypeChunk];
-        var JSCompiler_inline_result$jscomp$11 = pushStartSingletonElement(
-          preamble$jscomp$1.htmlChunks,
+      if (
+        0 === formatContext.insertionMode &&
+        null === renderState.htmlChunks
+      ) {
+        renderState.htmlChunks = [doctypeChunk];
+        var JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
+          renderState.htmlChunks,
           props,
           "html"
         );
       } else
-        JSCompiler_inline_result$jscomp$11 = pushStartGenericElement(
+        JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
           target$jscomp$0,
           props,
           "html"
         );
-      return JSCompiler_inline_result$jscomp$11;
+      return JSCompiler_inline_result$jscomp$10;
     default:
       if (-1 !== type.indexOf("-")) {
         target$jscomp$0.push(startChunkForTag(type));
@@ -2299,21 +2245,6 @@ function endChunkForTag(tag) {
     endTagCache.set(tag, chunk));
   return chunk;
 }
-function hoistPreambleState(renderState, preambleState) {
-  renderState = renderState.preamble;
-  null === renderState.htmlChunks &&
-    preambleState.htmlChunks &&
-    ((renderState.htmlChunks = preambleState.htmlChunks),
-    (preambleState.contribution |= 1));
-  null === renderState.headChunks &&
-    preambleState.headChunks &&
-    ((renderState.headChunks = preambleState.headChunks),
-    (preambleState.contribution |= 4));
-  null === renderState.bodyChunks &&
-    preambleState.bodyChunks &&
-    ((renderState.bodyChunks = preambleState.bodyChunks),
-    (preambleState.contribution |= 2));
-}
 function writeBootstrap(destination, renderState) {
   renderState = renderState.bootstrapChunks;
   for (var i = 0; i < renderState.length - 1; i++)
@@ -2354,16 +2285,6 @@ function writeStartPendingSuspenseBoundary(destination, renderState, id) {
   writeChunk(destination, stringToChunk(id.toString(16)));
   return writeChunkAndReturn(destination, startPendingSuspenseBoundary2);
 }
-var boundaryPreambleContributionChunkStart =
-    stringToPrecomputedChunk("\x3c!--"),
-  boundaryPreambleContributionChunkEnd = stringToPrecomputedChunk("--\x3e");
-function writePreambleContribution(destination, preambleState) {
-  preambleState = preambleState.contribution;
-  0 !== preambleState &&
-    (writeChunk(destination, boundaryPreambleContributionChunkStart),
-    writeChunk(destination, stringToChunk("" + preambleState)),
-    writeChunk(destination, boundaryPreambleContributionChunkEnd));
-}
 var startSegmentHTML = stringToPrecomputedChunk('<div hidden id="'),
   startSegmentHTML2 = stringToPrecomputedChunk('">'),
   endSegmentHTML = stringToPrecomputedChunk("</div>"),
@@ -2395,7 +2316,6 @@ function writeStartSegment(destination, renderState, formatContext, id) {
   switch (formatContext.insertionMode) {
     case 0:
     case 1:
-    case 3:
     case 2:
       return (
         writeChunk(destination, startSegmentHTML),
@@ -2403,42 +2323,42 @@ function writeStartSegment(destination, renderState, formatContext, id) {
         writeChunk(destination, stringToChunk(id.toString(16))),
         writeChunkAndReturn(destination, startSegmentHTML2)
       );
-    case 4:
+    case 3:
       return (
         writeChunk(destination, startSegmentSVG),
         writeChunk(destination, renderState.segmentPrefix),
         writeChunk(destination, stringToChunk(id.toString(16))),
         writeChunkAndReturn(destination, startSegmentSVG2)
       );
-    case 5:
+    case 4:
       return (
         writeChunk(destination, startSegmentMathML),
         writeChunk(destination, renderState.segmentPrefix),
         writeChunk(destination, stringToChunk(id.toString(16))),
         writeChunkAndReturn(destination, startSegmentMathML2)
       );
-    case 6:
+    case 5:
       return (
         writeChunk(destination, startSegmentTable),
         writeChunk(destination, renderState.segmentPrefix),
         writeChunk(destination, stringToChunk(id.toString(16))),
         writeChunkAndReturn(destination, startSegmentTable2)
       );
-    case 7:
+    case 6:
       return (
         writeChunk(destination, startSegmentTableBody),
         writeChunk(destination, renderState.segmentPrefix),
         writeChunk(destination, stringToChunk(id.toString(16))),
         writeChunkAndReturn(destination, startSegmentTableBody2)
       );
-    case 8:
+    case 7:
       return (
         writeChunk(destination, startSegmentTableRow),
         writeChunk(destination, renderState.segmentPrefix),
         writeChunk(destination, stringToChunk(id.toString(16))),
         writeChunkAndReturn(destination, startSegmentTableRow2)
       );
-    case 9:
+    case 8:
       return (
         writeChunk(destination, startSegmentColGroup),
         writeChunk(destination, renderState.segmentPrefix),
@@ -2453,20 +2373,19 @@ function writeEndSegment(destination, formatContext) {
   switch (formatContext.insertionMode) {
     case 0:
     case 1:
-    case 3:
     case 2:
       return writeChunkAndReturn(destination, endSegmentHTML);
-    case 4:
+    case 3:
       return writeChunkAndReturn(destination, endSegmentSVG);
-    case 5:
+    case 4:
       return writeChunkAndReturn(destination, endSegmentMathML);
-    case 6:
+    case 5:
       return writeChunkAndReturn(destination, endSegmentTable);
-    case 7:
+    case 6:
       return writeChunkAndReturn(destination, endSegmentTableBody);
-    case 8:
+    case 7:
       return writeChunkAndReturn(destination, endSegmentTableRow);
-    case 9:
+    case 8:
       return writeChunkAndReturn(destination, endSegmentColGroup);
     default:
       throw Error("Unknown insertion mode. This is a bug in React.");
@@ -3764,12 +3683,6 @@ function readPreviousThenableFromState() {
       index
     );
 }
-function unsupportedRefresh() {
-  throw Error("Cache cannot be refreshed during server rendering.");
-}
-function unsupportedStartGesture() {
-  throw Error("startGesture cannot be called during server rendering.");
-}
 function noop$1() {}
 var HooksDispatcher = {
     readContext: function (context) {
@@ -3855,20 +3768,8 @@ var HooksDispatcher = {
       resolveCurrentlyRenderingComponent();
       return sharedNotPendingObject;
     },
-    useMemoCache: function (size) {
-      for (var data = Array(size), i = 0; i < size; i++)
-        data[i] = REACT_MEMO_CACHE_SENTINEL;
-      return data;
-    },
-    useCacheRefresh: function () {
-      return unsupportedRefresh;
-    },
     useEffectEvent: function () {
       return throwOnUseEffectEventCall;
-    },
-    useSwipeTransition: function (previous, current) {
-      resolveCurrentlyRenderingComponent();
-      return [current, unsupportedStartGesture];
     }
   },
   currentResumableState = null,
@@ -4131,7 +4032,7 @@ function RequestInstance(
   this.status = 10;
   this.fatalError = null;
   this.pendingRootTasks = this.allPendingTasks = this.nextSegmentId = 0;
-  this.completedPreambleSegments = this.completedRootSegment = null;
+  this.completedRootSegment = null;
   this.abortableTasks = abortSet;
   this.pingedTasks = [];
   this.clientRenderedBoundaries = [];
@@ -4190,7 +4091,6 @@ function createRequest(
     null,
     renderState,
     null,
-    null,
     resumableState.abortableTasks,
     null,
     rootFormatContext,
@@ -4283,7 +4183,6 @@ function resumeRequest(
         null,
         onAllReady,
         null,
-        null,
         renderState.abortableTasks,
         null,
         postponedState.rootFormatContext,
@@ -4370,12 +4269,7 @@ function pingTask(request, task) {
           return performWork(request);
         }, 0));
 }
-function createSuspenseBoundary(
-  request,
-  fallbackAbortableTasks,
-  contentPreamble,
-  fallbackPreamble
-) {
+function createSuspenseBoundary(request, fallbackAbortableTasks) {
   return {
     status: 0,
     rootSegmentID: -1,
@@ -4387,8 +4281,6 @@ function createSuspenseBoundary(
     errorDigest: null,
     contentState: createHoistableState(),
     fallbackState: createHoistableState(),
-    contentPreamble: contentPreamble,
-    fallbackPreamble: fallbackPreamble,
     trackedContentKeyPath: null,
     trackedFallbackNode: null
   };
@@ -4400,7 +4292,6 @@ function createRenderTask(
   childIndex,
   blockedBoundary,
   blockedSegment,
-  blockedPreamble,
   hoistableState,
   abortSet,
   keyPath,
@@ -4423,7 +4314,6 @@ function createRenderTask(
     },
     blockedBoundary: blockedBoundary,
     blockedSegment: blockedSegment,
-    blockedPreamble: blockedPreamble,
     hoistableState: hoistableState,
     abortSet: abortSet,
     keyPath: keyPath,
@@ -4467,7 +4357,6 @@ function createReplayTask(
     },
     blockedBoundary: blockedBoundary,
     blockedSegment: null,
-    blockedPreamble: null,
     hoistableState: hoistableState,
     abortSet: abortSet,
     keyPath: keyPath,
@@ -4491,12 +4380,11 @@ function createPendingSegment(
 ) {
   return {
     status: 0,
-    parentFlushed: !1,
     id: -1,
     index: index,
+    parentFlushed: !1,
     chunks: [],
     children: [],
-    preambleChildren: [],
     parentFormatContext: parentFormatContext,
     boundary: boundary,
     lastPushedText: lastPushedText,
@@ -4728,13 +4616,12 @@ function renderElement(request, task, keyPath, type, props, ref) {
         (task.formatContext = defaultProps),
         (task.keyPath = initialState);
     else {
-      ref = pushStartInstance(
+      initialState = pushStartInstance(
         newProps.chunks,
         type,
         props,
         request.resumableState,
         request.renderState,
-        task.blockedPreamble,
         task.hoistableState,
         task.formatContext,
         newProps.lastPushedText,
@@ -4742,42 +4629,12 @@ function renderElement(request, task, keyPath, type, props, ref) {
       );
       newProps.lastPushedText = !1;
       defaultProps = task.formatContext;
-      initialState = task.keyPath;
+      ref = task.keyPath;
+      task.formatContext = getChildFormatContext(defaultProps, type, props);
       task.keyPath = keyPath;
-      3 ===
-      (task.formatContext = getChildFormatContext(defaultProps, type, props))
-        .insertionMode
-        ? ((keyPath = createPendingSegment(
-            request,
-            0,
-            null,
-            task.formatContext,
-            !1,
-            !1
-          )),
-          newProps.preambleChildren.push(keyPath),
-          (keyPath = createRenderTask(
-            request,
-            null,
-            ref,
-            -1,
-            task.blockedBoundary,
-            keyPath,
-            task.blockedPreamble,
-            task.hoistableState,
-            request.abortableTasks,
-            task.keyPath,
-            task.formatContext,
-            task.context,
-            task.treeContext,
-            task.componentStack,
-            task.isFallback
-          )),
-          pushComponentStack(keyPath),
-          request.pingedTasks.push(keyPath))
-        : renderNode(request, task, ref, -1);
+      renderNode(request, task, initialState, -1);
       task.formatContext = defaultProps;
-      task.keyPath = initialState;
+      task.keyPath = ref;
       a: {
         task = newProps.chunks;
         request = request.resumableState;
@@ -4812,9 +4669,6 @@ function renderElement(request, task, keyPath, type, props, ref) {
               request.hasHtml = !0;
               break a;
             }
-            break;
-          case "head":
-            if (1 >= defaultProps.insertionMode) break a;
         }
         task.push(endChunkForTag(type));
       }
@@ -4864,34 +4718,25 @@ function renderElement(request, task, keyPath, type, props, ref) {
           }
         } else {
           type = task.keyPath;
-          var parentBoundary = task.blockedBoundary;
-          ref = task.blockedPreamble;
-          var parentHoistableState = task.hoistableState;
-          propName$34 = task.blockedSegment;
-          propName = props.fallback;
+          var parentBoundary = task.blockedBoundary,
+            parentHoistableState = task.hoistableState;
+          ref = task.blockedSegment;
+          propName$34 = props.fallback;
           props = props.children;
           var fallbackAbortSet = new Set();
-          var newBoundary =
-            2 > task.formatContext.insertionMode
-              ? createSuspenseBoundary(
-                  request,
-                  fallbackAbortSet,
-                  createPreambleState(),
-                  createPreambleState()
-                )
-              : createSuspenseBoundary(request, fallbackAbortSet, null, null);
+          propName = createSuspenseBoundary(request, fallbackAbortSet);
           null !== request.trackedPostpones &&
-            (newBoundary.trackedContentKeyPath = keyPath);
+            (propName.trackedContentKeyPath = keyPath);
           var boundarySegment = createPendingSegment(
             request,
-            propName$34.chunks.length,
-            newBoundary,
+            ref.chunks.length,
+            propName,
             task.formatContext,
             !1,
             !1
           );
-          propName$34.children.push(boundarySegment);
-          propName$34.lastPushedText = !1;
+          ref.children.push(boundarySegment);
+          ref.lastPushedText = !1;
           var contentRootSegment = createPendingSegment(
             request,
             0,
@@ -4905,13 +4750,12 @@ function renderElement(request, task, keyPath, type, props, ref) {
             newProps = [keyPath[0], "Suspense Fallback", keyPath[2]];
             defaultProps = [newProps[1], newProps[2], [], null];
             request.trackedPostpones.workingMap.set(newProps, defaultProps);
-            newBoundary.trackedFallbackNode = defaultProps;
+            propName.trackedFallbackNode = defaultProps;
             task.blockedSegment = boundarySegment;
-            task.blockedPreamble = newBoundary.fallbackPreamble;
             task.keyPath = newProps;
             boundarySegment.status = 6;
             try {
-              renderNode(request, task, propName, -1),
+              renderNode(request, task, propName$34, -1),
                 boundarySegment.lastPushedText &&
                   boundarySegment.textEmbedded &&
                   boundarySegment.chunks.push(textSeparator),
@@ -4922,19 +4766,16 @@ function renderElement(request, task, keyPath, type, props, ref) {
                 thrownValue)
               );
             } finally {
-              (task.blockedSegment = propName$34),
-                (task.blockedPreamble = ref),
-                (task.keyPath = type);
+              (task.blockedSegment = ref), (task.keyPath = type);
             }
             task = createRenderTask(
               request,
               null,
               props,
               -1,
-              newBoundary,
+              propName,
               contentRootSegment,
-              newBoundary.contentPreamble,
-              newBoundary.contentState,
+              propName.contentState,
               task.abortSet,
               keyPath,
               task.formatContext,
@@ -4946,9 +4787,8 @@ function renderElement(request, task, keyPath, type, props, ref) {
             pushComponentStack(task);
             request.pingedTasks.push(task);
           } else {
-            task.blockedBoundary = newBoundary;
-            task.blockedPreamble = newBoundary.contentPreamble;
-            task.hoistableState = newBoundary.contentState;
+            task.blockedBoundary = propName;
+            task.hoistableState = propName.contentState;
             task.blockedSegment = contentRootSegment;
             task.keyPath = keyPath;
             contentRootSegment.status = 6;
@@ -4959,17 +4799,14 @@ function renderElement(request, task, keyPath, type, props, ref) {
                   contentRootSegment.textEmbedded &&
                   contentRootSegment.chunks.push(textSeparator),
                 (contentRootSegment.status = 1),
-                queueCompletedSegment(newBoundary, contentRootSegment),
-                0 === newBoundary.pendingTasks && 0 === newBoundary.status)
+                queueCompletedSegment(propName, contentRootSegment),
+                0 === propName.pendingTasks && 0 === propName.status)
               ) {
-                newBoundary.status = 1;
-                0 === request.pendingRootTasks &&
-                  task.blockedPreamble &&
-                  preparePreamble(request);
+                propName.status = 1;
                 break a;
               }
             } catch (thrownValue$29) {
-              (newBoundary.status = 4),
+              (propName.status = 4),
                 12 === request.status
                   ? ((contentRootSegment.status = 3),
                     (newProps = request.fatalError))
@@ -4986,24 +4823,22 @@ function renderElement(request, task, keyPath, type, props, ref) {
                       newProps,
                       defaultProps
                     )),
-                (newBoundary.errorDigest = initialState),
-                untrackBoundary(request, newBoundary);
+                (propName.errorDigest = initialState),
+                untrackBoundary(request, propName);
             } finally {
               (task.blockedBoundary = parentBoundary),
-                (task.blockedPreamble = ref),
                 (task.hoistableState = parentHoistableState),
-                (task.blockedSegment = propName$34),
+                (task.blockedSegment = ref),
                 (task.keyPath = type);
             }
             task = createRenderTask(
               request,
               null,
-              propName,
+              propName$34,
               -1,
               parentBoundary,
               boundarySegment,
-              newBoundary.fallbackPreamble,
-              newBoundary.fallbackState,
+              propName.fallbackState,
               fallbackAbortSet,
               [keyPath[0], "Suspense Fallback", keyPath[2]],
               task.formatContext,
@@ -5022,9 +4857,9 @@ function renderElement(request, task, keyPath, type, props, ref) {
       switch (type.$$typeof) {
         case REACT_FORWARD_REF_TYPE:
           if ("ref" in props)
-            for (newBoundary in ((newProps = {}), props))
-              "ref" !== newBoundary &&
-                (newProps[newBoundary] = props[newBoundary]);
+            for (boundarySegment in ((newProps = {}), props))
+              "ref" !== boundarySegment &&
+                (newProps[boundarySegment] = props[boundarySegment]);
           else newProps = props;
           type = renderWithHooks(
             request,
@@ -5226,27 +5061,17 @@ function retryNode(request, task) {
                         previousReplaySet = task.replay,
                         parentBoundary = task.blockedBoundary,
                         parentHoistableState = task.hoistableState,
-                        content = props.children,
-                        fallback = props.fallback,
-                        fallbackAbortSet = new Set();
-                      props =
-                        2 > task.formatContext.insertionMode
-                          ? createSuspenseBoundary(
-                              request,
-                              fallbackAbortSet,
-                              createPreambleState(),
-                              createPreambleState()
-                            )
-                          : createSuspenseBoundary(
-                              request,
-                              fallbackAbortSet,
-                              null,
-                              null
-                            );
-                      props.parentFlushed = !0;
-                      props.rootSegmentID = ref;
-                      task.blockedBoundary = props;
-                      task.hoistableState = props.contentState;
+                        content = props.children;
+                      props = props.fallback;
+                      var fallbackAbortSet = new Set(),
+                        resumedBoundary = createSuspenseBoundary(
+                          request,
+                          fallbackAbortSet
+                        );
+                      resumedBoundary.parentFlushed = !0;
+                      resumedBoundary.rootSegmentID = ref;
+                      task.blockedBoundary = resumedBoundary;
+                      task.hoistableState = resumedBoundary.contentState;
                       task.keyPath = key;
                       task.replay = {
                         nodes: replay,
@@ -5263,13 +5088,16 @@ function retryNode(request, task) {
                             "Couldn't find all resumable slots by key/index during replaying. The tree doesn't match so React will fallback to client rendering."
                           );
                         task.replay.pendingTasks--;
-                        if (0 === props.pendingTasks && 0 === props.status) {
-                          props.status = 1;
-                          request.completedBoundaries.push(props);
+                        if (
+                          0 === resumedBoundary.pendingTasks &&
+                          0 === resumedBoundary.status
+                        ) {
+                          resumedBoundary.status = 1;
+                          request.completedBoundaries.push(resumedBoundary);
                           break b;
                         }
                       } catch (error) {
-                        (props.status = 4),
+                        (resumedBoundary.status = 4),
                           (childNodes = getThrownInfo(task.componentStack)),
                           "object" === typeof error &&
                           null !== error &&
@@ -5281,9 +5109,11 @@ function retryNode(request, task) {
                                 error,
                                 childNodes
                               )),
-                          (props.errorDigest = type),
+                          (resumedBoundary.errorDigest = type),
                           task.replay.pendingTasks--,
-                          request.clientRenderedBoundaries.push(props);
+                          request.clientRenderedBoundaries.push(
+                            resumedBoundary
+                          );
                       } finally {
                         (task.blockedBoundary = parentBoundary),
                           (task.hoistableState = parentHoistableState),
@@ -5298,10 +5128,10 @@ function retryNode(request, task) {
                           slots: node$jscomp$0,
                           pendingTasks: 0
                         },
-                        fallback,
+                        props,
                         -1,
                         parentBoundary,
-                        props.fallbackState,
+                        resumedBoundary.fallbackState,
                         fallbackAbortSet,
                         [key[0], "Suspense Fallback", key[2]],
                         task.formatContext,
@@ -5639,7 +5469,6 @@ function spawnNewSuspendedRenderTask(request, task, thenableState) {
     task.childIndex,
     task.blockedBoundary,
     newSegment,
-    task.blockedPreamble,
     task.hoistableState,
     task.abortSet,
     task.keyPath,
@@ -5825,12 +5654,7 @@ function abortRemainingReplayNodes(
       node = node[5];
       var request = request$jscomp$0,
         errorDigest = errorDigest$jscomp$0,
-        resumedBoundary = createSuspenseBoundary(
-          request,
-          new Set(),
-          null,
-          null
-        );
+        resumedBoundary = createSuspenseBoundary(request, new Set());
       resumedBoundary.parentFlushed = !0;
       resumedBoundary.rootSegmentID = node;
       resumedBoundary.status = 4;
@@ -6020,7 +5844,6 @@ function safelyEmitEarlyPreloads(request, shellComplete) {
 }
 function completeShell(request) {
   null === request.trackedPostpones && safelyEmitEarlyPreloads(request, !0);
-  null === request.trackedPostpones && preparePreamble(request);
   request.onShellError = noop;
   request = request.onShellReady;
   request();
@@ -6033,7 +5856,6 @@ function completeAll(request) {
       : null === request.completedRootSegment ||
           5 !== request.completedRootSegment.status
   );
-  preparePreamble(request);
   request = request.onAllReady;
   request();
 }
@@ -6074,11 +5896,7 @@ function finishedTask(request, boundary, segment) {
               request.completedBoundaries.push(boundary),
             1 === boundary.status &&
               (boundary.fallbackAbortableTasks.forEach(abortTaskSoft, request),
-              boundary.fallbackAbortableTasks.clear(),
-              0 === request.pendingRootTasks &&
-                null === request.trackedPostpones &&
-                null !== boundary.contentPreamble &&
-                preparePreamble(request)))
+              boundary.fallbackAbortableTasks.clear()))
           : null !== segment &&
             segment.parentFlushed &&
             1 === segment.status &&
@@ -6272,11 +6090,7 @@ function performWork(request$jscomp$1) {
                         (boundary.errorDigest = request$jscomp$0),
                         untrackBoundary(request, boundary),
                         boundary.parentFlushed &&
-                          request.clientRenderedBoundaries.push(boundary),
-                        0 === request.pendingRootTasks &&
-                          null === request.trackedPostpones &&
-                          null !== boundary.contentPreamble &&
-                          preparePreamble(request)));
+                          request.clientRenderedBoundaries.push(boundary)));
                   request.allPendingTasks--;
                   0 === request.allPendingTasks && completeAll(request);
                 }
@@ -6300,85 +6114,6 @@ function performWork(request$jscomp$1) {
     }
   }
 }
-function preparePreambleFromSubtree(
-  request,
-  segment,
-  collectedPreambleSegments
-) {
-  segment.preambleChildren.length &&
-    collectedPreambleSegments.push(segment.preambleChildren);
-  for (var pendingPreambles = !1, i = 0; i < segment.children.length; i++)
-    pendingPreambles =
-      preparePreambleFromSegment(
-        request,
-        segment.children[i],
-        collectedPreambleSegments
-      ) || pendingPreambles;
-  return pendingPreambles;
-}
-function preparePreambleFromSegment(
-  request,
-  segment,
-  collectedPreambleSegments
-) {
-  var boundary = segment.boundary;
-  if (null === boundary)
-    return preparePreambleFromSubtree(
-      request,
-      segment,
-      collectedPreambleSegments
-    );
-  var preamble = boundary.contentPreamble,
-    fallbackPreamble = boundary.fallbackPreamble;
-  if (null === preamble || null === fallbackPreamble) return !1;
-  switch (boundary.status) {
-    case 1:
-      hoistPreambleState(request.renderState, preamble);
-      segment = boundary.completedSegments[0];
-      if (!segment)
-        throw Error(
-          "A previously unvisited boundary must have exactly one root segment. This is a bug in React."
-        );
-      return preparePreambleFromSubtree(
-        request,
-        segment,
-        collectedPreambleSegments
-      );
-    case 5:
-      if (null !== request.trackedPostpones) return !0;
-    case 4:
-      if (1 === segment.status)
-        return (
-          hoistPreambleState(request.renderState, fallbackPreamble),
-          preparePreambleFromSubtree(
-            request,
-            segment,
-            collectedPreambleSegments
-          )
-        );
-    default:
-      return !0;
-  }
-}
-function preparePreamble(request) {
-  if (
-    request.completedRootSegment &&
-    null === request.completedPreambleSegments
-  ) {
-    var collectedPreambleSegments = [],
-      hasPendingPreambles = preparePreambleFromSegment(
-        request,
-        request.completedRootSegment,
-        collectedPreambleSegments
-      ),
-      preamble = request.renderState.preamble;
-    if (
-      !1 === hasPendingPreambles ||
-      (preamble.headChunks && preamble.bodyChunks)
-    )
-      request.completedPreambleSegments = collectedPreambleSegments;
-  }
-}
 function flushSubtree(request, destination, segment, hoistableState) {
   segment.parentFlushed = !0;
   switch (segment.status) {
@@ -6423,27 +6158,21 @@ function flushSegment(request, destination, segment, hoistableState) {
   if (null === boundary)
     return flushSubtree(request, destination, segment, hoistableState);
   boundary.parentFlushed = !0;
-  if (4 === boundary.status) {
-    var errorDigest = boundary.errorDigest;
-    writeChunkAndReturn(destination, startClientRenderedSuspenseBoundary);
-    writeChunk(destination, clientRenderedSuspenseBoundaryError1);
-    errorDigest &&
-      (writeChunk(destination, clientRenderedSuspenseBoundaryError1A),
-      writeChunk(destination, stringToChunk(escapeTextForBrowser(errorDigest))),
-      writeChunk(
-        destination,
-        clientRenderedSuspenseBoundaryErrorAttrInterstitial
-      ));
-    writeChunkAndReturn(destination, clientRenderedSuspenseBoundaryError2);
-    flushSubtree(request, destination, segment, hoistableState);
-    (request = boundary.fallbackPreamble) &&
-      writePreambleContribution(destination, request);
-    return writeChunkAndReturn(destination, endSuspenseBoundary);
-  }
-  if (1 !== boundary.status)
-    return (
-      0 === boundary.status &&
-        (boundary.rootSegmentID = request.nextSegmentId++),
+  if (4 === boundary.status)
+    (boundary = boundary.errorDigest),
+      writeChunkAndReturn(destination, startClientRenderedSuspenseBoundary),
+      writeChunk(destination, clientRenderedSuspenseBoundaryError1),
+      boundary &&
+        (writeChunk(destination, clientRenderedSuspenseBoundaryError1A),
+        writeChunk(destination, stringToChunk(escapeTextForBrowser(boundary))),
+        writeChunk(
+          destination,
+          clientRenderedSuspenseBoundaryErrorAttrInterstitial
+        )),
+      writeChunkAndReturn(destination, clientRenderedSuspenseBoundaryError2),
+      flushSubtree(request, destination, segment, hoistableState);
+  else if (1 !== boundary.status)
+    0 === boundary.status && (boundary.rootSegmentID = request.nextSegmentId++),
       0 < boundary.completedSegments.length &&
         request.partialBoundaries.push(boundary),
       writeStartPendingSuspenseBoundary(
@@ -6458,34 +6187,29 @@ function flushSegment(request, destination, segment, hoistableState) {
           hoistStylesheetDependency,
           hoistableState
         )),
-      flushSubtree(request, destination, segment, hoistableState),
-      writeChunkAndReturn(destination, endSuspenseBoundary)
-    );
-  if (boundary.byteSize > request.progressiveChunkSize)
-    return (
-      (boundary.rootSegmentID = request.nextSegmentId++),
+      flushSubtree(request, destination, segment, hoistableState);
+  else if (boundary.byteSize > request.progressiveChunkSize)
+    (boundary.rootSegmentID = request.nextSegmentId++),
       request.completedBoundaries.push(boundary),
       writeStartPendingSuspenseBoundary(
         destination,
         request.renderState,
         boundary.rootSegmentID
       ),
-      flushSubtree(request, destination, segment, hoistableState),
-      writeChunkAndReturn(destination, endSuspenseBoundary)
-    );
-  hoistableState &&
-    ((segment = boundary.contentState),
-    segment.styles.forEach(hoistStyleQueueDependency, hoistableState),
-    segment.stylesheets.forEach(hoistStylesheetDependency, hoistableState));
-  writeChunkAndReturn(destination, startCompletedSuspenseBoundary);
-  segment = boundary.completedSegments;
-  if (1 !== segment.length)
-    throw Error(
-      "A previously unvisited boundary must have exactly one root segment. This is a bug in React."
-    );
-  flushSegment(request, destination, segment[0], hoistableState);
-  (request = boundary.contentPreamble) &&
-    writePreambleContribution(destination, request);
+      flushSubtree(request, destination, segment, hoistableState);
+  else {
+    hoistableState &&
+      ((segment = boundary.contentState),
+      segment.styles.forEach(hoistStyleQueueDependency, hoistableState),
+      segment.stylesheets.forEach(hoistStylesheetDependency, hoistableState));
+    writeChunkAndReturn(destination, startCompletedSuspenseBoundary);
+    segment = boundary.completedSegments;
+    if (1 !== segment.length)
+      throw Error(
+        "A previously unvisited boundary must have exactly one root segment. This is a bug in React."
+      );
+    flushSegment(request, destination, segment[0], hoistableState);
+  }
   return writeChunkAndReturn(destination, endSuspenseBoundary);
 }
 function flushSegmentContainer(request, destination, segment, hoistableState) {
@@ -6613,8 +6337,6 @@ function flushCompletedQueues(request, destination) {
         completedRootSegment = request.completedRootSegment;
       if (null !== completedRootSegment) {
         if (5 === completedRootSegment.status) return;
-        var completedPreambleSegments = request.completedPreambleSegments;
-        if (null === completedPreambleSegments) return;
         var renderState = request.renderState;
         if (
           (0 !== request.allPendingTasks ||
@@ -6629,9 +6351,8 @@ function flushCompletedQueues(request, destination) {
             ((resumableState.scriptResources[src] = null),
             renderState.scripts.add(chunks));
         }
-        var preamble = renderState.preamble,
-          htmlChunks = preamble.htmlChunks,
-          headChunks = preamble.headChunks,
+        var htmlChunks = renderState.htmlChunks,
+          headChunks = renderState.headChunks,
           i$jscomp$0;
         if (htmlChunks) {
           for (i$jscomp$0 = 0; i$jscomp$0 < htmlChunks.length; i$jscomp$0++)
@@ -6672,36 +6393,10 @@ function flushCompletedQueues(request, destination) {
         var hoistableChunks = renderState.hoistableChunks;
         for (i$jscomp$0 = 0; i$jscomp$0 < hoistableChunks.length; i$jscomp$0++)
           writeChunk(destination, hoistableChunks[i$jscomp$0]);
-        for (
-          renderState = hoistableChunks.length = 0;
-          renderState < completedPreambleSegments.length;
-          renderState++
-        ) {
-          var segments = completedPreambleSegments[renderState];
-          for (
-            _renderState$external = 0;
-            _renderState$external < segments.length;
-            _renderState$external++
-          )
-            flushSegment(
-              request,
-              destination,
-              segments[_renderState$external],
-              null
-            );
-        }
-        var preamble$jscomp$0 = request.renderState.preamble,
-          headChunks$jscomp$0 = preamble$jscomp$0.headChunks;
-        (preamble$jscomp$0.htmlChunks || headChunks$jscomp$0) &&
+        hoistableChunks.length = 0;
+        htmlChunks &&
+          null === headChunks &&
           writeChunk(destination, endChunkForTag("head"));
-        var bodyChunks = preamble$jscomp$0.bodyChunks;
-        if (bodyChunks)
-          for (
-            completedPreambleSegments = 0;
-            completedPreambleSegments < bodyChunks.length;
-            completedPreambleSegments++
-          )
-            writeChunk(destination, bodyChunks[completedPreambleSegments]);
         flushSegment(request, destination, completedRootSegment, null);
         request.completedRootSegment = null;
         writeBootstrap(destination, request.renderState);
@@ -6963,19 +6658,11 @@ function getPostponedState(request) {
   )
     return (request.trackedPostpones = null);
   if (
-    null === request.completedRootSegment ||
-    (5 !== request.completedRootSegment.status &&
-      null !== request.completedPreambleSegments)
+    null !== request.completedRootSegment &&
+    5 === request.completedRootSegment.status
   ) {
-    var replaySlots = trackedPostpones.rootSlots;
-    var resumableState = request.resumableState;
-    resumableState.bootstrapScriptContent = void 0;
-    resumableState.bootstrapScripts = void 0;
-    resumableState.bootstrapModules = void 0;
-  } else {
-    replaySlots = request.completedRootSegment.id;
-    resumableState = request.resumableState;
-    var renderState = request.renderState;
+    var resumableState = request.resumableState,
+      renderState = request.renderState;
     resumableState.nextFormID = 0;
     resumableState.hasBody = !1;
     resumableState.hasHtml = !1;
@@ -6987,23 +6674,27 @@ function getPostponedState(request) {
     resumableState.scriptResources = {};
     resumableState.moduleUnknownResources = {};
     resumableState.moduleScriptResources = {};
-  }
+  } else
+    (resumableState = request.resumableState),
+      (resumableState.bootstrapScriptContent = void 0),
+      (resumableState.bootstrapScripts = void 0),
+      (resumableState.bootstrapModules = void 0);
   return {
     nextSegmentId: request.nextSegmentId,
     rootFormatContext: request.rootFormatContext,
     progressiveChunkSize: request.progressiveChunkSize,
     resumableState: request.resumableState,
     replayNodes: trackedPostpones.rootNodes,
-    replaySlots: replaySlots
+    replaySlots: trackedPostpones.rootSlots
   };
 }
 function ensureCorrectIsomorphicReactVersion() {
   var isomorphicReactPackageVersion = React.version;
-  if ("19.1.0-experimental-e670e72f-20250214" !== isomorphicReactPackageVersion)
+  if ("19.1.0-experimental-b3a95caf-20250113" !== isomorphicReactPackageVersion)
     throw Error(
       'Incompatible React versions: The "react" and "react-dom" packages must have the exact same version. Instead got:\n  - react:      ' +
         (isomorphicReactPackageVersion +
-          "\n  - react-dom:  19.1.0-experimental-e670e72f-20250214\nLearn more: https://react.dev/warnings/version-mismatch")
+          "\n  - react-dom:  19.1.0-experimental-b3a95caf-20250113\nLearn more: https://react.dev/warnings/version-mismatch")
     );
 }
 ensureCorrectIsomorphicReactVersion();
@@ -7257,4 +6948,4 @@ exports.resumeAndPrerender = function (children, postponedState, options) {
     startWork(request);
   });
 };
-exports.version = "19.1.0-experimental-e670e72f-20250214";
+exports.version = "19.1.0-experimental-b3a95caf-20250113";
diff --git a/node_modules/react-dom/cjs/react-dom-server.node.development.js b/node_modules/react-dom/cjs/react-dom-server.node.development.js
index 15492bd..551547d 100644
--- a/node_modules/react-dom/cjs/react-dom-server.node.development.js
+++ b/node_modules/react-dom/cjs/react-dom-server.node.development.js
@@ -817,7 +817,8 @@
         segmentPrefix: stringToPrecomputedChunk(idPrefix + "S:"),
         boundaryPrefix: stringToPrecomputedChunk(idPrefix + "B:"),
         startInlineScript: inlineScriptWithNonce,
-        preamble: createPreambleState(),
+        htmlChunks: null,
+        headChunks: null,
         externalRuntimeScript: externalRuntimeScript,
         bootstrapChunks: bootstrapChunks,
         importMapChunks: externalRuntimeConfig,
@@ -982,14 +983,6 @@
         moduleScriptResources: {}
       };
     }
-    function createPreambleState() {
-      return {
-        htmlChunks: null,
-        headChunks: null,
-        bodyChunks: null,
-        contribution: NoContribution
-      };
-    }
     function createFormatContext(insertionMode, selectedValue, tagScope) {
       return {
         insertionMode: insertionMode,
@@ -1060,26 +1053,16 @@
             null,
             parentContext.tagScope
           );
-        case "head":
-          if (parentContext.insertionMode < HTML_MODE)
-            return createFormatContext(
-              HTML_HEAD_MODE,
-              null,
-              parentContext.tagScope
-            );
-          break;
-        case "html":
-          if (parentContext.insertionMode === ROOT_HTML_MODE)
-            return createFormatContext(
-              HTML_HTML_MODE,
-              null,
-              parentContext.tagScope
-            );
       }
-      return parentContext.insertionMode >= HTML_TABLE_MODE ||
-        parentContext.insertionMode < HTML_MODE
+      return parentContext.insertionMode >= HTML_TABLE_MODE
         ? createFormatContext(HTML_MODE, null, parentContext.tagScope)
-        : parentContext;
+        : parentContext.insertionMode === ROOT_HTML_MODE
+          ? "html" === type
+            ? createFormatContext(HTML_HTML_MODE, null, parentContext.tagScope)
+            : createFormatContext(HTML_MODE, null, parentContext.tagScope)
+          : parentContext.insertionMode === HTML_HTML_MODE
+            ? createFormatContext(HTML_MODE, null, parentContext.tagScope)
+            : parentContext;
     }
     function pushTextInstance(target, text, renderState, textEmbedded) {
       if ("" === text) return textEmbedded;
@@ -1716,29 +1699,6 @@
       target.push(endChunkForTag("script"));
       return null;
     }
-    function pushStartSingletonElement(target, props, tag) {
-      target.push(startChunkForTag(tag));
-      var innerHTML = (tag = null),
-        propKey;
-      for (propKey in props)
-        if (hasOwnProperty.call(props, propKey)) {
-          var propValue = props[propKey];
-          if (null != propValue)
-            switch (propKey) {
-              case "children":
-                tag = propValue;
-                break;
-              case "dangerouslySetInnerHTML":
-                innerHTML = propValue;
-                break;
-              default:
-                pushAttribute(target, propKey, propValue);
-            }
-        }
-      target.push(endOfStartTag);
-      pushInnerHTML(target, innerHTML, tag);
-      return tag;
-    }
     function pushStartGenericElement(target, props, tag) {
       target.push(startChunkForTag(tag));
       var innerHTML = (tag = null),
@@ -1779,7 +1739,6 @@
       props,
       resumableState,
       renderState,
-      preambleState,
       hoistableState,
       formatContext,
       textEmbedded,
@@ -2934,13 +2893,13 @@
         case "missing-glyph":
           break;
         case "head":
-          if (formatContext.insertionMode < HTML_MODE) {
-            var preamble = preambleState || renderState.preamble;
-            if (preamble.headChunks)
-              throw Error("The `<head>` tag may only be rendered once.");
-            preamble.headChunks = [];
-            var JSCompiler_inline_result$jscomp$9 = pushStartSingletonElement(
-              preamble.headChunks,
+          if (
+            formatContext.insertionMode < HTML_MODE &&
+            null === renderState.headChunks
+          ) {
+            renderState.headChunks = [];
+            var JSCompiler_inline_result$jscomp$9 = pushStartGenericElement(
+              renderState.headChunks,
               props,
               "head"
             );
@@ -2951,42 +2910,24 @@
               "head"
             );
           return JSCompiler_inline_result$jscomp$9;
-        case "body":
-          if (formatContext.insertionMode < HTML_MODE) {
-            var preamble$jscomp$0 = preambleState || renderState.preamble;
-            if (preamble$jscomp$0.bodyChunks)
-              throw Error("The `<body>` tag may only be rendered once.");
-            preamble$jscomp$0.bodyChunks = [];
-            var JSCompiler_inline_result$jscomp$10 = pushStartSingletonElement(
-              preamble$jscomp$0.bodyChunks,
-              props,
-              "body"
-            );
-          } else
-            JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
-              target$jscomp$0,
-              props,
-              "body"
-            );
-          return JSCompiler_inline_result$jscomp$10;
         case "html":
-          if (formatContext.insertionMode === ROOT_HTML_MODE) {
-            var preamble$jscomp$1 = preambleState || renderState.preamble;
-            if (preamble$jscomp$1.htmlChunks)
-              throw Error("The `<html>` tag may only be rendered once.");
-            preamble$jscomp$1.htmlChunks = [doctypeChunk];
-            var JSCompiler_inline_result$jscomp$11 = pushStartSingletonElement(
-              preamble$jscomp$1.htmlChunks,
+          if (
+            formatContext.insertionMode === ROOT_HTML_MODE &&
+            null === renderState.htmlChunks
+          ) {
+            renderState.htmlChunks = [doctypeChunk];
+            var JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
+              renderState.htmlChunks,
               props,
               "html"
             );
           } else
-            JSCompiler_inline_result$jscomp$11 = pushStartGenericElement(
+            JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
               target$jscomp$0,
               props,
               "html"
             );
-          return JSCompiler_inline_result$jscomp$11;
+          return JSCompiler_inline_result$jscomp$10;
         default:
           if (-1 !== type.indexOf("-")) {
             target$jscomp$0.push(startChunkForTag(type));
@@ -3054,21 +2995,6 @@
         endTagCache.set(tag, chunk));
       return chunk;
     }
-    function hoistPreambleState(renderState, preambleState) {
-      renderState = renderState.preamble;
-      null === renderState.htmlChunks &&
-        preambleState.htmlChunks &&
-        ((renderState.htmlChunks = preambleState.htmlChunks),
-        (preambleState.contribution |= 1));
-      null === renderState.headChunks &&
-        preambleState.headChunks &&
-        ((renderState.headChunks = preambleState.headChunks),
-        (preambleState.contribution |= 4));
-      null === renderState.bodyChunks &&
-        preambleState.bodyChunks &&
-        ((renderState.bodyChunks = preambleState.bodyChunks),
-        (preambleState.contribution |= 2));
-    }
     function writeBootstrap(destination, renderState) {
       renderState = renderState.bootstrapChunks;
       for (var i = 0; i < renderState.length - 1; i++)
@@ -3089,18 +3015,10 @@
       writeChunk(destination, id.toString(16));
       return writeChunkAndReturn(destination, startPendingSuspenseBoundary2);
     }
-    function writePreambleContribution(destination, preambleState) {
-      preambleState = preambleState.contribution;
-      preambleState !== NoContribution &&
-        (writeChunk(destination, boundaryPreambleContributionChunkStart),
-        writeChunk(destination, "" + preambleState),
-        writeChunk(destination, boundaryPreambleContributionChunkEnd));
-    }
     function writeStartSegment(destination, renderState, formatContext, id) {
       switch (formatContext.insertionMode) {
         case ROOT_HTML_MODE:
         case HTML_HTML_MODE:
-        case HTML_HEAD_MODE:
         case HTML_MODE:
           return (
             writeChunk(destination, startSegmentHTML),
@@ -3158,7 +3076,6 @@
       switch (formatContext.insertionMode) {
         case ROOT_HTML_MODE:
         case HTML_HTML_MODE:
-        case HTML_HEAD_MODE:
         case HTML_MODE:
           return writeChunkAndReturn(destination, endSegmentHTML);
         case SVG_MODE:
@@ -4150,12 +4067,6 @@
           index
         );
     }
-    function unsupportedRefresh() {
-      throw Error("Cache cannot be refreshed during server rendering.");
-    }
-    function unsupportedStartGesture() {
-      throw Error("startGesture cannot be called during server rendering.");
-    }
     function noop$1() {}
     function disabledLog() {}
     function disableLogs() {
@@ -4500,7 +4411,7 @@
       this.status = 10;
       this.fatalError = null;
       this.pendingRootTasks = this.allPendingTasks = this.nextSegmentId = 0;
-      this.completedPreambleSegments = this.completedRootSegment = null;
+      this.completedRootSegment = null;
       this.abortableTasks = abortSet;
       this.pingedTasks = [];
       this.clientRenderedBoundaries = [];
@@ -4560,7 +4471,6 @@
         null,
         renderState,
         null,
-        null,
         resumableState.abortableTasks,
         null,
         rootFormatContext,
@@ -4655,7 +4565,6 @@
             null,
             onAllReady,
             null,
-            null,
             renderState.abortableTasks,
             null,
             postponedState.rootFormatContext,
@@ -4742,12 +4651,7 @@
               return performWork(request);
             }));
     }
-    function createSuspenseBoundary(
-      request,
-      fallbackAbortableTasks,
-      contentPreamble,
-      fallbackPreamble
-    ) {
+    function createSuspenseBoundary(request, fallbackAbortableTasks) {
       return {
         status: PENDING,
         rootSegmentID: -1,
@@ -4759,8 +4663,6 @@
         errorDigest: null,
         contentState: createHoistableState(),
         fallbackState: createHoistableState(),
-        contentPreamble: contentPreamble,
-        fallbackPreamble: fallbackPreamble,
         trackedContentKeyPath: null,
         trackedFallbackNode: null,
         errorMessage: null,
@@ -4775,7 +4677,6 @@
       childIndex,
       blockedBoundary,
       blockedSegment,
-      blockedPreamble,
       hoistableState,
       abortSet,
       keyPath,
@@ -4800,7 +4701,6 @@
         },
         blockedBoundary: blockedBoundary,
         blockedSegment: blockedSegment,
-        blockedPreamble: blockedPreamble,
         hoistableState: hoistableState,
         abortSet: abortSet,
         keyPath: keyPath,
@@ -4847,7 +4747,6 @@
         },
         blockedBoundary: blockedBoundary,
         blockedSegment: null,
-        blockedPreamble: null,
         hoistableState: hoistableState,
         abortSet: abortSet,
         keyPath: keyPath,
@@ -4872,12 +4771,11 @@
     ) {
       return {
         status: PENDING,
-        parentFlushed: !1,
         id: -1,
         index: index,
+        parentFlushed: !1,
         chunks: [],
         children: [],
-        preambleChildren: [],
         parentFormatContext: parentFormatContext,
         boundary: boundary,
         lastPushedText: lastPushedText,
@@ -5580,7 +5478,6 @@
             props,
             request.resumableState,
             request.renderState,
-            task.blockedPreamble,
             task.hoistableState,
             task.formatContext,
             segment.lastPushedText,
@@ -5589,45 +5486,9 @@
           segment.lastPushedText = !1;
           var _prevContext = task.formatContext,
             _prevKeyPath2 = task.keyPath;
+          task.formatContext = getChildFormatContext(_prevContext, type, props);
           task.keyPath = keyPath;
-          if (
-            (task.formatContext = getChildFormatContext(
-              _prevContext,
-              type,
-              props
-            )).insertionMode === HTML_HEAD_MODE
-          ) {
-            var preambleSegment = createPendingSegment(
-              request,
-              0,
-              null,
-              task.formatContext,
-              !1,
-              !1
-            );
-            segment.preambleChildren.push(preambleSegment);
-            var preambleTask = createRenderTask(
-              request,
-              null,
-              _children,
-              -1,
-              task.blockedBoundary,
-              preambleSegment,
-              task.blockedPreamble,
-              task.hoistableState,
-              request.abortableTasks,
-              task.keyPath,
-              task.formatContext,
-              task.context,
-              task.treeContext,
-              task.componentStack,
-              task.isFallback,
-              emptyContextObject,
-              task.debugTask
-            );
-            pushComponentStack(preambleTask);
-            request.pingedTasks.push(preambleTask);
-          } else renderNode(request, task, _children, -1);
+          renderNode(request, task, _children, -1);
           task.formatContext = _prevContext;
           task.keyPath = _prevKeyPath2;
           a: {
@@ -5664,9 +5525,6 @@
                   resumableState.hasHtml = !0;
                   break a;
                 }
-                break;
-              case "head":
-                if (_prevContext.insertionMode <= HTML_HTML_MODE) break a;
             }
             target.push(endChunkForTag(type));
           }
@@ -5720,26 +5578,12 @@
             } else {
               var prevKeyPath$jscomp$3 = task.keyPath,
                 parentBoundary = task.blockedBoundary,
-                parentPreamble = task.blockedPreamble,
                 parentHoistableState = task.hoistableState,
                 parentSegment = task.blockedSegment,
                 fallback = props.fallback,
                 content = props.children,
-                fallbackAbortSet = new Set();
-              var newBoundary =
-                task.formatContext.insertionMode < HTML_MODE
-                  ? createSuspenseBoundary(
-                      request,
-                      fallbackAbortSet,
-                      createPreambleState(),
-                      createPreambleState()
-                    )
-                  : createSuspenseBoundary(
-                      request,
-                      fallbackAbortSet,
-                      null,
-                      null
-                    );
+                fallbackAbortSet = new Set(),
+                newBoundary = createSuspenseBoundary(request, fallbackAbortSet);
               null !== request.trackedPostpones &&
                 (newBoundary.trackedContentKeyPath = keyPath);
               var boundarySegment = createPendingSegment(
@@ -5779,7 +5623,6 @@
                 );
                 newBoundary.trackedFallbackNode = fallbackReplayNode;
                 task.blockedSegment = boundarySegment;
-                task.blockedPreamble = newBoundary.fallbackPreamble;
                 task.keyPath = fallbackKeyPath;
                 boundarySegment.status = 6;
                 try {
@@ -5795,7 +5638,6 @@
                   );
                 } finally {
                   (task.blockedSegment = parentSegment),
-                    (task.blockedPreamble = parentPreamble),
                     (task.keyPath = prevKeyPath$jscomp$3);
                 }
                 var suspendedPrimaryTask = createRenderTask(
@@ -5805,7 +5647,6 @@
                   -1,
                   newBoundary,
                   contentRootSegment,
-                  newBoundary.contentPreamble,
                   newBoundary.contentState,
                   task.abortSet,
                   keyPath,
@@ -5821,7 +5662,6 @@
                 request.pingedTasks.push(suspendedPrimaryTask);
               } else {
                 task.blockedBoundary = newBoundary;
-                task.blockedPreamble = newBoundary.contentPreamble;
                 task.hoistableState = newBoundary.contentState;
                 task.blockedSegment = contentRootSegment;
                 task.keyPath = keyPath;
@@ -5838,9 +5678,6 @@
                       newBoundary.status === PENDING)
                   ) {
                     newBoundary.status = COMPLETED;
-                    0 === request.pendingRootTasks &&
-                      task.blockedPreamble &&
-                      preparePreamble(request);
                     break a;
                   }
                 } catch (thrownValue$2) {
@@ -5880,7 +5717,6 @@
                   untrackBoundary(request, newBoundary);
                 } finally {
                   (task.blockedBoundary = parentBoundary),
-                    (task.blockedPreamble = parentPreamble),
                     (task.hoistableState = parentHoistableState),
                     (task.blockedSegment = parentSegment),
                     (task.keyPath = prevKeyPath$jscomp$3);
@@ -5892,7 +5728,6 @@
                   -1,
                   parentBoundary,
                   boundarySegment,
-                  newBoundary.fallbackPreamble,
                   newBoundary.fallbackState,
                   fallbackAbortSet,
                   [keyPath[0], "Suspense Fallback", keyPath[2]],
@@ -6131,27 +5966,17 @@
                 previousReplaySet = task.replay,
                 parentBoundary = task.blockedBoundary,
                 parentHoistableState = task.hoistableState,
-                content = props.children,
-                fallback = props.fallback,
-                fallbackAbortSet = new Set();
-              props =
-                task.formatContext.insertionMode < HTML_MODE
-                  ? createSuspenseBoundary(
-                      request,
-                      fallbackAbortSet,
-                      createPreambleState(),
-                      createPreambleState()
-                    )
-                  : createSuspenseBoundary(
-                      request,
-                      fallbackAbortSet,
-                      null,
-                      null
-                    );
-              props.parentFlushed = !0;
-              props.rootSegmentID = type;
-              task.blockedBoundary = props;
-              task.hoistableState = props.contentState;
+                content = props.children;
+              props = props.fallback;
+              var fallbackAbortSet = new Set(),
+                resumedBoundary = createSuspenseBoundary(
+                  request,
+                  fallbackAbortSet
+                );
+              resumedBoundary.parentFlushed = !0;
+              resumedBoundary.rootSegmentID = type;
+              task.blockedBoundary = resumedBoundary;
+              task.hoistableState = resumedBoundary.contentState;
               task.keyPath = keyPath;
               task.replay = { nodes: ref, slots: name, pendingTasks: 1 };
               try {
@@ -6164,13 +5989,16 @@
                     "Couldn't find all resumable slots by key/index during replaying. The tree doesn't match so React will fallback to client rendering."
                   );
                 task.replay.pendingTasks--;
-                if (0 === props.pendingTasks && props.status === PENDING) {
-                  props.status = COMPLETED;
-                  request.completedBoundaries.push(props);
+                if (
+                  0 === resumedBoundary.pendingTasks &&
+                  resumedBoundary.status === PENDING
+                ) {
+                  resumedBoundary.status = COMPLETED;
+                  request.completedBoundaries.push(resumedBoundary);
                   break a;
                 }
               } catch (error) {
-                (props.status = CLIENT_RENDERED),
+                (resumedBoundary.status = CLIENT_RENDERED),
                   (childNodes = getThrownInfo(task.componentStack)),
                   "object" === typeof error &&
                   null !== error &&
@@ -6188,9 +6016,15 @@
                         childNodes,
                         task.debugTask
                       )),
-                  encodeErrorForBoundary(props, replay, error, childNodes, !1),
+                  encodeErrorForBoundary(
+                    resumedBoundary,
+                    replay,
+                    error,
+                    childNodes,
+                    !1
+                  ),
                   task.replay.pendingTasks--,
-                  request.clientRenderedBoundaries.push(props);
+                  request.clientRenderedBoundaries.push(resumedBoundary);
               } finally {
                 (task.blockedBoundary = parentBoundary),
                   (task.hoistableState = parentHoistableState),
@@ -6201,10 +6035,10 @@
                 request,
                 null,
                 { nodes: keyOrIndex, slots: node, pendingTasks: 0 },
-                fallback,
+                props,
                 -1,
                 parentBoundary,
-                props.fallbackState,
+                resumedBoundary.fallbackState,
                 fallbackAbortSet,
                 [keyPath[0], "Suspense Fallback", keyPath[2]],
                 task.formatContext,
@@ -6749,7 +6583,6 @@
         task.childIndex,
         task.blockedBoundary,
         newSegment,
-        task.blockedPreamble,
         task.hoistableState,
         task.abortSet,
         task.keyPath,
@@ -6967,12 +6800,7 @@
             errorDigest = errorDigest$jscomp$0,
             errorInfo = errorInfo$jscomp$0,
             wasAborted = aborted,
-            resumedBoundary = createSuspenseBoundary(
-              request,
-              new Set(),
-              null,
-              null
-            );
+            resumedBoundary = createSuspenseBoundary(request, new Set());
           resumedBoundary.parentFlushed = !0;
           resumedBoundary.rootSegmentID = node;
           resumedBoundary.status = CLIENT_RENDERED;
@@ -7182,7 +7010,6 @@
     }
     function completeShell(request) {
       null === request.trackedPostpones && safelyEmitEarlyPreloads(request, !0);
-      null === request.trackedPostpones && preparePreamble(request);
       request.onShellError = noop;
       request = request.onShellReady;
       request();
@@ -7195,7 +7022,6 @@
           : null === request.completedRootSegment ||
               request.completedRootSegment.status !== POSTPONED
       );
-      preparePreamble(request);
       request = request.onAllReady;
       request();
     }
@@ -7240,11 +7066,7 @@
                     abortTaskSoft,
                     request
                   ),
-                  boundary.fallbackAbortableTasks.clear(),
-                  0 === request.pendingRootTasks &&
-                    null === request.trackedPostpones &&
-                    null !== boundary.contentPreamble &&
-                    preparePreamble(request)))
+                  boundary.fallbackAbortableTasks.clear()))
               : null !== segment &&
                 segment.parentFlushed &&
                 segment.status === COMPLETED &&
@@ -7499,11 +7321,7 @@
                             ),
                             untrackBoundary(request, boundary),
                             boundary.parentFlushed &&
-                              request.clientRenderedBoundaries.push(boundary),
-                            0 === request.pendingRootTasks &&
-                              null === request.trackedPostpones &&
-                              null !== boundary.contentPreamble &&
-                              preparePreamble(request)));
+                              request.clientRenderedBoundaries.push(boundary)));
                       request.allPendingTasks--;
                       0 === request.allPendingTasks && completeAll(request);
                     }
@@ -7533,85 +7351,6 @@
         }
       }
     }
-    function preparePreambleFromSubtree(
-      request,
-      segment,
-      collectedPreambleSegments
-    ) {
-      segment.preambleChildren.length &&
-        collectedPreambleSegments.push(segment.preambleChildren);
-      for (var pendingPreambles = !1, i = 0; i < segment.children.length; i++)
-        pendingPreambles =
-          preparePreambleFromSegment(
-            request,
-            segment.children[i],
-            collectedPreambleSegments
-          ) || pendingPreambles;
-      return pendingPreambles;
-    }
-    function preparePreambleFromSegment(
-      request,
-      segment,
-      collectedPreambleSegments
-    ) {
-      var boundary = segment.boundary;
-      if (null === boundary)
-        return preparePreambleFromSubtree(
-          request,
-          segment,
-          collectedPreambleSegments
-        );
-      var preamble = boundary.contentPreamble,
-        fallbackPreamble = boundary.fallbackPreamble;
-      if (null === preamble || null === fallbackPreamble) return !1;
-      switch (boundary.status) {
-        case COMPLETED:
-          hoistPreambleState(request.renderState, preamble);
-          segment = boundary.completedSegments[0];
-          if (!segment)
-            throw Error(
-              "A previously unvisited boundary must have exactly one root segment. This is a bug in React."
-            );
-          return preparePreambleFromSubtree(
-            request,
-            segment,
-            collectedPreambleSegments
-          );
-        case POSTPONED:
-          if (null !== request.trackedPostpones) return !0;
-        case CLIENT_RENDERED:
-          if (segment.status === COMPLETED)
-            return (
-              hoistPreambleState(request.renderState, fallbackPreamble),
-              preparePreambleFromSubtree(
-                request,
-                segment,
-                collectedPreambleSegments
-              )
-            );
-        default:
-          return !0;
-      }
-    }
-    function preparePreamble(request) {
-      if (
-        request.completedRootSegment &&
-        null === request.completedPreambleSegments
-      ) {
-        var collectedPreambleSegments = [],
-          hasPendingPreambles = preparePreambleFromSegment(
-            request,
-            request.completedRootSegment,
-            collectedPreambleSegments
-          ),
-          preamble = request.renderState.preamble;
-        if (
-          !1 === hasPendingPreambles ||
-          (preamble.headChunks && preamble.bodyChunks)
-        )
-          request.completedPreambleSegments = collectedPreambleSegments;
-      }
-    }
     function flushSubtree(request, destination, segment, hoistableState) {
       segment.parentFlushed = !0;
       switch (segment.status) {
@@ -7659,8 +7398,8 @@
       if (boundary.status === CLIENT_RENDERED) {
         var errorDigest = boundary.errorDigest,
           errorMessage = boundary.errorMessage,
-          errorStack = boundary.errorStack,
-          errorComponentStack = boundary.errorComponentStack;
+          errorStack = boundary.errorStack;
+        boundary = boundary.errorComponentStack;
         writeChunkAndReturn(destination, startClientRenderedSuspenseBoundary);
         writeChunk(destination, clientRenderedSuspenseBoundaryError1);
         errorDigest &&
@@ -7684,23 +7423,18 @@
             destination,
             clientRenderedSuspenseBoundaryErrorAttrInterstitial
           ));
-        errorComponentStack &&
+        boundary &&
           (writeChunk(destination, clientRenderedSuspenseBoundaryError1D),
-          writeChunk(destination, escapeTextForBrowser(errorComponentStack)),
+          writeChunk(destination, escapeTextForBrowser(boundary)),
           writeChunk(
             destination,
             clientRenderedSuspenseBoundaryErrorAttrInterstitial
           ));
         writeChunkAndReturn(destination, clientRenderedSuspenseBoundaryError2);
         flushSubtree(request, destination, segment, hoistableState);
-        (request = boundary.fallbackPreamble) &&
-          writePreambleContribution(destination, request);
-        return writeChunkAndReturn(destination, endSuspenseBoundary);
-      }
-      if (boundary.status !== COMPLETED)
-        return (
-          boundary.status === PENDING &&
-            (boundary.rootSegmentID = request.nextSegmentId++),
+      } else if (boundary.status !== COMPLETED)
+        boundary.status === PENDING &&
+          (boundary.rootSegmentID = request.nextSegmentId++),
           0 < boundary.completedSegments.length &&
             request.partialBoundaries.push(boundary),
           writeStartPendingSuspenseBoundary(
@@ -7715,34 +7449,32 @@
               hoistStylesheetDependency,
               hoistableState
             )),
-          flushSubtree(request, destination, segment, hoistableState),
-          writeChunkAndReturn(destination, endSuspenseBoundary)
-        );
-      if (boundary.byteSize > request.progressiveChunkSize)
-        return (
-          (boundary.rootSegmentID = request.nextSegmentId++),
+          flushSubtree(request, destination, segment, hoistableState);
+      else if (boundary.byteSize > request.progressiveChunkSize)
+        (boundary.rootSegmentID = request.nextSegmentId++),
           request.completedBoundaries.push(boundary),
           writeStartPendingSuspenseBoundary(
             destination,
             request.renderState,
             boundary.rootSegmentID
           ),
-          flushSubtree(request, destination, segment, hoistableState),
-          writeChunkAndReturn(destination, endSuspenseBoundary)
-        );
-      hoistableState &&
-        ((segment = boundary.contentState),
-        segment.styles.forEach(hoistStyleQueueDependency, hoistableState),
-        segment.stylesheets.forEach(hoistStylesheetDependency, hoistableState));
-      writeChunkAndReturn(destination, startCompletedSuspenseBoundary);
-      segment = boundary.completedSegments;
-      if (1 !== segment.length)
-        throw Error(
-          "A previously unvisited boundary must have exactly one root segment. This is a bug in React."
-        );
-      flushSegment(request, destination, segment[0], hoistableState);
-      (request = boundary.contentPreamble) &&
-        writePreambleContribution(destination, request);
+          flushSubtree(request, destination, segment, hoistableState);
+      else {
+        hoistableState &&
+          ((segment = boundary.contentState),
+          segment.styles.forEach(hoistStyleQueueDependency, hoistableState),
+          segment.stylesheets.forEach(
+            hoistStylesheetDependency,
+            hoistableState
+          ));
+        writeChunkAndReturn(destination, startCompletedSuspenseBoundary);
+        segment = boundary.completedSegments;
+        if (1 !== segment.length)
+          throw Error(
+            "A previously unvisited boundary must have exactly one root segment. This is a bug in React."
+          );
+        flushSegment(request, destination, segment[0], hoistableState);
+      }
       return writeChunkAndReturn(destination, endSuspenseBoundary);
     }
     function flushSegmentContainer(
@@ -7904,8 +7636,6 @@
             completedRootSegment = request.completedRootSegment;
           if (null !== completedRootSegment) {
             if (completedRootSegment.status === POSTPONED) return;
-            var completedPreambleSegments = request.completedPreambleSegments;
-            if (null === completedPreambleSegments) return;
             var renderState = request.renderState;
             if (
               (0 !== request.allPendingTasks ||
@@ -7920,9 +7650,8 @@
                 ((resumableState.scriptResources[src] = EXISTS),
                 renderState.scripts.add(chunks));
             }
-            var preamble = renderState.preamble,
-              htmlChunks = preamble.htmlChunks,
-              headChunks = preamble.headChunks,
+            var htmlChunks = renderState.htmlChunks,
+              headChunks = renderState.headChunks,
               i$jscomp$0;
             if (htmlChunks) {
               for (i$jscomp$0 = 0; i$jscomp$0 < htmlChunks.length; i$jscomp$0++)
@@ -7983,36 +7712,10 @@
               i$jscomp$0++
             )
               writeChunk(destination, hoistableChunks[i$jscomp$0]);
-            for (
-              renderState = hoistableChunks.length = 0;
-              renderState < completedPreambleSegments.length;
-              renderState++
-            ) {
-              var segments = completedPreambleSegments[renderState];
-              for (
-                _renderState$external = 0;
-                _renderState$external < segments.length;
-                _renderState$external++
-              )
-                flushSegment(
-                  request,
-                  destination,
-                  segments[_renderState$external],
-                  null
-                );
-            }
-            var preamble$jscomp$0 = request.renderState.preamble,
-              headChunks$jscomp$0 = preamble$jscomp$0.headChunks;
-            (preamble$jscomp$0.htmlChunks || headChunks$jscomp$0) &&
+            hoistableChunks.length = 0;
+            htmlChunks &&
+              null === headChunks &&
               writeChunk(destination, endChunkForTag("head"));
-            var bodyChunks = preamble$jscomp$0.bodyChunks;
-            if (bodyChunks)
-              for (
-                completedPreambleSegments = 0;
-                completedPreambleSegments < bodyChunks.length;
-                completedPreambleSegments++
-              )
-                writeChunk(destination, bodyChunks[completedPreambleSegments]);
             flushSegment(request, destination, completedRootSegment, null);
             request.completedRootSegment = null;
             writeBootstrap(destination, request.renderState);
@@ -8353,19 +8056,11 @@
       )
         return (request.trackedPostpones = null);
       if (
-        null === request.completedRootSegment ||
-        (request.completedRootSegment.status !== POSTPONED &&
-          null !== request.completedPreambleSegments)
+        null !== request.completedRootSegment &&
+        request.completedRootSegment.status === POSTPONED
       ) {
-        var replaySlots = trackedPostpones.rootSlots;
-        var resumableState = request.resumableState;
-        resumableState.bootstrapScriptContent = void 0;
-        resumableState.bootstrapScripts = void 0;
-        resumableState.bootstrapModules = void 0;
-      } else {
-        replaySlots = request.completedRootSegment.id;
-        resumableState = request.resumableState;
-        var renderState = request.renderState;
+        var resumableState = request.resumableState,
+          renderState = request.renderState;
         resumableState.nextFormID = 0;
         resumableState.hasBody = !1;
         resumableState.hasHtml = !1;
@@ -8377,23 +8072,27 @@
         resumableState.scriptResources = {};
         resumableState.moduleUnknownResources = {};
         resumableState.moduleScriptResources = {};
-      }
+      } else
+        (resumableState = request.resumableState),
+          (resumableState.bootstrapScriptContent = void 0),
+          (resumableState.bootstrapScripts = void 0),
+          (resumableState.bootstrapModules = void 0);
       return {
         nextSegmentId: request.nextSegmentId,
         rootFormatContext: request.rootFormatContext,
         progressiveChunkSize: request.progressiveChunkSize,
         resumableState: request.resumableState,
         replayNodes: trackedPostpones.rootNodes,
-        replaySlots: replaySlots
+        replaySlots: trackedPostpones.rootSlots
       };
     }
     function ensureCorrectIsomorphicReactVersion() {
       var isomorphicReactPackageVersion = React.version;
-      if ("19.1.0-experimental-e670e72f-20250214" !== isomorphicReactPackageVersion)
+      if ("19.1.0-experimental-b3a95caf-20250113" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The "react" and "react-dom" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              "\n  - react-dom:  19.1.0-experimental-e670e72f-20250214\nLearn more: https://react.dev/warnings/version-mismatch")
+              "\n  - react-dom:  19.1.0-experimental-b3a95caf-20250113\nLearn more: https://react.dev/warnings/version-mismatch")
         );
     }
     function createDrainHandler(destination, request) {
@@ -8492,7 +8191,6 @@
       REACT_SCOPE_TYPE = Symbol.for("react.scope"),
       REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen"),
       REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden"),
-      REACT_MEMO_CACHE_SENTINEL = Symbol.for("react.memo_cache_sentinel"),
       REACT_POSTPONE_TYPE = Symbol.for("react.postpone"),
       REACT_VIEW_TRANSITION_TYPE = Symbol.for("react.view_transition"),
       MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
@@ -9567,17 +9265,15 @@
       ),
       importMapScriptEnd = stringToPrecomputedChunk("\x3c/script>");
     var didWarnForNewBooleanPropsWithEmptyValue = {};
-    var NoContribution = 0,
-      ROOT_HTML_MODE = 0,
+    var ROOT_HTML_MODE = 0,
       HTML_HTML_MODE = 1,
       HTML_MODE = 2,
-      HTML_HEAD_MODE = 3,
-      SVG_MODE = 4,
-      MATHML_MODE = 5,
-      HTML_TABLE_MODE = 6,
-      HTML_TABLE_BODY_MODE = 7,
-      HTML_TABLE_ROW_MODE = 8,
-      HTML_COLGROUP_MODE = 9,
+      SVG_MODE = 3,
+      MATHML_MODE = 4,
+      HTML_TABLE_MODE = 5,
+      HTML_TABLE_BODY_MODE = 6,
+      HTML_TABLE_ROW_MODE = 7,
+      HTML_COLGROUP_MODE = 8,
       textSeparator = stringToPrecomputedChunk("\x3c!-- --\x3e"),
       styleNameCache = new Map(),
       styleAttributeStart = stringToPrecomputedChunk(' style="'),
@@ -9643,9 +9339,6 @@
         stringToPrecomputedChunk(' data-cstck="'),
       clientRenderedSuspenseBoundaryError2 =
         stringToPrecomputedChunk("></template>"),
-      boundaryPreambleContributionChunkStart =
-        stringToPrecomputedChunk("\x3c!--"),
-      boundaryPreambleContributionChunkEnd = stringToPrecomputedChunk("--\x3e"),
       startSegmentHTML = stringToPrecomputedChunk('<div hidden id="'),
       startSegmentHTML2 = stringToPrecomputedChunk('">'),
       endSegmentHTML = stringToPrecomputedChunk("</div>"),
@@ -9913,20 +9606,8 @@
           resolveCurrentlyRenderingComponent();
           return NotPending;
         },
-        useMemoCache: function (size) {
-          for (var data = Array(size), i = 0; i < size; i++)
-            data[i] = REACT_MEMO_CACHE_SENTINEL;
-          return data;
-        },
-        useCacheRefresh: function () {
-          return unsupportedRefresh;
-        },
         useEffectEvent: function () {
           return throwOnUseEffectEventCall;
-        },
-        useSwipeTransition: function (previous, current) {
-          resolveCurrentlyRenderingComponent();
-          return [current, unsupportedStartGesture];
         }
       },
       currentResumableState = null,
@@ -10172,5 +9853,5 @@
         }
       };
     };
-    exports.version = "19.1.0-experimental-e670e72f-20250214";
+    exports.version = "19.1.0-experimental-b3a95caf-20250113";
   })();
diff --git a/node_modules/react-dom/cjs/react-dom-server.node.production.js b/node_modules/react-dom/cjs/react-dom-server.node.production.js
index bf492d7..6921b3f 100644
--- a/node_modules/react-dom/cjs/react-dom-server.node.production.js
+++ b/node_modules/react-dom/cjs/react-dom-server.node.production.js
@@ -31,7 +31,6 @@ var util = require("util"),
   REACT_SCOPE_TYPE = Symbol.for("react.scope"),
   REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen"),
   REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden"),
-  REACT_MEMO_CACHE_SENTINEL = Symbol.for("react.memo_cache_sentinel"),
   REACT_POSTPONE_TYPE = Symbol.for("react.postpone"),
   REACT_VIEW_TRANSITION_TYPE = Symbol.for("react.view_transition"),
   MAYBE_ITERATOR_SYMBOL = Symbol.iterator,
@@ -383,7 +382,8 @@ function createRenderState(
     segmentPrefix: stringToPrecomputedChunk(idPrefix + "S:"),
     boundaryPrefix: stringToPrecomputedChunk(idPrefix + "B:"),
     startInlineScript: inlineScriptWithNonce,
-    preamble: createPreambleState(),
+    htmlChunks: null,
+    headChunks: null,
     externalRuntimeScript: externalRuntimeScript,
     bootstrapChunks: bootstrapChunks,
     importMapChunks: externalRuntimeConfig,
@@ -546,14 +546,6 @@ function createResumableState(
     moduleScriptResources: {}
   };
 }
-function createPreambleState() {
-  return {
-    htmlChunks: null,
-    headChunks: null,
-    bodyChunks: null,
-    contribution: 0
-  };
-}
 function createFormatContext(insertionMode, selectedValue, tagScope) {
   return {
     insertionMode: insertionMode,
@@ -564,9 +556,9 @@ function createFormatContext(insertionMode, selectedValue, tagScope) {
 function createRootFormatContext(namespaceURI) {
   return createFormatContext(
     "http://www.w3.org/2000/svg" === namespaceURI
-      ? 4
+      ? 3
       : "http://www.w3.org/1998/Math/MathML" === namespaceURI
-        ? 5
+        ? 4
         : 0,
     null,
     0
@@ -583,34 +575,33 @@ function getChildFormatContext(parentContext, type, props) {
         parentContext.tagScope
       );
     case "svg":
-      return createFormatContext(4, null, parentContext.tagScope);
+      return createFormatContext(3, null, parentContext.tagScope);
     case "picture":
       return createFormatContext(2, null, parentContext.tagScope | 2);
     case "math":
-      return createFormatContext(5, null, parentContext.tagScope);
+      return createFormatContext(4, null, parentContext.tagScope);
     case "foreignObject":
       return createFormatContext(2, null, parentContext.tagScope);
     case "table":
-      return createFormatContext(6, null, parentContext.tagScope);
+      return createFormatContext(5, null, parentContext.tagScope);
     case "thead":
     case "tbody":
     case "tfoot":
-      return createFormatContext(7, null, parentContext.tagScope);
+      return createFormatContext(6, null, parentContext.tagScope);
     case "colgroup":
-      return createFormatContext(9, null, parentContext.tagScope);
-    case "tr":
       return createFormatContext(8, null, parentContext.tagScope);
-    case "head":
-      if (2 > parentContext.insertionMode)
-        return createFormatContext(3, null, parentContext.tagScope);
-      break;
-    case "html":
-      if (0 === parentContext.insertionMode)
-        return createFormatContext(1, null, parentContext.tagScope);
+    case "tr":
+      return createFormatContext(7, null, parentContext.tagScope);
   }
-  return 6 <= parentContext.insertionMode || 2 > parentContext.insertionMode
+  return 5 <= parentContext.insertionMode
     ? createFormatContext(2, null, parentContext.tagScope)
-    : parentContext;
+    : 0 === parentContext.insertionMode
+      ? "html" === type
+        ? createFormatContext(1, null, parentContext.tagScope)
+        : createFormatContext(2, null, parentContext.tagScope)
+      : 1 === parentContext.insertionMode
+        ? createFormatContext(2, null, parentContext.tagScope)
+        : parentContext;
 }
 var textSeparator = stringToPrecomputedChunk("\x3c!-- --\x3e");
 function pushTextInstance(target, text, renderState, textEmbedded) {
@@ -1121,29 +1112,6 @@ function pushScriptImpl(target, props) {
   target.push(endChunkForTag("script"));
   return null;
 }
-function pushStartSingletonElement(target, props, tag) {
-  target.push(startChunkForTag(tag));
-  var innerHTML = (tag = null),
-    propKey;
-  for (propKey in props)
-    if (hasOwnProperty.call(props, propKey)) {
-      var propValue = props[propKey];
-      if (null != propValue)
-        switch (propKey) {
-          case "children":
-            tag = propValue;
-            break;
-          case "dangerouslySetInnerHTML":
-            innerHTML = propValue;
-            break;
-          default:
-            pushAttribute(target, propKey, propValue);
-        }
-    }
-  target.push(endOfStartTag);
-  pushInnerHTML(target, innerHTML, tag);
-  return tag;
-}
 function pushStartGenericElement(target, props, tag) {
   target.push(startChunkForTag(tag));
   var innerHTML = (tag = null),
@@ -1188,7 +1156,6 @@ function pushStartInstance(
   props,
   resumableState,
   renderState,
-  preambleState,
   hoistableState,
   formatContext,
   textEmbedded,
@@ -1668,7 +1635,7 @@ function pushStartInstance(
       return JSCompiler_inline_result$jscomp$2;
     case "title":
       if (
-        4 === formatContext.insertionMode ||
+        3 === formatContext.insertionMode ||
         formatContext.tagScope & 1 ||
         null != props.itemProp
       )
@@ -1687,7 +1654,7 @@ function pushStartInstance(
         href = props.href,
         precedence = props.precedence;
       if (
-        4 === formatContext.insertionMode ||
+        3 === formatContext.insertionMode ||
         formatContext.tagScope & 1 ||
         null != props.itemProp ||
         "string" !== typeof rel ||
@@ -1769,7 +1736,7 @@ function pushStartInstance(
         "symbol" === typeof asyncProp ||
         props.onLoad ||
         props.onError ||
-        4 === formatContext.insertionMode ||
+        3 === formatContext.insertionMode ||
         formatContext.tagScope & 1 ||
         null != props.itemProp
       )
@@ -1810,7 +1777,7 @@ function pushStartInstance(
       var precedence$jscomp$0 = props.precedence,
         href$jscomp$0 = props.href;
       if (
-        4 === formatContext.insertionMode ||
+        3 === formatContext.insertionMode ||
         formatContext.tagScope & 1 ||
         null != props.itemProp ||
         "string" !== typeof precedence$jscomp$0 ||
@@ -1913,7 +1880,7 @@ function pushStartInstance(
       return JSCompiler_inline_result$jscomp$6;
     case "meta":
       if (
-        4 === formatContext.insertionMode ||
+        3 === formatContext.insertionMode ||
         formatContext.tagScope & 1 ||
         null != props.itemProp
       )
@@ -2091,13 +2058,10 @@ function pushStartInstance(
     case "missing-glyph":
       break;
     case "head":
-      if (2 > formatContext.insertionMode) {
-        var preamble = preambleState || renderState.preamble;
-        if (preamble.headChunks)
-          throw Error("The `<head>` tag may only be rendered once.");
-        preamble.headChunks = [];
-        var JSCompiler_inline_result$jscomp$9 = pushStartSingletonElement(
-          preamble.headChunks,
+      if (2 > formatContext.insertionMode && null === renderState.headChunks) {
+        renderState.headChunks = [];
+        var JSCompiler_inline_result$jscomp$9 = pushStartGenericElement(
+          renderState.headChunks,
           props,
           "head"
         );
@@ -2108,42 +2072,24 @@ function pushStartInstance(
           "head"
         );
       return JSCompiler_inline_result$jscomp$9;
-    case "body":
-      if (2 > formatContext.insertionMode) {
-        var preamble$jscomp$0 = preambleState || renderState.preamble;
-        if (preamble$jscomp$0.bodyChunks)
-          throw Error("The `<body>` tag may only be rendered once.");
-        preamble$jscomp$0.bodyChunks = [];
-        var JSCompiler_inline_result$jscomp$10 = pushStartSingletonElement(
-          preamble$jscomp$0.bodyChunks,
-          props,
-          "body"
-        );
-      } else
-        JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
-          target$jscomp$0,
-          props,
-          "body"
-        );
-      return JSCompiler_inline_result$jscomp$10;
     case "html":
-      if (0 === formatContext.insertionMode) {
-        var preamble$jscomp$1 = preambleState || renderState.preamble;
-        if (preamble$jscomp$1.htmlChunks)
-          throw Error("The `<html>` tag may only be rendered once.");
-        preamble$jscomp$1.htmlChunks = [doctypeChunk];
-        var JSCompiler_inline_result$jscomp$11 = pushStartSingletonElement(
-          preamble$jscomp$1.htmlChunks,
+      if (
+        0 === formatContext.insertionMode &&
+        null === renderState.htmlChunks
+      ) {
+        renderState.htmlChunks = [doctypeChunk];
+        var JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
+          renderState.htmlChunks,
           props,
           "html"
         );
       } else
-        JSCompiler_inline_result$jscomp$11 = pushStartGenericElement(
+        JSCompiler_inline_result$jscomp$10 = pushStartGenericElement(
           target$jscomp$0,
           props,
           "html"
         );
-      return JSCompiler_inline_result$jscomp$11;
+      return JSCompiler_inline_result$jscomp$10;
     default:
       if (-1 !== type.indexOf("-")) {
         target$jscomp$0.push(startChunkForTag(type));
@@ -2206,21 +2152,6 @@ function endChunkForTag(tag) {
     endTagCache.set(tag, chunk));
   return chunk;
 }
-function hoistPreambleState(renderState, preambleState) {
-  renderState = renderState.preamble;
-  null === renderState.htmlChunks &&
-    preambleState.htmlChunks &&
-    ((renderState.htmlChunks = preambleState.htmlChunks),
-    (preambleState.contribution |= 1));
-  null === renderState.headChunks &&
-    preambleState.headChunks &&
-    ((renderState.headChunks = preambleState.headChunks),
-    (preambleState.contribution |= 4));
-  null === renderState.bodyChunks &&
-    preambleState.bodyChunks &&
-    ((renderState.bodyChunks = preambleState.bodyChunks),
-    (preambleState.contribution |= 2));
-}
 function writeBootstrap(destination, renderState) {
   renderState = renderState.bootstrapChunks;
   for (var i = 0; i < renderState.length - 1; i++)
@@ -2261,16 +2192,6 @@ function writeStartPendingSuspenseBoundary(destination, renderState, id) {
   writeChunk(destination, id.toString(16));
   return writeChunkAndReturn(destination, startPendingSuspenseBoundary2);
 }
-var boundaryPreambleContributionChunkStart =
-    stringToPrecomputedChunk("\x3c!--"),
-  boundaryPreambleContributionChunkEnd = stringToPrecomputedChunk("--\x3e");
-function writePreambleContribution(destination, preambleState) {
-  preambleState = preambleState.contribution;
-  0 !== preambleState &&
-    (writeChunk(destination, boundaryPreambleContributionChunkStart),
-    writeChunk(destination, "" + preambleState),
-    writeChunk(destination, boundaryPreambleContributionChunkEnd));
-}
 var startSegmentHTML = stringToPrecomputedChunk('<div hidden id="'),
   startSegmentHTML2 = stringToPrecomputedChunk('">'),
   endSegmentHTML = stringToPrecomputedChunk("</div>"),
@@ -2302,7 +2223,6 @@ function writeStartSegment(destination, renderState, formatContext, id) {
   switch (formatContext.insertionMode) {
     case 0:
     case 1:
-    case 3:
     case 2:
       return (
         writeChunk(destination, startSegmentHTML),
@@ -2310,42 +2230,42 @@ function writeStartSegment(destination, renderState, formatContext, id) {
         writeChunk(destination, id.toString(16)),
         writeChunkAndReturn(destination, startSegmentHTML2)
       );
-    case 4:
+    case 3:
       return (
         writeChunk(destination, startSegmentSVG),
         writeChunk(destination, renderState.segmentPrefix),
         writeChunk(destination, id.toString(16)),
         writeChunkAndReturn(destination, startSegmentSVG2)
       );
-    case 5:
+    case 4:
       return (
         writeChunk(destination, startSegmentMathML),
         writeChunk(destination, renderState.segmentPrefix),
         writeChunk(destination, id.toString(16)),
         writeChunkAndReturn(destination, startSegmentMathML2)
       );
-    case 6:
+    case 5:
       return (
         writeChunk(destination, startSegmentTable),
         writeChunk(destination, renderState.segmentPrefix),
         writeChunk(destination, id.toString(16)),
         writeChunkAndReturn(destination, startSegmentTable2)
       );
-    case 7:
+    case 6:
       return (
         writeChunk(destination, startSegmentTableBody),
         writeChunk(destination, renderState.segmentPrefix),
         writeChunk(destination, id.toString(16)),
         writeChunkAndReturn(destination, startSegmentTableBody2)
       );
-    case 8:
+    case 7:
       return (
         writeChunk(destination, startSegmentTableRow),
         writeChunk(destination, renderState.segmentPrefix),
         writeChunk(destination, id.toString(16)),
         writeChunkAndReturn(destination, startSegmentTableRow2)
       );
-    case 9:
+    case 8:
       return (
         writeChunk(destination, startSegmentColGroup),
         writeChunk(destination, renderState.segmentPrefix),
@@ -2360,20 +2280,19 @@ function writeEndSegment(destination, formatContext) {
   switch (formatContext.insertionMode) {
     case 0:
     case 1:
-    case 3:
     case 2:
       return writeChunkAndReturn(destination, endSegmentHTML);
-    case 4:
+    case 3:
       return writeChunkAndReturn(destination, endSegmentSVG);
-    case 5:
+    case 4:
       return writeChunkAndReturn(destination, endSegmentMathML);
-    case 6:
+    case 5:
       return writeChunkAndReturn(destination, endSegmentTable);
-    case 7:
+    case 6:
       return writeChunkAndReturn(destination, endSegmentTableBody);
-    case 8:
+    case 7:
       return writeChunkAndReturn(destination, endSegmentTableRow);
-    case 9:
+    case 8:
       return writeChunkAndReturn(destination, endSegmentColGroup);
     default:
       throw Error("Unknown insertion mode. This is a bug in React.");
@@ -3651,12 +3570,6 @@ function readPreviousThenableFromState() {
       index
     );
 }
-function unsupportedRefresh() {
-  throw Error("Cache cannot be refreshed during server rendering.");
-}
-function unsupportedStartGesture() {
-  throw Error("startGesture cannot be called during server rendering.");
-}
 function noop$1() {}
 var HooksDispatcher = {
     readContext: function (context) {
@@ -3742,20 +3655,8 @@ var HooksDispatcher = {
       resolveCurrentlyRenderingComponent();
       return sharedNotPendingObject;
     },
-    useMemoCache: function (size) {
-      for (var data = Array(size), i = 0; i < size; i++)
-        data[i] = REACT_MEMO_CACHE_SENTINEL;
-      return data;
-    },
-    useCacheRefresh: function () {
-      return unsupportedRefresh;
-    },
     useEffectEvent: function () {
       return throwOnUseEffectEventCall;
-    },
-    useSwipeTransition: function (previous, current) {
-      resolveCurrentlyRenderingComponent();
-      return [current, unsupportedStartGesture];
     }
   },
   currentResumableState = null,
@@ -4018,7 +3919,7 @@ function RequestInstance(
   this.status = 10;
   this.fatalError = null;
   this.pendingRootTasks = this.allPendingTasks = this.nextSegmentId = 0;
-  this.completedPreambleSegments = this.completedRootSegment = null;
+  this.completedRootSegment = null;
   this.abortableTasks = abortSet;
   this.pingedTasks = [];
   this.clientRenderedBoundaries = [];
@@ -4077,7 +3978,6 @@ function createRequest(
     null,
     renderState,
     null,
-    null,
     resumableState.abortableTasks,
     null,
     rootFormatContext,
@@ -4170,7 +4070,6 @@ function resumeRequest(
         null,
         onAllReady,
         null,
-        null,
         renderState.abortableTasks,
         null,
         postponedState.rootFormatContext,
@@ -4254,12 +4153,7 @@ function pingTask(request, task) {
           return performWork(request);
         }));
 }
-function createSuspenseBoundary(
-  request,
-  fallbackAbortableTasks,
-  contentPreamble,
-  fallbackPreamble
-) {
+function createSuspenseBoundary(request, fallbackAbortableTasks) {
   return {
     status: 0,
     rootSegmentID: -1,
@@ -4271,8 +4165,6 @@ function createSuspenseBoundary(
     errorDigest: null,
     contentState: createHoistableState(),
     fallbackState: createHoistableState(),
-    contentPreamble: contentPreamble,
-    fallbackPreamble: fallbackPreamble,
     trackedContentKeyPath: null,
     trackedFallbackNode: null
   };
@@ -4284,7 +4176,6 @@ function createRenderTask(
   childIndex,
   blockedBoundary,
   blockedSegment,
-  blockedPreamble,
   hoistableState,
   abortSet,
   keyPath,
@@ -4307,7 +4198,6 @@ function createRenderTask(
     },
     blockedBoundary: blockedBoundary,
     blockedSegment: blockedSegment,
-    blockedPreamble: blockedPreamble,
     hoistableState: hoistableState,
     abortSet: abortSet,
     keyPath: keyPath,
@@ -4351,7 +4241,6 @@ function createReplayTask(
     },
     blockedBoundary: blockedBoundary,
     blockedSegment: null,
-    blockedPreamble: null,
     hoistableState: hoistableState,
     abortSet: abortSet,
     keyPath: keyPath,
@@ -4375,12 +4264,11 @@ function createPendingSegment(
 ) {
   return {
     status: 0,
-    parentFlushed: !1,
     id: -1,
     index: index,
+    parentFlushed: !1,
     chunks: [],
     children: [],
-    preambleChildren: [],
     parentFormatContext: parentFormatContext,
     boundary: boundary,
     lastPushedText: lastPushedText,
@@ -4612,13 +4500,12 @@ function renderElement(request, task, keyPath, type, props, ref) {
         (task.formatContext = defaultProps),
         (task.keyPath = initialState);
     else {
-      ref = pushStartInstance(
+      initialState = pushStartInstance(
         newProps.chunks,
         type,
         props,
         request.resumableState,
         request.renderState,
-        task.blockedPreamble,
         task.hoistableState,
         task.formatContext,
         newProps.lastPushedText,
@@ -4626,42 +4513,12 @@ function renderElement(request, task, keyPath, type, props, ref) {
       );
       newProps.lastPushedText = !1;
       defaultProps = task.formatContext;
-      initialState = task.keyPath;
+      ref = task.keyPath;
+      task.formatContext = getChildFormatContext(defaultProps, type, props);
       task.keyPath = keyPath;
-      3 ===
-      (task.formatContext = getChildFormatContext(defaultProps, type, props))
-        .insertionMode
-        ? ((keyPath = createPendingSegment(
-            request,
-            0,
-            null,
-            task.formatContext,
-            !1,
-            !1
-          )),
-          newProps.preambleChildren.push(keyPath),
-          (keyPath = createRenderTask(
-            request,
-            null,
-            ref,
-            -1,
-            task.blockedBoundary,
-            keyPath,
-            task.blockedPreamble,
-            task.hoistableState,
-            request.abortableTasks,
-            task.keyPath,
-            task.formatContext,
-            task.context,
-            task.treeContext,
-            task.componentStack,
-            task.isFallback
-          )),
-          pushComponentStack(keyPath),
-          request.pingedTasks.push(keyPath))
-        : renderNode(request, task, ref, -1);
+      renderNode(request, task, initialState, -1);
       task.formatContext = defaultProps;
-      task.keyPath = initialState;
+      task.keyPath = ref;
       a: {
         task = newProps.chunks;
         request = request.resumableState;
@@ -4696,9 +4553,6 @@ function renderElement(request, task, keyPath, type, props, ref) {
               request.hasHtml = !0;
               break a;
             }
-            break;
-          case "head":
-            if (1 >= defaultProps.insertionMode) break a;
         }
         task.push(endChunkForTag(type));
       }
@@ -4748,34 +4602,25 @@ function renderElement(request, task, keyPath, type, props, ref) {
           }
         } else {
           type = task.keyPath;
-          var parentBoundary = task.blockedBoundary;
-          ref = task.blockedPreamble;
-          var parentHoistableState = task.hoistableState;
-          propName$34 = task.blockedSegment;
-          propName = props.fallback;
+          var parentBoundary = task.blockedBoundary,
+            parentHoistableState = task.hoistableState;
+          ref = task.blockedSegment;
+          propName$34 = props.fallback;
           props = props.children;
           var fallbackAbortSet = new Set();
-          var newBoundary =
-            2 > task.formatContext.insertionMode
-              ? createSuspenseBoundary(
-                  request,
-                  fallbackAbortSet,
-                  createPreambleState(),
-                  createPreambleState()
-                )
-              : createSuspenseBoundary(request, fallbackAbortSet, null, null);
+          propName = createSuspenseBoundary(request, fallbackAbortSet);
           null !== request.trackedPostpones &&
-            (newBoundary.trackedContentKeyPath = keyPath);
+            (propName.trackedContentKeyPath = keyPath);
           var boundarySegment = createPendingSegment(
             request,
-            propName$34.chunks.length,
-            newBoundary,
+            ref.chunks.length,
+            propName,
             task.formatContext,
             !1,
             !1
           );
-          propName$34.children.push(boundarySegment);
-          propName$34.lastPushedText = !1;
+          ref.children.push(boundarySegment);
+          ref.lastPushedText = !1;
           var contentRootSegment = createPendingSegment(
             request,
             0,
@@ -4789,13 +4634,12 @@ function renderElement(request, task, keyPath, type, props, ref) {
             newProps = [keyPath[0], "Suspense Fallback", keyPath[2]];
             defaultProps = [newProps[1], newProps[2], [], null];
             request.trackedPostpones.workingMap.set(newProps, defaultProps);
-            newBoundary.trackedFallbackNode = defaultProps;
+            propName.trackedFallbackNode = defaultProps;
             task.blockedSegment = boundarySegment;
-            task.blockedPreamble = newBoundary.fallbackPreamble;
             task.keyPath = newProps;
             boundarySegment.status = 6;
             try {
-              renderNode(request, task, propName, -1),
+              renderNode(request, task, propName$34, -1),
                 boundarySegment.lastPushedText &&
                   boundarySegment.textEmbedded &&
                   boundarySegment.chunks.push(textSeparator),
@@ -4806,19 +4650,16 @@ function renderElement(request, task, keyPath, type, props, ref) {
                 thrownValue)
               );
             } finally {
-              (task.blockedSegment = propName$34),
-                (task.blockedPreamble = ref),
-                (task.keyPath = type);
+              (task.blockedSegment = ref), (task.keyPath = type);
             }
             task = createRenderTask(
               request,
               null,
               props,
               -1,
-              newBoundary,
+              propName,
               contentRootSegment,
-              newBoundary.contentPreamble,
-              newBoundary.contentState,
+              propName.contentState,
               task.abortSet,
               keyPath,
               task.formatContext,
@@ -4830,9 +4671,8 @@ function renderElement(request, task, keyPath, type, props, ref) {
             pushComponentStack(task);
             request.pingedTasks.push(task);
           } else {
-            task.blockedBoundary = newBoundary;
-            task.blockedPreamble = newBoundary.contentPreamble;
-            task.hoistableState = newBoundary.contentState;
+            task.blockedBoundary = propName;
+            task.hoistableState = propName.contentState;
             task.blockedSegment = contentRootSegment;
             task.keyPath = keyPath;
             contentRootSegment.status = 6;
@@ -4843,17 +4683,14 @@ function renderElement(request, task, keyPath, type, props, ref) {
                   contentRootSegment.textEmbedded &&
                   contentRootSegment.chunks.push(textSeparator),
                 (contentRootSegment.status = 1),
-                queueCompletedSegment(newBoundary, contentRootSegment),
-                0 === newBoundary.pendingTasks && 0 === newBoundary.status)
+                queueCompletedSegment(propName, contentRootSegment),
+                0 === propName.pendingTasks && 0 === propName.status)
               ) {
-                newBoundary.status = 1;
-                0 === request.pendingRootTasks &&
-                  task.blockedPreamble &&
-                  preparePreamble(request);
+                propName.status = 1;
                 break a;
               }
             } catch (thrownValue$29) {
-              (newBoundary.status = 4),
+              (propName.status = 4),
                 12 === request.status
                   ? ((contentRootSegment.status = 3),
                     (newProps = request.fatalError))
@@ -4870,24 +4707,22 @@ function renderElement(request, task, keyPath, type, props, ref) {
                       newProps,
                       defaultProps
                     )),
-                (newBoundary.errorDigest = initialState),
-                untrackBoundary(request, newBoundary);
+                (propName.errorDigest = initialState),
+                untrackBoundary(request, propName);
             } finally {
               (task.blockedBoundary = parentBoundary),
-                (task.blockedPreamble = ref),
                 (task.hoistableState = parentHoistableState),
-                (task.blockedSegment = propName$34),
+                (task.blockedSegment = ref),
                 (task.keyPath = type);
             }
             task = createRenderTask(
               request,
               null,
-              propName,
+              propName$34,
               -1,
               parentBoundary,
               boundarySegment,
-              newBoundary.fallbackPreamble,
-              newBoundary.fallbackState,
+              propName.fallbackState,
               fallbackAbortSet,
               [keyPath[0], "Suspense Fallback", keyPath[2]],
               task.formatContext,
@@ -4906,9 +4741,9 @@ function renderElement(request, task, keyPath, type, props, ref) {
       switch (type.$$typeof) {
         case REACT_FORWARD_REF_TYPE:
           if ("ref" in props)
-            for (newBoundary in ((newProps = {}), props))
-              "ref" !== newBoundary &&
-                (newProps[newBoundary] = props[newBoundary]);
+            for (boundarySegment in ((newProps = {}), props))
+              "ref" !== boundarySegment &&
+                (newProps[boundarySegment] = props[boundarySegment]);
           else newProps = props;
           type = renderWithHooks(
             request,
@@ -5110,27 +4945,17 @@ function retryNode(request, task) {
                         previousReplaySet = task.replay,
                         parentBoundary = task.blockedBoundary,
                         parentHoistableState = task.hoistableState,
-                        content = props.children,
-                        fallback = props.fallback,
-                        fallbackAbortSet = new Set();
-                      props =
-                        2 > task.formatContext.insertionMode
-                          ? createSuspenseBoundary(
-                              request,
-                              fallbackAbortSet,
-                              createPreambleState(),
-                              createPreambleState()
-                            )
-                          : createSuspenseBoundary(
-                              request,
-                              fallbackAbortSet,
-                              null,
-                              null
-                            );
-                      props.parentFlushed = !0;
-                      props.rootSegmentID = ref;
-                      task.blockedBoundary = props;
-                      task.hoistableState = props.contentState;
+                        content = props.children;
+                      props = props.fallback;
+                      var fallbackAbortSet = new Set(),
+                        resumedBoundary = createSuspenseBoundary(
+                          request,
+                          fallbackAbortSet
+                        );
+                      resumedBoundary.parentFlushed = !0;
+                      resumedBoundary.rootSegmentID = ref;
+                      task.blockedBoundary = resumedBoundary;
+                      task.hoistableState = resumedBoundary.contentState;
                       task.keyPath = key;
                       task.replay = {
                         nodes: replay,
@@ -5147,13 +4972,16 @@ function retryNode(request, task) {
                             "Couldn't find all resumable slots by key/index during replaying. The tree doesn't match so React will fallback to client rendering."
                           );
                         task.replay.pendingTasks--;
-                        if (0 === props.pendingTasks && 0 === props.status) {
-                          props.status = 1;
-                          request.completedBoundaries.push(props);
+                        if (
+                          0 === resumedBoundary.pendingTasks &&
+                          0 === resumedBoundary.status
+                        ) {
+                          resumedBoundary.status = 1;
+                          request.completedBoundaries.push(resumedBoundary);
                           break b;
                         }
                       } catch (error) {
-                        (props.status = 4),
+                        (resumedBoundary.status = 4),
                           (childNodes = getThrownInfo(task.componentStack)),
                           "object" === typeof error &&
                           null !== error &&
@@ -5165,9 +4993,11 @@ function retryNode(request, task) {
                                 error,
                                 childNodes
                               )),
-                          (props.errorDigest = type),
+                          (resumedBoundary.errorDigest = type),
                           task.replay.pendingTasks--,
-                          request.clientRenderedBoundaries.push(props);
+                          request.clientRenderedBoundaries.push(
+                            resumedBoundary
+                          );
                       } finally {
                         (task.blockedBoundary = parentBoundary),
                           (task.hoistableState = parentHoistableState),
@@ -5182,10 +5012,10 @@ function retryNode(request, task) {
                           slots: node$jscomp$0,
                           pendingTasks: 0
                         },
-                        fallback,
+                        props,
                         -1,
                         parentBoundary,
-                        props.fallbackState,
+                        resumedBoundary.fallbackState,
                         fallbackAbortSet,
                         [key[0], "Suspense Fallback", key[2]],
                         task.formatContext,
@@ -5523,7 +5353,6 @@ function spawnNewSuspendedRenderTask(request, task, thenableState) {
     task.childIndex,
     task.blockedBoundary,
     newSegment,
-    task.blockedPreamble,
     task.hoistableState,
     task.abortSet,
     task.keyPath,
@@ -5709,12 +5538,7 @@ function abortRemainingReplayNodes(
       node = node[5];
       var request = request$jscomp$0,
         errorDigest = errorDigest$jscomp$0,
-        resumedBoundary = createSuspenseBoundary(
-          request,
-          new Set(),
-          null,
-          null
-        );
+        resumedBoundary = createSuspenseBoundary(request, new Set());
       resumedBoundary.parentFlushed = !0;
       resumedBoundary.rootSegmentID = node;
       resumedBoundary.status = 4;
@@ -5904,7 +5728,6 @@ function safelyEmitEarlyPreloads(request, shellComplete) {
 }
 function completeShell(request) {
   null === request.trackedPostpones && safelyEmitEarlyPreloads(request, !0);
-  null === request.trackedPostpones && preparePreamble(request);
   request.onShellError = noop;
   request = request.onShellReady;
   request();
@@ -5917,7 +5740,6 @@ function completeAll(request) {
       : null === request.completedRootSegment ||
           5 !== request.completedRootSegment.status
   );
-  preparePreamble(request);
   request = request.onAllReady;
   request();
 }
@@ -5958,11 +5780,7 @@ function finishedTask(request, boundary, segment) {
               request.completedBoundaries.push(boundary),
             1 === boundary.status &&
               (boundary.fallbackAbortableTasks.forEach(abortTaskSoft, request),
-              boundary.fallbackAbortableTasks.clear(),
-              0 === request.pendingRootTasks &&
-                null === request.trackedPostpones &&
-                null !== boundary.contentPreamble &&
-                preparePreamble(request)))
+              boundary.fallbackAbortableTasks.clear()))
           : null !== segment &&
             segment.parentFlushed &&
             1 === segment.status &&
@@ -6156,11 +5974,7 @@ function performWork(request$jscomp$1) {
                         (boundary.errorDigest = request$jscomp$0),
                         untrackBoundary(request, boundary),
                         boundary.parentFlushed &&
-                          request.clientRenderedBoundaries.push(boundary),
-                        0 === request.pendingRootTasks &&
-                          null === request.trackedPostpones &&
-                          null !== boundary.contentPreamble &&
-                          preparePreamble(request)));
+                          request.clientRenderedBoundaries.push(boundary)));
                   request.allPendingTasks--;
                   0 === request.allPendingTasks && completeAll(request);
                 }
@@ -6184,85 +5998,6 @@ function performWork(request$jscomp$1) {
     }
   }
 }
-function preparePreambleFromSubtree(
-  request,
-  segment,
-  collectedPreambleSegments
-) {
-  segment.preambleChildren.length &&
-    collectedPreambleSegments.push(segment.preambleChildren);
-  for (var pendingPreambles = !1, i = 0; i < segment.children.length; i++)
-    pendingPreambles =
-      preparePreambleFromSegment(
-        request,
-        segment.children[i],
-        collectedPreambleSegments
-      ) || pendingPreambles;
-  return pendingPreambles;
-}
-function preparePreambleFromSegment(
-  request,
-  segment,
-  collectedPreambleSegments
-) {
-  var boundary = segment.boundary;
-  if (null === boundary)
-    return preparePreambleFromSubtree(
-      request,
-      segment,
-      collectedPreambleSegments
-    );
-  var preamble = boundary.contentPreamble,
-    fallbackPreamble = boundary.fallbackPreamble;
-  if (null === preamble || null === fallbackPreamble) return !1;
-  switch (boundary.status) {
-    case 1:
-      hoistPreambleState(request.renderState, preamble);
-      segment = boundary.completedSegments[0];
-      if (!segment)
-        throw Error(
-          "A previously unvisited boundary must have exactly one root segment. This is a bug in React."
-        );
-      return preparePreambleFromSubtree(
-        request,
-        segment,
-        collectedPreambleSegments
-      );
-    case 5:
-      if (null !== request.trackedPostpones) return !0;
-    case 4:
-      if (1 === segment.status)
-        return (
-          hoistPreambleState(request.renderState, fallbackPreamble),
-          preparePreambleFromSubtree(
-            request,
-            segment,
-            collectedPreambleSegments
-          )
-        );
-    default:
-      return !0;
-  }
-}
-function preparePreamble(request) {
-  if (
-    request.completedRootSegment &&
-    null === request.completedPreambleSegments
-  ) {
-    var collectedPreambleSegments = [],
-      hasPendingPreambles = preparePreambleFromSegment(
-        request,
-        request.completedRootSegment,
-        collectedPreambleSegments
-      ),
-      preamble = request.renderState.preamble;
-    if (
-      !1 === hasPendingPreambles ||
-      (preamble.headChunks && preamble.bodyChunks)
-    )
-      request.completedPreambleSegments = collectedPreambleSegments;
-  }
-}
 function flushSubtree(request, destination, segment, hoistableState) {
   segment.parentFlushed = !0;
   switch (segment.status) {
@@ -6307,27 +6042,21 @@ function flushSegment(request, destination, segment, hoistableState) {
   if (null === boundary)
     return flushSubtree(request, destination, segment, hoistableState);
   boundary.parentFlushed = !0;
-  if (4 === boundary.status) {
-    var errorDigest = boundary.errorDigest;
-    writeChunkAndReturn(destination, startClientRenderedSuspenseBoundary);
-    writeChunk(destination, clientRenderedSuspenseBoundaryError1);
-    errorDigest &&
-      (writeChunk(destination, clientRenderedSuspenseBoundaryError1A),
-      writeChunk(destination, escapeTextForBrowser(errorDigest)),
-      writeChunk(
-        destination,
-        clientRenderedSuspenseBoundaryErrorAttrInterstitial
-      ));
-    writeChunkAndReturn(destination, clientRenderedSuspenseBoundaryError2);
-    flushSubtree(request, destination, segment, hoistableState);
-    (request = boundary.fallbackPreamble) &&
-      writePreambleContribution(destination, request);
-    return writeChunkAndReturn(destination, endSuspenseBoundary);
-  }
-  if (1 !== boundary.status)
-    return (
-      0 === boundary.status &&
-        (boundary.rootSegmentID = request.nextSegmentId++),
+  if (4 === boundary.status)
+    (boundary = boundary.errorDigest),
+      writeChunkAndReturn(destination, startClientRenderedSuspenseBoundary),
+      writeChunk(destination, clientRenderedSuspenseBoundaryError1),
+      boundary &&
+        (writeChunk(destination, clientRenderedSuspenseBoundaryError1A),
+        writeChunk(destination, escapeTextForBrowser(boundary)),
+        writeChunk(
+          destination,
+          clientRenderedSuspenseBoundaryErrorAttrInterstitial
+        )),
+      writeChunkAndReturn(destination, clientRenderedSuspenseBoundaryError2),
+      flushSubtree(request, destination, segment, hoistableState);
+  else if (1 !== boundary.status)
+    0 === boundary.status && (boundary.rootSegmentID = request.nextSegmentId++),
       0 < boundary.completedSegments.length &&
         request.partialBoundaries.push(boundary),
       writeStartPendingSuspenseBoundary(
@@ -6342,34 +6071,29 @@ function flushSegment(request, destination, segment, hoistableState) {
           hoistStylesheetDependency,
           hoistableState
         )),
-      flushSubtree(request, destination, segment, hoistableState),
-      writeChunkAndReturn(destination, endSuspenseBoundary)
-    );
-  if (boundary.byteSize > request.progressiveChunkSize)
-    return (
-      (boundary.rootSegmentID = request.nextSegmentId++),
+      flushSubtree(request, destination, segment, hoistableState);
+  else if (boundary.byteSize > request.progressiveChunkSize)
+    (boundary.rootSegmentID = request.nextSegmentId++),
       request.completedBoundaries.push(boundary),
       writeStartPendingSuspenseBoundary(
         destination,
         request.renderState,
         boundary.rootSegmentID
       ),
-      flushSubtree(request, destination, segment, hoistableState),
-      writeChunkAndReturn(destination, endSuspenseBoundary)
-    );
-  hoistableState &&
-    ((segment = boundary.contentState),
-    segment.styles.forEach(hoistStyleQueueDependency, hoistableState),
-    segment.stylesheets.forEach(hoistStylesheetDependency, hoistableState));
-  writeChunkAndReturn(destination, startCompletedSuspenseBoundary);
-  segment = boundary.completedSegments;
-  if (1 !== segment.length)
-    throw Error(
-      "A previously unvisited boundary must have exactly one root segment. This is a bug in React."
-    );
-  flushSegment(request, destination, segment[0], hoistableState);
-  (request = boundary.contentPreamble) &&
-    writePreambleContribution(destination, request);
+      flushSubtree(request, destination, segment, hoistableState);
+  else {
+    hoistableState &&
+      ((segment = boundary.contentState),
+      segment.styles.forEach(hoistStyleQueueDependency, hoistableState),
+      segment.stylesheets.forEach(hoistStylesheetDependency, hoistableState));
+    writeChunkAndReturn(destination, startCompletedSuspenseBoundary);
+    segment = boundary.completedSegments;
+    if (1 !== segment.length)
+      throw Error(
+        "A previously unvisited boundary must have exactly one root segment. This is a bug in React."
+      );
+    flushSegment(request, destination, segment[0], hoistableState);
+  }
   return writeChunkAndReturn(destination, endSuspenseBoundary);
 }
 function flushSegmentContainer(request, destination, segment, hoistableState) {
@@ -6498,8 +6222,6 @@ function flushCompletedQueues(request, destination) {
         completedRootSegment = request.completedRootSegment;
       if (null !== completedRootSegment) {
         if (5 === completedRootSegment.status) return;
-        var completedPreambleSegments = request.completedPreambleSegments;
-        if (null === completedPreambleSegments) return;
         var renderState = request.renderState;
         if (
           (0 !== request.allPendingTasks ||
@@ -6514,9 +6236,8 @@ function flushCompletedQueues(request, destination) {
             ((resumableState.scriptResources[src] = null),
             renderState.scripts.add(chunks));
         }
-        var preamble = renderState.preamble,
-          htmlChunks = preamble.htmlChunks,
-          headChunks = preamble.headChunks,
+        var htmlChunks = renderState.htmlChunks,
+          headChunks = renderState.headChunks,
           i$jscomp$0;
         if (htmlChunks) {
           for (i$jscomp$0 = 0; i$jscomp$0 < htmlChunks.length; i$jscomp$0++)
@@ -6557,36 +6278,10 @@ function flushCompletedQueues(request, destination) {
         var hoistableChunks = renderState.hoistableChunks;
         for (i$jscomp$0 = 0; i$jscomp$0 < hoistableChunks.length; i$jscomp$0++)
           writeChunk(destination, hoistableChunks[i$jscomp$0]);
-        for (
-          renderState = hoistableChunks.length = 0;
-          renderState < completedPreambleSegments.length;
-          renderState++
-        ) {
-          var segments = completedPreambleSegments[renderState];
-          for (
-            _renderState$external = 0;
-            _renderState$external < segments.length;
-            _renderState$external++
-          )
-            flushSegment(
-              request,
-              destination,
-              segments[_renderState$external],
-              null
-            );
-        }
-        var preamble$jscomp$0 = request.renderState.preamble,
-          headChunks$jscomp$0 = preamble$jscomp$0.headChunks;
-        (preamble$jscomp$0.htmlChunks || headChunks$jscomp$0) &&
+        hoistableChunks.length = 0;
+        htmlChunks &&
+          null === headChunks &&
           writeChunk(destination, endChunkForTag("head"));
-        var bodyChunks = preamble$jscomp$0.bodyChunks;
-        if (bodyChunks)
-          for (
-            completedPreambleSegments = 0;
-            completedPreambleSegments < bodyChunks.length;
-            completedPreambleSegments++
-          )
-            writeChunk(destination, bodyChunks[completedPreambleSegments]);
         flushSegment(request, destination, completedRootSegment, null);
         request.completedRootSegment = null;
         writeBootstrap(destination, request.renderState);
@@ -6842,19 +6537,11 @@ function getPostponedState(request) {
   )
     return (request.trackedPostpones = null);
   if (
-    null === request.completedRootSegment ||
-    (5 !== request.completedRootSegment.status &&
-      null !== request.completedPreambleSegments)
+    null !== request.completedRootSegment &&
+    5 === request.completedRootSegment.status
   ) {
-    var replaySlots = trackedPostpones.rootSlots;
-    var resumableState = request.resumableState;
-    resumableState.bootstrapScriptContent = void 0;
-    resumableState.bootstrapScripts = void 0;
-    resumableState.bootstrapModules = void 0;
-  } else {
-    replaySlots = request.completedRootSegment.id;
-    resumableState = request.resumableState;
-    var renderState = request.renderState;
+    var resumableState = request.resumableState,
+      renderState = request.renderState;
     resumableState.nextFormID = 0;
     resumableState.hasBody = !1;
     resumableState.hasHtml = !1;
@@ -6866,23 +6553,27 @@ function getPostponedState(request) {
     resumableState.scriptResources = {};
     resumableState.moduleUnknownResources = {};
     resumableState.moduleScriptResources = {};
-  }
+  } else
+    (resumableState = request.resumableState),
+      (resumableState.bootstrapScriptContent = void 0),
+      (resumableState.bootstrapScripts = void 0),
+      (resumableState.bootstrapModules = void 0);
   return {
     nextSegmentId: request.nextSegmentId,
     rootFormatContext: request.rootFormatContext,
     progressiveChunkSize: request.progressiveChunkSize,
     resumableState: request.resumableState,
     replayNodes: trackedPostpones.rootNodes,
-    replaySlots: replaySlots
+    replaySlots: trackedPostpones.rootSlots
   };
 }
 function ensureCorrectIsomorphicReactVersion() {
   var isomorphicReactPackageVersion = React.version;
-  if ("19.1.0-experimental-e670e72f-20250214" !== isomorphicReactPackageVersion)
+  if ("19.1.0-experimental-b3a95caf-20250113" !== isomorphicReactPackageVersion)
     throw Error(
       'Incompatible React versions: The "react" and "react-dom" packages must have the exact same version. Instead got:\n  - react:      ' +
         (isomorphicReactPackageVersion +
-          "\n  - react-dom:  19.1.0-experimental-e670e72f-20250214\nLearn more: https://react.dev/warnings/version-mismatch")
+          "\n  - react-dom:  19.1.0-experimental-b3a95caf-20250113\nLearn more: https://react.dev/warnings/version-mismatch")
     );
 }
 ensureCorrectIsomorphicReactVersion();
@@ -7133,4 +6824,4 @@ exports.resumeToPipeableStream = function (children, postponedState, options) {
     }
   };
 };
-exports.version = "19.1.0-experimental-e670e72f-20250214";
+exports.version = "19.1.0-experimental-b3a95caf-20250113";
diff --git a/node_modules/react-dom/cjs/react-dom-unstable_testing.development.js b/node_modules/react-dom/cjs/react-dom-unstable_testing.development.js
index 3b8b260..60199b0 100644
--- a/node_modules/react-dom/cjs/react-dom-unstable_testing.development.js
+++ b/node_modules/react-dom/cjs/react-dom-unstable_testing.development.js
@@ -419,7 +419,11 @@
           break;
         default:
           if (
-            ((nextRootContext = nextRootInstance.tagName),
+            ((nextRootInstance =
+              8 === nextRootContext
+                ? nextRootInstance.parentNode
+                : nextRootInstance),
+            (nextRootContext = nextRootInstance.tagName),
             (nextRootInstance = nextRootInstance.namespaceURI))
           )
             (nextRootInstance = getOwnHostContext(nextRootInstance)),
@@ -582,7 +586,6 @@
         case 64:
           return 64;
         case 128:
-          return 128;
         case 256:
         case 512:
         case 1024:
@@ -597,7 +600,7 @@
         case 524288:
         case 1048576:
         case 2097152:
-          return lanes & 4194048;
+          return lanes & 4194176;
         case 4194304:
         case 8388608:
         case 16777216:
@@ -659,7 +662,7 @@
             ((suspendedLanes = nextLanes & -nextLanes),
             (rootHasPendingCommit = wipLanes & -wipLanes),
             suspendedLanes >= rootHasPendingCommit ||
-              (32 === suspendedLanes && 0 !== (rootHasPendingCommit & 4194048)))
+              (32 === suspendedLanes && 0 !== (rootHasPendingCommit & 4194176)))
           ? wipLanes
           : nextLanes;
     }
@@ -677,10 +680,10 @@
         case 2:
         case 4:
         case 8:
-        case 64:
           return currentTime + 250;
         case 16:
         case 32:
+        case 64:
         case 128:
         case 256:
         case 512:
@@ -720,7 +723,7 @@
     function claimNextTransitionLane() {
       var lane = nextTransitionLane;
       nextTransitionLane <<= 1;
-      0 === (nextTransitionLane & 4194048) && (nextTransitionLane = 256);
+      0 === (nextTransitionLane & 4194176) && (nextTransitionLane = 128);
       return lane;
     }
     function claimNextRetryLane() {
@@ -796,7 +799,7 @@
       root.entanglements[spawnedLaneIndex] =
         root.entanglements[spawnedLaneIndex] |
         1073741824 |
-        (entangledLanes & 4194090);
+        (entangledLanes & 4194218);
     }
     function markRootEntangled(root, entangledLanes) {
       var rootEntangledLanes = (root.entangledLanes |= entangledLanes);
@@ -819,6 +822,7 @@
         case 32:
           lane = 16;
           break;
+        case 128:
         case 256:
         case 512:
         case 1024:
@@ -837,7 +841,7 @@
         case 8388608:
         case 16777216:
         case 33554432:
-          lane = 128;
+          lane = 64;
           break;
         case 268435456:
           lane = 134217728;
@@ -1502,7 +1506,10 @@
     }
     function runWithFiberInDEV(fiber, callback, arg0, arg1, arg2, arg3, arg4) {
       var previousFiber = current;
-      setCurrentFiber(fiber);
+      ReactSharedInternals.getCurrentStack =
+        null === fiber ? null : getCurrentFiberStackInDev;
+      isRendering = !1;
+      current = fiber;
       try {
         return null !== fiber && fiber._debugTask
           ? fiber._debugTask.run(
@@ -1510,18 +1517,12 @@
             )
           : callback(arg0, arg1, arg2, arg3, arg4);
       } finally {
-        setCurrentFiber(previousFiber);
+        current = previousFiber;
       }
       throw Error(
         "runWithFiberInDEV should never be called in production. This is a bug in React."
       );
     }
-    function setCurrentFiber(fiber) {
-      ReactSharedInternals.getCurrentStack =
-        null === fiber ? null : getCurrentFiberStackInDev;
-      isRendering = !1;
-      current = fiber;
-    }
     function getToStringValue(value) {
       switch (typeof value) {
         case "bigint":
@@ -2347,41 +2348,33 @@
       return null !== node ? describeDiff(node).replaceAll(/^[+-]/gm, ">") : "";
     }
     function updatedAncestorInfoDev(oldInfo, tag) {
-      var ancestorInfo = assign({}, oldInfo || emptyAncestorInfoDev),
-        info = { tag: tag };
+      oldInfo = assign({}, oldInfo || emptyAncestorInfoDev);
+      var info = { tag: tag };
       -1 !== inScopeTags.indexOf(tag) &&
-        ((ancestorInfo.aTagInScope = null),
-        (ancestorInfo.buttonTagInScope = null),
-        (ancestorInfo.nobrTagInScope = null));
-      -1 !== buttonScopeTags.indexOf(tag) &&
-        (ancestorInfo.pTagInButtonScope = null);
+        ((oldInfo.aTagInScope = null),
+        (oldInfo.buttonTagInScope = null),
+        (oldInfo.nobrTagInScope = null));
+      -1 !== buttonScopeTags.indexOf(tag) && (oldInfo.pTagInButtonScope = null);
       -1 !== specialTags.indexOf(tag) &&
         "address" !== tag &&
         "div" !== tag &&
         "p" !== tag &&
-        ((ancestorInfo.listItemTagAutoclosing = null),
-        (ancestorInfo.dlItemTagAutoclosing = null));
-      ancestorInfo.current = info;
-      "form" === tag && (ancestorInfo.formTag = info);
-      "a" === tag && (ancestorInfo.aTagInScope = info);
-      "button" === tag && (ancestorInfo.buttonTagInScope = info);
-      "nobr" === tag && (ancestorInfo.nobrTagInScope = info);
-      "p" === tag && (ancestorInfo.pTagInButtonScope = info);
-      "li" === tag && (ancestorInfo.listItemTagAutoclosing = info);
-      if ("dd" === tag || "dt" === tag)
-        ancestorInfo.dlItemTagAutoclosing = info;
+        ((oldInfo.listItemTagAutoclosing = null),
+        (oldInfo.dlItemTagAutoclosing = null));
+      oldInfo.current = info;
+      "form" === tag && (oldInfo.formTag = info);
+      "a" === tag && (oldInfo.aTagInScope = info);
+      "button" === tag && (oldInfo.buttonTagInScope = info);
+      "nobr" === tag && (oldInfo.nobrTagInScope = info);
+      "p" === tag && (oldInfo.pTagInButtonScope = info);
+      "li" === tag && (oldInfo.listItemTagAutoclosing = info);
+      if ("dd" === tag || "dt" === tag) oldInfo.dlItemTagAutoclosing = info;
       "#document" === tag || "html" === tag
-        ? (ancestorInfo.containerTagInScope = null)
-        : ancestorInfo.containerTagInScope ||
-          (ancestorInfo.containerTagInScope = info);
-      null !== oldInfo ||
-      ("#document" !== tag && "html" !== tag && "body" !== tag)
-        ? !0 === ancestorInfo.implicitRootScope &&
-          (ancestorInfo.implicitRootScope = !1)
-        : (ancestorInfo.implicitRootScope = !0);
-      return ancestorInfo;
-    }
-    function isTagValidWithParent(tag, parentTag, implicitRootScope) {
+        ? (oldInfo.containerTagInScope = null)
+        : oldInfo.containerTagInScope || (oldInfo.containerTagInScope = info);
+      return oldInfo;
+    }
+    function isTagValidWithParent(tag, parentTag) {
       switch (parentTag) {
         case "select":
           return (
@@ -2441,12 +2434,11 @@
             "template" === tag
           );
         case "html":
-          if (implicitRootScope) break;
           return "head" === tag || "body" === tag || "frameset" === tag;
         case "frameset":
           return "frame" === tag;
         case "#document":
-          if (!implicitRootScope) return "html" === tag;
+          return "html" === tag;
       }
       switch (tag) {
         case "h1":
@@ -2466,11 +2458,14 @@
         case "rp":
         case "rt":
           return -1 === impliedEndTags.indexOf(parentTag);
+        case "body":
         case "caption":
         case "col":
         case "colgroup":
         case "frameset":
         case "frame":
+        case "head":
+        case "html":
         case "tbody":
         case "td":
         case "tfoot":
@@ -2478,19 +2473,6 @@
         case "thead":
         case "tr":
           return null == parentTag;
-        case "head":
-          return implicitRootScope || null === parentTag;
-        case "html":
-          return (
-            (implicitRootScope && "#document" === parentTag) ||
-            null === parentTag
-          );
-        case "body":
-          return (
-            (implicitRootScope &&
-              ("#document" === parentTag || "html" === parentTag)) ||
-            null === parentTag
-          );
       }
       return !0;
     }
@@ -2565,8 +2547,7 @@
       var parentInfo = ancestorInfo.current;
       ancestorInfo = (parentInfo = isTagValidWithParent(
         childTag,
-        parentInfo && parentInfo.tag,
-        ancestorInfo.implicitRootScope
+        parentInfo && parentInfo.tag
       )
         ? null
         : parentInfo)
@@ -2620,33 +2601,32 @@
           }));
       return !1;
     }
-    function validateTextNesting(childText, parentTag, implicitRootScope) {
-      if (implicitRootScope || isTagValidWithParent("#text", parentTag, !1))
-        return !0;
-      implicitRootScope = "#text|" + parentTag;
-      if (didWarn[implicitRootScope]) return !1;
-      didWarn[implicitRootScope] = !0;
-      var ancestor = (implicitRootScope = current)
-        ? findAncestor(implicitRootScope, parentTag)
+    function validateTextNesting(childText, parentTag) {
+      if (isTagValidWithParent("#text", parentTag)) return !0;
+      var warnKey = "#text|" + parentTag;
+      if (didWarn[warnKey]) return !1;
+      didWarn[warnKey] = !0;
+      var ancestor = (warnKey = current)
+        ? findAncestor(warnKey, parentTag)
         : null;
-      implicitRootScope =
-        null !== implicitRootScope && null !== ancestor
+      warnKey =
+        null !== warnKey && null !== ancestor
           ? describeAncestors(
               ancestor,
-              implicitRootScope,
-              6 !== implicitRootScope.tag ? { children: null } : null
+              warnKey,
+              6 !== warnKey.tag ? { children: null } : null
             )
           : "";
       /\S/.test(childText)
         ? console.error(
             "In HTML, text nodes cannot be a child of <%s>.\nThis will cause a hydration error.%s",
             parentTag,
-            implicitRootScope
+            warnKey
           )
         : console.error(
             "In HTML, whitespace text nodes cannot be a child of <%s>. Make sure you don't have any extra whitespace between tags on each line of your source code.\nThis will cause a hydration error.%s",
             parentTag,
-            implicitRootScope
+            warnKey
           );
       return !1;
     }
@@ -3814,11 +3794,6 @@
       enqueueUpdate$1(fiber, null, null, lane);
       return getRootForUpdatedFiber(fiber);
     }
-    function enqueueGestureRender(fiber) {
-      fiber = markUpdateLaneFromFiberToRoot(fiber, null, 64);
-      null !== fiber && markRootUpdated$1(fiber, 64);
-      return fiber;
-    }
     function markUpdateLaneFromFiberToRoot(sourceFiber, update, lane) {
       sourceFiber.lanes |= lane;
       var alternate = sourceFiber.alternate;
@@ -3834,19 +3809,17 @@
               (isHidden = !0)),
           (sourceFiber = parent),
           (parent = parent.return);
-      return 3 === sourceFiber.tag
-        ? ((parent = sourceFiber.stateNode),
-          isHidden &&
-            null !== update &&
-            ((isHidden = 31 - clz32(lane)),
-            (sourceFiber = parent.hiddenUpdates),
-            (alternate = sourceFiber[isHidden]),
-            null === alternate
-              ? (sourceFiber[isHidden] = [update])
-              : alternate.push(update),
-            (update.lane = lane | 536870912)),
-          parent)
-        : null;
+      isHidden &&
+        null !== update &&
+        3 === sourceFiber.tag &&
+        ((parent = sourceFiber.stateNode),
+        (isHidden = 31 - clz32(lane)),
+        (parent = parent.hiddenUpdates),
+        (sourceFiber = parent[isHidden]),
+        null === sourceFiber
+          ? (parent[isHidden] = [update])
+          : sourceFiber.push(update),
+        (update.lane = lane | 536870912));
     }
     function getRootForUpdatedFiber(sourceFiber) {
       if (nestedUpdateCount > NESTED_UPDATE_LIMIT)
@@ -4012,7 +3985,7 @@
           (blockingEventTime = lane),
           (blockingEventType = JSCompiler_temp));
       else if (
-        0 !== (lane & 4194048) &&
+        0 !== (lane & 4194176) &&
         0 > transitionUpdateTime &&
         ((transitionUpdateTime = now()), 0 > transitionStartTime)
       ) {
@@ -4105,9 +4078,9 @@
     }
     function setCurrentTrackFromLanes(lanes) {
       reusableLaneDevToolDetails.track =
-        lanes & 127
+        lanes & 63
           ? "Blocking"
-          : lanes & 4194176
+          : lanes & 4194240
             ? "Transition"
             : lanes & 62914560
               ? "Suspense"
@@ -4224,13 +4197,13 @@
     function logRenderPhase(startTime, endTime, lanes) {
       supportsUserTiming &&
         ((reusableLaneDevToolDetails.color =
-          (lanes & 738197653) === lanes ? "tertiary-dark" : "primary-dark"),
+          (lanes & 738197589) === lanes ? "tertiary-dark" : "primary-dark"),
         (reusableLaneOptions.start = startTime),
         (reusableLaneOptions.end = endTime),
         performance.measure(
           (lanes & 536870912) === lanes
             ? "Prepared"
-            : (lanes & 201326741) === lanes
+            : (lanes & 201326677) === lanes
               ? "Hydrated"
               : "Render",
           reusableLaneOptions
@@ -4239,7 +4212,7 @@
     function logSuspendedRenderPhase(startTime, endTime, lanes) {
       supportsUserTiming &&
         ((reusableLaneDevToolDetails.color =
-          (lanes & 738197653) === lanes ? "tertiary-dark" : "primary-dark"),
+          (lanes & 738197589) === lanes ? "tertiary-dark" : "primary-dark"),
         (reusableLaneOptions.start = startTime),
         (reusableLaneOptions.end = endTime),
         performance.measure("Prewarm", reusableLaneOptions));
@@ -4247,7 +4220,7 @@
     function logSuspendedWithDelayPhase(startTime, endTime, lanes) {
       supportsUserTiming &&
         ((reusableLaneDevToolDetails.color =
-          (lanes & 738197653) === lanes ? "tertiary-dark" : "primary-dark"),
+          (lanes & 738197589) === lanes ? "tertiary-dark" : "primary-dark"),
         (reusableLaneOptions.start = startTime),
         (reusableLaneOptions.end = endTime),
         performance.measure("Suspended", reusableLaneOptions));
@@ -4667,7 +4640,7 @@
     }
     function entangleTransitions(root, fiber, lane) {
       fiber = fiber.updateQueue;
-      if (null !== fiber && ((fiber = fiber.shared), 0 !== (lane & 4194048))) {
+      if (null !== fiber && ((fiber = fiber.shared), 0 !== (lane & 4194176))) {
         var queueLanes = fiber.lanes;
         queueLanes &= root.pendingLanes;
         lane |= queueLanes;
@@ -5262,28 +5235,6 @@
         ? null
         : { parent: CacheContext._currentValue, pool: cacheFromPool };
     }
-    function scheduleGesture(root, provider) {
-      for (var prev = root.gestures; null !== prev; ) {
-        if (prev.provider === provider) return prev.count++, prev;
-        var next = prev.next;
-        if (null === next) break;
-        prev = next;
-      }
-      provider = { provider: provider, count: 1, prev: prev, next: null };
-      null === prev ? (root.gestures = provider) : (prev.next = provider);
-      ensureRootIsScheduled(root);
-      return provider;
-    }
-    function deleteScheduledGesture(root, gesture) {
-      null === gesture.prev
-        ? root.gestures === gesture &&
-          ((root.gestures = gesture.next),
-          null === root.gestures && (root.pendingLanes &= -65))
-        : ((gesture.prev.next = gesture.next),
-          null !== gesture.next && (gesture.next.prev = gesture.prev),
-          (gesture.prev = null),
-          (gesture.next = null));
-    }
     function mountHookTypesDev() {
       var hookName = currentHookNameInDev;
       null === hookTypesDev
@@ -5878,7 +5829,7 @@
           throw Error(
             "Expected a work-in-progress root. This is a bug in React. Please file an issue."
           );
-        0 !== (workInProgressRootRenderLanes & 124) ||
+        0 !== (workInProgressRootRenderLanes & 60) ||
           pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
       }
       hook.memoizedState = nextSnapshot;
@@ -5961,7 +5912,7 @@
             "Expected a work-in-progress root. This is a bug in React. Please file an issue."
           );
         isHydrating$jscomp$0 ||
-          0 !== (renderLanes & 124) ||
+          0 !== (renderLanes & 60) ||
           pushStoreConsistencyCheck(fiber, getSnapshot, getServerSnapshot);
       }
       return getServerSnapshot;
@@ -6159,7 +6110,7 @@
           ),
           node.isTransition ||
             console.error(
-              "An async function with useActionState was called outside of a transition. This is likely not what you intended (for example, isPending will not update correctly). Either call the returned function inside startTransition, or pass it to an `action` or `formAction` prop."
+              "An async function was passed to useActionState, but it was dispatched outside of an action context. This is likely not what you intended. Either pass the dispatch function to an `action` prop, or dispatch manually inside `startTransition`"
             ))
         : onActionSuccess(actionQueue, node, returnValue);
     }
@@ -6340,14 +6291,8 @@
       currentStateHook.memoizedState = action;
       return [stateHook, dispatch, !1];
     }
-    function pushSimpleEffect(tag, inst, create, createDeps) {
-      tag = {
-        tag: tag,
-        create: create,
-        deps: createDeps,
-        inst: inst,
-        next: null
-      };
+    function pushSimpleEffect(tag, inst, create, deps) {
+      tag = { tag: tag, create: create, deps: deps, inst: inst, next: null };
       inst = currentlyRenderingFiber.updateQueue;
       null === inst &&
         ((inst = createFunctionComponentUpdateQueue()),
@@ -6355,9 +6300,9 @@
       create = inst.lastEffect;
       null === create
         ? (inst.lastEffect = tag.next = tag)
-        : ((createDeps = create.next),
+        : ((deps = create.next),
           (create.next = tag),
-          (tag.next = createDeps),
+          (tag.next = deps),
           (inst.lastEffect = tag));
       return tag;
     }
@@ -6369,15 +6314,15 @@
       initialValue = { current: initialValue };
       return (hook.memoizedState = initialValue);
     }
-    function mountEffectImpl(fiberFlags, hookFlags, create, createDeps) {
+    function mountEffectImpl(fiberFlags, hookFlags, create, deps) {
       var hook = mountWorkInProgressHook();
-      createDeps = void 0 === createDeps ? null : createDeps;
+      deps = void 0 === deps ? null : deps;
       currentlyRenderingFiber.flags |= fiberFlags;
       hook.memoizedState = pushSimpleEffect(
         HasEffect | hookFlags,
         createEffectInstance(),
         create,
-        createDeps
+        deps
       );
     }
     function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
@@ -6396,11 +6341,11 @@
             deps
           )));
     }
-    function mountEffect(create, createDeps) {
+    function mountEffect(create, deps) {
       (currentlyRenderingFiber.mode & StrictEffectsMode) !== NoMode &&
       (currentlyRenderingFiber.mode & NoStrictPassiveEffectsMode) === NoMode
-        ? mountEffectImpl(276826112, Passive, create, createDeps)
-        : mountEffectImpl(8390656, Passive, create, createDeps);
+        ? mountEffectImpl(276826112, Passive, create, deps)
+        : mountEffectImpl(8390656, Passive, create, deps);
     }
     function useEffectEventImpl(payload) {
       currentlyRenderingFiber.flags |= 4;
@@ -6935,7 +6880,7 @@
       queue.pending = update;
     }
     function entangleTransitionUpdate(root, queue, lane) {
-      if (0 !== (lane & 4194048)) {
+      if (0 !== (lane & 4194176)) {
         var queueLanes = queue.lanes;
         queueLanes &= root.pendingLanes;
         lane |= queueLanes;
@@ -6943,61 +6888,6 @@
         markRootEntangled(root, lane);
       }
     }
-    function startGesture(fiber, queue, gestureProvider) {
-      var root = enqueueGestureRender(fiber);
-      if (null === root) return function () {};
-      var update = {
-        gesture: scheduleGesture(root, gestureProvider),
-        prev: null,
-        next: queue.pending
-      };
-      null !== queue.pending && (queue.pending.prev = update);
-      queue.pending = update;
-      return function () {
-        if (null === update.prev)
-          if (queue.pending === update) queue.pending = update.next;
-          else return;
-        else
-          (update.prev.next = update.next),
-            null !== update.next && (update.next.prev = update.prev),
-            (update.prev = null),
-            (update.next = null);
-        var gesture = update.gesture;
-        gesture.count--;
-        0 === gesture.count && deleteScheduledGesture(root, gesture);
-      };
-    }
-    function mountSwipeTransition(previous, current) {
-      previous = { pending: null, dispatch: null };
-      var startGestureOnHook = (previous.dispatch = startGesture.bind(
-        null,
-        currentlyRenderingFiber,
-        previous
-      ));
-      mountWorkInProgressHook().queue = previous;
-      return [current, startGestureOnHook];
-    }
-    function updateSwipeTransition(previous, current) {
-      var queue = updateWorkInProgressHook().queue,
-        startGestureOnHook = queue.dispatch;
-      if (64 === workInProgressRootRenderLanes) {
-        var root = workInProgressRoot;
-        if (null === root)
-          throw Error(
-            "Expected a work-in-progress root. This is a bug in React. Please file an issue."
-          );
-        root = root.gestures;
-        for (var update = queue.pending; null !== update; ) {
-          if (root === update.gesture) {
-            current = previous;
-            break;
-          }
-          update = update.next;
-        }
-      }
-      null !== queue.pending && (currentlyRenderingFiber.lanes |= 64);
-      return [current, startGestureOnHook];
-    }
     function pushDebugInfo(debugInfo) {
       var previousDebugInfo = currentDebugInfo;
       null != debugInfo &&
@@ -8872,7 +8762,7 @@
       return workInProgress.child;
     }
     function updateClassComponent(
-      current,
+      current$jscomp$0,
       workInProgress,
       Component,
       nextProps,
@@ -9188,7 +9078,7 @@
         (workInProgress.mode & StrictEffectsMode) !== NoMode &&
           (workInProgress.flags |= 134217728);
         _instance = !0;
-      } else if (null === current) {
+      } else if (null === current$jscomp$0) {
         _instance = workInProgress.stateNode;
         var unresolvedOldProps = workInProgress.memoizedProps;
         lane = resolveClassComponentProps(Component, unresolvedOldProps);
@@ -9268,7 +9158,7 @@
             (_instance = !1));
       } else {
         _instance = workInProgress.stateNode;
-        cloneUpdateQueue(current, workInProgress);
+        cloneUpdateQueue(current$jscomp$0, workInProgress);
         state = workInProgress.memoizedProps;
         foundWillUpdateName = resolveClassComponentProps(Component, state);
         _instance.props = foundWillUpdateName;
@@ -9301,9 +9191,9 @@
         state !== newApiName ||
         oldState !== newState ||
         hasForceUpdate ||
-        (null !== current &&
-          null !== current.dependencies &&
-          checkIfContextChanged(current.dependencies))
+        (null !== current$jscomp$0 &&
+          null !== current$jscomp$0.dependencies &&
+          checkIfContextChanged(current$jscomp$0.dependencies))
           ? ("function" === typeof unresolvedOldProps &&
               (applyDerivedStateFromProps(
                 workInProgress,
@@ -9323,9 +9213,9 @@
                 newState,
                 lane
               ) ||
-              (null !== current &&
-                null !== current.dependencies &&
-                checkIfContextChanged(current.dependencies)))
+              (null !== current$jscomp$0 &&
+                null !== current$jscomp$0.dependencies &&
+                checkIfContextChanged(current$jscomp$0.dependencies)))
               ? (oldContext ||
                   ("function" !== typeof _instance.UNSAFE_componentWillUpdate &&
                     "function" !== typeof _instance.componentWillUpdate) ||
@@ -9342,12 +9232,12 @@
                 "function" === typeof _instance.getSnapshotBeforeUpdate &&
                   (workInProgress.flags |= 1024))
               : ("function" !== typeof _instance.componentDidUpdate ||
-                  (state === current.memoizedProps &&
-                    oldState === current.memoizedState) ||
+                  (state === current$jscomp$0.memoizedProps &&
+                    oldState === current$jscomp$0.memoizedState) ||
                   (workInProgress.flags |= 4),
                 "function" !== typeof _instance.getSnapshotBeforeUpdate ||
-                  (state === current.memoizedProps &&
-                    oldState === current.memoizedState) ||
+                  (state === current$jscomp$0.memoizedProps &&
+                    oldState === current$jscomp$0.memoizedState) ||
                   (workInProgress.flags |= 1024),
                 (workInProgress.memoizedProps = nextProps),
                 (workInProgress.memoizedState = newState)),
@@ -9356,21 +9246,24 @@
             (_instance.context = lane),
             (_instance = foundWillUpdateName))
           : ("function" !== typeof _instance.componentDidUpdate ||
-              (state === current.memoizedProps &&
-                oldState === current.memoizedState) ||
+              (state === current$jscomp$0.memoizedProps &&
+                oldState === current$jscomp$0.memoizedState) ||
               (workInProgress.flags |= 4),
             "function" !== typeof _instance.getSnapshotBeforeUpdate ||
-              (state === current.memoizedProps &&
-                oldState === current.memoizedState) ||
+              (state === current$jscomp$0.memoizedProps &&
+                oldState === current$jscomp$0.memoizedState) ||
               (workInProgress.flags |= 1024),
             (_instance = !1));
       }
       lane = _instance;
-      markRef(current, workInProgress);
+      markRef(current$jscomp$0, workInProgress);
       state = 0 !== (workInProgress.flags & 128);
       if (lane || state) {
         lane = workInProgress.stateNode;
-        setCurrentFiber(workInProgress);
+        ReactSharedInternals.getCurrentStack =
+          null === workInProgress ? null : getCurrentFiberStackInDev;
+        isRendering = !1;
+        current = workInProgress;
         if (state && "function" !== typeof Component.getDerivedStateFromError)
           (Component = null), (profilerStartTime = -1);
         else if (
@@ -9385,10 +9278,10 @@
           }
         }
         workInProgress.flags |= 1;
-        null !== current && state
+        null !== current$jscomp$0 && state
           ? ((workInProgress.child = reconcileChildFibers(
               workInProgress,
-              current.child,
+              current$jscomp$0.child,
               null,
               renderLanes
             )),
@@ -9398,12 +9291,17 @@
               Component,
               renderLanes
             )))
-          : reconcileChildren(current, workInProgress, Component, renderLanes);
+          : reconcileChildren(
+              current$jscomp$0,
+              workInProgress,
+              Component,
+              renderLanes
+            );
         workInProgress.memoizedState = lane.state;
-        current = workInProgress.child;
+        current$jscomp$0 = workInProgress.child;
       } else
-        current = bailoutOnAlreadyFinishedWork(
-          current,
+        current$jscomp$0 = bailoutOnAlreadyFinishedWork(
+          current$jscomp$0,
           workInProgress,
           renderLanes
         );
@@ -9416,7 +9314,7 @@
             getComponentNameFromFiber(workInProgress) || "a component"
           ),
         (didWarnAboutReassigningProps = !0));
-      return current;
+      return current$jscomp$0;
     }
     function mountHostRootWithoutHydrating(
       current,
@@ -9468,33 +9366,33 @@
       return current;
     }
     function updateSuspenseComponent(current, workInProgress, renderLanes) {
-      var JSCompiler_object_inline_componentStack_2615;
-      var JSCompiler_object_inline_stack_2614 = workInProgress.pendingProps;
+      var JSCompiler_object_inline_componentStack_2586;
+      var JSCompiler_object_inline_stack_2585 = workInProgress.pendingProps;
       shouldSuspendImpl(workInProgress) && (workInProgress.flags |= 128);
-      var JSCompiler_object_inline_message_2612 = !1;
+      var JSCompiler_object_inline_message_2583 = !1;
       var didSuspend = 0 !== (workInProgress.flags & 128);
-      (JSCompiler_object_inline_componentStack_2615 = didSuspend) ||
-        (JSCompiler_object_inline_componentStack_2615 =
+      (JSCompiler_object_inline_componentStack_2586 = didSuspend) ||
+        (JSCompiler_object_inline_componentStack_2586 =
           null !== current && null === current.memoizedState
             ? !1
             : 0 !== (suspenseStackCursor.current & ForceSuspenseFallback));
-      JSCompiler_object_inline_componentStack_2615 &&
-        ((JSCompiler_object_inline_message_2612 = !0),
+      JSCompiler_object_inline_componentStack_2586 &&
+        ((JSCompiler_object_inline_message_2583 = !0),
         (workInProgress.flags &= -129));
-      JSCompiler_object_inline_componentStack_2615 =
+      JSCompiler_object_inline_componentStack_2586 =
         0 !== (workInProgress.flags & 32);
       workInProgress.flags &= -33;
       if (null === current) {
         if (isHydrating) {
-          JSCompiler_object_inline_message_2612
+          JSCompiler_object_inline_message_2583
             ? pushPrimaryTreeSuspenseHandler(workInProgress)
             : reuseSuspenseHandlerOnStack(workInProgress);
           if (isHydrating) {
-            var JSCompiler_object_inline_digest_2613 = nextHydratableInstance;
+            var JSCompiler_object_inline_digest_2584 = nextHydratableInstance;
             var JSCompiler_temp;
-            if (!(JSCompiler_temp = !JSCompiler_object_inline_digest_2613)) {
+            if (!(JSCompiler_temp = !JSCompiler_object_inline_digest_2584)) {
               c: {
-                var instance = JSCompiler_object_inline_digest_2613;
+                var instance = JSCompiler_object_inline_digest_2584;
                 for (
                   JSCompiler_temp = rootOrSingletonContext;
                   8 !== instance.nodeType;
@@ -9536,87 +9434,87 @@
             JSCompiler_temp &&
               (warnNonHydratedInstance(
                 workInProgress,
-                JSCompiler_object_inline_digest_2613
+                JSCompiler_object_inline_digest_2584
               ),
               throwOnHydrationMismatch(workInProgress));
           }
-          JSCompiler_object_inline_digest_2613 = workInProgress.memoizedState;
+          JSCompiler_object_inline_digest_2584 = workInProgress.memoizedState;
           if (
-            null !== JSCompiler_object_inline_digest_2613 &&
-            ((JSCompiler_object_inline_digest_2613 =
-              JSCompiler_object_inline_digest_2613.dehydrated),
-            null !== JSCompiler_object_inline_digest_2613)
+            null !== JSCompiler_object_inline_digest_2584 &&
+            ((JSCompiler_object_inline_digest_2584 =
+              JSCompiler_object_inline_digest_2584.dehydrated),
+            null !== JSCompiler_object_inline_digest_2584)
           )
             return (
-              isSuspenseInstanceFallback(JSCompiler_object_inline_digest_2613)
+              isSuspenseInstanceFallback(JSCompiler_object_inline_digest_2584)
                 ? (workInProgress.lanes = 32)
                 : (workInProgress.lanes = 536870912),
               null
             );
           popSuspenseHandler(workInProgress);
         }
-        JSCompiler_object_inline_digest_2613 =
-          JSCompiler_object_inline_stack_2614.children;
-        JSCompiler_temp = JSCompiler_object_inline_stack_2614.fallback;
-        if (JSCompiler_object_inline_message_2612)
+        JSCompiler_object_inline_digest_2584 =
+          JSCompiler_object_inline_stack_2585.children;
+        JSCompiler_temp = JSCompiler_object_inline_stack_2585.fallback;
+        if (JSCompiler_object_inline_message_2583)
           return (
             reuseSuspenseHandlerOnStack(workInProgress),
-            (JSCompiler_object_inline_stack_2614 =
+            (JSCompiler_object_inline_stack_2585 =
               mountSuspenseFallbackChildren(
                 workInProgress,
-                JSCompiler_object_inline_digest_2613,
+                JSCompiler_object_inline_digest_2584,
                 JSCompiler_temp,
                 renderLanes
               )),
-            (JSCompiler_object_inline_message_2612 = workInProgress.child),
-            (JSCompiler_object_inline_message_2612.memoizedState =
+            (JSCompiler_object_inline_message_2583 = workInProgress.child),
+            (JSCompiler_object_inline_message_2583.memoizedState =
               mountSuspenseOffscreenState(renderLanes)),
-            (JSCompiler_object_inline_message_2612.childLanes =
+            (JSCompiler_object_inline_message_2583.childLanes =
               getRemainingWorkInPrimaryTree(
                 current,
-                JSCompiler_object_inline_componentStack_2615,
+                JSCompiler_object_inline_componentStack_2586,
                 renderLanes
               )),
             (workInProgress.memoizedState = SUSPENDED_MARKER),
-            JSCompiler_object_inline_stack_2614
+            JSCompiler_object_inline_stack_2585
           );
         if (
           "number" ===
-          typeof JSCompiler_object_inline_stack_2614.unstable_expectedLoadTime
+          typeof JSCompiler_object_inline_stack_2585.unstable_expectedLoadTime
         )
           return (
             reuseSuspenseHandlerOnStack(workInProgress),
-            (JSCompiler_object_inline_stack_2614 =
+            (JSCompiler_object_inline_stack_2585 =
               mountSuspenseFallbackChildren(
                 workInProgress,
-                JSCompiler_object_inline_digest_2613,
+                JSCompiler_object_inline_digest_2584,
                 JSCompiler_temp,
                 renderLanes
               )),
-            (JSCompiler_object_inline_message_2612 = workInProgress.child),
-            (JSCompiler_object_inline_message_2612.memoizedState =
+            (JSCompiler_object_inline_message_2583 = workInProgress.child),
+            (JSCompiler_object_inline_message_2583.memoizedState =
               mountSuspenseOffscreenState(renderLanes)),
-            (JSCompiler_object_inline_message_2612.childLanes =
+            (JSCompiler_object_inline_message_2583.childLanes =
               getRemainingWorkInPrimaryTree(
                 current,
-                JSCompiler_object_inline_componentStack_2615,
+                JSCompiler_object_inline_componentStack_2586,
                 renderLanes
               )),
             (workInProgress.memoizedState = SUSPENDED_MARKER),
             (workInProgress.lanes = 4194304),
-            JSCompiler_object_inline_stack_2614
+            JSCompiler_object_inline_stack_2585
           );
         pushPrimaryTreeSuspenseHandler(workInProgress);
         return mountSuspensePrimaryChildren(
           workInProgress,
-          JSCompiler_object_inline_digest_2613
+          JSCompiler_object_inline_digest_2584
         );
       }
       var prevState = current.memoizedState;
       if (
         null !== prevState &&
-        ((JSCompiler_object_inline_digest_2613 = prevState.dehydrated),
-        null !== JSCompiler_object_inline_digest_2613)
+        ((JSCompiler_object_inline_digest_2584 = prevState.dehydrated),
+        null !== JSCompiler_object_inline_digest_2584)
       ) {
         if (didSuspend)
           workInProgress.flags & 256
@@ -9633,94 +9531,94 @@
                 (workInProgress.flags |= 128),
                 (workInProgress = null))
               : (reuseSuspenseHandlerOnStack(workInProgress),
-                (JSCompiler_object_inline_message_2612 =
-                  JSCompiler_object_inline_stack_2614.fallback),
-                (JSCompiler_object_inline_digest_2613 = workInProgress.mode),
-                (JSCompiler_object_inline_stack_2614 =
+                (JSCompiler_object_inline_message_2583 =
+                  JSCompiler_object_inline_stack_2585.fallback),
+                (JSCompiler_object_inline_digest_2584 = workInProgress.mode),
+                (JSCompiler_object_inline_stack_2585 =
                   mountWorkInProgressOffscreenFiber(
                     {
                       mode: "visible",
-                      children: JSCompiler_object_inline_stack_2614.children
+                      children: JSCompiler_object_inline_stack_2585.children
                     },
-                    JSCompiler_object_inline_digest_2613
+                    JSCompiler_object_inline_digest_2584
                   )),
-                (JSCompiler_object_inline_message_2612 =
+                (JSCompiler_object_inline_message_2583 =
                   createFiberFromFragment(
-                    JSCompiler_object_inline_message_2612,
-                    JSCompiler_object_inline_digest_2613,
+                    JSCompiler_object_inline_message_2583,
+                    JSCompiler_object_inline_digest_2584,
                     renderLanes,
                     null
                   )),
-                (JSCompiler_object_inline_message_2612.flags |= 2),
-                (JSCompiler_object_inline_stack_2614.return = workInProgress),
-                (JSCompiler_object_inline_message_2612.return = workInProgress),
-                (JSCompiler_object_inline_stack_2614.sibling =
-                  JSCompiler_object_inline_message_2612),
-                (workInProgress.child = JSCompiler_object_inline_stack_2614),
+                (JSCompiler_object_inline_message_2583.flags |= 2),
+                (JSCompiler_object_inline_stack_2585.return = workInProgress),
+                (JSCompiler_object_inline_message_2583.return = workInProgress),
+                (JSCompiler_object_inline_stack_2585.sibling =
+                  JSCompiler_object_inline_message_2583),
+                (workInProgress.child = JSCompiler_object_inline_stack_2585),
                 reconcileChildFibers(
                   workInProgress,
                   current.child,
                   null,
                   renderLanes
                 ),
-                (JSCompiler_object_inline_stack_2614 = workInProgress.child),
-                (JSCompiler_object_inline_stack_2614.memoizedState =
+                (JSCompiler_object_inline_stack_2585 = workInProgress.child),
+                (JSCompiler_object_inline_stack_2585.memoizedState =
                   mountSuspenseOffscreenState(renderLanes)),
-                (JSCompiler_object_inline_stack_2614.childLanes =
+                (JSCompiler_object_inline_stack_2585.childLanes =
                   getRemainingWorkInPrimaryTree(
                     current,
-                    JSCompiler_object_inline_componentStack_2615,
+                    JSCompiler_object_inline_componentStack_2586,
                     renderLanes
                   )),
                 (workInProgress.memoizedState = SUSPENDED_MARKER),
-                (workInProgress = JSCompiler_object_inline_message_2612));
+                (workInProgress = JSCompiler_object_inline_message_2583));
         else if (
           (pushPrimaryTreeSuspenseHandler(workInProgress),
           isHydrating &&
             console.error(
               "We should not be hydrating here. This is a bug in React. Please file a bug."
             ),
-          isSuspenseInstanceFallback(JSCompiler_object_inline_digest_2613))
+          isSuspenseInstanceFallback(JSCompiler_object_inline_digest_2584))
         ) {
-          JSCompiler_object_inline_componentStack_2615 =
-            JSCompiler_object_inline_digest_2613.nextSibling &&
-            JSCompiler_object_inline_digest_2613.nextSibling.dataset;
-          if (JSCompiler_object_inline_componentStack_2615) {
-            JSCompiler_temp = JSCompiler_object_inline_componentStack_2615.dgst;
-            var message = JSCompiler_object_inline_componentStack_2615.msg;
-            instance = JSCompiler_object_inline_componentStack_2615.stck;
+          JSCompiler_object_inline_componentStack_2586 =
+            JSCompiler_object_inline_digest_2584.nextSibling &&
+            JSCompiler_object_inline_digest_2584.nextSibling.dataset;
+          if (JSCompiler_object_inline_componentStack_2586) {
+            JSCompiler_temp = JSCompiler_object_inline_componentStack_2586.dgst;
+            var message = JSCompiler_object_inline_componentStack_2586.msg;
+            instance = JSCompiler_object_inline_componentStack_2586.stck;
             var componentStack =
-              JSCompiler_object_inline_componentStack_2615.cstck;
+              JSCompiler_object_inline_componentStack_2586.cstck;
           }
-          JSCompiler_object_inline_message_2612 = message;
-          JSCompiler_object_inline_digest_2613 = JSCompiler_temp;
-          JSCompiler_object_inline_stack_2614 = instance;
-          JSCompiler_temp = JSCompiler_object_inline_componentStack_2615 =
+          JSCompiler_object_inline_message_2583 = message;
+          JSCompiler_object_inline_digest_2584 = JSCompiler_temp;
+          JSCompiler_object_inline_stack_2585 = instance;
+          JSCompiler_temp = JSCompiler_object_inline_componentStack_2586 =
             componentStack;
-          "POSTPONE" !== JSCompiler_object_inline_digest_2613 &&
-            ((JSCompiler_object_inline_componentStack_2615 =
-              JSCompiler_object_inline_message_2612
-                ? Error(JSCompiler_object_inline_message_2612)
+          "POSTPONE" !== JSCompiler_object_inline_digest_2584 &&
+            ((JSCompiler_object_inline_componentStack_2586 =
+              JSCompiler_object_inline_message_2583
+                ? Error(JSCompiler_object_inline_message_2583)
                 : Error(
                     "The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering."
                   )),
-            (JSCompiler_object_inline_componentStack_2615.stack =
-              JSCompiler_object_inline_stack_2614 || ""),
-            (JSCompiler_object_inline_componentStack_2615.digest =
-              JSCompiler_object_inline_digest_2613),
-            (JSCompiler_object_inline_stack_2614 =
+            (JSCompiler_object_inline_componentStack_2586.stack =
+              JSCompiler_object_inline_stack_2585 || ""),
+            (JSCompiler_object_inline_componentStack_2586.digest =
+              JSCompiler_object_inline_digest_2584),
+            (JSCompiler_object_inline_stack_2585 =
               void 0 === JSCompiler_temp ? null : JSCompiler_temp),
-            (JSCompiler_object_inline_message_2612 = {
-              value: JSCompiler_object_inline_componentStack_2615,
+            (JSCompiler_object_inline_message_2583 = {
+              value: JSCompiler_object_inline_componentStack_2586,
               source: null,
-              stack: JSCompiler_object_inline_stack_2614
+              stack: JSCompiler_object_inline_stack_2585
             }),
-            "string" === typeof JSCompiler_object_inline_stack_2614 &&
+            "string" === typeof JSCompiler_object_inline_stack_2585 &&
               CapturedStacks.set(
-                JSCompiler_object_inline_componentStack_2615,
-                JSCompiler_object_inline_message_2612
+                JSCompiler_object_inline_componentStack_2586,
+                JSCompiler_object_inline_message_2583
               ),
-            queueHydrationError(JSCompiler_object_inline_message_2612));
+            queueHydrationError(JSCompiler_object_inline_message_2583));
           workInProgress = retrySuspenseComponentWithoutHydrating(
             current,
             workInProgress,
@@ -9734,44 +9632,44 @@
               renderLanes,
               !1
             ),
-          (JSCompiler_object_inline_componentStack_2615 =
+          (JSCompiler_object_inline_componentStack_2586 =
             0 !== (renderLanes & current.childLanes)),
-          didReceiveUpdate || JSCompiler_object_inline_componentStack_2615)
+          didReceiveUpdate || JSCompiler_object_inline_componentStack_2586)
         ) {
-          JSCompiler_object_inline_componentStack_2615 = workInProgressRoot;
+          JSCompiler_object_inline_componentStack_2586 = workInProgressRoot;
           if (
-            null !== JSCompiler_object_inline_componentStack_2615 &&
-            ((JSCompiler_object_inline_stack_2614 = renderLanes & -renderLanes),
-            (JSCompiler_object_inline_stack_2614 =
-              0 !== (JSCompiler_object_inline_stack_2614 & 42)
+            null !== JSCompiler_object_inline_componentStack_2586 &&
+            ((JSCompiler_object_inline_stack_2585 = renderLanes & -renderLanes),
+            (JSCompiler_object_inline_stack_2585 =
+              0 !== (JSCompiler_object_inline_stack_2585 & 42)
                 ? 1
                 : getBumpedLaneForHydrationByLane(
-                    JSCompiler_object_inline_stack_2614
+                    JSCompiler_object_inline_stack_2585
                   )),
-            (JSCompiler_object_inline_stack_2614 =
+            (JSCompiler_object_inline_stack_2585 =
               0 !==
-              (JSCompiler_object_inline_stack_2614 &
-                (JSCompiler_object_inline_componentStack_2615.suspendedLanes |
+              (JSCompiler_object_inline_stack_2585 &
+                (JSCompiler_object_inline_componentStack_2586.suspendedLanes |
                   renderLanes))
                 ? 0
-                : JSCompiler_object_inline_stack_2614),
-            0 !== JSCompiler_object_inline_stack_2614 &&
-              JSCompiler_object_inline_stack_2614 !== prevState.retryLane)
+                : JSCompiler_object_inline_stack_2585),
+            0 !== JSCompiler_object_inline_stack_2585 &&
+              JSCompiler_object_inline_stack_2585 !== prevState.retryLane)
           )
             throw (
-              ((prevState.retryLane = JSCompiler_object_inline_stack_2614),
+              ((prevState.retryLane = JSCompiler_object_inline_stack_2585),
               enqueueConcurrentRenderForLane(
                 current,
-                JSCompiler_object_inline_stack_2614
+                JSCompiler_object_inline_stack_2585
               ),
               scheduleUpdateOnFiber(
-                JSCompiler_object_inline_componentStack_2615,
+                JSCompiler_object_inline_componentStack_2586,
                 current,
-                JSCompiler_object_inline_stack_2614
+                JSCompiler_object_inline_stack_2585
               ),
               SelectiveHydrationException)
             );
-          JSCompiler_object_inline_digest_2613.data ===
+          JSCompiler_object_inline_digest_2584.data ===
             SUSPENSE_PENDING_START_DATA || renderDidSuspendDelayIfPossible();
           workInProgress = retrySuspenseComponentWithoutHydrating(
             current,
@@ -9779,14 +9677,14 @@
             renderLanes
           );
         } else
-          JSCompiler_object_inline_digest_2613.data ===
+          JSCompiler_object_inline_digest_2584.data ===
           SUSPENSE_PENDING_START_DATA
             ? ((workInProgress.flags |= 192),
               (workInProgress.child = current.child),
               (workInProgress = null))
             : ((current = prevState.treeContext),
               (nextHydratableInstance = getNextHydratable(
-                JSCompiler_object_inline_digest_2613.nextSibling
+                JSCompiler_object_inline_digest_2584.nextSibling
               )),
               (hydrationParentFiber = workInProgress),
               (isHydrating = !0),
@@ -9804,54 +9702,54 @@
                 (treeContextProvider = workInProgress)),
               (workInProgress = mountSuspensePrimaryChildren(
                 workInProgress,
-                JSCompiler_object_inline_stack_2614.children
+                JSCompiler_object_inline_stack_2585.children
               )),
               (workInProgress.flags |= 4096));
         return workInProgress;
       }
-      if (JSCompiler_object_inline_message_2612)
+      if (JSCompiler_object_inline_message_2583)
         return (
           reuseSuspenseHandlerOnStack(workInProgress),
-          (JSCompiler_object_inline_message_2612 =
-            JSCompiler_object_inline_stack_2614.fallback),
-          (JSCompiler_object_inline_digest_2613 = workInProgress.mode),
+          (JSCompiler_object_inline_message_2583 =
+            JSCompiler_object_inline_stack_2585.fallback),
+          (JSCompiler_object_inline_digest_2584 = workInProgress.mode),
           (JSCompiler_temp = current.child),
           (instance = JSCompiler_temp.sibling),
-          (JSCompiler_object_inline_stack_2614 = createWorkInProgress(
+          (JSCompiler_object_inline_stack_2585 = createWorkInProgress(
             JSCompiler_temp,
             {
               mode: "hidden",
-              children: JSCompiler_object_inline_stack_2614.children
+              children: JSCompiler_object_inline_stack_2585.children
             }
           )),
-          (JSCompiler_object_inline_stack_2614.subtreeFlags =
+          (JSCompiler_object_inline_stack_2585.subtreeFlags =
             JSCompiler_temp.subtreeFlags & 65011712),
           null !== instance
-            ? (JSCompiler_object_inline_message_2612 = createWorkInProgress(
+            ? (JSCompiler_object_inline_message_2583 = createWorkInProgress(
                 instance,
-                JSCompiler_object_inline_message_2612
+                JSCompiler_object_inline_message_2583
               ))
-            : ((JSCompiler_object_inline_message_2612 = createFiberFromFragment(
-                JSCompiler_object_inline_message_2612,
-                JSCompiler_object_inline_digest_2613,
+            : ((JSCompiler_object_inline_message_2583 = createFiberFromFragment(
+                JSCompiler_object_inline_message_2583,
+                JSCompiler_object_inline_digest_2584,
                 renderLanes,
                 null
               )),
-              (JSCompiler_object_inline_message_2612.flags |= 2)),
-          (JSCompiler_object_inline_message_2612.return = workInProgress),
-          (JSCompiler_object_inline_stack_2614.return = workInProgress),
-          (JSCompiler_object_inline_stack_2614.sibling =
-            JSCompiler_object_inline_message_2612),
-          (workInProgress.child = JSCompiler_object_inline_stack_2614),
-          (JSCompiler_object_inline_stack_2614 =
-            JSCompiler_object_inline_message_2612),
-          (JSCompiler_object_inline_message_2612 = workInProgress.child),
-          (JSCompiler_object_inline_digest_2613 = current.child.memoizedState),
-          null === JSCompiler_object_inline_digest_2613
-            ? (JSCompiler_object_inline_digest_2613 =
+              (JSCompiler_object_inline_message_2583.flags |= 2)),
+          (JSCompiler_object_inline_message_2583.return = workInProgress),
+          (JSCompiler_object_inline_stack_2585.return = workInProgress),
+          (JSCompiler_object_inline_stack_2585.sibling =
+            JSCompiler_object_inline_message_2583),
+          (workInProgress.child = JSCompiler_object_inline_stack_2585),
+          (JSCompiler_object_inline_stack_2585 =
+            JSCompiler_object_inline_message_2583),
+          (JSCompiler_object_inline_message_2583 = workInProgress.child),
+          (JSCompiler_object_inline_digest_2584 = current.child.memoizedState),
+          null === JSCompiler_object_inline_digest_2584
+            ? (JSCompiler_object_inline_digest_2584 =
                 mountSuspenseOffscreenState(renderLanes))
             : ((JSCompiler_temp =
-                JSCompiler_object_inline_digest_2613.cachePool),
+                JSCompiler_object_inline_digest_2584.cachePool),
               null !== JSCompiler_temp
                 ? ((instance = CacheContext._currentValue),
                   (JSCompiler_temp =
@@ -9859,38 +9757,38 @@
                       ? { parent: instance, pool: instance }
                       : JSCompiler_temp))
                 : (JSCompiler_temp = getSuspendedCache()),
-              (JSCompiler_object_inline_digest_2613 = {
+              (JSCompiler_object_inline_digest_2584 = {
                 baseLanes:
-                  JSCompiler_object_inline_digest_2613.baseLanes | renderLanes,
+                  JSCompiler_object_inline_digest_2584.baseLanes | renderLanes,
                 cachePool: JSCompiler_temp
               })),
-          (JSCompiler_object_inline_message_2612.memoizedState =
-            JSCompiler_object_inline_digest_2613),
-          (JSCompiler_object_inline_message_2612.childLanes =
+          (JSCompiler_object_inline_message_2583.memoizedState =
+            JSCompiler_object_inline_digest_2584),
+          (JSCompiler_object_inline_message_2583.childLanes =
             getRemainingWorkInPrimaryTree(
               current,
-              JSCompiler_object_inline_componentStack_2615,
+              JSCompiler_object_inline_componentStack_2586,
               renderLanes
             )),
           (workInProgress.memoizedState = SUSPENDED_MARKER),
-          JSCompiler_object_inline_stack_2614
+          JSCompiler_object_inline_stack_2585
         );
       pushPrimaryTreeSuspenseHandler(workInProgress);
       renderLanes = current.child;
       current = renderLanes.sibling;
       renderLanes = createWorkInProgress(renderLanes, {
         mode: "visible",
-        children: JSCompiler_object_inline_stack_2614.children
+        children: JSCompiler_object_inline_stack_2585.children
       });
       renderLanes.return = workInProgress;
       renderLanes.sibling = null;
       null !== current &&
-        ((JSCompiler_object_inline_componentStack_2615 =
+        ((JSCompiler_object_inline_componentStack_2586 =
           workInProgress.deletions),
-        null === JSCompiler_object_inline_componentStack_2615
+        null === JSCompiler_object_inline_componentStack_2586
           ? ((workInProgress.deletions = [current]),
             (workInProgress.flags |= 16))
-          : JSCompiler_object_inline_componentStack_2615.push(current));
+          : JSCompiler_object_inline_componentStack_2586.push(current));
       workInProgress.child = renderLanes;
       workInProgress.memoizedState = null;
       return renderLanes;
@@ -10455,10 +10353,10 @@
               current.$$typeof === REACT_LAZY_TYPE &&
               (workInProgress =
                 " Did you wrap a component in React.lazy() more than once?");
-            renderLanes = getComponentNameFromType(current) || current;
+            current = getComponentNameFromType(current) || current;
             throw Error(
               "Element type is invalid. Received a promise that resolves to: " +
-                renderLanes +
+                current +
                 ". Lazy element type must resolve to a class or function." +
                 workInProgress
             );
@@ -10497,15 +10395,15 @@
               throw Error(
                 "Should have a current fiber. This is a bug in React."
               );
-            returnFiber = workInProgress.pendingProps;
-            var prevState = workInProgress.memoizedState;
-            prevSibling = prevState.element;
+            var nextProps = workInProgress.pendingProps;
+            prevSibling = workInProgress.memoizedState;
+            returnFiber = prevSibling.element;
             cloneUpdateQueue(current, workInProgress);
-            processUpdateQueue(workInProgress, returnFiber, null, renderLanes);
+            processUpdateQueue(workInProgress, nextProps, null, renderLanes);
             var nextState = workInProgress.memoizedState;
-            returnFiber = nextState.cache;
-            pushProvider(workInProgress, CacheContext, returnFiber);
-            returnFiber !== prevState.cache &&
+            nextProps = nextState.cache;
+            pushProvider(workInProgress, CacheContext, nextProps);
+            nextProps !== prevSibling.cache &&
               propagateContextChanges(
                 workInProgress,
                 [CacheContext],
@@ -10513,72 +10411,66 @@
                 !0
               );
             suspendIfUpdateReadFromEntangledAsyncAction();
-            returnFiber = nextState.element;
-            if (prevState.isDehydrated)
+            nextProps = nextState.element;
+            if (prevSibling.isDehydrated)
               if (
-                ((prevState = {
-                  element: returnFiber,
+                ((prevSibling = {
+                  element: nextProps,
                   isDehydrated: !1,
                   cache: nextState.cache
                 }),
-                (workInProgress.updateQueue.baseState = prevState),
-                (workInProgress.memoizedState = prevState),
+                (workInProgress.updateQueue.baseState = prevSibling),
+                (workInProgress.memoizedState = prevSibling),
                 workInProgress.flags & 256)
               ) {
                 workInProgress = mountHostRootWithoutHydrating(
                   current,
                   workInProgress,
-                  returnFiber,
+                  nextProps,
                   renderLanes
                 );
                 break a;
-              } else if (returnFiber !== prevSibling) {
-                prevSibling = createCapturedValueAtFiber(
+              } else if (nextProps !== returnFiber) {
+                returnFiber = createCapturedValueAtFiber(
                   Error(
                     "This root received an early update, before anything was able hydrate. Switched the entire root to client rendering."
                   ),
                   workInProgress
                 );
-                queueHydrationError(prevSibling);
+                queueHydrationError(returnFiber);
                 workInProgress = mountHostRootWithoutHydrating(
                   current,
                   workInProgress,
-                  returnFiber,
+                  nextProps,
                   renderLanes
                 );
                 break a;
-              } else {
-                current = workInProgress.stateNode.containerInfo;
-                switch (current.nodeType) {
-                  case 9:
-                    current = current.body;
-                    break;
-                  default:
-                    current =
-                      "HTML" === current.nodeName
-                        ? current.ownerDocument.body
-                        : current;
-                }
-                nextHydratableInstance = getNextHydratable(current.firstChild);
-                hydrationParentFiber = workInProgress;
-                isHydrating = !0;
-                hydrationErrors = null;
-                didSuspendOrErrorDEV = !1;
-                hydrationDiffRootDEV = null;
-                rootOrSingletonContext = !0;
-                renderLanes = mountChildFibers(
-                  workInProgress,
-                  null,
-                  returnFiber,
-                  renderLanes
-                );
-                for (workInProgress.child = renderLanes; renderLanes; )
-                  (renderLanes.flags = (renderLanes.flags & -3) | 4096),
-                    (renderLanes = renderLanes.sibling);
-              }
+              } else
+                for (
+                  nextHydratableInstance = getNextHydratable(
+                    workInProgress.stateNode.containerInfo.firstChild
+                  ),
+                    hydrationParentFiber = workInProgress,
+                    isHydrating = !0,
+                    hydrationErrors = null,
+                    didSuspendOrErrorDEV = !1,
+                    hydrationDiffRootDEV = null,
+                    rootOrSingletonContext = !0,
+                    current = mountChildFibers(
+                      workInProgress,
+                      null,
+                      nextProps,
+                      renderLanes
+                    ),
+                    workInProgress.child = current;
+                  current;
+
+                )
+                  (current.flags = (current.flags & -3) | 4096),
+                    (current = current.sibling);
             else {
               resetHydrationState();
-              if (returnFiber === prevSibling) {
+              if (nextProps === returnFiber) {
                 workInProgress = bailoutOnAlreadyFinishedWork(
                   current,
                   workInProgress,
@@ -10589,7 +10481,7 @@
               reconcileChildren(
                 current,
                 workInProgress,
-                returnFiber,
+                nextProps,
                 renderLanes
               );
             }
@@ -10600,26 +10492,26 @@
           return (
             markRef(current, workInProgress),
             null === current
-              ? (renderLanes = getResource(
+              ? (current = getResource(
                   workInProgress.type,
                   null,
                   workInProgress.pendingProps,
                   null
                 ))
-                ? (workInProgress.memoizedState = renderLanes)
+                ? (workInProgress.memoizedState = current)
                 : isHydrating ||
-                  ((renderLanes = workInProgress.type),
-                  (current = workInProgress.pendingProps),
+                  ((current = workInProgress.type),
+                  (renderLanes = workInProgress.pendingProps),
                   (returnFiber = requiredContext(
                     rootInstanceStackCursor.current
                   )),
                   (returnFiber =
                     getOwnerDocumentFromRootContainer(
                       returnFiber
-                    ).createElement(renderLanes)),
+                    ).createElement(current)),
                   (returnFiber[internalInstanceKey] = workInProgress),
-                  (returnFiber[internalPropsKey] = current),
-                  setInitialProperties(returnFiber, renderLanes, current),
+                  (returnFiber[internalPropsKey] = renderLanes),
+                  setInitialProperties(returnFiber, current, renderLanes),
                   markNodeAsHoistable(returnFiber),
                   (workInProgress.stateNode = returnFiber))
               : (workInProgress.memoizedState = getResource(
@@ -10635,53 +10527,56 @@
             pushHostContext(workInProgress),
             null === current &&
               isHydrating &&
-              ((returnFiber = requiredContext(rootInstanceStackCursor.current)),
-              (prevSibling = getHostContext()),
-              (returnFiber = workInProgress.stateNode =
+              ((prevSibling = requiredContext(rootInstanceStackCursor.current)),
+              (returnFiber = getHostContext()),
+              (prevSibling = workInProgress.stateNode =
                 resolveSingletonInstance(
                   workInProgress.type,
                   workInProgress.pendingProps,
-                  returnFiber,
                   prevSibling,
+                  returnFiber,
                   !1
                 )),
               didSuspendOrErrorDEV ||
-                ((prevSibling = diffHydratedProperties(
-                  returnFiber,
+                ((returnFiber = diffHydratedProperties(
+                  prevSibling,
                   workInProgress.type,
                   workInProgress.pendingProps,
-                  prevSibling
+                  returnFiber
                 )),
-                null !== prevSibling &&
+                null !== returnFiber &&
                   (buildHydrationDiffNode(workInProgress, 0).serverProps =
-                    prevSibling)),
+                    returnFiber)),
               (hydrationParentFiber = workInProgress),
               (rootOrSingletonContext = !0),
-              (prevSibling = nextHydratableInstance),
-              isSingletonScope(workInProgress.type)
-                ? ((previousHydratableOnEnteringScopedSingleton = prevSibling),
-                  (nextHydratableInstance = getNextHydratable(
-                    returnFiber.firstChild
-                  )))
-                : (nextHydratableInstance = prevSibling)),
-            reconcileChildren(
-              current,
-              workInProgress,
-              workInProgress.pendingProps.children,
-              renderLanes
-            ),
+              (nextHydratableInstance = getNextHydratable(
+                prevSibling.firstChild
+              ))),
+            (returnFiber = workInProgress.pendingProps.children),
+            null !== current || isHydrating
+              ? reconcileChildren(
+                  current,
+                  workInProgress,
+                  returnFiber,
+                  renderLanes
+                )
+              : (workInProgress.child = reconcileChildFibers(
+                  workInProgress,
+                  null,
+                  returnFiber,
+                  renderLanes
+                )),
             markRef(current, workInProgress),
-            null === current && (workInProgress.flags |= 4194304),
             workInProgress.child
           );
         case 5:
           return (
             null === current &&
               isHydrating &&
-              ((prevState = getHostContext()),
+              ((nextProps = getHostContext()),
               (returnFiber = validateDOMNesting(
                 workInProgress.type,
-                prevState.ancestorInfo
+                nextProps.ancestorInfo
               )),
               (prevSibling = nextHydratableInstance),
               (nextState = !prevSibling) ||
@@ -10694,33 +10589,33 @@
                 null !== nextState
                   ? ((workInProgress.stateNode = nextState),
                     didSuspendOrErrorDEV ||
-                      ((prevState = diffHydratedProperties(
+                      ((nextProps = diffHydratedProperties(
                         nextState,
                         workInProgress.type,
                         workInProgress.pendingProps,
-                        prevState
+                        nextProps
                       )),
-                      null !== prevState &&
+                      null !== nextProps &&
                         (buildHydrationDiffNode(workInProgress, 0).serverProps =
-                          prevState)),
+                          nextProps)),
                     (hydrationParentFiber = workInProgress),
                     (nextHydratableInstance = getNextHydratable(
                       nextState.firstChild
                     )),
                     (rootOrSingletonContext = !1),
-                    (prevState = !0))
-                  : (prevState = !1),
-                (nextState = !prevState)),
+                    (nextProps = !0))
+                  : (nextProps = !1),
+                (nextState = !nextProps)),
               nextState &&
                 (returnFiber &&
                   warnNonHydratedInstance(workInProgress, prevSibling),
                 throwOnHydrationMismatch(workInProgress))),
             pushHostContext(workInProgress),
             (prevSibling = workInProgress.type),
-            (prevState = workInProgress.pendingProps),
+            (nextProps = workInProgress.pendingProps),
             (nextState = null !== current ? current.memoizedProps : null),
-            (returnFiber = prevState.children),
-            shouldSetTextContent(prevSibling, prevState)
+            (returnFiber = nextProps.children),
+            shouldSetTextContent(prevSibling, nextProps)
               ? (returnFiber = null)
               : null !== nextState &&
                 shouldSetTextContent(prevSibling, nextState) &&
@@ -10748,21 +10643,16 @@
           return (
             null === current &&
               isHydrating &&
-              ((renderLanes = workInProgress.pendingProps),
-              (current = getHostContext()),
-              (returnFiber = current.ancestorInfo.current),
-              (renderLanes =
-                null != returnFiber
-                  ? validateTextNesting(
-                      renderLanes,
-                      returnFiber.tag,
-                      current.ancestorInfo.implicitRootScope
-                    )
+              ((current = workInProgress.pendingProps),
+              (renderLanes = getHostContext().ancestorInfo.current),
+              (current =
+                null != renderLanes
+                  ? validateTextNesting(current, renderLanes.tag)
                   : !0),
-              (current = nextHydratableInstance),
-              (returnFiber = !current) ||
+              (renderLanes = nextHydratableInstance),
+              (returnFiber = !renderLanes) ||
                 ((returnFiber = canHydrateTextInstance(
-                  current,
+                  renderLanes,
                   workInProgress.pendingProps,
                   rootOrSingletonContext
                 )),
@@ -10774,8 +10664,8 @@
                   : (returnFiber = !1),
                 (returnFiber = !returnFiber)),
               returnFiber &&
-                (renderLanes &&
-                  warnNonHydratedInstance(workInProgress, current),
+                (current &&
+                  warnNonHydratedInstance(workInProgress, renderLanes),
                 throwOnHydrationMismatch(workInProgress))),
             null
           );
@@ -10850,14 +10740,14 @@
           return (
             (returnFiber = workInProgress.type),
             (prevSibling = workInProgress.pendingProps),
-            (prevState = prevSibling.value),
+            (nextProps = prevSibling.value),
             "value" in prevSibling ||
               hasWarnedAboutUsingNoValuePropOnContextProvider ||
               ((hasWarnedAboutUsingNoValuePropOnContextProvider = !0),
               console.error(
                 "The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?"
               )),
-            pushProvider(workInProgress, returnFiber, prevState),
+            pushProvider(workInProgress, returnFiber, nextProps),
             reconcileChildren(
               current,
               workInProgress,
@@ -10922,12 +10812,12 @@
               ? ((prevSibling = peekCacheFromPool()),
                 null === prevSibling &&
                   ((prevSibling = workInProgressRoot),
-                  (prevState = createCache()),
-                  (prevSibling.pooledCache = prevState),
-                  retainCache(prevState),
-                  null !== prevState &&
+                  (nextProps = createCache()),
+                  (prevSibling.pooledCache = nextProps),
+                  retainCache(nextProps),
+                  null !== nextProps &&
                     (prevSibling.pooledCacheLanes |= renderLanes),
-                  (prevSibling = prevState)),
+                  (prevSibling = nextProps)),
                 (workInProgress.memoizedState = {
                   parent: returnFiber,
                   cache: prevSibling
@@ -10939,7 +10829,7 @@
                   processUpdateQueue(workInProgress, null, null, renderLanes),
                   suspendIfUpdateReadFromEntangledAsyncAction()),
                 (prevSibling = current.memoizedState),
-                (prevState = workInProgress.memoizedState),
+                (nextProps = workInProgress.memoizedState),
                 prevSibling.parent !== returnFiber
                   ? ((prevSibling = {
                       parent: returnFiber,
@@ -10951,7 +10841,7 @@
                         workInProgress.updateQueue.baseState =
                           prevSibling),
                     pushProvider(workInProgress, CacheContext, returnFiber))
-                  : ((returnFiber = prevState.cache),
+                  : ((returnFiber = nextProps.cache),
                     pushProvider(workInProgress, CacheContext, returnFiber),
                     returnFiber !== prevSibling.cache &&
                       propagateContextChanges(
@@ -10973,21 +10863,23 @@
             (returnFiber = workInProgress.pendingProps),
             (prevSibling = workInProgress.stateNode),
             null != returnFiber.name && "auto" !== returnFiber.name
-              ? (workInProgress.flags |= null === current ? 18882560 : 18874368)
+              ? ((workInProgress.flags |= 2097152),
+                null === current &&
+                  trackAppearingViewTransition(prevSibling, returnFiber.name))
               : null === prevSibling.autoName &&
-                ((prevState = workInProgressRoot.identifierPrefix),
+                ((nextProps = workInProgressRoot.identifierPrefix),
                 isHydrating
                   ? ((nextState = getTreeId()),
-                    (prevState =
-                      "\u00ab" + prevState + "T" + nextState + "\u00bb"))
+                    (nextProps =
+                      "\u00ab" + nextProps + "T" + nextState + "\u00bb"))
                   : ((nextState = globalClientIdCounter++),
-                    (prevState =
+                    (nextProps =
                       "\u00ab" +
-                      prevState +
+                      nextProps +
                       "t" +
                       nextState.toString(32) +
                       "\u00bb")),
-                (prevSibling.autoName = prevState)),
+                (prevSibling.autoName = nextProps)),
             null !== current && current.memoizedProps.name !== returnFiber.name
               ? (workInProgress.flags |= 4194816)
               : markRef(current, workInProgress),
@@ -11116,11 +11008,10 @@
                 ((inst.destroy = void 0),
                 (flags & Insertion) !== NoFlags &&
                   (isRunningInsertionEffect = !0),
-                (lastEffect = finishedWork),
                 runWithFiberInDEV(
-                  lastEffect,
+                  finishedWork,
                   callDestroyInDEV,
-                  lastEffect,
+                  finishedWork,
                   nearestMountedAncestor,
                   destroy
                 ),
@@ -11433,7 +11324,7 @@
         5 === fiber.tag ||
         3 === fiber.tag ||
         26 === fiber.tag ||
-        (27 === fiber.tag && isSingletonScope(fiber.type)) ||
+        27 === fiber.tag ||
         4 === fiber.tag
       );
     }
@@ -11446,10 +11337,12 @@
         fiber.sibling.return = fiber.return;
         for (
           fiber = fiber.sibling;
-          5 !== fiber.tag && 6 !== fiber.tag && 18 !== fiber.tag;
+          5 !== fiber.tag &&
+          6 !== fiber.tag &&
+          27 !== fiber.tag &&
+          18 !== fiber.tag;
 
         ) {
-          if (27 === fiber.tag && isSingletonScope(fiber.type)) continue a;
           if (fiber.flags & 2) continue a;
           if (null === fiber.child || 4 === fiber.tag) continue a;
           else (fiber.child.return = fiber), (fiber = fiber.child);
@@ -11462,32 +11355,19 @@
       if (5 === tag || 6 === tag)
         (node = node.stateNode),
           before
-            ? (9 === parent.nodeType
-                ? parent.body
-                : "HTML" === parent.nodeName
-                  ? parent.ownerDocument.body
-                  : parent
-              ).insertBefore(node, before)
-            : ((before =
-                9 === parent.nodeType
-                  ? parent.body
-                  : "HTML" === parent.nodeName
-                    ? parent.ownerDocument.body
-                    : parent),
-              before.appendChild(node),
+            ? 8 === parent.nodeType
+              ? parent.parentNode.insertBefore(node, before)
+              : parent.insertBefore(node, before)
+            : (8 === parent.nodeType
+                ? ((before = parent.parentNode),
+                  before.insertBefore(node, parent))
+                : ((before = parent), before.appendChild(node)),
               (parent = parent._reactRootContainer),
               (null !== parent && void 0 !== parent) ||
                 null !== before.onclick ||
                 (before.onclick = noop$1)),
           (viewTransitionMutationContext = !0);
-      else if (
-        4 !== tag &&
-        (27 === tag &&
-          isSingletonScope(node.type) &&
-          ((parent = node.stateNode), (before = null)),
-        (node = node.child),
-        null !== node)
-      )
+      else if (4 !== tag && 27 !== tag && ((node = node.child), null !== node))
         for (
           insertOrAppendPlacementNodeIntoContainer(node, before, parent),
             node = node.sibling;
@@ -11503,12 +11383,7 @@
         (node = node.stateNode),
           before ? parent.insertBefore(node, before) : parent.appendChild(node),
           (viewTransitionMutationContext = !0);
-      else if (
-        4 !== tag &&
-        (27 === tag && isSingletonScope(node.type) && (parent = node.stateNode),
-        (node = node.child),
-        null !== node)
-      )
+      else if (4 !== tag && 27 !== tag && ((node = node.child), null !== node))
         for (
           insertOrAppendPlacementNode(node, before, parent),
             node = node.sibling;
@@ -11519,64 +11394,55 @@
             (node = node.sibling);
     }
     function commitPlacement(finishedWork) {
-      a: {
-        for (var parent = finishedWork.return; null !== parent; ) {
-          if (isHostParent(parent)) {
-            var parentFiber = parent;
-            break a;
+      if (27 !== finishedWork.tag) {
+        a: {
+          for (var parent = finishedWork.return; null !== parent; ) {
+            if (isHostParent(parent)) {
+              var parentFiber = parent;
+              break a;
+            }
+            parent = parent.return;
           }
-          parent = parent.return;
-        }
-        throw Error(
-          "Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue."
-        );
-      }
-      switch (parentFiber.tag) {
-        case 27:
-          parent = parentFiber.stateNode;
-          parentFiber = getHostSibling(finishedWork);
-          insertOrAppendPlacementNode(finishedWork, parentFiber, parent);
-          break;
-        case 5:
-          parent = parentFiber.stateNode;
-          parentFiber.flags & 32 &&
-            (resetTextContent(parent), (parentFiber.flags &= -33));
-          parentFiber = getHostSibling(finishedWork);
-          insertOrAppendPlacementNode(finishedWork, parentFiber, parent);
-          break;
-        case 3:
-        case 4:
-          parent = parentFiber.stateNode.containerInfo;
-          parentFiber = getHostSibling(finishedWork);
-          insertOrAppendPlacementNodeIntoContainer(
-            finishedWork,
-            parentFiber,
-            parent
-          );
-          break;
-        default:
           throw Error(
-            "Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue."
+            "Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue."
           );
+        }
+        switch (parentFiber.tag) {
+          case 27:
+            parent = parentFiber.stateNode;
+            parentFiber = getHostSibling(finishedWork);
+            insertOrAppendPlacementNode(finishedWork, parentFiber, parent);
+            break;
+          case 5:
+            parent = parentFiber.stateNode;
+            parentFiber.flags & 32 &&
+              (resetTextContent(parent), (parentFiber.flags &= -33));
+            parentFiber = getHostSibling(finishedWork);
+            insertOrAppendPlacementNode(finishedWork, parentFiber, parent);
+            break;
+          case 3:
+          case 4:
+            parent = parentFiber.stateNode.containerInfo;
+            parentFiber = getHostSibling(finishedWork);
+            insertOrAppendPlacementNodeIntoContainer(
+              finishedWork,
+              parentFiber,
+              parent
+            );
+            break;
+          default:
+            throw Error(
+              "Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue."
+            );
+        }
       }
     }
-    function commitHostSingletonAcquisition(finishedWork) {
-      var singleton = finishedWork.stateNode,
-        props = finishedWork.memoizedProps;
-      try {
-        runWithFiberInDEV(
-          finishedWork,
-          acquireSingletonInstance,
-          finishedWork.type,
-          props,
-          singleton,
-          finishedWork
-        );
-      } catch (error) {
-        captureCommitPhaseError(finishedWork, finishedWork.return, error);
-      }
-    }
-    function commitBeforeMutationEffects(root, firstChild, committedLanes) {
+    function commitBeforeMutationEffects(
+      root,
+      firstChild,
+      committedLanes,
+      appearingViewTransitions
+    ) {
       root = root.containerInfo;
       eventsEnabled = _enabled;
       root = getActiveElementDeep(root);
@@ -11650,7 +11516,7 @@
         selectionRange: JSCompiler_temp
       };
       shouldStartViewTransition = _enabled = !1;
-      committedLanes = (committedLanes & 335544064) === committedLanes;
+      committedLanes = (committedLanes & 335544192) === committedLanes;
       nextEffect = firstChild;
       for (firstChild = committedLanes ? 9238 : 1028; null !== nextEffect; ) {
         root = nextEffect;
@@ -11664,7 +11530,10 @@
             anchorOffset++
           )
             committedLanes &&
-              commitExitViewTransitions(JSCompiler_temp[anchorOffset]);
+              commitExitViewTransitions(
+                JSCompiler_temp[anchorOffset],
+                appearingViewTransitions
+              );
         if (null === root.alternate && 0 !== (root.flags & 2))
           commitBeforeMutationEffects_complete(committedLanes);
         else {
@@ -11675,7 +11544,10 @@
               null !== JSCompiler_temp &&
                 null === JSCompiler_temp.memoizedState &&
                 committedLanes &&
-                commitExitViewTransitions(JSCompiler_temp);
+                commitExitViewTransitions(
+                  JSCompiler_temp,
+                  appearingViewTransitions
+                );
               commitBeforeMutationEffects_complete(committedLanes);
               continue;
             } else if (
@@ -11692,7 +11564,6 @@
               commitBeforeMutationEffects_complete(committedLanes));
         }
       }
-      appearingViewTransitions = null;
     }
     function commitBeforeMutationEffects_complete(
       isViewTransitionEligible$jscomp$0
@@ -11865,13 +11736,13 @@
       }
     }
     function commitAppearingPairViewTransitions(placement) {
-      if (0 !== (placement.subtreeFlags & 18874368))
+      if (0 !== (placement.subtreeFlags & 2097152))
         for (placement = placement.child; null !== placement; ) {
           if (22 !== placement.tag || null !== placement.memoizedState)
             if (
               (commitAppearingPairViewTransitions(placement),
               30 === placement.tag &&
-                0 !== (placement.flags & 18874368) &&
+                0 !== (placement.flags & 2097152) &&
                 placement.stateNode.paired)
             ) {
               var props = placement.memoizedProps;
@@ -11923,52 +11794,55 @@
             (placement = placement.sibling);
       else commitAppearingPairViewTransitions(placement);
     }
-    function commitDeletedPairViewTransitions(deletion) {
+    function commitDeletedPairViewTransitions(
+      deletion,
+      appearingViewTransitions
+    ) {
       if (
-        null !== appearingViewTransitions &&
-        0 !== appearingViewTransitions.size
-      ) {
-        var pairs = appearingViewTransitions;
-        if (0 !== (deletion.subtreeFlags & 18874368))
-          for (deletion = deletion.child; null !== deletion; ) {
-            if (22 !== deletion.tag || null !== deletion.memoizedState) {
-              if (30 === deletion.tag && 0 !== (deletion.flags & 18874368)) {
-                var props = deletion.memoizedProps,
-                  name = props.name;
-                if (null != name && "auto" !== name) {
-                  var pair = pairs.get(name);
-                  if (void 0 !== pair) {
-                    var className = getViewTransitionClassName(
-                      props.className,
-                      props.share
-                    );
-                    "none" !== className &&
-                      ((viewTransitionHostInstanceIdx = 0),
-                      applyViewTransitionToHostInstances(
-                        deletion.child,
-                        name,
-                        className,
-                        null,
-                        !1
-                      )
-                        ? ((pair.paired = deletion.stateNode),
-                          scheduleViewTransitionEvent(deletion, props.onShare))
-                        : restoreViewTransitionOnHostInstances(
-                            deletion.child,
-                            !1
-                          ));
-                    pairs.delete(name);
-                    if (0 === pairs.size) break;
-                  }
+        0 !== appearingViewTransitions.size &&
+        0 !== (deletion.subtreeFlags & 2097152)
+      )
+        for (deletion = deletion.child; null !== deletion; ) {
+          if (22 !== deletion.tag || null !== deletion.memoizedState) {
+            if (30 === deletion.tag && 0 !== (deletion.flags & 2097152)) {
+              var props = deletion.memoizedProps,
+                name = props.name;
+              if (null != name && "auto" !== name) {
+                var pair = appearingViewTransitions.get(name);
+                if (void 0 !== pair) {
+                  var className = getViewTransitionClassName(
+                    props.className,
+                    props.share
+                  );
+                  "none" !== className &&
+                    ((viewTransitionHostInstanceIdx = 0),
+                    applyViewTransitionToHostInstances(
+                      deletion.child,
+                      name,
+                      className,
+                      null,
+                      !1
+                    )
+                      ? ((pair.paired = deletion.stateNode),
+                        scheduleViewTransitionEvent(deletion, props.onShare))
+                      : restoreViewTransitionOnHostInstances(
+                          deletion.child,
+                          !1
+                        ));
+                  appearingViewTransitions.delete(name);
+                  if (0 === appearingViewTransitions.size) break;
                 }
               }
-              commitDeletedPairViewTransitions(deletion);
             }
-            deletion = deletion.sibling;
+            commitDeletedPairViewTransitions(
+              deletion,
+              appearingViewTransitions
+            );
           }
-      }
+          deletion = deletion.sibling;
+        }
     }
-    function commitExitViewTransitions(deletion) {
+    function commitExitViewTransitions(deletion, appearingViewTransitions) {
       if (30 === deletion.tag) {
         var props = deletion.memoizedProps,
           name = getViewTransitionName(props, deletion.stateNode),
@@ -11996,13 +11870,14 @@
               : scheduleViewTransitionEvent(deletion, props.onExit)
             : restoreViewTransitionOnHostInstances(deletion.child, !1));
         null !== appearingViewTransitions &&
-          commitDeletedPairViewTransitions(deletion);
+          commitDeletedPairViewTransitions(deletion, appearingViewTransitions);
       } else if (0 !== (deletion.subtreeFlags & 33554432))
         for (deletion = deletion.child; null !== deletion; )
-          commitExitViewTransitions(deletion), (deletion = deletion.sibling);
+          commitExitViewTransitions(deletion, appearingViewTransitions),
+            (deletion = deletion.sibling);
       else
         null !== appearingViewTransitions &&
-          commitDeletedPairViewTransitions(deletion);
+          commitDeletedPairViewTransitions(deletion, appearingViewTransitions);
     }
     function commitNestedViewTransitions(changedParent) {
       for (changedParent = changedParent.child; null !== changedParent; ) {
@@ -12026,10 +11901,10 @@
       }
     }
     function restorePairedViewTransitions(parent) {
-      if (0 !== (parent.subtreeFlags & 18874368))
+      if (0 !== (parent.subtreeFlags & 2097152))
         for (parent = parent.child; null !== parent; ) {
           if (22 !== parent.tag || null !== parent.memoizedState) {
-            if (30 === parent.tag && 0 !== (parent.flags & 18874368)) {
+            if (30 === parent.tag && 0 !== (parent.flags & 2097152)) {
               var instance = parent.stateNode;
               null !== instance.paired &&
                 ((instance.paired = null),
@@ -12331,11 +12206,11 @@
           }
           finishedRoot.effectDuration += popNestedEffectDurations(current);
           break;
-        case 27:
-          null === current &&
-            flags & 4 &&
-            commitHostSingletonAcquisition(finishedWork);
         case 26:
+          recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
+          flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);
+          break;
+        case 27:
         case 5:
           recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
           null === current && flags & 4 && commitHostMount(finishedWork);
@@ -12495,19 +12370,16 @@
             safelyDetachRef(deletedFiber, nearestMountedAncestor);
           var prevHostParent = hostParent,
             prevHostParentIsContainer = hostParentIsContainer;
-          isSingletonScope(deletedFiber.type) &&
-            ((hostParent = deletedFiber.stateNode),
-            (hostParentIsContainer = !1));
+          hostParent = deletedFiber.stateNode;
           recursivelyTraverseDeletionEffects(
             finishedRoot,
             nearestMountedAncestor,
             deletedFiber
           );
-          runWithFiberInDEV(
-            deletedFiber,
-            releaseSingletonInstance,
-            deletedFiber.stateNode
-          );
+          deletedFiber = deletedFiber.stateNode;
+          for (finishedRoot = deletedFiber.attributes; finishedRoot.length; )
+            deletedFiber.removeAttributeNode(finishedRoot[0]);
+          detachDeletedInstance(deletedFiber);
           hostParent = prevHostParent;
           hostParentIsContainer = prevHostParentIsContainer;
           break;
@@ -12563,14 +12435,11 @@
           null !== hostParent &&
             (hostParentIsContainer
               ? ((finishedRoot = hostParent),
-                clearSuspenseBoundary(
-                  9 === finishedRoot.nodeType
-                    ? finishedRoot.body
-                    : "HTML" === finishedRoot.nodeName
-                      ? finishedRoot.ownerDocument.body
-                      : finishedRoot,
-                  deletedFiber.stateNode
-                ),
+                (deletedFiber = deletedFiber.stateNode),
+                8 === finishedRoot.nodeType
+                  ? clearSuspenseBoundary(finishedRoot.parentNode, deletedFiber)
+                  : 1 === finishedRoot.nodeType &&
+                    clearSuspenseBoundary(finishedRoot, deletedFiber),
                 retryIfBlockedOn(finishedRoot))
               : clearSuspenseBoundary(hostParent, deletedFiber.stateNode));
           break;
@@ -12728,17 +12597,14 @@
           a: for (; null !== parent; ) {
             switch (parent.tag) {
               case 27:
-                if (isSingletonScope(parent.type)) {
-                  hostParent = parent.stateNode;
-                  hostParentIsContainer = !1;
-                  break a;
-                }
-                break;
               case 5:
                 hostParent = parent.stateNode;
                 hostParentIsContainer = !1;
                 break a;
               case 3:
+                hostParent = parent.stateNode.containerInfo;
+                hostParentIsContainer = !0;
+                break a;
               case 4:
                 hostParent = parent.stateNode.containerInfo;
                 hostParentIsContainer = !0;
@@ -12968,20 +12834,35 @@
                   );
           break;
         case 27:
-          recursivelyTraverseMutationEffects(root, finishedWork, lanes);
-          commitReconciliationEffects(finishedWork);
-          flags & 512 &&
-            (offscreenSubtreeWasHidden ||
-              null === current ||
-              safelyDetachRef(current, current.return));
-          null !== current &&
-            flags & 4 &&
-            commitHostUpdate(
-              finishedWork,
-              finishedWork.memoizedProps,
-              current.memoizedProps
-            );
-          break;
+          if (flags & 4 && null === finishedWork.alternate) {
+            hoistableRoot = finishedWork.stateNode;
+            i = finishedWork.memoizedProps;
+            try {
+              for (var node = hoistableRoot.firstChild; node; ) {
+                var nextNode = node.nextSibling,
+                  nodeName = node.nodeName;
+                node[internalHoistableMarker] ||
+                  "HEAD" === nodeName ||
+                  "BODY" === nodeName ||
+                  "SCRIPT" === nodeName ||
+                  "STYLE" === nodeName ||
+                  ("LINK" === nodeName &&
+                    "stylesheet" === node.rel.toLowerCase()) ||
+                  hoistableRoot.removeChild(node);
+                node = nextNode;
+              }
+              runWithFiberInDEV(
+                finishedWork,
+                acquireSingletonInstance,
+                finishedWork.type,
+                i,
+                hoistableRoot,
+                finishedWork
+              );
+            } catch (error) {
+              captureCommitPhaseError(finishedWork, finishedWork.return, error);
+            }
+          }
         case 5:
           recursivelyTraverseMutationEffects(root, finishedWork, lanes);
           commitReconciliationEffects(finishedWork);
@@ -13098,17 +12979,15 @@
             (offscreenSubtreeWasHidden ||
               null === current ||
               safelyDetachRef(current, current.return));
-          hoistableRoot = null !== finishedWork.memoizedState;
-          var wasHidden = null !== current && null !== current.memoizedState,
-            prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden,
-            prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
-          offscreenSubtreeIsHidden =
-            prevOffscreenSubtreeIsHidden || hoistableRoot;
-          offscreenSubtreeWasHidden =
-            prevOffscreenSubtreeWasHidden || wasHidden;
+          node = null !== finishedWork.memoizedState;
+          nextNode = null !== current && null !== current.memoizedState;
+          nodeName = offscreenSubtreeIsHidden;
+          var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
+          offscreenSubtreeIsHidden = nodeName || node;
+          offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || nextNode;
           recursivelyTraverseMutationEffects(root, finishedWork, lanes);
           offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
-          offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;
+          offscreenSubtreeIsHidden = nodeName;
           commitReconciliationEffects(finishedWork);
           root = finishedWork.stateNode;
           root._current = finishedWork;
@@ -13116,26 +12995,26 @@
           root._visibility |= root._pendingVisibility & OffscreenDetached;
           if (
             flags & 8192 &&
-            ((root._visibility = hoistableRoot
+            ((root._visibility = node
               ? root._visibility & ~OffscreenVisible
               : root._visibility | OffscreenVisible),
-            hoistableRoot &&
-              (null === current ||
-                wasHidden ||
-                offscreenSubtreeIsHidden ||
-                offscreenSubtreeWasHidden ||
+            node &&
+              ((root = offscreenSubtreeIsHidden || offscreenSubtreeWasHidden),
+              null === current ||
+                nextNode ||
+                root ||
                 recursivelyTraverseDisappearLayoutEffects(finishedWork)),
             null === finishedWork.memoizedProps ||
               "manual" !== finishedWork.memoizedProps.mode)
           )
             a: for (current = null, root = finishedWork; ; ) {
-              if (5 === root.tag || 26 === root.tag) {
+              if (5 === root.tag || 26 === root.tag || 27 === root.tag) {
                 if (null === current) {
                   lanes = current = root;
                   try {
-                    (i = lanes.stateNode),
-                      hoistableRoot
-                        ? runWithFiberInDEV(lanes, hideInstance, i)
+                    (hoistableRoot = lanes.stateNode),
+                      node
+                        ? runWithFiberInDEV(lanes, hideInstance, hoistableRoot)
                         : runWithFiberInDEV(
                             lanes,
                             unhideInstance,
@@ -13150,15 +13029,15 @@
                 if (null === current) {
                   lanes = root;
                   try {
-                    var instance = lanes.stateNode;
-                    hoistableRoot
-                      ? runWithFiberInDEV(lanes, hideTextInstance, instance)
-                      : runWithFiberInDEV(
-                          lanes,
-                          unhideTextInstance,
-                          instance,
-                          lanes.memoizedProps
-                        );
+                    (i = lanes.stateNode),
+                      node
+                        ? runWithFiberInDEV(lanes, hideTextInstance, i)
+                        : runWithFiberInDEV(
+                            lanes,
+                            unhideTextInstance,
+                            i,
+                            lanes.memoizedProps
+                          );
                   } catch (error) {
                     captureCommitPhaseError(lanes, lanes.return, error);
                   }
@@ -13210,7 +13089,7 @@
           viewTransitionMutationContext = !1;
           recursivelyTraverseMutationEffects(root, finishedWork, lanes);
           commitReconciliationEffects(finishedWork);
-          (lanes & 335544064) === lanes &&
+          (lanes & 335544192) === lanes &&
             null !== current &&
             viewTransitionMutationContext &&
             (finishedWork.flags |= 4);
@@ -13345,7 +13224,7 @@
                   ),
                   layoutClassName = getViewTransitionClassName(
                     root.className,
-                    root.layout
+                    root.update
                   );
                 if ("none" === updateClassName) {
                   if ("none" === layoutClassName) {
@@ -13441,13 +13320,8 @@
             );
           recursivelyTraverseDisappearLayoutEffects(finishedWork);
           break;
-        case 27:
-          runWithFiberInDEV(
-            finishedWork,
-            releaseSingletonInstance,
-            finishedWork.stateNode
-          );
         case 26:
+        case 27:
         case 5:
           safelyDetachRef(finishedWork, finishedWork.return);
           recursivelyTraverseDisappearLayoutEffects(finishedWork);
@@ -13534,9 +13408,8 @@
             commitClassCallbacks(finishedWork);
           safelyAttachRef(finishedWork, finishedWork.return);
           break;
-        case 27:
-          commitHostSingletonAcquisition(finishedWork);
         case 26:
+        case 27:
         case 5:
           recursivelyTraverseReappearLayoutEffects(
             finishedRoot,
@@ -13673,7 +13546,7 @@
       endTime
     ) {
       var isViewTransitionEligible =
-        (committedLanes & 335544064) === committedLanes;
+        (committedLanes & 335544192) === committedLanes;
       if (
         parentFiber.subtreeFlags & (isViewTransitionEligible ? 10262 : 10256) ||
         (0 !== parentFiber.actualDuration &&
@@ -13714,7 +13587,7 @@
           inHydratedSubtree
         );
       var isViewTransitionEligible =
-        (committedLanes & 335544064) === committedLanes;
+        (committedLanes & 335544192) === committedLanes;
       isViewTransitionEligible &&
         null === finishedWork.alternate &&
         null !== finishedWork.return &&
@@ -14211,20 +14084,6 @@
                 (suspenseyCommitFlag = previousHoistableRoot))
               : recursivelyAccumulateSuspenseyCommit(fiber));
           break;
-        case 30:
-          if (
-            0 !== (fiber.flags & suspenseyCommitFlag) &&
-            ((previousHoistableRoot = fiber.memoizedProps.name),
-            null != previousHoistableRoot && "auto" !== previousHoistableRoot)
-          ) {
-            null === appearingViewTransitions &&
-              (appearingViewTransitions = new Map());
-            var instance = fiber.stateNode;
-            instance.paired = null;
-            appearingViewTransitions.set(previousHoistableRoot, instance);
-          }
-          recursivelyAccumulateSuspenseyCommit(fiber);
-          break;
         default:
           recursivelyAccumulateSuspenseyCommit(fiber);
       }
@@ -14935,14 +14794,14 @@
     function popToNextHostParent(fiber) {
       for (hydrationParentFiber = fiber.return; hydrationParentFiber; )
         switch (hydrationParentFiber.tag) {
+          case 3:
+          case 27:
+            rootOrSingletonContext = !0;
+            return;
           case 5:
           case 13:
             rootOrSingletonContext = !1;
             return;
-          case 27:
-          case 3:
-            rootOrSingletonContext = !0;
-            return;
           default:
             hydrationParentFiber = hydrationParentFiber.return;
         }
@@ -14951,31 +14810,32 @@
       if (fiber !== hydrationParentFiber) return !1;
       if (!isHydrating)
         return popToNextHostParent(fiber), (isHydrating = !0), !1;
-      var tag = fiber.tag,
+      var shouldClear = !1,
         JSCompiler_temp;
-      if ((JSCompiler_temp = 3 !== tag && 27 !== tag)) {
-        if ((JSCompiler_temp = 5 === tag))
+      if ((JSCompiler_temp = 3 !== fiber.tag && 27 !== fiber.tag)) {
+        if ((JSCompiler_temp = 5 === fiber.tag))
           (JSCompiler_temp = fiber.type),
             (JSCompiler_temp =
               !("form" !== JSCompiler_temp && "button" !== JSCompiler_temp) ||
               shouldSetTextContent(fiber.type, fiber.memoizedProps));
         JSCompiler_temp = !JSCompiler_temp;
       }
-      if (JSCompiler_temp && nextHydratableInstance) {
-        for (JSCompiler_temp = nextHydratableInstance; JSCompiler_temp; ) {
-          var diffNode = buildHydrationDiffNode(fiber, 0),
-            description =
-              describeHydratableInstanceForDevWarnings(JSCompiler_temp);
-          diffNode.serverTail.push(description);
-          JSCompiler_temp =
+      JSCompiler_temp && (shouldClear = !0);
+      if (shouldClear && nextHydratableInstance) {
+        for (shouldClear = nextHydratableInstance; shouldClear; ) {
+          JSCompiler_temp = buildHydrationDiffNode(fiber, 0);
+          var description =
+            describeHydratableInstanceForDevWarnings(shouldClear);
+          JSCompiler_temp.serverTail.push(description);
+          shouldClear =
             "Suspense" === description.type
-              ? getNextHydratableInstanceAfterSuspenseInstance(JSCompiler_temp)
-              : getNextHydratable(JSCompiler_temp.nextSibling);
+              ? getNextHydratableInstanceAfterSuspenseInstance(shouldClear)
+              : getNextHydratable(shouldClear.nextSibling);
         }
         throwOnHydrationMismatch(fiber);
       }
       popToNextHostParent(fiber);
-      if (13 === tag) {
+      if (13 === fiber.tag) {
         fiber = fiber.memoizedState;
         fiber = null !== fiber ? fiber.dehydrated : null;
         if (!fiber)
@@ -14985,16 +14845,9 @@
         nextHydratableInstance =
           getNextHydratableInstanceAfterSuspenseInstance(fiber);
       } else
-        27 === tag
-          ? ((tag = nextHydratableInstance),
-            isSingletonScope(fiber.type)
-              ? ((fiber = previousHydratableOnEnteringScopedSingleton),
-                (previousHydratableOnEnteringScopedSingleton = null),
-                (nextHydratableInstance = fiber))
-              : (nextHydratableInstance = tag))
-          : (nextHydratableInstance = hydrationParentFiber
-              ? getNextHydratable(fiber.stateNode.nextSibling)
-              : null);
+        nextHydratableInstance = hydrationParentFiber
+          ? getNextHydratable(fiber.stateNode.nextSibling)
+          : null;
       return !0;
     }
     function resetHydrationState() {
@@ -15034,31 +14887,14 @@
         ? props.name
         : instance.autoName;
     }
-    function getClassNameByType(classByType) {
-      if (null == classByType || "string" === typeof classByType)
-        return classByType;
-      var className = null,
-        activeTypes = pendingTransitionTypes;
-      if (null !== activeTypes)
-        for (var i = 0; i < activeTypes.length; i++) {
-          var match = classByType[activeTypes[i]];
-          if (null != match) {
-            if ("none" === match) return "none";
-            className = null == className ? match : className + (" " + match);
-          }
-        }
-      return null == className ? classByType.default : className;
-    }
-    function getViewTransitionClassName(defaultClass, eventClass) {
-      defaultClass = getClassNameByType(defaultClass);
-      eventClass = getClassNameByType(eventClass);
-      return null == eventClass
-        ? defaultClass
-        : "none" === eventClass
-          ? eventClass
-          : null != defaultClass && "none" !== defaultClass
-            ? defaultClass + " " + eventClass
-            : eventClass;
+    function getViewTransitionClassName(className, eventClassName) {
+      return null == eventClassName
+        ? className
+        : "none" === eventClassName
+          ? eventClassName
+          : null != className
+            ? className + " " + eventClassName
+            : eventClassName;
     }
     function markUpdate(workInProgress) {
       workInProgress.flags |= 4;
@@ -15075,7 +14911,7 @@
         resource = suspenseHandlerStackCursor.current;
         if (
           null !== resource &&
-          ((workInProgressRootRenderLanes & 4194048) ===
+          ((workInProgressRootRenderLanes & 4194176) ===
           workInProgressRootRenderLanes
             ? null !== shellBoundary
             : ((workInProgressRootRenderLanes & 62914560) !==
@@ -15183,6 +15019,30 @@
       completedWork.childLanes = newChildLanes;
       return didBailout;
     }
+    function trackReappearingViewTransitions(workInProgress) {
+      if (0 !== (workInProgress.subtreeFlags & 2097152))
+        for (workInProgress = workInProgress.child; null !== workInProgress; ) {
+          if (
+            22 !== workInProgress.tag ||
+            null !== workInProgress.memoizedState
+          ) {
+            if (
+              30 === workInProgress.tag &&
+              0 !== (workInProgress.flags & 2097152)
+            ) {
+              var props = workInProgress.memoizedProps;
+              null != props.name &&
+                "auto" !== props.name &&
+                trackAppearingViewTransition(
+                  workInProgress.stateNode,
+                  props.name
+                );
+            }
+            trackReappearingViewTransitions(workInProgress);
+          }
+          workInProgress = workInProgress.sibling;
+        }
+    }
     function completeWork(current, workInProgress, renderLanes) {
       var newProps = workInProgress.pendingProps;
       popTreeContext(workInProgress);
@@ -15472,13 +15332,9 @@
                   : !1;
               current || throwOnHydrationMismatch(workInProgress);
             } else
-              (_type = renderLanes.ancestorInfo.current),
-                null != _type &&
-                  validateTextNesting(
-                    newProps,
-                    _type.tag,
-                    renderLanes.ancestorInfo.implicitRootScope
-                  ),
+              (renderLanes = renderLanes.ancestorInfo.current),
+                null != renderLanes &&
+                  validateTextNesting(newProps, renderLanes.tag),
                 (current =
                   getOwnerDocumentFromRootContainer(current).createTextNode(
                     newProps
@@ -15700,7 +15556,8 @@
             (newProps = null !== workInProgress.memoizedState),
             null !== current
               ? (null !== current.memoizedState) !== newProps &&
-                (workInProgress.flags |= 8192)
+                ((workInProgress.flags |= 8192),
+                newProps || trackReappearingViewTransitions(workInProgress))
               : newProps && (workInProgress.flags |= 8192),
             newProps
               ? 0 !== (renderLanes & 536870912) &&
@@ -16198,7 +16055,7 @@
       }
       yieldDuration = (forceSync =
         (!forceSync &&
-          0 === (lanes & 124) &&
+          0 === (lanes & 60) &&
           0 === (lanes & root.expiredLanes)) ||
         checkIfRootIsPrerendering(root, lanes))
         ? renderRootConcurrent(root, lanes)
@@ -16305,15 +16162,15 @@
               case RootFatalErrored:
                 throw Error("Root did not complete. This is a bug in React.");
               case RootSuspendedWithDelay:
-                if ((lanes & 4194048) !== lanes) break;
+                if ((lanes & 4194176) !== lanes) break;
               case RootSuspendedAtTheShell:
                 setCurrentTrackFromLanes(lanes);
                 logSuspendedRenderPhase(renderStartTime, startTime, lanes);
                 finalizeRender(lanes, startTime);
                 yieldEndTime = lanes;
-                0 !== (yieldEndTime & 3) || 0 !== (yieldEndTime & 124)
+                0 !== (yieldEndTime & 3) || 0 !== (yieldEndTime & 60)
                   ? (blockingSuspendedTime = startTime)
-                  : 0 !== (yieldEndTime & 4194048) &&
+                  : 0 !== (yieldEndTime & 4194176) &&
                     (transitionSuspendedTime = startTime);
                 markRootSuspended(
                   forceSync,
@@ -16338,6 +16195,7 @@
                 lanes,
                 workInProgressRootRecoverableErrors,
                 workInProgressTransitions,
+                workInProgressAppearingViewTransitions,
                 workInProgressRootDidIncludeRecursiveRenderUpdate,
                 workInProgressDeferredLane,
                 workInProgressRootInterleavedUpdatedLanes,
@@ -16370,6 +16228,7 @@
                     yieldEndTime,
                     workInProgressRootRecoverableErrors,
                     workInProgressTransitions,
+                    workInProgressAppearingViewTransitions,
                     workInProgressRootDidIncludeRecursiveRenderUpdate,
                     lanes,
                     workInProgressDeferredLane,
@@ -16390,6 +16249,7 @@
                 yieldEndTime,
                 workInProgressRootRecoverableErrors,
                 workInProgressTransitions,
+                workInProgressAppearingViewTransitions,
                 workInProgressRootDidIncludeRecursiveRenderUpdate,
                 lanes,
                 workInProgressDeferredLane,
@@ -16413,6 +16273,7 @@
       finishedWork,
       recoverableErrors,
       transitions,
+      appearingViewTransitions,
       didIncludeRenderPhaseUpdate,
       lanes,
       spawnedLane,
@@ -16426,35 +16287,37 @@
     ) {
       root.timeoutHandle = noTimeout;
       var subtreeFlags = finishedWork.subtreeFlags,
-        isViewTransitionEligible = (lanes & 335544064) === lanes;
-      if (
-        isViewTransitionEligible ||
-        subtreeFlags & 8192 ||
-        16785408 === (subtreeFlags & 16785408)
-      ) {
+        isViewTransitionEligible = (lanes & 335544192) === lanes;
+      subtreeFlags =
+        subtreeFlags & 8192 || 16785408 === (subtreeFlags & 16785408);
+      if (isViewTransitionEligible || subtreeFlags) {
         suspendedState = { stylesheets: null, count: 0, unsuspend: noop };
-        appearingViewTransitions = null;
-        accumulateSuspenseyCommitOnFiber(finishedWork);
+        subtreeFlags && accumulateSuspenseyCommitOnFiber(finishedWork);
         if (isViewTransitionEligible) {
-          isViewTransitionEligible = root.containerInfo;
+          subtreeFlags = root.containerInfo;
           if (null === suspendedState)
             throw Error(
               "Internal React Error: suspendedState null when it was expected to exists. Please report this as a React bug."
             );
-          subtreeFlags = suspendedState;
-          isViewTransitionEligible = (
-            9 === isViewTransitionEligible.nodeType
-              ? isViewTransitionEligible
-              : isViewTransitionEligible.ownerDocument
+          isViewTransitionEligible = suspendedState;
+          subtreeFlags = (
+            9 === subtreeFlags.nodeType
+              ? subtreeFlags
+              : subtreeFlags.ownerDocument
           ).__reactViewTransition;
-          null != isViewTransitionEligible &&
-            (subtreeFlags.count++,
-            (subtreeFlags = onUnsuspend.bind(subtreeFlags)),
-            isViewTransitionEligible.finished.then(subtreeFlags, subtreeFlags));
+          null != subtreeFlags &&
+            (isViewTransitionEligible.count++,
+            (isViewTransitionEligible = onUnsuspend.bind(
+              isViewTransitionEligible
+            )),
+            subtreeFlags.finished.then(
+              isViewTransitionEligible,
+              isViewTransitionEligible
+            ));
         }
-        subtreeFlags = waitForCommitToBeReady();
-        if (null !== subtreeFlags) {
-          root.cancelPendingCommit = subtreeFlags(
+        isViewTransitionEligible = waitForCommitToBeReady();
+        if (null !== isViewTransitionEligible) {
+          root.cancelPendingCommit = isViewTransitionEligible(
             commitRoot.bind(
               null,
               root,
@@ -16462,6 +16325,7 @@
               lanes,
               recoverableErrors,
               transitions,
+              appearingViewTransitions,
               didIncludeRenderPhaseUpdate,
               spawnedLane,
               updatedLanes,
@@ -16487,6 +16351,7 @@
         lanes,
         recoverableErrors,
         transitions,
+        appearingViewTransitions,
         didIncludeRenderPhaseUpdate,
         spawnedLane,
         updatedLanes,
@@ -16575,9 +16440,9 @@
       }
     }
     function finalizeRender(lanes, finalizationTime) {
-      if (0 !== (lanes & 3) || 0 !== (lanes & 124))
+      if (0 !== (lanes & 3) || 0 !== (lanes & 60))
         blockingClampTime = finalizationTime;
-      0 !== (lanes & 4194048) && (transitionClampTime = finalizationTime);
+      0 !== (lanes & 4194176) && (transitionClampTime = finalizationTime);
     }
     function prepareFreshStack(root, lanes) {
       supportsUserTiming &&
@@ -16602,13 +16467,13 @@
           var endTime = renderStartTime;
           supportsUserTiming &&
             ((reusableLaneDevToolDetails.color =
-              (lanes & 738197653) === lanes ? "tertiary-dark" : "primary-dark"),
+              (lanes & 738197589) === lanes ? "tertiary-dark" : "primary-dark"),
             (reusableLaneOptions.start = previousRenderStartTime),
             (reusableLaneOptions.end = endTime),
             performance.measure(
               (lanes & 536870912) === lanes
                 ? "Prewarm"
-                : (lanes & 201326741) === lanes
+                : (lanes & 201326677) === lanes
                   ? "Interrupted Hydration"
                   : "Interrupted Render",
               reusableLaneOptions
@@ -16616,7 +16481,7 @@
         }
         finalizeRender(workInProgressRootRenderLanes, renderStartTime);
       }
-      if (0 !== (lanes & 3) || 0 !== (lanes & 124)) {
+      if (0 !== (lanes & 3) || 0 !== (lanes & 60)) {
         previousRenderStartTime =
           0 <= blockingUpdateTime && blockingUpdateTime < blockingClampTime
             ? blockingClampTime
@@ -16659,7 +16524,7 @@
           0 < previousRenderStartTime &&
             ((reusableLaneDevToolDetails.color = isSpawnedUpdate
               ? "error"
-              : (lanes & 738197653) === lanes
+              : (lanes & 738197589) === lanes
                 ? "tertiary-light"
                 : "primary-light"),
             (reusableLaneOptions.start = previousRenderStartTime),
@@ -16672,7 +16537,7 @@
         blockingEventIsRepeat = !0;
         blockingSpawnedUpdate = !1;
       }
-      0 !== (lanes & 4194048) &&
+      0 !== (lanes & 4194176) &&
         ((previousRenderStartTime =
           0 <= transitionStartTime && transitionStartTime < transitionClampTime
             ? transitionClampTime
@@ -16763,6 +16628,7 @@
       workInProgressRootRecoverableErrors = workInProgressRootConcurrentErrors =
         null;
       workInProgressRootDidIncludeRecursiveRenderUpdate = !1;
+      workInProgressAppearingViewTransitions = null;
       0 !== (lanes & 8) && (lanes |= lanes & 32);
       endTime = root.entangledLanes;
       if (0 !== endTime)
@@ -16821,7 +16687,7 @@
     function renderDidSuspendDelayIfPossible() {
       workInProgressRootExitStatus = RootSuspendedWithDelay;
       workInProgressRootDidSkipSuspendedSiblings ||
-        ((workInProgressRootRenderLanes & 4194048) !==
+        ((workInProgressRootRenderLanes & 4194176) !==
           workInProgressRootRenderLanes &&
           null !== suspenseHandlerStackCursor.current) ||
         (workInProgressRootIsPrerendering = !0);
@@ -16840,6 +16706,18 @@
         ? (workInProgressRootConcurrentErrors = [error])
         : workInProgressRootConcurrentErrors.push(error);
     }
+    function trackAppearingViewTransition(instance, name) {
+      if (null === workInProgressAppearingViewTransitions) {
+        if (
+          (workInProgressRootRenderLanes & 335544192) !==
+          workInProgressRootRenderLanes
+        )
+          return;
+        workInProgressAppearingViewTransitions = new Map();
+      }
+      instance.paired = null;
+      workInProgressAppearingViewTransitions.set(name, instance);
+    }
     function renderRootSync(root, lanes, shouldYieldForPrerendering) {
       var prevExecutionContext = executionContext;
       executionContext |= RenderContext;
@@ -17282,6 +17160,7 @@
       lanes,
       recoverableErrors,
       transitions,
+      appearingViewTransitions,
       didIncludeRenderPhaseUpdate,
       spawnedLane,
       updatedLanes,
@@ -17332,7 +17211,6 @@
         didIncludeRenderPhaseUpdate =
           finishedWork.lanes | finishedWork.childLanes;
         didIncludeRenderPhaseUpdate |= concurrentlyUpdatedLanes;
-        null === root.gestures && (didIncludeRenderPhaseUpdate &= -65);
         markRootFinished(
           root,
           lanes,
@@ -17344,71 +17222,68 @@
         root === workInProgressRoot &&
           ((workInProgress = workInProgressRoot = null),
           (workInProgressRootRenderLanes = 0));
-        if (64 === lanes) commitGestureOnRoot(root);
-        else {
-          pendingFinishedWork = finishedWork;
-          pendingEffectsRoot = root;
-          pendingEffectsLanes = lanes;
-          pendingEffectsRemainingLanes = didIncludeRenderPhaseUpdate;
-          pendingPassiveTransitions = transitions;
-          pendingRecoverableErrors = recoverableErrors;
-          pendingEffectsRenderEndTime = completedRenderEndTime;
-          pendingSuspendedCommitReason = suspendedCommitReason;
-          pendingViewTransitionEvents = null;
-          (lanes & 335544064) === lanes
-            ? ((pendingTransitionTypes = ReactSharedInternals.V),
-              (ReactSharedInternals.V = null),
-              (recoverableErrors = 10262))
-            : ((pendingTransitionTypes = null), (recoverableErrors = 10256));
-          0 !== finishedWork.actualDuration ||
-          0 !== (finishedWork.subtreeFlags & recoverableErrors) ||
-          0 !== (finishedWork.flags & recoverableErrors)
-            ? ((root.callbackNode = null),
-              (root.callbackPriority = 0),
-              scheduleCallback$1(NormalPriority$1, function () {
-                schedulerEvent = window.event;
-                flushPassiveEffects(!0);
-                return null;
-              }))
-            : ((root.callbackNode = null), (root.callbackPriority = 0));
-          commitErrors = null;
-          commitStartTime = now();
-          suspendedCommitReason === SUSPENDED_COMMIT
-            ? logSuspendedCommitPhase(completedRenderEndTime, commitStartTime)
-            : suspendedCommitReason === THROTTLED_COMMIT &&
-              logSuspenseThrottlePhase(completedRenderEndTime, commitStartTime);
-          suspendedCommitReason = 0 !== (finishedWork.flags & 13878);
-          if (
-            0 !== (finishedWork.subtreeFlags & 13878) ||
-            suspendedCommitReason
-          ) {
-            suspendedCommitReason = ReactSharedInternals.T;
-            ReactSharedInternals.T = null;
-            completedRenderEndTime = ReactDOMSharedInternals.p;
-            ReactDOMSharedInternals.p = DiscreteEventPriority;
-            recoverableErrors = executionContext;
-            executionContext |= CommitContext;
-            try {
-              commitBeforeMutationEffects(root, finishedWork, lanes);
-            } finally {
-              (executionContext = recoverableErrors),
-                (ReactDOMSharedInternals.p = completedRenderEndTime),
-                (ReactSharedInternals.T = suspendedCommitReason);
-            }
+        pendingFinishedWork = finishedWork;
+        pendingEffectsRoot = root;
+        pendingEffectsLanes = lanes;
+        pendingEffectsRemainingLanes = didIncludeRenderPhaseUpdate;
+        pendingPassiveTransitions = transitions;
+        pendingRecoverableErrors = recoverableErrors;
+        pendingViewTransitionEvents = null;
+        pendingEffectsRenderEndTime = completedRenderEndTime;
+        pendingSuspendedCommitReason = suspendedCommitReason;
+        recoverableErrors = (lanes & 335544192) === lanes ? 10262 : 10256;
+        0 !== finishedWork.actualDuration ||
+        0 !== (finishedWork.subtreeFlags & recoverableErrors) ||
+        0 !== (finishedWork.flags & recoverableErrors)
+          ? ((root.callbackNode = null),
+            (root.callbackPriority = 0),
+            scheduleCallback$1(NormalPriority$1, function () {
+              schedulerEvent = window.event;
+              flushPassiveEffects(!0);
+              return null;
+            }))
+          : ((root.callbackNode = null), (root.callbackPriority = 0));
+        commitErrors = null;
+        commitStartTime = now();
+        suspendedCommitReason === SUSPENDED_COMMIT
+          ? logSuspendedCommitPhase(completedRenderEndTime, commitStartTime)
+          : suspendedCommitReason === THROTTLED_COMMIT &&
+            logSuspenseThrottlePhase(completedRenderEndTime, commitStartTime);
+        suspendedCommitReason = 0 !== (finishedWork.flags & 13878);
+        if (
+          0 !== (finishedWork.subtreeFlags & 13878) ||
+          suspendedCommitReason
+        ) {
+          suspendedCommitReason = ReactSharedInternals.T;
+          ReactSharedInternals.T = null;
+          completedRenderEndTime = ReactDOMSharedInternals.p;
+          ReactDOMSharedInternals.p = DiscreteEventPriority;
+          recoverableErrors = executionContext;
+          executionContext |= CommitContext;
+          try {
+            commitBeforeMutationEffects(
+              root,
+              finishedWork,
+              lanes,
+              appearingViewTransitions
+            );
+          } finally {
+            (executionContext = recoverableErrors),
+              (ReactDOMSharedInternals.p = completedRenderEndTime),
+              (ReactSharedInternals.T = suspendedCommitReason);
           }
-          pendingEffectsStatus = PENDING_MUTATION_PHASE;
-          (shouldStartViewTransition &&
-            startViewTransition(
-              root.containerInfo,
-              pendingTransitionTypes,
-              flushMutationEffects,
-              flushLayoutEffects,
-              flushAfterMutationEffects,
-              flushSpawnedWork,
-              flushPassiveEffects
-            )) ||
-            (flushMutationEffects(), flushLayoutEffects(), flushSpawnedWork());
         }
+        pendingEffectsStatus = PENDING_MUTATION_PHASE;
+        (shouldStartViewTransition &&
+          startViewTransition(
+            root.containerInfo,
+            flushMutationEffects,
+            flushLayoutEffects,
+            flushAfterMutationEffects,
+            flushSpawnedWork,
+            flushPassiveEffects
+          )) ||
+          (flushMutationEffects(), flushLayoutEffects(), flushSpawnedWork());
       }
     }
     function flushAfterMutationEffects() {
@@ -17617,7 +17492,7 @@
             (reusableLaneOptions.start = completedRenderEndTime),
             (reusableLaneOptions.end = suspendedCommitReason),
             performance.measure("Commit", reusableLaneOptions));
-        completedRenderEndTime = (lanes & 335544064) === lanes ? 10262 : 10256;
+        completedRenderEndTime = (lanes & 335544192) === lanes ? 10262 : 10256;
         (completedRenderEndTime =
           0 !== finishedWork.actualDuration ||
           0 !== (finishedWork.subtreeFlags & completedRenderEndTime) ||
@@ -17699,21 +17574,17 @@
           }
         }
         recoverableErrors = pendingViewTransitionEvents;
-        onRecoverableError = pendingTransitionTypes;
-        pendingTransitionTypes = null;
         if (null !== recoverableErrors)
           for (
-            pendingViewTransitionEvents = null,
-              null === onRecoverableError && (onRecoverableError = []),
-              recoverableError = 0;
-            recoverableError < recoverableErrors.length;
-            recoverableError++
+            pendingViewTransitionEvents = null, onRecoverableError = 0;
+            onRecoverableError < recoverableErrors.length;
+            onRecoverableError++
           )
-            (0, recoverableErrors[recoverableError])(onRecoverableError);
+            (0, recoverableErrors[onRecoverableError])();
         0 !== (pendingEffectsLanes & 3) && flushPendingEffects();
         ensureRootIsScheduled(root);
         suspendedCommitReason = root.pendingLanes;
-        0 !== (lanes & 4194090) && 0 !== (suspendedCommitReason & 42)
+        0 !== (lanes & 4194218) && 0 !== (suspendedCommitReason & 42)
           ? ((nestedUpdateScheduled = !0),
             root === rootWithNestedUpdates
               ? nestedUpdateCount++
@@ -17723,14 +17594,6 @@
         flushSyncWorkAcrossRoots_impl(0, !1);
       }
     }
-    function commitGestureOnRoot(root) {
-      var finishedGesture = root.gestures;
-      if (null === finishedGesture)
-        throw Error(
-          "Finished rendering the gesture lane but there were no pending gestures. React should not have started a render in this case. This is a bug in React."
-        );
-      deleteScheduledGesture(root, finishedGesture);
-    }
     function makeErrorInfo(componentStack) {
       componentStack = { componentStack: componentStack };
       Object.defineProperty(componentStack, "digest", {
@@ -17940,10 +17803,10 @@
       null !== pingCache && pingCache.delete(wakeable);
       root.pingedLanes |= root.suspendedLanes & pingedLanes;
       root.warmLanes &= ~pingedLanes;
-      0 !== (pingedLanes & 3) || 0 !== (pingedLanes & 124)
+      0 !== (pingedLanes & 3) || 0 !== (pingedLanes & 60)
         ? 0 > blockingUpdateTime &&
           (blockingClampTime = blockingUpdateTime = now())
-        : 0 !== (pingedLanes & 4194048) &&
+        : 0 !== (pingedLanes & 4194176) &&
           0 > transitionUpdateTime &&
           (transitionClampTime = transitionUpdateTime = now());
       isConcurrentActEnvironment() &&
@@ -18145,8 +18008,8 @@
                     (1 << (31 - clz32(42 | syncTransitionLanes) + 1)) - 1;
                   nextLanes &= pendingLanes & ~(suspendedLanes & ~pingedLanes);
                   nextLanes =
-                    nextLanes & 201326741
-                      ? (nextLanes & 201326741) | 1
+                    nextLanes & 201326677
+                      ? (nextLanes & 201326677) | 1
                       : nextLanes
                         ? nextLanes | 2
                         : 0;
@@ -18162,7 +18025,7 @@
                     null !== root.cancelPendingCommit ||
                       root.timeoutHandle !== noTimeout
                   )),
-                  (0 === (nextLanes & 3) && 64 !== nextLanes) ||
+                  0 === (nextLanes & 3) ||
                     checkIfRootIsPrerendering(root, nextLanes) ||
                     ((didPerformSomeWork = !0),
                     performSyncWorkOnRoot(root, nextLanes));
@@ -18198,10 +18061,7 @@
             null === prev ? (firstScheduledRoot = next) : (prev.next = next),
             null === next && (lastScheduledRoot = prev);
         else if (
-          ((prev = root),
-          0 !== syncTransitionLanes ||
-            0 !== (nextLanes & 3) ||
-            64 === nextLanes)
+          ((prev = root), 0 !== syncTransitionLanes || 0 !== (nextLanes & 3))
         )
           mightHavePendingSyncWork = !0;
         root = next;
@@ -18635,15 +18495,23 @@
           var nodeTag = targetInst$jscomp$0.tag;
           if (3 === nodeTag || 4 === nodeTag) {
             var container = targetInst$jscomp$0.stateNode.containerInfo;
-            if (container === targetContainer) break;
+            if (
+              container === targetContainer ||
+              (8 === container.nodeType &&
+                container.parentNode === targetContainer)
+            )
+              break;
             if (4 === nodeTag)
               for (nodeTag = targetInst$jscomp$0.return; null !== nodeTag; ) {
                 var grandTag = nodeTag.tag;
-                if (
-                  (3 === grandTag || 4 === grandTag) &&
-                  nodeTag.stateNode.containerInfo === targetContainer
-                )
-                  return;
+                if (3 === grandTag || 4 === grandTag)
+                  if (
+                    ((grandTag = nodeTag.stateNode.containerInfo),
+                    grandTag === targetContainer ||
+                      (8 === grandTag.nodeType &&
+                        grandTag.parentNode === targetContainer))
+                  )
+                    return;
                 nodeTag = nodeTag.return;
               }
             for (; null !== container; ) {
@@ -19287,12 +19155,12 @@
       switch (key) {
         case "children":
           if ("string" === typeof value)
-            validateTextNesting(value, tag, !1),
+            validateTextNesting(value, tag),
               "body" === tag ||
                 ("textarea" === tag && "" === value) ||
                 setTextContent(domElement, value);
           else if ("number" === typeof value || "bigint" === typeof value)
-            validateTextNesting("" + value, tag, !1),
+            validateTextNesting("" + value, tag),
               "body" !== tag && setTextContent(domElement, "" + value);
           else return;
           break;
@@ -21477,58 +21345,22 @@
     function commitTextUpdate(textInstance, oldText, newText) {
       textInstance.nodeValue = newText;
     }
-    function isSingletonScope(type) {
-      return "head" === type;
-    }
     function removeChild(parentInstance, child) {
       parentInstance.removeChild(child);
     }
     function removeChildFromContainer(container, child) {
-      (9 === container.nodeType
-        ? container.body
-        : "HTML" === container.nodeName
-          ? container.ownerDocument.body
-          : container
-      ).removeChild(child);
+      8 === container.nodeType
+        ? container.parentNode.removeChild(child)
+        : container.removeChild(child);
     }
     function clearSuspenseBoundary(parentInstance, suspenseInstance) {
       var node = suspenseInstance,
-        possiblePreambleContribution = 0,
         depth = 0;
       do {
         var nextNode = node.nextSibling;
         parentInstance.removeChild(node);
         if (nextNode && 8 === nextNode.nodeType)
           if (((node = nextNode.data), node === SUSPENSE_END_DATA)) {
-            if (
-              0 < possiblePreambleContribution &&
-              8 > possiblePreambleContribution
-            ) {
-              node = possiblePreambleContribution;
-              var ownerDocument = parentInstance.ownerDocument;
-              node & PREAMBLE_CONTRIBUTION_HTML &&
-                releaseSingletonInstance(ownerDocument.documentElement);
-              node & PREAMBLE_CONTRIBUTION_BODY &&
-                releaseSingletonInstance(ownerDocument.body);
-              if (node & PREAMBLE_CONTRIBUTION_HEAD)
-                for (
-                  node = ownerDocument.head,
-                    releaseSingletonInstance(node),
-                    ownerDocument = node.firstChild;
-                  ownerDocument;
-
-                ) {
-                  var nextNode$jscomp$0 = ownerDocument.nextSibling,
-                    nodeName = ownerDocument.nodeName;
-                  ownerDocument[internalHoistableMarker] ||
-                    "SCRIPT" === nodeName ||
-                    "STYLE" === nodeName ||
-                    ("LINK" === nodeName &&
-                      "stylesheet" === ownerDocument.rel.toLowerCase()) ||
-                    node.removeChild(ownerDocument);
-                  ownerDocument = nextNode$jscomp$0;
-                }
-            }
             if (0 === depth) {
               parentInstance.removeChild(nextNode);
               retryIfBlockedOn(suspenseInstance);
@@ -21536,12 +21368,10 @@
             }
             depth--;
           } else
-            node === SUSPENSE_START_DATA ||
-            node === SUSPENSE_PENDING_START_DATA ||
-            node === SUSPENSE_FALLBACK_START_DATA
-              ? depth++
-              : (possiblePreambleContribution = node.charCodeAt(0) - 48);
-        else possiblePreambleContribution = 0;
+            (node !== SUSPENSE_START_DATA &&
+              node !== SUSPENSE_PENDING_START_DATA &&
+              node !== SUSPENSE_FALLBACK_START_DATA) ||
+              depth++;
         node = nextNode;
       } while (node);
       retryIfBlockedOn(suspenseInstance);
@@ -21615,7 +21445,6 @@
     }
     function startViewTransition(
       rootContainer,
-      transitionTypes,
       mutationCallback,
       layoutCallback,
       afterMutationCallback,
@@ -21662,7 +21491,7 @@
               );
             afterMutationCallback();
           },
-          types: transitionTypes
+          types: null
         });
         ownerDocument.__reactViewTransition = transition;
         transition.ready.then(void 0, function (reason) {
@@ -22036,10 +21865,7 @@
       instance,
       internalInstanceHandle
     ) {
-      if (
-        !instance[internalContainerInstanceKey] &&
-        getInstanceFromNode(instance)
-      ) {
+      if (getInstanceFromNode(instance)) {
         var tagName = instance.tagName.toLowerCase();
         console.error(
           "You are mounting a new %s component when a previous one has not first unmounted. It is an error to render more than one %s component at a time and attributes and children of these components will likely fail in unpredictable ways. Please only render a single instance of <%s> and if you need to mount a new one, ensure any previous ones have unmounted first.",
@@ -22064,17 +21890,10 @@
       instance[internalInstanceKey] = internalInstanceHandle;
       instance[internalPropsKey] = props;
     }
-    function releaseSingletonInstance(instance) {
-      for (var attributes = instance.attributes; attributes.length; )
-        instance.removeAttributeNode(attributes[0]);
-      detachDeletedInstance(instance);
-    }
     function getHoistableRoot(container) {
       return "function" === typeof container.getRootNode
         ? container.getRootNode()
-        : 9 === container.nodeType
-          ? container
-          : container.ownerDocument;
+        : container.ownerDocument;
     }
     function preconnectAs(rel, href, crossOrigin) {
       var ownerDocument = globalDocument;
@@ -22796,7 +22615,6 @@
       this.pooledCache = null;
       this.pooledCacheLanes = 0;
       this.formState = formState;
-      this.gestures = null;
       this.incompleteTransitions = new Map();
       this.passiveEffectDuration = this.effectDuration = -0;
       this.memoizedUpdaters = new Set();
@@ -23574,7 +23392,7 @@
       clz32 = Math.clz32 ? Math.clz32 : clz32Fallback,
       log = Math.log,
       LN2 = Math.LN2,
-      nextTransitionLane = 256,
+      nextTransitionLane = 128,
       nextRetryLane = 4194304,
       DiscreteEventPriority = 2,
       ContinuousEventPriority = 8,
@@ -23698,8 +23516,7 @@
         pTagInButtonScope: null,
         listItemTagAutoclosing: null,
         dlItemTagAutoclosing: null,
-        containerTagInScope: null,
-        implicitRootScope: !1
+        containerTagInScope: null
       },
       didWarn = {},
       shorthandToLonghand = {
@@ -25346,7 +25163,6 @@
         useCacheRefresh: throwInvalidHookError
       };
     ContextOnlyDispatcher.useEffectEvent = throwInvalidHookError;
-    ContextOnlyDispatcher.useSwipeTransition = throwInvalidHookError;
     var HooksDispatcherOnMountInDEV = null,
       HooksDispatcherOnMountWithHookTypesInDEV = null,
       HooksDispatcherOnUpdateInDEV = null,
@@ -25370,11 +25186,11 @@
         mountHookTypesDev();
         return readContext(context);
       },
-      useEffect: function (create, createDeps) {
+      useEffect: function (create, deps) {
         currentHookNameInDev = "useEffect";
         mountHookTypesDev();
-        checkDepsAreArrayDev(createDeps);
-        return mountEffect(create, createDeps);
+        checkDepsAreArrayDev(deps);
+        return mountEffect(create, deps);
       },
       useImperativeHandle: function (ref, create, deps) {
         currentHookNameInDev = "useImperativeHandle";
@@ -25492,11 +25308,6 @@
         currentHookNameInDev = "useEffectEvent";
         mountHookTypesDev();
         return mountEvent(callback);
-      },
-      useSwipeTransition: function (previous, current) {
-        currentHookNameInDev = "useSwipeTransition";
-        mountHookTypesDev();
-        return mountSwipeTransition(previous, current);
       }
     };
     HooksDispatcherOnMountWithHookTypesInDEV = {
@@ -25514,10 +25325,10 @@
         updateHookTypesDev();
         return readContext(context);
       },
-      useEffect: function (create, createDeps) {
+      useEffect: function (create, deps) {
         currentHookNameInDev = "useEffect";
         updateHookTypesDev();
-        return mountEffect(create, createDeps);
+        return mountEffect(create, deps);
       },
       useImperativeHandle: function (ref, create, deps) {
         currentHookNameInDev = "useImperativeHandle";
@@ -25631,11 +25442,6 @@
         currentHookNameInDev = "useEffectEvent";
         updateHookTypesDev();
         return mountEvent(callback);
-      },
-      useSwipeTransition: function (previous, current) {
-        currentHookNameInDev = "useSwipeTransition";
-        updateHookTypesDev();
-        return updateSwipeTransition(previous, current);
       }
     };
     HooksDispatcherOnUpdateInDEV = {
@@ -25653,10 +25459,10 @@
         updateHookTypesDev();
         return readContext(context);
       },
-      useEffect: function (create, createDeps) {
+      useEffect: function (create, deps) {
         currentHookNameInDev = "useEffect";
         updateHookTypesDev();
-        updateEffectImpl(2048, Passive, create, createDeps);
+        updateEffectImpl(2048, Passive, create, deps);
       },
       useImperativeHandle: function (ref, create, deps) {
         currentHookNameInDev = "useImperativeHandle";
@@ -25770,11 +25576,6 @@
         currentHookNameInDev = "useEffectEvent";
         updateHookTypesDev();
         return updateEvent(callback);
-      },
-      useSwipeTransition: function (previous, current) {
-        currentHookNameInDev = "useSwipeTransition";
-        updateHookTypesDev();
-        return updateSwipeTransition(previous, current);
       }
     };
     HooksDispatcherOnRerenderInDEV = {
@@ -25792,10 +25593,10 @@
         updateHookTypesDev();
         return readContext(context);
       },
-      useEffect: function (create, createDeps) {
+      useEffect: function (create, deps) {
         currentHookNameInDev = "useEffect";
         updateHookTypesDev();
-        updateEffectImpl(2048, Passive, create, createDeps);
+        updateEffectImpl(2048, Passive, create, deps);
       },
       useImperativeHandle: function (ref, create, deps) {
         currentHookNameInDev = "useImperativeHandle";
@@ -25909,11 +25710,6 @@
         currentHookNameInDev = "useEffectEvent";
         updateHookTypesDev();
         return updateEvent(callback);
-      },
-      useSwipeTransition: function (previous, current) {
-        currentHookNameInDev = "useSwipeTransition";
-        updateHookTypesDev();
-        return updateSwipeTransition(previous, current);
       }
     };
     InvalidNestedHooksDispatcherOnMountInDEV = {
@@ -25937,11 +25733,11 @@
         mountHookTypesDev();
         return readContext(context);
       },
-      useEffect: function (create, createDeps) {
+      useEffect: function (create, deps) {
         currentHookNameInDev = "useEffect";
         warnInvalidHookAccess();
         mountHookTypesDev();
-        return mountEffect(create, createDeps);
+        return mountEffect(create, deps);
       },
       useImperativeHandle: function (ref, create, deps) {
         currentHookNameInDev = "useImperativeHandle";
@@ -26073,12 +25869,6 @@
         warnInvalidHookAccess();
         mountHookTypesDev();
         return mountEvent(callback);
-      },
-      useSwipeTransition: function (previous, current) {
-        currentHookNameInDev = "useSwipeTransition";
-        warnInvalidHookAccess();
-        mountHookTypesDev();
-        return mountSwipeTransition(previous, current);
       }
     };
     InvalidNestedHooksDispatcherOnUpdateInDEV = {
@@ -26102,11 +25892,11 @@
         updateHookTypesDev();
         return readContext(context);
       },
-      useEffect: function (create, createDeps) {
+      useEffect: function (create, deps) {
         currentHookNameInDev = "useEffect";
         warnInvalidHookAccess();
         updateHookTypesDev();
-        updateEffectImpl(2048, Passive, create, createDeps);
+        updateEffectImpl(2048, Passive, create, deps);
       },
       useImperativeHandle: function (ref, create, deps) {
         currentHookNameInDev = "useImperativeHandle";
@@ -26238,12 +26028,6 @@
         warnInvalidHookAccess();
         updateHookTypesDev();
         return updateEvent(callback);
-      },
-      useSwipeTransition: function (previous, current) {
-        currentHookNameInDev = "useSwipeTransition";
-        warnInvalidHookAccess();
-        updateHookTypesDev();
-        return updateSwipeTransition(previous, current);
       }
     };
     InvalidNestedHooksDispatcherOnRerenderInDEV = {
@@ -26267,11 +26051,11 @@
         updateHookTypesDev();
         return readContext(context);
       },
-      useEffect: function (create, createDeps) {
+      useEffect: function (create, deps) {
         currentHookNameInDev = "useEffect";
         warnInvalidHookAccess();
         updateHookTypesDev();
-        updateEffectImpl(2048, Passive, create, createDeps);
+        updateEffectImpl(2048, Passive, create, deps);
       },
       useImperativeHandle: function (ref, create, deps) {
         currentHookNameInDev = "useImperativeHandle";
@@ -26403,12 +26187,6 @@
         warnInvalidHookAccess();
         updateHookTypesDev();
         return updateEvent(callback);
-      },
-      useSwipeTransition: function (previous, current) {
-        currentHookNameInDev = "useSwipeTransition";
-        warnInvalidHookAccess();
-        updateHookTypesDev();
-        return updateSwipeTransition(previous, current);
       }
     };
     var callComponent = {
@@ -26497,7 +26275,7 @@
         "react-stack-bottom-frame": function (effect) {
           null != effect.resourceKind &&
             console.error(
-              "Expected only SimpleEffects when enableUseEffectCRUDOverload is disabled, got %s",
+              "Expected only SimpleEffects when enableUseResourceEffectHook is disabled, got %s",
               effect.resourceKind
             );
           var create = effect.create;
@@ -26655,7 +26433,6 @@
       inProgressLanes = null,
       inProgressRoot = null,
       shouldStartViewTransition = !1,
-      appearingViewTransitions = null,
       viewTransitionContextChanged = !1,
       viewTransitionCancelableChildren = null,
       viewTransitionHostInstanceIdx = 0,
@@ -26749,6 +26526,7 @@
       workInProgressSuspendedRetryLanes = 0,
       workInProgressRootConcurrentErrors = null,
       workInProgressRootRecoverableErrors = null,
+      workInProgressAppearingViewTransitions = null,
       workInProgressRootDidIncludeRecursiveRenderUpdate = !1,
       globalMostRecentFallbackTime = 0,
       FALLBACK_THROTTLE_MS = 300,
@@ -26774,7 +26552,6 @@
       pendingPassiveTransitions = null,
       pendingRecoverableErrors = null,
       pendingViewTransitionEvents = null,
-      pendingTransitionTypes = null,
       pendingSuspendedCommitReason = IMMEDIATE_COMMIT,
       NESTED_UPDATE_LIMIT = 50,
       nestedUpdateCount = 0,
@@ -26878,9 +26655,6 @@
       SUSPENSE_END_DATA = "/$",
       SUSPENSE_PENDING_START_DATA = "$?",
       SUSPENSE_FALLBACK_START_DATA = "$!",
-      PREAMBLE_CONTRIBUTION_HTML = 1,
-      PREAMBLE_CONTRIBUTION_BODY = 2,
-      PREAMBLE_CONTRIBUTION_HEAD = 4,
       FORM_STATE_IS_MATCHING = "F!",
       FORM_STATE_IS_NOT_MATCHING = "F",
       DOCUMENT_READY_STATE_COMPLETE = "complete",
@@ -26939,8 +26713,7 @@
       }
       return result;
     };
-    var previousHydratableOnEnteringScopedSingleton = null,
-      NotLoaded = 0,
+    var NotLoaded = 0,
       Loaded = 1,
       Errored = 2,
       Settled = 3,
@@ -27355,11 +27128,11 @@
     };
     (function () {
       var isomorphicReactPackageVersion = React.version;
-      if ("19.1.0-experimental-e670e72f-20250214" !== isomorphicReactPackageVersion)
+      if ("19.1.0-experimental-b3a95caf-20250113" !== isomorphicReactPackageVersion)
         throw Error(
           'Incompatible React versions: The "react" and "react-dom" packages must have the exact same version. Instead got:\n  - react:      ' +
             (isomorphicReactPackageVersion +
-              "\n  - react-dom:  19.1.0-experimental-e670e72f-20250214\nLearn more: https://react.dev/warnings/version-mismatch")
+              "\n  - react-dom:  19.1.0-experimental-b3a95caf-20250113\nLearn more: https://react.dev/warnings/version-mismatch")
         );
     })();
     ("function" === typeof Map &&
@@ -27396,10 +27169,10 @@
       !(function () {
         var internals = {
           bundleType: 1,
-          version: "19.1.0-experimental-e670e72f-20250214",
+          version: "19.1.0-experimental-b3a95caf-20250113",
           rendererPackageName: "react-dom",
           currentDispatcherRef: ReactSharedInternals,
-          reconcilerVersion: "19.1.0-experimental-e670e72f-20250214"
+          reconcilerVersion: "19.1.0-experimental-b3a95caf-20250113"
         };
         internals.overrideHookState = overrideHookState;
         internals.overrideHookStateDeletePath = overrideHookStateDeletePath;
@@ -27489,7 +27262,9 @@
         null
       );
       container[internalContainerInstanceKey] = options.current;
-      listenToAllSupportedEvents(container);
+      listenToAllSupportedEvents(
+        8 === container.nodeType ? container.parentNode : container
+      );
       return new ReactDOMRoot(options);
     };
     exports.createTestNameSelector = function (id) {
@@ -27707,5 +27482,5 @@
         }
       };
     };
-    exports.version = "19.1.0-experimental-e670e72f-20250214";
+    exports.version = "19.1.0-experimental-b3a95caf-20250113";
   })();
diff --git a/node_modules/react-dom/cjs/react-dom-unstable_testing.production.js b/node_modules/react-dom/cjs/react-dom-unstable_testing.production.js
index 1c0117d..a0b17ff 100644
--- a/node_modules/react-dom/cjs/react-dom-unstable_testing.production.js
+++ b/node_modules/react-dom/cjs/react-dom-unstable_testing.production.js
@@ -259,36 +259,38 @@ function pushHostContainer(fiber, nextRootInstance) {
   push(rootInstanceStackCursor, nextRootInstance);
   push(contextFiberStackCursor, fiber);
   push(contextStackCursor, null);
-  switch (nextRootInstance.nodeType) {
+  fiber = nextRootInstance.nodeType;
+  switch (fiber) {
     case 9:
     case 11:
-      fiber = (fiber = nextRootInstance.documentElement)
-        ? (fiber = fiber.namespaceURI)
-          ? getOwnHostContext(fiber)
+      nextRootInstance = (nextRootInstance = nextRootInstance.documentElement)
+        ? (nextRootInstance = nextRootInstance.namespaceURI)
+          ? getOwnHostContext(nextRootInstance)
           : 0
         : 0;
       break;
     default:
       if (
-        ((fiber = nextRootInstance.tagName),
-        (nextRootInstance = nextRootInstance.namespaceURI))
+        ((fiber = 8 === fiber ? nextRootInstance.parentNode : nextRootInstance),
+        (nextRootInstance = fiber.tagName),
+        (fiber = fiber.namespaceURI))
       )
-        (nextRootInstance = getOwnHostContext(nextRootInstance)),
-          (fiber = getChildHostContextProd(nextRootInstance, fiber));
+        (fiber = getOwnHostContext(fiber)),
+          (nextRootInstance = getChildHostContextProd(fiber, nextRootInstance));
       else
-        switch (fiber) {
+        switch (nextRootInstance) {
           case "svg":
-            fiber = 1;
+            nextRootInstance = 1;
             break;
           case "math":
-            fiber = 2;
+            nextRootInstance = 2;
             break;
           default:
-            fiber = 0;
+            nextRootInstance = 0;
         }
   }
   pop(contextStackCursor);
-  push(contextStackCursor, fiber);
+  push(contextStackCursor, nextRootInstance);
 }
 function popHostContainer() {
   pop(contextStackCursor);
@@ -340,7 +342,7 @@ function clz32Fallback(x) {
   x >>>= 0;
   return 0 === x ? 32 : (31 - ((log(x) / LN2) | 0)) | 0;
 }
-var nextTransitionLane = 256,
+var nextTransitionLane = 128,
   nextRetryLane = 4194304;
 function getHighestPriorityLanes(lanes) {
   var pendingSyncLanes = lanes & 42;
@@ -361,7 +363,6 @@ function getHighestPriorityLanes(lanes) {
     case 64:
       return 64;
     case 128:
-      return 128;
     case 256:
     case 512:
     case 1024:
@@ -376,7 +377,7 @@ function getHighestPriorityLanes(lanes) {
     case 524288:
     case 1048576:
     case 2097152:
-      return lanes & 4194048;
+      return lanes & 4194176;
     case 4194304:
     case 8388608:
     case 16777216:
@@ -432,7 +433,7 @@ function getNextLanes(root, wipLanes, rootHasPendingCommit) {
         ((suspendedLanes = nextLanes & -nextLanes),
         (rootHasPendingCommit = wipLanes & -wipLanes),
         suspendedLanes >= rootHasPendingCommit ||
-          (32 === suspendedLanes && 0 !== (rootHasPendingCommit & 4194048)))
+          (32 === suspendedLanes && 0 !== (rootHasPendingCommit & 4194176)))
       ? wipLanes
       : nextLanes;
 }
@@ -450,10 +451,10 @@ function computeExpirationTime(lane, currentTime) {
     case 2:
     case 4:
     case 8:
-    case 64:
       return currentTime + 250;
     case 16:
     case 32:
+    case 64:
     case 128:
     case 256:
     case 512:
@@ -488,7 +489,7 @@ function computeExpirationTime(lane, currentTime) {
 function claimNextTransitionLane() {
   var lane = nextTransitionLane;
   nextTransitionLane <<= 1;
-  0 === (nextTransitionLane & 4194048) && (nextTransitionLane = 256);
+  0 === (nextTransitionLane & 4194176) && (nextTransitionLane = 128);
   return lane;
 }
 function claimNextRetryLane() {
@@ -562,7 +563,7 @@ function markSpawnedDeferredLane(root, spawnedLane, entangledLanes) {
   root.entanglements[spawnedLaneIndex] =
     root.entanglements[spawnedLaneIndex] |
     1073741824 |
-    (entangledLanes & 4194090);
+    (entangledLanes & 4194218);
 }
 function markRootEntangled(root, entangledLanes) {
   var rootEntangledLanes = (root.entangledLanes |= entangledLanes);
@@ -585,6 +586,7 @@ function getBumpedLaneForHydrationByLane(lane) {
     case 32:
       lane = 16;
       break;
+    case 128:
     case 256:
     case 512:
     case 1024:
@@ -603,7 +605,7 @@ function getBumpedLaneForHydrationByLane(lane) {
     case 8388608:
     case 16777216:
     case 33554432:
-      lane = 128;
+      lane = 64;
       break;
     case 268435456:
       lane = 134217728;
@@ -2107,19 +2109,19 @@ function getTargetInstForChangeEvent(domEventName, targetInst) {
 }
 var isInputEventSupported = !1;
 if (canUseDOM) {
-  var JSCompiler_inline_result$jscomp$289;
+  var JSCompiler_inline_result$jscomp$286;
   if (canUseDOM) {
-    var isSupported$jscomp$inline_431 = "oninput" in document;
-    if (!isSupported$jscomp$inline_431) {
-      var element$jscomp$inline_432 = document.createElement("div");
-      element$jscomp$inline_432.setAttribute("oninput", "return;");
-      isSupported$jscomp$inline_431 =
-        "function" === typeof element$jscomp$inline_432.oninput;
+    var isSupported$jscomp$inline_428 = "oninput" in document;
+    if (!isSupported$jscomp$inline_428) {
+      var element$jscomp$inline_429 = document.createElement("div");
+      element$jscomp$inline_429.setAttribute("oninput", "return;");
+      isSupported$jscomp$inline_428 =
+        "function" === typeof element$jscomp$inline_429.oninput;
     }
-    JSCompiler_inline_result$jscomp$289 = isSupported$jscomp$inline_431;
-  } else JSCompiler_inline_result$jscomp$289 = !1;
+    JSCompiler_inline_result$jscomp$286 = isSupported$jscomp$inline_428;
+  } else JSCompiler_inline_result$jscomp$286 = !1;
   isInputEventSupported =
-    JSCompiler_inline_result$jscomp$289 &&
+    JSCompiler_inline_result$jscomp$286 &&
     (!document.documentMode || 9 < document.documentMode);
 }
 function stopWatchingForValueChange() {
@@ -2431,11 +2433,6 @@ function enqueueConcurrentRenderForLane(fiber, lane) {
   enqueueUpdate$1(fiber, null, null, lane);
   return getRootForUpdatedFiber(fiber);
 }
-function enqueueGestureRender(fiber) {
-  fiber = markUpdateLaneFromFiberToRoot(fiber, null, 64);
-  null !== fiber && markRootUpdated$1(fiber, 64);
-  return fiber;
-}
 function markUpdateLaneFromFiberToRoot(sourceFiber, update, lane) {
   sourceFiber.lanes |= lane;
   var alternate = sourceFiber.alternate;
@@ -2449,19 +2446,17 @@ function markUpdateLaneFromFiberToRoot(sourceFiber, update, lane) {
         null === sourceFiber || sourceFiber._visibility & 1 || (isHidden = !0)),
       (sourceFiber = parent),
       (parent = parent.return);
-  return 3 === sourceFiber.tag
-    ? ((parent = sourceFiber.stateNode),
-      isHidden &&
-        null !== update &&
-        ((isHidden = 31 - clz32(lane)),
-        (sourceFiber = parent.hiddenUpdates),
-        (alternate = sourceFiber[isHidden]),
-        null === alternate
-          ? (sourceFiber[isHidden] = [update])
-          : alternate.push(update),
-        (update.lane = lane | 536870912)),
-      parent)
-    : null;
+  isHidden &&
+    null !== update &&
+    3 === sourceFiber.tag &&
+    ((parent = sourceFiber.stateNode),
+    (isHidden = 31 - clz32(lane)),
+    (parent = parent.hiddenUpdates),
+    (sourceFiber = parent[isHidden]),
+    null === sourceFiber
+      ? (parent[isHidden] = [update])
+      : sourceFiber.push(update),
+    (update.lane = lane | 536870912));
 }
 function getRootForUpdatedFiber(sourceFiber) {
   if (50 < nestedUpdateCount)
@@ -2745,7 +2740,7 @@ function enqueueUpdate(fiber, update, lane) {
 }
 function entangleTransitions(root, fiber, lane) {
   fiber = fiber.updateQueue;
-  if (null !== fiber && ((fiber = fiber.shared), 0 !== (lane & 4194048))) {
+  if (null !== fiber && ((fiber = fiber.shared), 0 !== (lane & 4194176))) {
     var queueLanes = fiber.lanes;
     queueLanes &= root.pendingLanes;
     lane |= queueLanes;
@@ -3276,28 +3271,6 @@ function getSuspendedCache() {
     ? null
     : { parent: CacheContext._currentValue, pool: cacheFromPool };
 }
-function scheduleGesture(root, provider) {
-  for (var prev = root.gestures; null !== prev; ) {
-    if (prev.provider === provider) return prev.count++, prev;
-    var next = prev.next;
-    if (null === next) break;
-    prev = next;
-  }
-  provider = { provider: provider, count: 1, prev: prev, next: null };
-  null === prev ? (root.gestures = provider) : (prev.next = provider);
-  ensureRootIsScheduled(root);
-  return provider;
-}
-function deleteScheduledGesture(root, gesture) {
-  null === gesture.prev
-    ? root.gestures === gesture &&
-      ((root.gestures = gesture.next),
-      null === root.gestures && (root.pendingLanes &= -65))
-    : ((gesture.prev.next = gesture.next),
-      null !== gesture.next && (gesture.next.prev = gesture.prev),
-      (gesture.prev = null),
-      (gesture.next = null));
-}
 var renderLanes = 0,
   currentlyRenderingFiber = null,
   currentHook = null,
@@ -3682,8 +3655,9 @@ function updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
   snapshotChanged &&
     ((hook.memoizedState = getServerSnapshot), (didReceiveUpdate = !0));
   hook = hook.queue;
-  var create = subscribeToStore.bind(null, fiber, hook, subscribe);
-  updateEffectImpl(2048, 8, create, [subscribe]);
+  updateEffect(subscribeToStore.bind(null, fiber, hook, subscribe), [
+    subscribe
+  ]);
   if (
     hook.getSnapshot !== getSnapshot ||
     snapshotChanged ||
@@ -3704,7 +3678,7 @@ function updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
     );
     if (null === workInProgressRoot) throw Error(formatProdErrorMessage(349));
     isHydrating$jscomp$0 ||
-      0 !== (renderLanes & 124) ||
+      0 !== (renderLanes & 60) ||
       pushStoreConsistencyCheck(fiber, getSnapshot, getServerSnapshot);
   }
   return getServerSnapshot;
@@ -4031,8 +4005,8 @@ function rerenderActionState(action) {
   currentStateHook.memoizedState = action;
   return [stateHook, dispatch, !1];
 }
-function pushSimpleEffect(tag, inst, create, createDeps) {
-  tag = { tag: tag, create: create, deps: createDeps, inst: inst, next: null };
+function pushSimpleEffect(tag, inst, create, deps) {
+  tag = { tag: tag, create: create, deps: deps, inst: inst, next: null };
   inst = currentlyRenderingFiber.updateQueue;
   null === inst &&
     ((inst = createFunctionComponentUpdateQueue()),
@@ -4040,9 +4014,9 @@ function pushSimpleEffect(tag, inst, create, createDeps) {
   create = inst.lastEffect;
   null === create
     ? (inst.lastEffect = tag.next = tag)
-    : ((createDeps = create.next),
+    : ((deps = create.next),
       (create.next = tag),
-      (tag.next = createDeps),
+      (tag.next = deps),
       (inst.lastEffect = tag));
   return tag;
 }
@@ -4052,15 +4026,15 @@ function createEffectInstance() {
 function updateRef() {
   return updateWorkInProgressHook().memoizedState;
 }
-function mountEffectImpl(fiberFlags, hookFlags, create, createDeps) {
+function mountEffectImpl(fiberFlags, hookFlags, create, deps) {
   var hook = mountWorkInProgressHook();
-  createDeps = void 0 === createDeps ? null : createDeps;
+  deps = void 0 === deps ? null : deps;
   currentlyRenderingFiber.flags |= fiberFlags;
   hook.memoizedState = pushSimpleEffect(
     1 | hookFlags,
     createEffectInstance(),
     create,
-    createDeps
+    deps
   );
 }
 function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
@@ -4079,11 +4053,11 @@ function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
         deps
       )));
 }
-function mountEffect(create, createDeps) {
-  mountEffectImpl(8390656, 8, create, createDeps);
+function mountEffect(create, deps) {
+  mountEffectImpl(8390656, 8, create, deps);
 }
-function updateEffect(create, createDeps) {
-  updateEffectImpl(2048, 8, create, createDeps);
+function updateEffect(create, deps) {
+  updateEffectImpl(2048, 8, create, deps);
 }
 function useEffectEventImpl(payload) {
   currentlyRenderingFiber.flags |= 4;
@@ -4420,7 +4394,7 @@ function enqueueRenderPhaseUpdate(queue, update) {
   queue.pending = update;
 }
 function entangleTransitionUpdate(root, queue, lane) {
-  if (0 !== (lane & 4194048)) {
+  if (0 !== (lane & 4194176)) {
     var queueLanes = queue.lanes;
     queueLanes &= root.pendingLanes;
     lane |= queueLanes;
@@ -4428,49 +4402,6 @@ function entangleTransitionUpdate(root, queue, lane) {
     markRootEntangled(root, lane);
   }
 }
-function startGesture(fiber, queue, gestureProvider) {
-  var root = enqueueGestureRender(fiber);
-  if (null === root) return function () {};
-  var update = {
-    gesture: scheduleGesture(root, gestureProvider),
-    prev: null,
-    next: queue.pending
-  };
-  null !== queue.pending && (queue.pending.prev = update);
-  queue.pending = update;
-  return function () {
-    if (null === update.prev)
-      if (queue.pending === update) queue.pending = update.next;
-      else return;
-    else
-      (update.prev.next = update.next),
-        null !== update.next && (update.next.prev = update.prev),
-        (update.prev = null),
-        (update.next = null);
-    var cancelledGestured = update.gesture;
-    cancelledGestured.count--;
-    0 === cancelledGestured.count &&
-      deleteScheduledGesture(root, cancelledGestured);
-  };
-}
-function updateSwipeTransition(previous, current) {
-  var queue = updateWorkInProgressHook().queue,
-    startGestureOnHook = queue.dispatch;
-  if (64 === workInProgressRootRenderLanes) {
-    var root$46 = workInProgressRoot;
-    if (null === root$46) throw Error(formatProdErrorMessage(349));
-    root$46 = root$46.gestures;
-    for (var update = queue.pending; null !== update; ) {
-      if (root$46 === update.gesture) {
-        current = previous;
-        break;
-      }
-      update = update.next;
-    }
-  }
-  null !== queue.pending && (currentlyRenderingFiber.lanes |= 64);
-  return [current, startGestureOnHook];
-}
 var ContextOnlyDispatcher = {
   readContext: readContext,
   use: use,
@@ -4497,7 +4428,6 @@ var ContextOnlyDispatcher = {
   useCacheRefresh: throwInvalidHookError
 };
 ContextOnlyDispatcher.useEffectEvent = throwInvalidHookError;
-ContextOnlyDispatcher.useSwipeTransition = throwInvalidHookError;
 var HooksDispatcherOnMount = {
     readContext: readContext,
     use: use,
@@ -4609,7 +4539,7 @@ var HooksDispatcherOnMount = {
         getServerSnapshot = getSnapshot();
         if (null === workInProgressRoot)
           throw Error(formatProdErrorMessage(349));
-        0 !== (workInProgressRootRenderLanes & 124) ||
+        0 !== (workInProgressRootRenderLanes & 60) ||
           pushStoreConsistencyCheck(fiber, getSnapshot, getServerSnapshot);
       }
       hook.memoizedState = getServerSnapshot;
@@ -4687,16 +4617,6 @@ var HooksDispatcherOnMount = {
           throw Error(formatProdErrorMessage(440));
         return ref.impl.apply(void 0, arguments);
       };
-    },
-    useSwipeTransition: function (previous, current) {
-      previous = { pending: null, dispatch: null };
-      var startGestureOnHook = (previous.dispatch = startGesture.bind(
-        null,
-        currentlyRenderingFiber,
-        previous
-      ));
-      mountWorkInProgressHook().queue = previous;
-      return [current, startGestureOnHook];
     }
   },
   HooksDispatcherOnUpdate = {
@@ -4747,7 +4667,6 @@ var HooksDispatcherOnMount = {
     useCacheRefresh: updateRefresh
   };
 HooksDispatcherOnUpdate.useEffectEvent = updateEvent;
-HooksDispatcherOnUpdate.useSwipeTransition = updateSwipeTransition;
 var HooksDispatcherOnRerender = {
   readContext: readContext,
   use: use,
@@ -4801,7 +4720,6 @@ var HooksDispatcherOnRerender = {
   useCacheRefresh: updateRefresh
 };
 HooksDispatcherOnRerender.useEffectEvent = updateEvent;
-HooksDispatcherOnRerender.useSwipeTransition = updateSwipeTransition;
 var thenableState = null,
   thenableIndexCounter = 0;
 function unwrapThenable(thenable) {
@@ -5656,9 +5574,9 @@ function logUncaughtError(root, errorInfo) {
   try {
     var onUncaughtError = root.onUncaughtError;
     onUncaughtError(errorInfo.value, { componentStack: errorInfo.stack });
-  } catch (e$76) {
+  } catch (e$75) {
     setTimeout(function () {
-      throw e$76;
+      throw e$75;
     });
   }
 }
@@ -5669,9 +5587,9 @@ function logCaughtError(root, boundary, errorInfo) {
       componentStack: errorInfo.stack,
       errorBoundary: 1 === boundary.tag ? boundary.stateNode : null
     });
-  } catch (e$77) {
+  } catch (e$76) {
     setTimeout(function () {
-      throw e$77;
+      throw e$76;
     });
   }
 }
@@ -7191,15 +7109,15 @@ function beginWork(current, workInProgress, renderLanes) {
           workInProgress.stateNode.containerInfo
         );
         if (null === current) throw Error(formatProdErrorMessage(387));
-        lazyComponent = workInProgress.pendingProps;
-        var prevState = workInProgress.memoizedState;
-        init = prevState.element;
+        var nextProps = workInProgress.pendingProps;
+        init = workInProgress.memoizedState;
+        lazyComponent = init.element;
         cloneUpdateQueue(current, workInProgress);
-        processUpdateQueue(workInProgress, lazyComponent, null, renderLanes);
+        processUpdateQueue(workInProgress, nextProps, null, renderLanes);
         var nextState = workInProgress.memoizedState;
-        lazyComponent = nextState.cache;
-        pushProvider(workInProgress, CacheContext, lazyComponent);
-        lazyComponent !== prevState.cache &&
+        nextProps = nextState.cache;
+        pushProvider(workInProgress, CacheContext, nextProps);
+        nextProps !== init.cache &&
           propagateContextChanges(
             workInProgress,
             [CacheContext],
@@ -7207,68 +7125,62 @@ function beginWork(current, workInProgress, renderLanes) {
             !0
           );
         suspendIfUpdateReadFromEntangledAsyncAction();
-        lazyComponent = nextState.element;
-        if (prevState.isDehydrated)
+        nextProps = nextState.element;
+        if (init.isDehydrated)
           if (
-            ((prevState = {
-              element: lazyComponent,
+            ((init = {
+              element: nextProps,
               isDehydrated: !1,
               cache: nextState.cache
             }),
-            (workInProgress.updateQueue.baseState = prevState),
-            (workInProgress.memoizedState = prevState),
+            (workInProgress.updateQueue.baseState = init),
+            (workInProgress.memoizedState = init),
             workInProgress.flags & 256)
           ) {
             workInProgress = mountHostRootWithoutHydrating(
               current,
               workInProgress,
-              lazyComponent,
+              nextProps,
               renderLanes
             );
             break a;
-          } else if (lazyComponent !== init) {
-            init = createCapturedValueAtFiber(
+          } else if (nextProps !== lazyComponent) {
+            lazyComponent = createCapturedValueAtFiber(
               Error(formatProdErrorMessage(424)),
               workInProgress
             );
-            queueHydrationError(init);
+            queueHydrationError(lazyComponent);
             workInProgress = mountHostRootWithoutHydrating(
               current,
               workInProgress,
-              lazyComponent,
+              nextProps,
               renderLanes
             );
             break a;
-          } else {
-            current = workInProgress.stateNode.containerInfo;
-            switch (current.nodeType) {
-              case 9:
-                current = current.body;
-                break;
-              default:
-                current =
-                  "HTML" === current.nodeName
-                    ? current.ownerDocument.body
-                    : current;
-            }
-            nextHydratableInstance = getNextHydratable(current.firstChild);
-            hydrationParentFiber = workInProgress;
-            isHydrating = !0;
-            hydrationErrors = null;
-            rootOrSingletonContext = !0;
-            renderLanes = mountChildFibers(
-              workInProgress,
-              null,
-              lazyComponent,
-              renderLanes
-            );
-            for (workInProgress.child = renderLanes; renderLanes; )
+          } else
+            for (
+              nextHydratableInstance = getNextHydratable(
+                workInProgress.stateNode.containerInfo.firstChild
+              ),
+                hydrationParentFiber = workInProgress,
+                isHydrating = !0,
+                hydrationErrors = null,
+                rootOrSingletonContext = !0,
+                renderLanes = mountChildFibers(
+                  workInProgress,
+                  null,
+                  nextProps,
+                  renderLanes
+                ),
+                workInProgress.child = renderLanes;
+              renderLanes;
+
+            )
               (renderLanes.flags = (renderLanes.flags & -3) | 4096),
                 (renderLanes = renderLanes.sibling);
-          }
         else {
           resetHydrationState();
-          if (lazyComponent === init) {
+          if (nextProps === lazyComponent) {
             workInProgress = bailoutOnAlreadyFinishedWork(
               current,
               workInProgress,
@@ -7276,12 +7188,7 @@ function beginWork(current, workInProgress, renderLanes) {
             );
             break a;
           }
-          reconcileChildren(
-            current,
-            workInProgress,
-            lazyComponent,
-            renderLanes
-          );
+          reconcileChildren(current, workInProgress, nextProps, renderLanes);
         }
         workInProgress = workInProgress.child;
       }
@@ -7329,21 +7236,24 @@ function beginWork(current, workInProgress, renderLanes) {
             )),
           (hydrationParentFiber = workInProgress),
           (rootOrSingletonContext = !0),
-          (init = nextHydratableInstance),
-          isSingletonScope(workInProgress.type)
-            ? ((previousHydratableOnEnteringScopedSingleton = init),
-              (nextHydratableInstance = getNextHydratable(
-                lazyComponent.firstChild
-              )))
-            : (nextHydratableInstance = init)),
-        reconcileChildren(
-          current,
-          workInProgress,
-          workInProgress.pendingProps.children,
-          renderLanes
-        ),
+          (nextHydratableInstance = getNextHydratable(
+            lazyComponent.firstChild
+          ))),
+        (lazyComponent = workInProgress.pendingProps.children),
+        null !== current || isHydrating
+          ? reconcileChildren(
+              current,
+              workInProgress,
+              lazyComponent,
+              renderLanes
+            )
+          : (workInProgress.child = reconcileChildFibers(
+              workInProgress,
+              null,
+              lazyComponent,
+              renderLanes
+            )),
         markRef(current, workInProgress),
-        null === current && (workInProgress.flags |= 4194304),
         workInProgress.child
       );
     case 5:
@@ -7371,10 +7281,10 @@ function beginWork(current, workInProgress, renderLanes) {
           init && throwOnHydrationMismatch(workInProgress)),
         pushHostContext(workInProgress),
         (init = workInProgress.type),
-        (prevState = workInProgress.pendingProps),
+        (nextProps = workInProgress.pendingProps),
         (nextState = null !== current ? current.memoizedProps : null),
-        (lazyComponent = prevState.children),
-        shouldSetTextContent(init, prevState)
+        (lazyComponent = nextProps.children),
+        shouldSetTextContent(init, nextProps)
           ? (lazyComponent = null)
           : null !== nextState &&
             shouldSetTextContent(init, nextState) &&
@@ -7527,11 +7437,11 @@ function beginWork(current, workInProgress, renderLanes) {
           ? ((init = peekCacheFromPool()),
             null === init &&
               ((init = workInProgressRoot),
-              (prevState = createCache()),
-              (init.pooledCache = prevState),
-              prevState.refCount++,
-              null !== prevState && (init.pooledCacheLanes |= renderLanes),
-              (init = prevState)),
+              (nextProps = createCache()),
+              (init.pooledCache = nextProps),
+              nextProps.refCount++,
+              null !== nextProps && (init.pooledCacheLanes |= renderLanes),
+              (init = nextProps)),
             (workInProgress.memoizedState = {
               parent: lazyComponent,
               cache: init
@@ -7543,7 +7453,7 @@ function beginWork(current, workInProgress, renderLanes) {
               processUpdateQueue(workInProgress, null, null, renderLanes),
               suspendIfUpdateReadFromEntangledAsyncAction()),
             (init = current.memoizedState),
-            (prevState = workInProgress.memoizedState),
+            (nextProps = workInProgress.memoizedState),
             init.parent !== lazyComponent
               ? ((init = { parent: lazyComponent, cache: lazyComponent }),
                 (workInProgress.memoizedState = init),
@@ -7552,7 +7462,7 @@ function beginWork(current, workInProgress, renderLanes) {
                     workInProgress.updateQueue.baseState =
                       init),
                 pushProvider(workInProgress, CacheContext, lazyComponent))
-              : ((lazyComponent = prevState.cache),
+              : ((lazyComponent = nextProps.cache),
                 pushProvider(workInProgress, CacheContext, lazyComponent),
                 lazyComponent !== init.cache &&
                   propagateContextChanges(
@@ -7574,20 +7484,22 @@ function beginWork(current, workInProgress, renderLanes) {
         (lazyComponent = workInProgress.pendingProps),
         (init = workInProgress.stateNode),
         null != lazyComponent.name && "auto" !== lazyComponent.name
-          ? (workInProgress.flags |= null === current ? 18882560 : 18874368)
+          ? ((workInProgress.flags |= 2097152),
+            null === current &&
+              trackAppearingViewTransition(init, lazyComponent.name))
           : null === init.autoName &&
-            ((prevState = workInProgressRoot.identifierPrefix),
+            ((nextProps = workInProgressRoot.identifierPrefix),
             isHydrating
               ? ((nextState = getTreeId()),
-                (prevState = "\u00ab" + prevState + "T" + nextState + "\u00bb"))
+                (nextProps = "\u00ab" + nextProps + "T" + nextState + "\u00bb"))
               : ((nextState = globalClientIdCounter++),
-                (prevState =
+                (nextProps =
                   "\u00ab" +
-                  prevState +
+                  nextProps +
                   "t" +
                   nextState.toString(32) +
                   "\u00bb")),
-            (init.autoName = prevState)),
+            (init.autoName = nextProps)),
         null !== current && current.memoizedProps.name !== lazyComponent.name
           ? (workInProgress.flags |= 4194816)
           : markRef(current, workInProgress),
@@ -7644,10 +7556,9 @@ function commitHookEffectListUnmount(
           if (void 0 !== destroy) {
             inst.destroy = void 0;
             lastEffect = finishedWork;
-            var nearestMountedAncestor = nearestMountedAncestor$jscomp$0,
-              destroy_ = destroy;
+            var nearestMountedAncestor = nearestMountedAncestor$jscomp$0;
             try {
-              destroy_();
+              destroy();
             } catch (error) {
               captureCommitPhaseError(
                 lastEffect,
@@ -7736,8 +7647,8 @@ function safelyDetachRef(current, nearestMountedAncestor) {
     else if ("function" === typeof ref)
       try {
         ref(null);
-      } catch (error$116) {
-        captureCommitPhaseError(current, nearestMountedAncestor, error$116);
+      } catch (error$115) {
+        captureCommitPhaseError(current, nearestMountedAncestor, error$115);
       }
     else ref.current = null;
 }
@@ -7776,7 +7687,7 @@ function isHostParent(fiber) {
     5 === fiber.tag ||
     3 === fiber.tag ||
     26 === fiber.tag ||
-    (27 === fiber.tag && isSingletonScope(fiber.type)) ||
+    27 === fiber.tag ||
     4 === fiber.tag
   );
 }
@@ -7789,10 +7700,12 @@ function getHostSibling(fiber) {
     fiber.sibling.return = fiber.return;
     for (
       fiber = fiber.sibling;
-      5 !== fiber.tag && 6 !== fiber.tag && 18 !== fiber.tag;
+      5 !== fiber.tag &&
+      6 !== fiber.tag &&
+      27 !== fiber.tag &&
+      18 !== fiber.tag;
 
     ) {
-      if (27 === fiber.tag && isSingletonScope(fiber.type)) continue a;
       if (fiber.flags & 2) continue a;
       if (null === fiber.child || 4 === fiber.tag) continue a;
       else (fiber.child.return = fiber), (fiber = fiber.child);
@@ -7805,32 +7718,18 @@ function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {
   if (5 === tag || 6 === tag)
     (node = node.stateNode),
       before
-        ? (9 === parent.nodeType
-            ? parent.body
-            : "HTML" === parent.nodeName
-              ? parent.ownerDocument.body
-              : parent
-          ).insertBefore(node, before)
-        : ((before =
-            9 === parent.nodeType
-              ? parent.body
-              : "HTML" === parent.nodeName
-                ? parent.ownerDocument.body
-                : parent),
-          before.appendChild(node),
+        ? 8 === parent.nodeType
+          ? parent.parentNode.insertBefore(node, before)
+          : parent.insertBefore(node, before)
+        : (8 === parent.nodeType
+            ? ((before = parent.parentNode), before.insertBefore(node, parent))
+            : ((before = parent), before.appendChild(node)),
           (parent = parent._reactRootContainer),
           (null !== parent && void 0 !== parent) ||
             null !== before.onclick ||
             (before.onclick = noop$1)),
       (viewTransitionMutationContext = !0);
-  else if (
-    4 !== tag &&
-    (27 === tag &&
-      isSingletonScope(node.type) &&
-      ((parent = node.stateNode), (before = null)),
-    (node = node.child),
-    null !== node)
-  )
+  else if (4 !== tag && 27 !== tag && ((node = node.child), null !== node))
     for (
       insertOrAppendPlacementNodeIntoContainer(node, before, parent),
         node = node.sibling;
@@ -7846,12 +7745,7 @@ function insertOrAppendPlacementNode(node, before, parent) {
     (node = node.stateNode),
       before ? parent.insertBefore(node, before) : parent.appendChild(node),
       (viewTransitionMutationContext = !0);
-  else if (
-    4 !== tag &&
-    (27 === tag && isSingletonScope(node.type) && (parent = node.stateNode),
-    (node = node.child),
-    null !== node)
-  )
+  else if (4 !== tag && 27 !== tag && ((node = node.child), null !== node))
     for (
       insertOrAppendPlacementNode(node, before, parent), node = node.sibling;
       null !== node;
@@ -7859,33 +7753,20 @@ function insertOrAppendPlacementNode(node, before, parent) {
     )
       insertOrAppendPlacementNode(node, before, parent), (node = node.sibling);
 }
-function commitHostSingletonAcquisition(finishedWork) {
-  var singleton = finishedWork.stateNode,
-    props = finishedWork.memoizedProps;
-  try {
-    for (
-      var type = finishedWork.type, attributes = singleton.attributes;
-      attributes.length;
-
-    )
-      singleton.removeAttributeNode(attributes[0]);
-    setInitialProperties(singleton, type, props);
-    singleton[internalInstanceKey] = finishedWork;
-    singleton[internalPropsKey] = props;
-  } catch (error) {
-    captureCommitPhaseError(finishedWork, finishedWork.return, error);
-  }
-}
 var offscreenSubtreeIsHidden = !1,
   offscreenSubtreeWasHidden = !1,
   needsFormReset = !1,
   PossiblyWeakSet = "function" === typeof WeakSet ? WeakSet : Set,
   nextEffect = null,
   shouldStartViewTransition = !1,
-  appearingViewTransitions = null,
   viewTransitionContextChanged = !1,
   viewTransitionCancelableChildren = null;
-function commitBeforeMutationEffects(root, firstChild, committedLanes) {
+function commitBeforeMutationEffects(
+  root,
+  firstChild,
+  committedLanes,
+  appearingViewTransitions
+) {
   root = root.containerInfo;
   eventsEnabled = _enabled;
   root = getActiveElementDeep(root);
@@ -7956,7 +7837,7 @@ function commitBeforeMutationEffects(root, firstChild, committedLanes) {
   } else JSCompiler_temp = null;
   selectionInformation = { focusedElem: root, selectionRange: JSCompiler_temp };
   shouldStartViewTransition = _enabled = !1;
-  committedLanes = (committedLanes & 335544064) === committedLanes;
+  committedLanes = (committedLanes & 335544192) === committedLanes;
   nextEffect = firstChild;
   for (firstChild = committedLanes ? 9238 : 1028; null !== nextEffect; ) {
     root = nextEffect;
@@ -7970,7 +7851,10 @@ function commitBeforeMutationEffects(root, firstChild, committedLanes) {
         anchorOffset++
       )
         committedLanes &&
-          commitExitViewTransitions(JSCompiler_temp[anchorOffset]);
+          commitExitViewTransitions(
+            JSCompiler_temp[anchorOffset],
+            appearingViewTransitions
+          );
     if (null === root.alternate && 0 !== (root.flags & 2))
       commitBeforeMutationEffects_complete(committedLanes);
     else {
@@ -7979,7 +7863,10 @@ function commitBeforeMutationEffects(root, firstChild, committedLanes) {
           null !== JSCompiler_temp &&
             null === JSCompiler_temp.memoizedState &&
             committedLanes &&
-            commitExitViewTransitions(JSCompiler_temp);
+            commitExitViewTransitions(
+              JSCompiler_temp,
+              appearingViewTransitions
+            );
           commitBeforeMutationEffects_complete(committedLanes);
           continue;
         } else if (
@@ -7996,7 +7883,6 @@ function commitBeforeMutationEffects(root, firstChild, committedLanes) {
           commitBeforeMutationEffects_complete(committedLanes));
     }
   }
-  appearingViewTransitions = null;
 }
 function commitBeforeMutationEffects_complete(
   isViewTransitionEligible$jscomp$0
@@ -8177,13 +8063,13 @@ function restoreViewTransitionOnHostInstances(
   }
 }
 function commitAppearingPairViewTransitions(placement) {
-  if (0 !== (placement.subtreeFlags & 18874368))
+  if (0 !== (placement.subtreeFlags & 2097152))
     for (placement = placement.child; null !== placement; ) {
       if (22 !== placement.tag || null !== placement.memoizedState)
         if (
           (commitAppearingPairViewTransitions(placement),
           30 === placement.tag &&
-            0 !== (placement.flags & 18874368) &&
+            0 !== (placement.flags & 2097152) &&
             placement.stateNode.paired)
         ) {
           var props = placement.memoizedProps;
@@ -8232,49 +8118,46 @@ function commitEnterViewTransitions(placement) {
       commitEnterViewTransitions(placement), (placement = placement.sibling);
   else commitAppearingPairViewTransitions(placement);
 }
-function commitDeletedPairViewTransitions(deletion) {
+function commitDeletedPairViewTransitions(deletion, appearingViewTransitions) {
   if (
-    null !== appearingViewTransitions &&
-    0 !== appearingViewTransitions.size
-  ) {
-    var pairs = appearingViewTransitions;
-    if (0 !== (deletion.subtreeFlags & 18874368))
-      for (deletion = deletion.child; null !== deletion; ) {
-        if (22 !== deletion.tag || null !== deletion.memoizedState) {
-          if (30 === deletion.tag && 0 !== (deletion.flags & 18874368)) {
-            var props = deletion.memoizedProps,
-              name = props.name;
-            if (null != name && "auto" !== name) {
-              var pair = pairs.get(name);
-              if (void 0 !== pair) {
-                var className = getViewTransitionClassName(
-                  props.className,
-                  props.share
-                );
-                "none" !== className &&
-                  ((viewTransitionHostInstanceIdx = 0),
-                  applyViewTransitionToHostInstances(
-                    deletion.child,
-                    name,
-                    className,
-                    null,
-                    !1
-                  )
-                    ? ((pair.paired = deletion.stateNode),
-                      scheduleViewTransitionEvent(deletion, props.onShare))
-                    : restoreViewTransitionOnHostInstances(deletion.child, !1));
-                pairs.delete(name);
-                if (0 === pairs.size) break;
-              }
+    0 !== appearingViewTransitions.size &&
+    0 !== (deletion.subtreeFlags & 2097152)
+  )
+    for (deletion = deletion.child; null !== deletion; ) {
+      if (22 !== deletion.tag || null !== deletion.memoizedState) {
+        if (30 === deletion.tag && 0 !== (deletion.flags & 2097152)) {
+          var props = deletion.memoizedProps,
+            name = props.name;
+          if (null != name && "auto" !== name) {
+            var pair = appearingViewTransitions.get(name);
+            if (void 0 !== pair) {
+              var className = getViewTransitionClassName(
+                props.className,
+                props.share
+              );
+              "none" !== className &&
+                ((viewTransitionHostInstanceIdx = 0),
+                applyViewTransitionToHostInstances(
+                  deletion.child,
+                  name,
+                  className,
+                  null,
+                  !1
+                )
+                  ? ((pair.paired = deletion.stateNode),
+                    scheduleViewTransitionEvent(deletion, props.onShare))
+                  : restoreViewTransitionOnHostInstances(deletion.child, !1));
+              appearingViewTransitions.delete(name);
+              if (0 === appearingViewTransitions.size) break;
             }
           }
-          commitDeletedPairViewTransitions(deletion);
         }
-        deletion = deletion.sibling;
+        commitDeletedPairViewTransitions(deletion, appearingViewTransitions);
       }
-  }
+      deletion = deletion.sibling;
+    }
 }
-function commitExitViewTransitions(deletion) {
+function commitExitViewTransitions(deletion, appearingViewTransitions) {
   if (30 === deletion.tag) {
     var props = deletion.memoizedProps,
       name = getViewTransitionName(props, deletion.stateNode),
@@ -8302,13 +8185,14 @@ function commitExitViewTransitions(deletion) {
           : scheduleViewTransitionEvent(deletion, props.onExit)
         : restoreViewTransitionOnHostInstances(deletion.child, !1));
     null !== appearingViewTransitions &&
-      commitDeletedPairViewTransitions(deletion);
+      commitDeletedPairViewTransitions(deletion, appearingViewTransitions);
   } else if (0 !== (deletion.subtreeFlags & 33554432))
     for (deletion = deletion.child; null !== deletion; )
-      commitExitViewTransitions(deletion), (deletion = deletion.sibling);
+      commitExitViewTransitions(deletion, appearingViewTransitions),
+        (deletion = deletion.sibling);
   else
     null !== appearingViewTransitions &&
-      commitDeletedPairViewTransitions(deletion);
+      commitDeletedPairViewTransitions(deletion, appearingViewTransitions);
 }
 function commitNestedViewTransitions(changedParent) {
   for (changedParent = changedParent.child; null !== changedParent; ) {
@@ -8332,10 +8216,10 @@ function commitNestedViewTransitions(changedParent) {
   }
 }
 function restorePairedViewTransitions(parent) {
-  if (0 !== (parent.subtreeFlags & 18874368))
+  if (0 !== (parent.subtreeFlags & 2097152))
     for (parent = parent.child; null !== parent; ) {
       if (22 !== parent.tag || null !== parent.memoizedState) {
-        if (30 === parent.tag && 0 !== (parent.flags & 18874368)) {
+        if (30 === parent.tag && 0 !== (parent.flags & 2097152)) {
           var instance = parent.stateNode;
           null !== instance.paired &&
             ((instance.paired = null),
@@ -8543,11 +8427,11 @@ function commitLayoutEffectOnFiber(finishedRoot, current, finishedWork) {
               current,
               finishedRoot.__reactInternalSnapshotBeforeUpdate
             );
-          } catch (error$115) {
+          } catch (error$114) {
             captureCommitPhaseError(
               finishedWork,
               finishedWork.return,
-              error$115
+              error$114
             );
           }
         }
@@ -8574,11 +8458,11 @@ function commitLayoutEffectOnFiber(finishedRoot, current, finishedWork) {
         }
       }
       break;
-    case 27:
-      null === current &&
-        flags & 4 &&
-        commitHostSingletonAcquisition(finishedWork);
     case 26:
+      recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
+      flags & 512 && safelyAttachRef(finishedWork, finishedWork.return);
+      break;
+    case 27:
     case 5:
       recursivelyTraverseLayoutEffects(finishedRoot, finishedWork);
       null === current && flags & 4 && commitHostMount(finishedWork);
@@ -8693,14 +8577,20 @@ function commitDeletionEffectsOnFiber(
         safelyDetachRef(deletedFiber, nearestMountedAncestor);
       var prevHostParent = hostParent,
         prevHostParentIsContainer = hostParentIsContainer;
-      isSingletonScope(deletedFiber.type) &&
-        ((hostParent = deletedFiber.stateNode), (hostParentIsContainer = !1));
+      hostParent = deletedFiber.stateNode;
       recursivelyTraverseDeletionEffects(
         finishedRoot,
         nearestMountedAncestor,
         deletedFiber
       );
-      releaseSingletonInstance(deletedFiber.stateNode);
+      deletedFiber = deletedFiber.stateNode;
+      for (
+        nearestMountedAncestor = deletedFiber.attributes;
+        nearestMountedAncestor.length;
+
+      )
+        deletedFiber.removeAttributeNode(nearestMountedAncestor[0]);
+      detachDeletedInstance(deletedFiber);
       hostParent = prevHostParent;
       hostParentIsContainer = prevHostParentIsContainer;
       break;
@@ -8708,25 +8598,24 @@ function commitDeletionEffectsOnFiber(
       offscreenSubtreeWasHidden ||
         safelyDetachRef(deletedFiber, nearestMountedAncestor);
     case 6:
-      prevHostParent = hostParent;
-      prevHostParentIsContainer = hostParentIsContainer;
+      prevHostParentIsContainer = hostParent;
+      var prevHostParentIsContainer$122 = hostParentIsContainer;
       hostParent = null;
       recursivelyTraverseDeletionEffects(
         finishedRoot,
         nearestMountedAncestor,
         deletedFiber
       );
-      hostParent = prevHostParent;
-      hostParentIsContainer = prevHostParentIsContainer;
+      hostParent = prevHostParentIsContainer;
+      hostParentIsContainer = prevHostParentIsContainer$122;
       if (null !== hostParent)
         if (hostParentIsContainer)
           try {
-            (9 === hostParent.nodeType
-              ? hostParent.body
-              : "HTML" === hostParent.nodeName
-                ? hostParent.ownerDocument.body
-                : hostParent
-            ).removeChild(deletedFiber.stateNode),
+            (finishedRoot = hostParent),
+              (prevHostParent = deletedFiber.stateNode),
+              8 === finishedRoot.nodeType
+                ? finishedRoot.parentNode.removeChild(prevHostParent)
+                : finishedRoot.removeChild(prevHostParent),
               (viewTransitionMutationContext = !0);
           } catch (error) {
             captureCommitPhaseError(
@@ -8750,16 +8639,16 @@ function commitDeletionEffectsOnFiber(
     case 18:
       null !== hostParent &&
         (hostParentIsContainer
-          ? ((finishedRoot = hostParent),
-            clearSuspenseBoundary(
-              9 === finishedRoot.nodeType
-                ? finishedRoot.body
-                : "HTML" === finishedRoot.nodeName
-                  ? finishedRoot.ownerDocument.body
-                  : finishedRoot,
-              deletedFiber.stateNode
-            ),
-            retryIfBlockedOn(finishedRoot))
+          ? ((nearestMountedAncestor = hostParent),
+            (deletedFiber = deletedFiber.stateNode),
+            8 === nearestMountedAncestor.nodeType
+              ? clearSuspenseBoundary(
+                  nearestMountedAncestor.parentNode,
+                  deletedFiber
+                )
+              : 1 === nearestMountedAncestor.nodeType &&
+                clearSuspenseBoundary(nearestMountedAncestor, deletedFiber),
+            retryIfBlockedOn(nearestMountedAncestor))
           : clearSuspenseBoundary(hostParent, deletedFiber.stateNode));
       break;
     case 4:
@@ -8887,17 +8776,14 @@ function recursivelyTraverseMutationEffects(root$jscomp$0, parentFiber, lanes) {
       a: for (; null !== parent; ) {
         switch (parent.tag) {
           case 27:
-            if (isSingletonScope(parent.type)) {
-              hostParent = parent.stateNode;
-              hostParentIsContainer = !1;
-              break a;
-            }
-            break;
           case 5:
             hostParent = parent.stateNode;
             hostParentIsContainer = !1;
             break a;
           case 3:
+            hostParent = parent.stateNode.containerInfo;
+            hostParentIsContainer = !0;
+            break a;
           case 4:
             hostParent = parent.stateNode.containerInfo;
             hostParentIsContainer = !0;
@@ -8959,111 +8845,112 @@ function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
         (offscreenSubtreeWasHidden ||
           null === current ||
           safelyDetachRef(current, current.return));
-      if (flags & 4) {
-        var currentResource = null !== current ? current.memoizedState : null;
-        flags = finishedWork.memoizedState;
-        if (null === current)
+      if (flags & 4)
+        if (
+          ((root = null !== current ? current.memoizedState : null),
+          (flags = finishedWork.memoizedState),
+          null === current)
+        )
           if (null === flags)
             if (null === finishedWork.stateNode) {
               a: {
                 flags = finishedWork.type;
                 current = finishedWork.memoizedProps;
-                hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;
+                root = hoistableRoot.ownerDocument || hoistableRoot;
                 b: switch (flags) {
                   case "title":
-                    currentResource =
-                      hoistableRoot.getElementsByTagName("title")[0];
+                    lanes = root.getElementsByTagName("title")[0];
                     if (
-                      !currentResource ||
-                      currentResource[internalHoistableMarker] ||
-                      currentResource[internalInstanceKey] ||
-                      "http://www.w3.org/2000/svg" ===
-                        currentResource.namespaceURI ||
-                      currentResource.hasAttribute("itemprop")
+                      !lanes ||
+                      lanes[internalHoistableMarker] ||
+                      lanes[internalInstanceKey] ||
+                      "http://www.w3.org/2000/svg" === lanes.namespaceURI ||
+                      lanes.hasAttribute("itemprop")
                     )
-                      (currentResource = hoistableRoot.createElement(flags)),
-                        hoistableRoot.head.insertBefore(
-                          currentResource,
-                          hoistableRoot.querySelector("head > title")
+                      (lanes = root.createElement(flags)),
+                        root.head.insertBefore(
+                          lanes,
+                          root.querySelector("head > title")
                         );
-                    setInitialProperties(currentResource, flags, current);
-                    currentResource[internalInstanceKey] = finishedWork;
-                    markNodeAsHoistable(currentResource);
-                    flags = currentResource;
+                    setInitialProperties(lanes, flags, current);
+                    lanes[internalInstanceKey] = finishedWork;
+                    markNodeAsHoistable(lanes);
+                    flags = lanes;
                     break a;
                   case "link":
-                    var maybeNodes = getHydratableHoistableCache(
-                      "link",
-                      "href",
-                      hoistableRoot
-                    ).get(flags + (current.href || ""));
-                    if (maybeNodes)
-                      for (var i = 0; i < maybeNodes.length; i++)
+                    if (
+                      (hoistableRoot = getHydratableHoistableCache(
+                        "link",
+                        "href",
+                        root
+                      ).get(flags + (current.href || "")))
+                    )
+                      for (var i = 0; i < hoistableRoot.length; i++)
                         if (
-                          ((currentResource = maybeNodes[i]),
-                          currentResource.getAttribute("href") ===
+                          ((lanes = hoistableRoot[i]),
+                          lanes.getAttribute("href") ===
                             (null == current.href || "" === current.href
                               ? null
                               : current.href) &&
-                            currentResource.getAttribute("rel") ===
+                            lanes.getAttribute("rel") ===
                               (null == current.rel ? null : current.rel) &&
-                            currentResource.getAttribute("title") ===
+                            lanes.getAttribute("title") ===
                               (null == current.title ? null : current.title) &&
-                            currentResource.getAttribute("crossorigin") ===
+                            lanes.getAttribute("crossorigin") ===
                               (null == current.crossOrigin
                                 ? null
                                 : current.crossOrigin))
                         ) {
-                          maybeNodes.splice(i, 1);
+                          hoistableRoot.splice(i, 1);
                           break b;
                         }
-                    currentResource = hoistableRoot.createElement(flags);
-                    setInitialProperties(currentResource, flags, current);
-                    hoistableRoot.head.appendChild(currentResource);
+                    lanes = root.createElement(flags);
+                    setInitialProperties(lanes, flags, current);
+                    root.head.appendChild(lanes);
                     break;
                   case "meta":
                     if (
-                      (maybeNodes = getHydratableHoistableCache(
+                      (hoistableRoot = getHydratableHoistableCache(
                         "meta",
                         "content",
-                        hoistableRoot
+                        root
                       ).get(flags + (current.content || "")))
                     )
-                      for (i = 0; i < maybeNodes.length; i++)
+                      for (i = 0; i < hoistableRoot.length; i++)
                         if (
-                          ((currentResource = maybeNodes[i]),
-                          currentResource.getAttribute("content") ===
+                          ((lanes = hoistableRoot[i]),
+                          lanes.getAttribute("content") ===
                             (null == current.content
                               ? null
                               : "" + current.content) &&
-                            currentResource.getAttribute("name") ===
+                            lanes.getAttribute("name") ===
                               (null == current.name ? null : current.name) &&
-                            currentResource.getAttribute("property") ===
+                            lanes.getAttribute("property") ===
                               (null == current.property
                                 ? null
                                 : current.property) &&
-                            currentResource.getAttribute("http-equiv") ===
+                            lanes.getAttribute("http-equiv") ===
                               (null == current.httpEquiv
                                 ? null
                                 : current.httpEquiv) &&
-                            currentResource.getAttribute("charset") ===
+                            lanes.getAttribute("charset") ===
                               (null == current.charSet
                                 ? null
                                 : current.charSet))
                         ) {
-                          maybeNodes.splice(i, 1);
+                          hoistableRoot.splice(i, 1);
                           break b;
                         }
-                    currentResource = hoistableRoot.createElement(flags);
-                    setInitialProperties(currentResource, flags, current);
-                    hoistableRoot.head.appendChild(currentResource);
+                    lanes = root.createElement(flags);
+                    setInitialProperties(lanes, flags, current);
+                    root.head.appendChild(lanes);
                     break;
                   default:
                     throw Error(formatProdErrorMessage(468, flags));
                 }
-                currentResource[internalInstanceKey] = finishedWork;
-                markNodeAsHoistable(currentResource);
-                flags = currentResource;
+                lanes[internalInstanceKey] = finishedWork;
+                markNodeAsHoistable(lanes);
+                flags = lanes;
               }
               finishedWork.stateNode = flags;
             } else
@@ -9079,12 +8966,12 @@ function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
               finishedWork.memoizedProps
             );
         else
-          currentResource !== flags
-            ? (null === currentResource
+          root !== flags
+            ? (null === root
                 ? null !== current.stateNode &&
                   ((current = current.stateNode),
                   current.parentNode.removeChild(current))
-                : currentResource.count--,
+                : root.count--,
               null === flags
                 ? mountHoistable(
                     hoistableRoot,
@@ -9103,23 +8990,38 @@ function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
                 finishedWork.memoizedProps,
                 current.memoizedProps
               );
-      }
       break;
     case 27:
-      recursivelyTraverseMutationEffects(root, finishedWork, lanes);
-      commitReconciliationEffects(finishedWork);
-      flags & 512 &&
-        (offscreenSubtreeWasHidden ||
-          null === current ||
-          safelyDetachRef(current, current.return));
-      null !== current &&
-        flags & 4 &&
-        commitHostUpdate(
-          finishedWork,
-          finishedWork.memoizedProps,
-          current.memoizedProps
-        );
-      break;
+      if (flags & 4 && null === finishedWork.alternate) {
+        hoistableRoot = finishedWork.stateNode;
+        i = finishedWork.memoizedProps;
+        try {
+          for (var node = hoistableRoot.firstChild; node; ) {
+            var nextNode = node.nextSibling,
+              nodeName = node.nodeName;
+            node[internalHoistableMarker] ||
+              "HEAD" === nodeName ||
+              "BODY" === nodeName ||
+              "SCRIPT" === nodeName ||
+              "STYLE" === nodeName ||
+              ("LINK" === nodeName &&
+                "stylesheet" === node.rel.toLowerCase()) ||
+              hoistableRoot.removeChild(node);
+            node = nextNode;
+          }
+          for (
+            var type = finishedWork.type, attributes = hoistableRoot.attributes;
+            attributes.length;
+
+          )
+            hoistableRoot.removeAttributeNode(attributes[0]);
+          setInitialProperties(hoistableRoot, type, i);
+          hoistableRoot[internalInstanceKey] = finishedWork;
+          hoistableRoot[internalPropsKey] = i;
+        } catch (error) {
+          captureCommitPhaseError(finishedWork, finishedWork.return, error);
+        }
+      }
     case 5:
       recursivelyTraverseMutationEffects(root, finishedWork, lanes);
       commitReconciliationEffects(finishedWork);
@@ -9128,21 +9030,20 @@ function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
           null === current ||
           safelyDetachRef(current, current.return));
       if (finishedWork.flags & 32) {
-        hoistableRoot = finishedWork.stateNode;
+        root = finishedWork.stateNode;
         try {
-          setTextContent(hoistableRoot, ""),
-            (viewTransitionMutationContext = !0);
+          setTextContent(root, ""), (viewTransitionMutationContext = !0);
         } catch (error) {
           captureCommitPhaseError(finishedWork, finishedWork.return, error);
         }
       }
       flags & 4 &&
         null != finishedWork.stateNode &&
-        ((hoistableRoot = finishedWork.memoizedProps),
+        ((root = finishedWork.memoizedProps),
         commitHostUpdate(
           finishedWork,
-          hoistableRoot,
-          null !== current ? current.memoizedProps : hoistableRoot
+          root,
+          null !== current ? current.memoizedProps : root
         ));
       flags & 1024 && (needsFormReset = !0);
       break;
@@ -9208,15 +9109,15 @@ function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
         (offscreenSubtreeWasHidden ||
           null === current ||
           safelyDetachRef(current, current.return));
-      hoistableRoot = null !== finishedWork.memoizedState;
-      var wasHidden = null !== current && null !== current.memoizedState,
-        prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden,
-        prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
-      offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden || hoistableRoot;
-      offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || wasHidden;
+      node = null !== finishedWork.memoizedState;
+      nextNode = null !== current && null !== current.memoizedState;
+      nodeName = offscreenSubtreeIsHidden;
+      type = offscreenSubtreeWasHidden;
+      offscreenSubtreeIsHidden = nodeName || node;
+      offscreenSubtreeWasHidden = type || nextNode;
       recursivelyTraverseMutationEffects(root, finishedWork, lanes);
-      offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
-      offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;
+      offscreenSubtreeWasHidden = type;
+      offscreenSubtreeIsHidden = nodeName;
       commitReconciliationEffects(finishedWork);
       root = finishedWork.stateNode;
       root._current = finishedWork;
@@ -9224,38 +9125,38 @@ function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
       root._visibility |= root._pendingVisibility & 2;
       if (
         flags & 8192 &&
-        ((root._visibility = hoistableRoot
+        ((root._visibility = node
           ? root._visibility & -2
           : root._visibility | 1),
-        hoistableRoot &&
-          (null === current ||
-            wasHidden ||
-            offscreenSubtreeIsHidden ||
-            offscreenSubtreeWasHidden ||
+        node &&
+          ((root = offscreenSubtreeIsHidden || offscreenSubtreeWasHidden),
+          null === current ||
+            nextNode ||
+            root ||
             recursivelyTraverseDisappearLayoutEffects(finishedWork)),
         null === finishedWork.memoizedProps ||
           "manual" !== finishedWork.memoizedProps.mode)
       )
         a: for (current = null, root = finishedWork; ; ) {
-          if (5 === root.tag || 26 === root.tag) {
+          if (5 === root.tag || 26 === root.tag || 27 === root.tag) {
             if (null === current) {
               lanes = current = root;
               try {
-                if (((currentResource = lanes.stateNode), hoistableRoot))
-                  (maybeNodes = currentResource.style),
-                    "function" === typeof maybeNodes.setProperty
-                      ? maybeNodes.setProperty("display", "none", "important")
-                      : (maybeNodes.display = "none");
+                if (((hoistableRoot = lanes.stateNode), node))
+                  (i = hoistableRoot.style),
+                    "function" === typeof i.setProperty
+                      ? i.setProperty("display", "none", "important")
+                      : (i.display = "none");
                 else {
-                  i = lanes.stateNode;
-                  var styleProp = lanes.memoizedProps.style,
+                  var instance = lanes.stateNode,
+                    styleProp = lanes.memoizedProps.style,
                     display =
                       void 0 !== styleProp &&
                       null !== styleProp &&
                       styleProp.hasOwnProperty("display")
                         ? styleProp.display
                         : null;
-                  i.style.display =
+                  instance.style.display =
                     null == display || "boolean" === typeof display
                       ? ""
                       : ("" + display).trim();
@@ -9268,9 +9169,7 @@ function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
             if (null === current) {
               lanes = root;
               try {
-                lanes.stateNode.nodeValue = hoistableRoot
-                  ? ""
-                  : lanes.memoizedProps;
+                lanes.stateNode.nodeValue = node ? "" : lanes.memoizedProps;
               } catch (error) {
                 captureCommitPhaseError(lanes, lanes.return, error);
               }
@@ -9321,7 +9220,7 @@ function commitMutationEffectsOnFiber(finishedWork, root, lanes) {
       viewTransitionMutationContext = !1;
       recursivelyTraverseMutationEffects(root, finishedWork, lanes);
       commitReconciliationEffects(finishedWork);
-      (lanes & 335544064) === lanes &&
+      (lanes & 335544192) === lanes &&
         null !== current &&
         viewTransitionMutationContext &&
         (finishedWork.flags |= 4);
@@ -9338,42 +9237,44 @@ function commitReconciliationEffects(finishedWork) {
   var flags = finishedWork.flags;
   if (flags & 2) {
     try {
-      a: {
-        for (var parent = finishedWork.return; null !== parent; ) {
-          if (isHostParent(parent)) {
-            var JSCompiler_inline_result = parent;
-            break a;
+      if (27 !== finishedWork.tag) {
+        a: {
+          for (var parent = finishedWork.return; null !== parent; ) {
+            if (isHostParent(parent)) {
+              var JSCompiler_inline_result = parent;
+              break a;
+            }
+            parent = parent.return;
           }
-          parent = parent.return;
+          throw Error(formatProdErrorMessage(160));
+        }
+        switch (JSCompiler_inline_result.tag) {
+          case 27:
+            var parent$jscomp$0 = JSCompiler_inline_result.stateNode,
+              before = getHostSibling(finishedWork);
+            insertOrAppendPlacementNode(finishedWork, before, parent$jscomp$0);
+            break;
+          case 5:
+            var parent$116 = JSCompiler_inline_result.stateNode;
+            JSCompiler_inline_result.flags & 32 &&
+              (setTextContent(parent$116, ""),
+              (JSCompiler_inline_result.flags &= -33));
+            var before$117 = getHostSibling(finishedWork);
+            insertOrAppendPlacementNode(finishedWork, before$117, parent$116);
+            break;
+          case 3:
+          case 4:
+            var parent$118 = JSCompiler_inline_result.stateNode.containerInfo,
+              before$119 = getHostSibling(finishedWork);
+            insertOrAppendPlacementNodeIntoContainer(
+              finishedWork,
+              before$119,
+              parent$118
+            );
+            break;
+          default:
+            throw Error(formatProdErrorMessage(161));
         }
-        throw Error(formatProdErrorMessage(160));
-      }
-      switch (JSCompiler_inline_result.tag) {
-        case 27:
-          var parent$jscomp$0 = JSCompiler_inline_result.stateNode,
-            before = getHostSibling(finishedWork);
-          insertOrAppendPlacementNode(finishedWork, before, parent$jscomp$0);
-          break;
-        case 5:
-          var parent$117 = JSCompiler_inline_result.stateNode;
-          JSCompiler_inline_result.flags & 32 &&
-            (setTextContent(parent$117, ""),
-            (JSCompiler_inline_result.flags &= -33));
-          var before$118 = getHostSibling(finishedWork);
-          insertOrAppendPlacementNode(finishedWork, before$118, parent$117);
-          break;
-        case 3:
-        case 4:
-          var parent$119 = JSCompiler_inline_result.stateNode.containerInfo,
-            before$120 = getHostSibling(finishedWork);
-          insertOrAppendPlacementNodeIntoContainer(
-            finishedWork,
-            before$120,
-            parent$119
-          );
-          break;
-        default:
-          throw Error(formatProdErrorMessage(161));
       }
     } catch (error) {
       captureCommitPhaseError(finishedWork, finishedWork.return, error);
@@ -9478,7 +9379,7 @@ function commitAfterMutationEffectsOnFiber(finishedWork, root) {
               ),
               layoutClassName = getViewTransitionClassName(
                 root.className,
-                root.layout
+                root.update
               );
             if ("none" === updateClassName) {
               if ("none" === layoutClassName) {
@@ -9566,9 +9467,8 @@ function recursivelyTraverseDisappearLayoutEffects(parentFiber) {
           );
         recursivelyTraverseDisappearLayoutEffects(finishedWork);
         break;
-      case 27:
-        releaseSingletonInstance(finishedWork.stateNode);
       case 26:
+      case 27:
       case 5:
         safelyDetachRef(finishedWork, finishedWork.return);
         recursivelyTraverseDisappearLayoutEffects(finishedWork);
@@ -9645,9 +9545,8 @@ function recursivelyTraverseReappearLayoutEffects(
           commitClassCallbacks(finishedWork);
         safelyAttachRef(finishedWork, finishedWork.return);
         break;
-      case 27:
-        commitHostSingletonAcquisition(finishedWork);
       case 26:
+      case 27:
       case 5:
         recursivelyTraverseReappearLayoutEffects(
           finishedRoot,
@@ -9733,7 +9632,7 @@ function recursivelyTraversePassiveMountEffects(
   committedTransitions
 ) {
   var isViewTransitionEligible =
-    (committedLanes & 335544064) === committedLanes;
+    (committedLanes & 335544192) === committedLanes;
   if (parentFiber.subtreeFlags & (isViewTransitionEligible ? 10262 : 10256))
     for (parentFiber = parentFiber.child; null !== parentFiber; )
       commitPassiveMountOnFiber(
@@ -9752,7 +9651,7 @@ function commitPassiveMountOnFiber(
   committedTransitions
 ) {
   var isViewTransitionEligible =
-    (committedLanes & 335544064) === committedLanes;
+    (committedLanes & 335544192) === committedLanes;
   isViewTransitionEligible &&
     null === finishedWork.alternate &&
     null !== finishedWork.return &&
@@ -10071,20 +9970,6 @@ function accumulateSuspenseyCommitOnFiber(fiber) {
             (suspenseyCommitFlag = previousHoistableRoot))
           : recursivelyAccumulateSuspenseyCommit(fiber));
       break;
-    case 30:
-      if (
-        0 !== (fiber.flags & suspenseyCommitFlag) &&
-        ((previousHoistableRoot = fiber.memoizedProps.name),
-        null != previousHoistableRoot && "auto" !== previousHoistableRoot)
-      ) {
-        null === appearingViewTransitions &&
-          (appearingViewTransitions = new Map());
-        var instance = fiber.stateNode;
-        instance.paired = null;
-        appearingViewTransitions.set(previousHoistableRoot, instance);
-      }
-      recursivelyAccumulateSuspenseyCommit(fiber);
-      break;
     default:
       recursivelyAccumulateSuspenseyCommit(fiber);
   }
@@ -10572,14 +10457,14 @@ function prepareToHydrateHostInstance(fiber) {
 function popToNextHostParent(fiber) {
   for (hydrationParentFiber = fiber.return; hydrationParentFiber; )
     switch (hydrationParentFiber.tag) {
+      case 3:
+      case 27:
+        rootOrSingletonContext = !0;
+        return;
       case 5:
       case 13:
         rootOrSingletonContext = !1;
         return;
-      case 27:
-      case 3:
-        rootOrSingletonContext = !0;
-        return;
       default:
         hydrationParentFiber = hydrationParentFiber.return;
     }
@@ -10587,52 +10472,46 @@ function popToNextHostParent(fiber) {
 function popHydrationState(fiber) {
   if (fiber !== hydrationParentFiber) return !1;
   if (!isHydrating) return popToNextHostParent(fiber), (isHydrating = !0), !1;
-  var tag = fiber.tag,
+  var shouldClear = !1,
     JSCompiler_temp;
-  if ((JSCompiler_temp = 3 !== tag && 27 !== tag)) {
-    if ((JSCompiler_temp = 5 === tag))
+  if ((JSCompiler_temp = 3 !== fiber.tag && 27 !== fiber.tag)) {
+    if ((JSCompiler_temp = 5 === fiber.tag))
       (JSCompiler_temp = fiber.type),
         (JSCompiler_temp =
           !("form" !== JSCompiler_temp && "button" !== JSCompiler_temp) ||
           shouldSetTextContent(fiber.type, fiber.memoizedProps));
     JSCompiler_temp = !JSCompiler_temp;
   }
-  JSCompiler_temp && nextHydratableInstance && throwOnHydrationMismatch(fiber);
+  JSCompiler_temp && (shouldClear = !0);
+  shouldClear && nextHydratableInstance && throwOnHydrationMismatch(fiber);
   popToNextHostParent(fiber);
-  if (13 === tag) {
+  if (13 === fiber.tag) {
     fiber = fiber.memoizedState;
     fiber = null !== fiber ? fiber.dehydrated : null;
     if (!fiber) throw Error(formatProdErrorMessage(317));
     a: {
       fiber = fiber.nextSibling;
-      for (tag = 0; fiber; ) {
+      for (shouldClear = 0; fiber; ) {
         if (8 === fiber.nodeType)
           if (((JSCompiler_temp = fiber.data), "/$" === JSCompiler_temp)) {
-            if (0 === tag) {
+            if (0 === shouldClear) {
               nextHydratableInstance = getNextHydratable(fiber.nextSibling);
               break a;
             }
-            tag--;
+            shouldClear--;
           } else
             ("$" !== JSCompiler_temp &&
               "$!" !== JSCompiler_temp &&
               "$?" !== JSCompiler_temp) ||
-              tag++;
+              shouldClear++;
         fiber = fiber.nextSibling;
       }
       nextHydratableInstance = null;
     }
   } else
-    27 === tag
-      ? ((tag = nextHydratableInstance),
-        isSingletonScope(fiber.type)
-          ? ((fiber = previousHydratableOnEnteringScopedSingleton),
-            (previousHydratableOnEnteringScopedSingleton = null),
-            (nextHydratableInstance = fiber))
-          : (nextHydratableInstance = tag))
-      : (nextHydratableInstance = hydrationParentFiber
-          ? getNextHydratable(fiber.stateNode.nextSibling)
-          : null);
+    nextHydratableInstance = hydrationParentFiber
+      ? getNextHydratable(fiber.stateNode.nextSibling)
+      : null;
   return !0;
 }
 function resetHydrationState() {
@@ -10662,31 +10541,14 @@ function getViewTransitionName(props, instance) {
     ? props.name
     : instance.autoName;
 }
-function getClassNameByType(classByType) {
-  if (null == classByType || "string" === typeof classByType)
-    return classByType;
-  var className = null,
-    activeTypes = pendingTransitionTypes;
-  if (null !== activeTypes)
-    for (var i = 0; i < activeTypes.length; i++) {
-      var match = classByType[activeTypes[i]];
-      if (null != match) {
-        if ("none" === match) return "none";
-        className = null == className ? match : className + (" " + match);
-      }
-    }
-  return null == className ? classByType.default : className;
-}
-function getViewTransitionClassName(defaultClass, eventClass) {
-  defaultClass = getClassNameByType(defaultClass);
-  eventClass = getClassNameByType(eventClass);
-  return null == eventClass
-    ? defaultClass
-    : "none" === eventClass
-      ? eventClass
-      : null != defaultClass && "none" !== defaultClass
-        ? defaultClass + " " + eventClass
-        : eventClass;
+function getViewTransitionClassName(className, eventClassName) {
+  return null == eventClassName
+    ? className
+    : "none" === eventClassName
+      ? eventClassName
+      : null != className
+        ? className + " " + eventClassName
+        : eventClassName;
 }
 function markUpdate(workInProgress) {
   workInProgress.flags |= 4;
@@ -10698,7 +10560,7 @@ function preloadResourceAndSuspendIfNeeded(workInProgress, resource) {
     resource = suspenseHandlerStackCursor.current;
     if (
       null !== resource &&
-      ((workInProgressRootRenderLanes & 4194048) ===
+      ((workInProgressRootRenderLanes & 4194176) ===
       workInProgressRootRenderLanes
         ? null !== shellBoundary
         : ((workInProgressRootRenderLanes & 62914560) !==
@@ -10736,14 +10598,14 @@ function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
         break;
       case "collapsed":
         lastTailNode = renderState.tail;
-        for (var lastTailNode$138 = null; null !== lastTailNode; )
-          null !== lastTailNode.alternate && (lastTailNode$138 = lastTailNode),
+        for (var lastTailNode$135 = null; null !== lastTailNode; )
+          null !== lastTailNode.alternate && (lastTailNode$135 = lastTailNode),
             (lastTailNode = lastTailNode.sibling);
-        null === lastTailNode$138
+        null === lastTailNode$135
           ? hasRenderedATailFallback || null === renderState.tail
             ? (renderState.tail = null)
             : (renderState.tail.sibling = null)
-          : (lastTailNode$138.sibling = null);
+          : (lastTailNode$135.sibling = null);
     }
 }
 function bubbleProperties(completedWork) {
@@ -10753,23 +10615,41 @@ function bubbleProperties(completedWork) {
     newChildLanes = 0,
     subtreeFlags = 0;
   if (didBailout)
-    for (var child$139 = completedWork.child; null !== child$139; )
-      (newChildLanes |= child$139.lanes | child$139.childLanes),
-        (subtreeFlags |= child$139.subtreeFlags & 65011712),
-        (subtreeFlags |= child$139.flags & 65011712),
-        (child$139.return = completedWork),
-        (child$139 = child$139.sibling);
+    for (var child$136 = completedWork.child; null !== child$136; )
+      (newChildLanes |= child$136.lanes | child$136.childLanes),
+        (subtreeFlags |= child$136.subtreeFlags & 65011712),
+        (subtreeFlags |= child$136.flags & 65011712),
+        (child$136.return = completedWork),
+        (child$136 = child$136.sibling);
   else
-    for (child$139 = completedWork.child; null !== child$139; )
-      (newChildLanes |= child$139.lanes | child$139.childLanes),
-        (subtreeFlags |= child$139.subtreeFlags),
-        (subtreeFlags |= child$139.flags),
-        (child$139.return = completedWork),
-        (child$139 = child$139.sibling);
+    for (child$136 = completedWork.child; null !== child$136; )
+      (newChildLanes |= child$136.lanes | child$136.childLanes),
+        (subtreeFlags |= child$136.subtreeFlags),
+        (subtreeFlags |= child$136.flags),
+        (child$136.return = completedWork),
+        (child$136 = child$136.sibling);
   completedWork.subtreeFlags |= subtreeFlags;
   completedWork.childLanes = newChildLanes;
   return didBailout;
 }
+function trackReappearingViewTransitions(workInProgress) {
+  if (0 !== (workInProgress.subtreeFlags & 2097152))
+    for (workInProgress = workInProgress.child; null !== workInProgress; ) {
+      if (22 !== workInProgress.tag || null !== workInProgress.memoizedState) {
+        if (
+          30 === workInProgress.tag &&
+          0 !== (workInProgress.flags & 2097152)
+        ) {
+          var props = workInProgress.memoizedProps;
+          null != props.name &&
+            "auto" !== props.name &&
+            trackAppearingViewTransition(workInProgress.stateNode, props.name);
+        }
+        trackReappearingViewTransitions(workInProgress);
+      }
+      workInProgress = workInProgress.sibling;
+    }
+}
 function completeWork(current, workInProgress, renderLanes) {
   var newProps = workInProgress.pendingProps;
   popTreeContext(workInProgress);
@@ -11046,11 +10926,11 @@ function completeWork(current, workInProgress, renderLanes) {
           null !== newProps.alternate.memoizedState &&
           null !== newProps.alternate.memoizedState.cachePool &&
           (type = newProps.alternate.memoizedState.cachePool.pool);
-        var cache$152 = null;
+        var cache$149 = null;
         null !== newProps.memoizedState &&
           null !== newProps.memoizedState.cachePool &&
-          (cache$152 = newProps.memoizedState.cachePool.pool);
-        cache$152 !== type && (newProps.flags |= 2048);
+          (cache$149 = newProps.memoizedState.cachePool.pool);
+        cache$149 !== type && (newProps.flags |= 2048);
       }
       renderLanes !== current &&
         renderLanes &&
@@ -11075,8 +10955,8 @@ function completeWork(current, workInProgress, renderLanes) {
       type = workInProgress.memoizedState;
       if (null === type) return bubbleProperties(workInProgress), null;
       newProps = 0 !== (workInProgress.flags & 128);
-      cache$152 = type.rendering;
-      if (null === cache$152)
+      cache$149 = type.rendering;
+      if (null === cache$149)
         if (newProps) cutOffTailIfNeeded(type, !1);
         else {
           if (
@@ -11084,11 +10964,11 @@ function completeWork(current, workInProgress, renderLanes) {
             (null !== current && 0 !== (current.flags & 128))
           )
             for (current = workInProgress.child; null !== current; ) {
-              cache$152 = findFirstSuspended(current);
-              if (null !== cache$152) {
+              cache$149 = findFirstSuspended(current);
+              if (null !== cache$149) {
                 workInProgress.flags |= 128;
                 cutOffTailIfNeeded(type, !1);
-                current = cache$152.updateQueue;
+                current = cache$149.updateQueue;
                 workInProgress.updateQueue = current;
                 scheduleRetryEffect(workInProgress, current);
                 workInProgress.subtreeFlags = 0;
@@ -11113,7 +10993,7 @@ function completeWork(current, workInProgress, renderLanes) {
         }
       else {
         if (!newProps)
-          if (((current = findFirstSuspended(cache$152)), null !== current)) {
+          if (((current = findFirstSuspended(cache$149)), null !== current)) {
             if (
               ((workInProgress.flags |= 128),
               (newProps = !0),
@@ -11123,7 +11003,7 @@ function completeWork(current, workInProgress, renderLanes) {
               cutOffTailIfNeeded(type, !0),
               null === type.tail &&
                 "hidden" === type.tailMode &&
-                !cache$152.alternate &&
+                !cache$149.alternate &&
                 !isHydrating)
             )
               return bubbleProperties(workInProgress), null;
@@ -11136,13 +11016,13 @@ function completeWork(current, workInProgress, renderLanes) {
               cutOffTailIfNeeded(type, !1),
               (workInProgress.lanes = 4194304));
         type.isBackwards
-          ? ((cache$152.sibling = workInProgress.child),
-            (workInProgress.child = cache$152))
+          ? ((cache$149.sibling = workInProgress.child),
+            (workInProgress.child = cache$149))
           : ((current = type.last),
             null !== current
-              ? (current.sibling = cache$152)
-              : (workInProgress.child = cache$152),
-            (type.last = cache$152));
+              ? (current.sibling = cache$149)
+              : (workInProgress.child = cache$149),
+            (type.last = cache$149));
       }
       if (null !== type.tail)
         return (
@@ -11165,7 +11045,8 @@ function completeWork(current, workInProgress, renderLanes) {
         (newProps = null !== workInProgress.memoizedState),
         null !== current
           ? (null !== current.memoizedState) !== newProps &&
-            (workInProgress.flags |= 8192)
+            ((workInProgress.flags |= 8192),
+            newProps || trackReappearingViewTransitions(workInProgress))
           : newProps && (workInProgress.flags |= 8192),
         newProps
           ? 0 !== (renderLanes & 536870912) &&
@@ -11519,6 +11400,7 @@ var PossiblyWeakMap = "function" === typeof WeakMap ? WeakMap : Map,
   workInProgressSuspendedRetryLanes = 0,
   workInProgressRootConcurrentErrors = null,
   workInProgressRootRecoverableErrors = null,
+  workInProgressAppearingViewTransitions = null,
   workInProgressRootDidIncludeRecursiveRenderUpdate = !1,
   globalMostRecentFallbackTime = 0,
   workInProgressRootRenderTargetTime = Infinity,
@@ -11532,7 +11414,6 @@ var PossiblyWeakMap = "function" === typeof WeakMap ? WeakMap : Map,
   pendingPassiveTransitions = null,
   pendingRecoverableErrors = null,
   pendingViewTransitionEvents = null,
-  pendingTransitionTypes = null,
   nestedUpdateCount = 0,
   rootWithNestedUpdates = null;
 function requestUpdateLane() {
@@ -11599,7 +11480,7 @@ function performWorkOnRoot(root$jscomp$0, lanes, forceSync) {
   if (0 !== (executionContext & 6)) throw Error(formatProdErrorMessage(327));
   var shouldTimeSlice =
       (!forceSync &&
-        0 === (lanes & 124) &&
+        0 === (lanes & 60) &&
         0 === (lanes & root$jscomp$0.expiredLanes)) ||
       checkIfRootIsPrerendering(root$jscomp$0, lanes),
     exitStatus = shouldTimeSlice
@@ -11687,7 +11568,7 @@ function performWorkOnRoot(root$jscomp$0, lanes, forceSync) {
           case 1:
             throw Error(formatProdErrorMessage(345));
           case 4:
-            if ((lanes & 4194048) !== lanes) break;
+            if ((lanes & 4194176) !== lanes) break;
           case 6:
             markRootSuspended(
               shouldTimeSlice,
@@ -11724,6 +11605,7 @@ function performWorkOnRoot(root$jscomp$0, lanes, forceSync) {
               forceSync,
               workInProgressRootRecoverableErrors,
               workInProgressTransitions,
+              workInProgressAppearingViewTransitions,
               workInProgressRootDidIncludeRecursiveRenderUpdate,
               lanes,
               workInProgressDeferredLane,
@@ -11744,6 +11626,7 @@ function performWorkOnRoot(root$jscomp$0, lanes, forceSync) {
           forceSync,
           workInProgressRootRecoverableErrors,
           workInProgressTransitions,
+          workInProgressAppearingViewTransitions,
           workInProgressRootDidIncludeRecursiveRenderUpdate,
           lanes,
           workInProgressDeferredLane,
@@ -11766,6 +11649,7 @@ function commitRootWhenReady(
   finishedWork,
   recoverableErrors,
   transitions,
+  appearingViewTransitions,
   didIncludeRenderPhaseUpdate,
   lanes,
   spawnedLane,
@@ -11778,29 +11662,23 @@ function commitRootWhenReady(
   completedRenderEndTime
 ) {
   root.timeoutHandle = -1;
-  suspendedCommitReason = finishedWork.subtreeFlags;
-  var isViewTransitionEligible = (lanes & 335544064) === lanes;
-  if (
-    isViewTransitionEligible ||
-    suspendedCommitReason & 8192 ||
-    16785408 === (suspendedCommitReason & 16785408)
-  ) {
+  var subtreeFlags = finishedWork.subtreeFlags;
+  suspendedCommitReason = (lanes & 335544192) === lanes;
+  subtreeFlags = subtreeFlags & 8192 || 16785408 === (subtreeFlags & 16785408);
+  if (suspendedCommitReason || subtreeFlags) {
     suspendedState = { stylesheets: null, count: 0, unsuspend: noop };
-    appearingViewTransitions = null;
-    accumulateSuspenseyCommitOnFiber(finishedWork);
-    if (isViewTransitionEligible) {
-      isViewTransitionEligible = root.containerInfo;
+    subtreeFlags && accumulateSuspenseyCommitOnFiber(finishedWork);
+    if (suspendedCommitReason) {
+      subtreeFlags = root.containerInfo;
       if (null === suspendedState) throw Error(formatProdErrorMessage(475));
       suspendedCommitReason = suspendedState;
-      isViewTransitionEligible = (
-        9 === isViewTransitionEligible.nodeType
-          ? isViewTransitionEligible
-          : isViewTransitionEligible.ownerDocument
+      subtreeFlags = (
+        9 === subtreeFlags.nodeType ? subtreeFlags : subtreeFlags.ownerDocument
       ).__reactViewTransition;
-      null != isViewTransitionEligible &&
+      null != subtreeFlags &&
         (suspendedCommitReason.count++,
         (suspendedCommitReason = onUnsuspend.bind(suspendedCommitReason)),
-        isViewTransitionEligible.finished.then(
+        subtreeFlags.finished.then(
           suspendedCommitReason,
           suspendedCommitReason
         ));
@@ -11815,6 +11693,7 @@ function commitRootWhenReady(
           lanes,
           recoverableErrors,
           transitions,
+          appearingViewTransitions,
           didIncludeRenderPhaseUpdate,
           spawnedLane,
           updatedLanes,
@@ -11835,6 +11714,7 @@ function commitRootWhenReady(
     lanes,
     recoverableErrors,
     transitions,
+    appearingViewTransitions,
     didIncludeRenderPhaseUpdate,
     spawnedLane,
     updatedLanes,
@@ -11944,6 +11824,7 @@ function prepareFreshStack(root, lanes) {
   workInProgressRootRecoverableErrors = workInProgressRootConcurrentErrors =
     null;
   workInProgressRootDidIncludeRecursiveRenderUpdate = !1;
+  workInProgressAppearingViewTransitions = null;
   0 !== (lanes & 8) && (lanes |= lanes & 32);
   var allEntangledLanes = root.entangledLanes;
   if (0 !== allEntangledLanes)
@@ -11999,7 +11880,7 @@ function pushAsyncDispatcher() {
 function renderDidSuspendDelayIfPossible() {
   workInProgressRootExitStatus = 4;
   workInProgressRootDidSkipSuspendedSiblings ||
-    ((workInProgressRootRenderLanes & 4194048) !==
+    ((workInProgressRootRenderLanes & 4194176) !==
       workInProgressRootRenderLanes &&
       null !== suspenseHandlerStackCursor.current) ||
     (workInProgressRootIsPrerendering = !0);
@@ -12018,6 +11899,18 @@ function queueConcurrentError(error) {
     ? (workInProgressRootConcurrentErrors = [error])
     : workInProgressRootConcurrentErrors.push(error);
 }
+function trackAppearingViewTransition(instance, name) {
+  if (null === workInProgressAppearingViewTransitions) {
+    if (
+      (workInProgressRootRenderLanes & 335544192) !==
+      workInProgressRootRenderLanes
+    )
+      return;
+    workInProgressAppearingViewTransitions = new Map();
+  }
+  instance.paired = null;
+  workInProgressAppearingViewTransitions.set(name, instance);
+}
 function renderRootSync(root, lanes, shouldYieldForPrerendering) {
   var prevExecutionContext = executionContext;
   executionContext |= 2;
@@ -12064,8 +11957,8 @@ function renderRootSync(root, lanes, shouldYieldForPrerendering) {
       workLoopSync();
       exitStatus = workInProgressRootExitStatus;
       break;
-    } catch (thrownValue$172) {
-      handleThrow(root, thrownValue$172);
+    } catch (thrownValue$169) {
+      handleThrow(root, thrownValue$169);
     }
   while (1);
   lanes && root.shellSuspendCounter++;
@@ -12180,8 +12073,8 @@ function renderRootConcurrent(root, lanes) {
       }
       workLoopConcurrentByScheduler();
       break;
-    } catch (thrownValue$174) {
-      handleThrow(root, thrownValue$174);
+    } catch (thrownValue$171) {
+      handleThrow(root, thrownValue$171);
     }
   while (1);
   lastContextDependency = currentlyRenderingFiber$1 = null;
@@ -12357,6 +12250,7 @@ function commitRoot(
   lanes,
   recoverableErrors,
   transitions,
+  appearingViewTransitions,
   didIncludeRenderPhaseUpdate,
   spawnedLane,
   updatedLanes,
@@ -12370,7 +12264,6 @@ function commitRoot(
     if (finishedWork === root.current) throw Error(formatProdErrorMessage(177));
     didIncludeRenderPhaseUpdate = finishedWork.lanes | finishedWork.childLanes;
     didIncludeRenderPhaseUpdate |= concurrentlyUpdatedLanes;
-    null === root.gestures && (didIncludeRenderPhaseUpdate &= -65);
     markRootFinished(
       root,
       lanes,
@@ -12382,58 +12275,55 @@ function commitRoot(
     root === workInProgressRoot &&
       ((workInProgress = workInProgressRoot = null),
       (workInProgressRootRenderLanes = 0));
-    if (64 === lanes) commitGestureOnRoot(root);
-    else {
-      pendingFinishedWork = finishedWork;
-      pendingEffectsRoot = root;
-      pendingEffectsLanes = lanes;
-      pendingEffectsRemainingLanes = didIncludeRenderPhaseUpdate;
-      pendingPassiveTransitions = transitions;
-      pendingRecoverableErrors = recoverableErrors;
-      pendingViewTransitionEvents = null;
-      (lanes & 335544064) === lanes
-        ? ((pendingTransitionTypes = ReactSharedInternals.V),
-          (ReactSharedInternals.V = null),
-          (recoverableErrors = 10262))
-        : ((pendingTransitionTypes = null), (recoverableErrors = 10256));
-      0 !== (finishedWork.subtreeFlags & recoverableErrors) ||
-      0 !== (finishedWork.flags & recoverableErrors)
-        ? ((root.callbackNode = null),
-          (root.callbackPriority = 0),
-          scheduleCallback$1(NormalPriority$1, function () {
-            flushPassiveEffects(!0);
-            return null;
-          }))
-        : ((root.callbackNode = null), (root.callbackPriority = 0));
-      recoverableErrors = 0 !== (finishedWork.flags & 13878);
-      if (0 !== (finishedWork.subtreeFlags & 13878) || recoverableErrors) {
-        recoverableErrors = ReactSharedInternals.T;
-        ReactSharedInternals.T = null;
-        transitions = ReactDOMSharedInternals.p;
-        ReactDOMSharedInternals.p = 2;
-        spawnedLane = executionContext;
-        executionContext |= 4;
-        try {
-          commitBeforeMutationEffects(root, finishedWork, lanes);
-        } finally {
-          (executionContext = spawnedLane),
-            (ReactDOMSharedInternals.p = transitions),
-            (ReactSharedInternals.T = recoverableErrors);
-        }
+    pendingFinishedWork = finishedWork;
+    pendingEffectsRoot = root;
+    pendingEffectsLanes = lanes;
+    pendingEffectsRemainingLanes = didIncludeRenderPhaseUpdate;
+    pendingPassiveTransitions = transitions;
+    pendingRecoverableErrors = recoverableErrors;
+    pendingViewTransitionEvents = null;
+    recoverableErrors = (lanes & 335544192) === lanes ? 10262 : 10256;
+    0 !== (finishedWork.subtreeFlags & recoverableErrors) ||
+    0 !== (finishedWork.flags & recoverableErrors)
+      ? ((root.callbackNode = null),
+        (root.callbackPriority = 0),
+        scheduleCallback$1(NormalPriority$1, function () {
+          flushPassiveEffects(!0);
+          return null;
+        }))
+      : ((root.callbackNode = null), (root.callbackPriority = 0));
+    recoverableErrors = 0 !== (finishedWork.flags & 13878);
+    if (0 !== (finishedWork.subtreeFlags & 13878) || recoverableErrors) {
+      recoverableErrors = ReactSharedInternals.T;
+      ReactSharedInternals.T = null;
+      transitions = ReactDOMSharedInternals.p;
+      ReactDOMSharedInternals.p = 2;
+      spawnedLane = executionContext;
+      executionContext |= 4;
+      try {
+        commitBeforeMutationEffects(
+          root,
+          finishedWork,
+          lanes,
+          appearingViewTransitions
+        );
+      } finally {
+        (executionContext = spawnedLane),
+          (ReactDOMSharedInternals.p = transitions),
+          (ReactSharedInternals.T = recoverableErrors);
       }
-      pendingEffectsStatus = 1;
-      (shouldStartViewTransition &&
-        startViewTransition(
-          root.containerInfo,
-          pendingTransitionTypes,
-          flushMutationEffects,
-          flushLayoutEffects,
-          flushAfterMutationEffects,
-          flushSpawnedWork,
-          flushPassiveEffects
-        )) ||
-        (flushMutationEffects(), flushLayoutEffects(), flushSpawnedWork());
     }
+    pendingEffectsStatus = 1;
+    (shouldStartViewTransition &&
+      startViewTransition(
+        root.containerInfo,
+        flushMutationEffects,
+        flushLayoutEffects,
+        flushAfterMutationEffects,
+        flushSpawnedWork,
+        flushPassiveEffects
+      )) ||
+      (flushMutationEffects(), flushLayoutEffects(), flushSpawnedWork());
   }
 }
 function flushAfterMutationEffects() {
@@ -12597,7 +12487,7 @@ function flushSpawnedWork() {
       finishedWork = pendingFinishedWork,
       lanes = pendingEffectsLanes,
       recoverableErrors = pendingRecoverableErrors,
-      passiveSubtreeMask = (lanes & 335544064) === lanes ? 10262 : 10256;
+      passiveSubtreeMask = (lanes & 335544192) === lanes ? 10262 : 10256;
     0 !== (finishedWork.subtreeFlags & passiveSubtreeMask) ||
     0 !== (finishedWork.flags & passiveSubtreeMask)
       ? (pendingEffectsStatus = 5)
@@ -12639,21 +12529,17 @@ function flushSpawnedWork() {
       }
     }
     recoverableErrors = pendingViewTransitionEvents;
-    onRecoverableError = pendingTransitionTypes;
-    pendingTransitionTypes = null;
     if (null !== recoverableErrors)
       for (
-        pendingViewTransitionEvents = null,
-          null === onRecoverableError && (onRecoverableError = []),
-          recoverableError = 0;
-        recoverableError < recoverableErrors.length;
-        recoverableError++
+        pendingViewTransitionEvents = null, onRecoverableError = 0;
+        onRecoverableError < recoverableErrors.length;
+        onRecoverableError++
       )
-        (0, recoverableErrors[recoverableError])(onRecoverableError);
+        (0, recoverableErrors[onRecoverableError])();
     0 !== (pendingEffectsLanes & 3) && flushPendingEffects();
     ensureRootIsScheduled(root);
     passiveSubtreeMask = root.pendingLanes;
-    0 !== (lanes & 4194090) && 0 !== (passiveSubtreeMask & 42)
+    0 !== (lanes & 4194218) && 0 !== (passiveSubtreeMask & 42)
       ? root === rootWithNestedUpdates
         ? nestedUpdateCount++
         : ((nestedUpdateCount = 0), (rootWithNestedUpdates = root))
@@ -12661,11 +12547,6 @@ function flushSpawnedWork() {
     flushSyncWorkAcrossRoots_impl(0, !1);
   }
 }
-function commitGestureOnRoot(root) {
-  var finishedGesture = root.gestures;
-  if (null === finishedGesture) throw Error(formatProdErrorMessage(548));
-  deleteScheduledGesture(root, finishedGesture);
-}
 function releaseRootPooledCache(root, remainingLanes) {
   0 === (root.pooledCacheLanes &= remainingLanes) &&
     ((remainingLanes = root.pooledCache),
@@ -12859,42 +12740,41 @@ function flushSyncWorkAcrossRoots_impl(syncTransitionLanes, onlyLegacy) {
     isFlushingWork = !0;
     do {
       var didPerformSomeWork = !1;
-      for (var root$180 = firstScheduledRoot; null !== root$180; ) {
+      for (var root$177 = firstScheduledRoot; null !== root$177; ) {
         if (!onlyLegacy)
           if (0 !== syncTransitionLanes) {
-            var pendingLanes = root$180.pendingLanes;
+            var pendingLanes = root$177.pendingLanes;
             if (0 === pendingLanes) var JSCompiler_inline_result = 0;
             else {
-              var suspendedLanes = root$180.suspendedLanes,
-                pingedLanes = root$180.pingedLanes;
+              var suspendedLanes = root$177.suspendedLanes,
+                pingedLanes = root$177.pingedLanes;
               JSCompiler_inline_result =
                 (1 << (31 - clz32(42 | syncTransitionLanes) + 1)) - 1;
               JSCompiler_inline_result &=
                 pendingLanes & ~(suspendedLanes & ~pingedLanes);
               JSCompiler_inline_result =
-                JSCompiler_inline_result & 201326741
-                  ? (JSCompiler_inline_result & 201326741) | 1
+                JSCompiler_inline_result & 201326677
+                  ? (JSCompiler_inline_result & 201326677) | 1
                   : JSCompiler_inline_result
                     ? JSCompiler_inline_result | 2
                     : 0;
             }
             0 !== JSCompiler_inline_result &&
               ((didPerformSomeWork = !0),
-              performSyncWorkOnRoot(root$180, JSCompiler_inline_result));
+              performSyncWorkOnRoot(root$177, JSCompiler_inline_result));
           } else
             (JSCompiler_inline_result = workInProgressRootRenderLanes),
               (JSCompiler_inline_result = getNextLanes(
-                root$180,
-                root$180 === workInProgressRoot ? JSCompiler_inline_result : 0,
-                null !== root$180.cancelPendingCommit ||
-                  -1 !== root$180.timeoutHandle
+                root$177,
+                root$177 === workInProgressRoot ? JSCompiler_inline_result : 0,
+                null !== root$177.cancelPendingCommit ||
+                  -1 !== root$177.timeoutHandle
               )),
-              (0 === (JSCompiler_inline_result & 3) &&
-                64 !== JSCompiler_inline_result) ||
-                checkIfRootIsPrerendering(root$180, JSCompiler_inline_result) ||
+              0 === (JSCompiler_inline_result & 3) ||
+                checkIfRootIsPrerendering(root$177, JSCompiler_inline_result) ||
                 ((didPerformSomeWork = !0),
-                performSyncWorkOnRoot(root$180, JSCompiler_inline_result));
-        root$180 = root$180.next;
+                performSyncWorkOnRoot(root$177, JSCompiler_inline_result));
+        root$177 = root$177.next;
       }
     } while (didPerformSomeWork);
     isFlushingWork = !1;
@@ -12922,8 +12802,7 @@ function processRootScheduleInMicrotask() {
         null === prev ? (firstScheduledRoot = next) : (prev.next = next),
         null === next && (lastScheduledRoot = prev);
     else if (
-      ((prev = root),
-      0 !== syncTransitionLanes || 0 !== (nextLanes & 3) || 64 === nextLanes)
+      ((prev = root), 0 !== syncTransitionLanes || 0 !== (nextLanes & 3))
     )
       mightHavePendingSyncWork = !0;
     root = next;
@@ -13135,20 +13014,20 @@ function extractEvents$1(
   }
 }
 for (
-  var i$jscomp$inline_1605 = 0;
-  i$jscomp$inline_1605 < simpleEventPluginEvents.length;
-  i$jscomp$inline_1605++
+  var i$jscomp$inline_1581 = 0;
+  i$jscomp$inline_1581 < simpleEventPluginEvents.length;
+  i$jscomp$inline_1581++
 ) {
-  var eventName$jscomp$inline_1606 =
-      simpleEventPluginEvents[i$jscomp$inline_1605],
-    domEventName$jscomp$inline_1607 =
-      eventName$jscomp$inline_1606.toLowerCase(),
-    capitalizedEvent$jscomp$inline_1608 =
-      eventName$jscomp$inline_1606[0].toUpperCase() +
-      eventName$jscomp$inline_1606.slice(1);
+  var eventName$jscomp$inline_1582 =
+      simpleEventPluginEvents[i$jscomp$inline_1581],
+    domEventName$jscomp$inline_1583 =
+      eventName$jscomp$inline_1582.toLowerCase(),
+    capitalizedEvent$jscomp$inline_1584 =
+      eventName$jscomp$inline_1582[0].toUpperCase() +
+      eventName$jscomp$inline_1582.slice(1);
   registerSimpleEvent(
-    domEventName$jscomp$inline_1607,
-    "on" + capitalizedEvent$jscomp$inline_1608
+    domEventName$jscomp$inline_1583,
+    "on" + capitalizedEvent$jscomp$inline_1584
   );
 }
 registerSimpleEvent(ANIMATION_END, "onAnimationEnd");
@@ -13356,15 +13235,22 @@ function dispatchEventForPluginEventSystem(
       var nodeTag = targetInst$jscomp$0.tag;
       if (3 === nodeTag || 4 === nodeTag) {
         var container = targetInst$jscomp$0.stateNode.containerInfo;
-        if (container === targetContainer) break;
+        if (
+          container === targetContainer ||
+          (8 === container.nodeType && container.parentNode === targetContainer)
+        )
+          break;
         if (4 === nodeTag)
           for (nodeTag = targetInst$jscomp$0.return; null !== nodeTag; ) {
             var grandTag = nodeTag.tag;
-            if (
-              (3 === grandTag || 4 === grandTag) &&
-              nodeTag.stateNode.containerInfo === targetContainer
-            )
-              return;
+            if (3 === grandTag || 4 === grandTag)
+              if (
+                ((grandTag = nodeTag.stateNode.containerInfo),
+                grandTag === targetContainer ||
+                  (8 === grandTag.nodeType &&
+                    grandTag.parentNode === targetContainer))
+              )
+                return;
             nodeTag = nodeTag.return;
           }
         for (; null !== container; ) {
@@ -14329,34 +14215,34 @@ function setInitialProperties(domElement, tag, props) {
         defaultChecked = null;
       for (hasSrc in props)
         if (props.hasOwnProperty(hasSrc)) {
-          var propValue$194 = props[hasSrc];
-          if (null != propValue$194)
+          var propValue$191 = props[hasSrc];
+          if (null != propValue$191)
             switch (hasSrc) {
               case "name":
-                hasSrcSet = propValue$194;
+                hasSrcSet = propValue$191;
                 break;
               case "type":
-                propValue = propValue$194;
+                propValue = propValue$191;
                 break;
               case "checked":
-                checked = propValue$194;
+                checked = propValue$191;
                 break;
               case "defaultChecked":
-                defaultChecked = propValue$194;
+                defaultChecked = propValue$191;
                 break;
               case "value":
-                propKey = propValue$194;
+                propKey = propValue$191;
                 break;
               case "defaultValue":
-                defaultValue = propValue$194;
+                defaultValue = propValue$191;
                 break;
               case "children":
               case "dangerouslySetInnerHTML":
-                if (null != propValue$194)
+                if (null != propValue$191)
                   throw Error(formatProdErrorMessage(137, tag));
                 break;
               default:
-                setProp(domElement, tag, hasSrc, propValue$194, props, null);
+                setProp(domElement, tag, hasSrc, propValue$191, props, null);
             }
         }
       initInput(
@@ -14493,14 +14379,14 @@ function setInitialProperties(domElement, tag, props) {
       return;
     default:
       if (isCustomElement(tag)) {
-        for (propValue$194 in props)
-          props.hasOwnProperty(propValue$194) &&
-            ((hasSrc = props[propValue$194]),
+        for (propValue$191 in props)
+          props.hasOwnProperty(propValue$191) &&
+            ((hasSrc = props[propValue$191]),
             void 0 !== hasSrc &&
               setPropOnCustomElement(
                 domElement,
                 tag,
-                propValue$194,
+                propValue$191,
                 hasSrc,
                 props,
                 void 0
@@ -14548,14 +14434,14 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
                 setProp(domElement, tag, propKey, null, nextProps, lastProp);
           }
       }
-      for (var propKey$211 in nextProps) {
-        var propKey = nextProps[propKey$211];
-        lastProp = lastProps[propKey$211];
+      for (var propKey$208 in nextProps) {
+        var propKey = nextProps[propKey$208];
+        lastProp = lastProps[propKey$208];
         if (
-          nextProps.hasOwnProperty(propKey$211) &&
+          nextProps.hasOwnProperty(propKey$208) &&
           (null != propKey || null != lastProp)
         )
-          switch (propKey$211) {
+          switch (propKey$208) {
             case "type":
               propKey !== lastProp && (viewTransitionMutationContext = !0);
               type = propKey;
@@ -14590,7 +14476,7 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
                 setProp(
                   domElement,
                   tag,
-                  propKey$211,
+                  propKey$208,
                   propKey,
                   nextProps,
                   lastProp
@@ -14609,7 +14495,7 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
       );
       return;
     case "select":
-      propKey = value = defaultValue = propKey$211 = null;
+      propKey = value = defaultValue = propKey$208 = null;
       for (type in lastProps)
         if (
           ((lastDefaultValue = lastProps[type]),
@@ -14641,7 +14527,7 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
           switch (name) {
             case "value":
               type !== lastDefaultValue && (viewTransitionMutationContext = !0);
-              propKey$211 = type;
+              propKey$208 = type;
               break;
             case "defaultValue":
               type !== lastDefaultValue && (viewTransitionMutationContext = !0);
@@ -14664,15 +14550,15 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
       tag = defaultValue;
       lastProps = value;
       nextProps = propKey;
-      null != propKey$211
-        ? updateOptions(domElement, !!lastProps, propKey$211, !1)
+      null != propKey$208
+        ? updateOptions(domElement, !!lastProps, propKey$208, !1)
         : !!nextProps !== !!lastProps &&
           (null != tag
             ? updateOptions(domElement, !!lastProps, tag, !0)
             : updateOptions(domElement, !!lastProps, lastProps ? [] : "", !1));
       return;
     case "textarea":
-      propKey = propKey$211 = null;
+      propKey = propKey$208 = null;
       for (defaultValue in lastProps)
         if (
           ((name = lastProps[defaultValue]),
@@ -14697,7 +14583,7 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
           switch (value) {
             case "value":
               name !== type && (viewTransitionMutationContext = !0);
-              propKey$211 = name;
+              propKey$208 = name;
               break;
             case "defaultValue":
               name !== type && (viewTransitionMutationContext = !0);
@@ -14712,17 +14598,17 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
               name !== type &&
                 setProp(domElement, tag, value, name, nextProps, type);
           }
-      updateTextarea(domElement, propKey$211, propKey);
+      updateTextarea(domElement, propKey$208, propKey);
       return;
     case "option":
-      for (var propKey$227 in lastProps)
+      for (var propKey$224 in lastProps)
         if (
-          ((propKey$211 = lastProps[propKey$227]),
-          lastProps.hasOwnProperty(propKey$227) &&
-            null != propKey$211 &&
-            !nextProps.hasOwnProperty(propKey$227))
+          ((propKey$208 = lastProps[propKey$224]),
+          lastProps.hasOwnProperty(propKey$224) &&
+            null != propKey$208 &&
+            !nextProps.hasOwnProperty(propKey$224))
         )
-          switch (propKey$227) {
+          switch (propKey$224) {
             case "selected":
               domElement.selected = !1;
               break;
@@ -14730,34 +14616,34 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
               setProp(
                 domElement,
                 tag,
-                propKey$227,
+                propKey$224,
                 null,
                 nextProps,
-                propKey$211
+                propKey$208
               );
           }
       for (lastDefaultValue in nextProps)
         if (
-          ((propKey$211 = nextProps[lastDefaultValue]),
+          ((propKey$208 = nextProps[lastDefaultValue]),
           (propKey = lastProps[lastDefaultValue]),
           nextProps.hasOwnProperty(lastDefaultValue) &&
-            propKey$211 !== propKey &&
-            (null != propKey$211 || null != propKey))
+            propKey$208 !== propKey &&
+            (null != propKey$208 || null != propKey))
         )
           switch (lastDefaultValue) {
             case "selected":
-              propKey$211 !== propKey && (viewTransitionMutationContext = !0);
+              propKey$208 !== propKey && (viewTransitionMutationContext = !0);
               domElement.selected =
-                propKey$211 &&
-                "function" !== typeof propKey$211 &&
-                "symbol" !== typeof propKey$211;
+                propKey$208 &&
+                "function" !== typeof propKey$208 &&
+                "symbol" !== typeof propKey$208;
               break;
             default:
               setProp(
                 domElement,
                 tag,
                 lastDefaultValue,
-                propKey$211,
+                propKey$208,
                 nextProps,
                 propKey
               );
@@ -14778,24 +14664,24 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
     case "track":
     case "wbr":
     case "menuitem":
-      for (var propKey$232 in lastProps)
-        (propKey$211 = lastProps[propKey$232]),
-          lastProps.hasOwnProperty(propKey$232) &&
-            null != propKey$211 &&
-            !nextProps.hasOwnProperty(propKey$232) &&
-            setProp(domElement, tag, propKey$232, null, nextProps, propKey$211);
+      for (var propKey$229 in lastProps)
+        (propKey$208 = lastProps[propKey$229]),
+          lastProps.hasOwnProperty(propKey$229) &&
+            null != propKey$208 &&
+            !nextProps.hasOwnProperty(propKey$229) &&
+            setProp(domElement, tag, propKey$229, null, nextProps, propKey$208);
       for (checked in nextProps)
         if (
-          ((propKey$211 = nextProps[checked]),
+          ((propKey$208 = nextProps[checked]),
           (propKey = lastProps[checked]),
           nextProps.hasOwnProperty(checked) &&
-            propKey$211 !== propKey &&
-            (null != propKey$211 || null != propKey))
+            propKey$208 !== propKey &&
+            (null != propKey$208 || null != propKey))
         )
           switch (checked) {
             case "children":
             case "dangerouslySetInnerHTML":
-              if (null != propKey$211)
+              if (null != propKey$208)
                 throw Error(formatProdErrorMessage(137, tag));
               break;
             default:
@@ -14803,7 +14689,7 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
                 domElement,
                 tag,
                 checked,
-                propKey$211,
+                propKey$208,
                 nextProps,
                 propKey
               );
@@ -14811,49 +14697,49 @@ function updateProperties(domElement, tag, lastProps, nextProps) {
       return;
     default:
       if (isCustomElement(tag)) {
-        for (var propKey$237 in lastProps)
-          (propKey$211 = lastProps[propKey$237]),
-            lastProps.hasOwnProperty(propKey$237) &&
-              void 0 !== propKey$211 &&
-              !nextProps.hasOwnProperty(propKey$237) &&
+        for (var propKey$234 in lastProps)
+          (propKey$208 = lastProps[propKey$234]),
+            lastProps.hasOwnProperty(propKey$234) &&
+              void 0 !== propKey$208 &&
+              !nextProps.hasOwnProperty(propKey$234) &&
               setPropOnCustomElement(
                 domElement,
                 tag,
-                propKey$237,
+                propKey$234,
                 void 0,
                 nextProps,
-                propKey$211
+                propKey$208
               );
         for (defaultChecked in nextProps)
-          (propKey$211 = nextProps[defaultChecked]),
+          (propKey$208 = nextProps[defaultChecked]),
             (propKey = lastProps[defaultChecked]),
             !nextProps.hasOwnProperty(defaultChecked) ||
-              propKey$211 === propKey ||
-              (void 0 === propKey$211 && void 0 === propKey) ||
+              propKey$208 === propKey ||
+              (void 0 === propKey$208 && void 0 === propKey) ||
               setPropOnCustomElement(
                 domElement,
                 tag,
                 defaultChecked,
-                propKey$211,
+                propKey$208,
                 nextProps,
                 propKey
               );
         return;
       }
   }
-  for (var propKey$242 in lastProps)
-    (propKey$211 = lastProps[propKey$242]),
-      lastProps.hasOwnProperty(propKey$242) &&
-        null != propKey$211 &&
-        !nextProps.hasOwnProperty(propKey$242) &&
-        setProp(domElement, tag, propKey$242, null, nextProps, propKey$211);
+  for (var propKey$239 in lastProps)
+    (propKey$208 = lastProps[propKey$239]),
+      lastProps.hasOwnProperty(propKey$239) &&
+        null != propKey$208 &&
+        !nextProps.hasOwnProperty(propKey$239) &&
+        setProp(domElement, tag, propKey$239, null, nextProps, propKey$208);
   for (lastProp in nextProps)
-    (propKey$211 = nextProps[lastProp]),
+    (propKey$208 = nextProps[lastProp]),
       (propKey = lastProps[lastProp]),
       !nextProps.hasOwnProperty(lastProp) ||
-        propKey$211 === propKey ||
-        (null == propKey$211 && null == propKey) ||
-        setProp(domElement, tag, lastProp, propKey$211, nextProps, propKey);
+        propKey$208 === propKey ||
+        (null == propKey$208 && null == propKey) ||
+        setProp(domElement, tag, lastProp, propKey$208, nextProps, propKey);
 }
 var eventsEnabled = null,
   selectionInformation = null;
@@ -14928,56 +14814,21 @@ function handleErrorInNextTick(error) {
     throw error;
   });
 }
-function isSingletonScope(type) {
-  return "head" === type;
-}
 function clearSuspenseBoundary(parentInstance, suspenseInstance) {
   var node = suspenseInstance,
-    possiblePreambleContribution = 0,
     depth = 0;
   do {
     var nextNode = node.nextSibling;
     parentInstance.removeChild(node);
     if (nextNode && 8 === nextNode.nodeType)
       if (((node = nextNode.data), "/$" === node)) {
-        if (
-          0 < possiblePreambleContribution &&
-          8 > possiblePreambleContribution
-        ) {
-          node = possiblePreambleContribution;
-          var ownerDocument = parentInstance.ownerDocument;
-          node & 1 && releaseSingletonInstance(ownerDocument.documentElement);
-          node & 2 && releaseSingletonInstance(ownerDocument.body);
-          if (node & 4)
-            for (
-              node = ownerDocument.head,
-                releaseSingletonInstance(node),
-                ownerDocument = node.firstChild;
-              ownerDocument;
-
-            ) {
-              var nextNode$jscomp$0 = ownerDocument.nextSibling,
-                nodeName = ownerDocument.nodeName;
-              ownerDocument[internalHoistableMarker] ||
-                "SCRIPT" === nodeName ||
-                "STYLE" === nodeName ||
-                ("LINK" === nodeName &&
-                  "stylesheet" === ownerDocument.rel.toLowerCase()) ||
-                node.removeChild(ownerDocument);
-              ownerDocument = nextNode$jscomp$0;
-            }
-        }
         if (0 === depth) {
           parentInstance.removeChild(nextNode);
           retryIfBlockedOn(suspenseInstance);
           return;
         }
         depth--;
-      } else
-        "$" === node || "$?" === node || "$!" === node
-          ? depth++
-          : (possiblePreambleContribution = node.charCodeAt(0) - 48);
-    else possiblePreambleContribution = 0;
+      } else ("$" !== node && "$?" !== node && "$!" !== node) || depth++;
     node = nextNode;
   } while (node);
   retryIfBlockedOn(suspenseInstance);
@@ -15030,7 +14881,6 @@ function measureInstance(instance) {
 }
 function startViewTransition(
   rootContainer,
-  transitionTypes,
   mutationCallback,
   layoutCallback,
   afterMutationCallback,
@@ -15075,7 +14925,7 @@ function startViewTransition(
           );
         afterMutationCallback();
       },
-      types: transitionTypes
+      types: null
     });
     ownerDocument.__reactViewTransition = transition;
     transition.ready.then(spawnedWorkCallback, spawnedWorkCallback);
@@ -15265,7 +15115,6 @@ function getNextHydratable(node) {
   }
   return node;
 }
-var previousHydratableOnEnteringScopedSingleton = null;
 function getParentSuspenseInstance(targetInstance) {
   targetInstance = targetInstance.previousSibling;
   for (var depth = 0; targetInstance; ) {
@@ -15356,19 +15205,12 @@ function resolveSingletonInstance(type, props, rootContainerInstance) {
       throw Error(formatProdErrorMessage(451));
   }
 }
-function releaseSingletonInstance(instance) {
-  for (var attributes = instance.attributes; attributes.length; )
-    instance.removeAttributeNode(attributes[0]);
-  detachDeletedInstance(instance);
-}
 var preloadPropsMap = new Map(),
   preconnectsSet = new Set();
 function getHoistableRoot(container) {
   return "function" === typeof container.getRootNode
     ? container.getRootNode()
-    : 9 === container.nodeType
-      ? container
-      : container.ownerDocument;
+    : container.ownerDocument;
 }
 var previousDispatcher = ReactDOMSharedInternals.d;
 ReactDOMSharedInternals.d = {
@@ -15662,26 +15504,26 @@ function getResource(type, currentProps, pendingProps, currentResource) {
         "string" === typeof pendingProps.precedence
       ) {
         type = getStyleKey(pendingProps.href);
-        var styles$250 = getResourcesFromRoot(
+        var styles$247 = getResourcesFromRoot(
             JSCompiler_inline_result
           ).hoistableStyles,
-          resource$251 = styles$250.get(type);
-        resource$251 ||
+          resource$248 = styles$247.get(type);
+        resource$248 ||
           ((JSCompiler_inline_result =
             JSCompiler_inline_result.ownerDocument || JSCompiler_inline_result),
-          (resource$251 = {
+          (resource$248 = {
             type: "stylesheet",
             instance: null,
             count: 0,
             state: { loading: 0, preload: null }
           }),
-          styles$250.set(type, resource$251),
-          (styles$250 = JSCompiler_inline_result.querySelector(
+          styles$247.set(type, resource$248),
+          (styles$247 = JSCompiler_inline_result.querySelector(
             getStylesheetSelectorFromKey(type)
           )) &&
-            !styles$250._p &&
-            ((resource$251.instance = styles$250),
-            (resource$251.state.loading = 5)),
+            !styles$247._p &&
+            ((resource$248.instance = styles$247),
+            (resource$248.state.loading = 5)),
           preloadPropsMap.has(type) ||
             ((pendingProps = {
               rel: "preload",
@@ -15694,16 +15536,16 @@ function getResource(type, currentProps, pendingProps, currentResource) {
               referrerPolicy: pendingProps.referrerPolicy
             }),
             preloadPropsMap.set(type, pendingProps),
-            styles$250 ||
+            styles$247 ||
               preloadStylesheet(
                 JSCompiler_inline_result,
                 type,
                 pendingProps,
-                resource$251.state
+                resource$248.state
               )));
         if (currentProps && null === currentResource)
           throw Error(formatProdErrorMessage(528, ""));
-        return resource$251;
+        return resource$248;
       }
       if (currentProps && null !== currentResource)
         throw Error(formatProdErrorMessage(529, ""));
@@ -15800,37 +15642,37 @@ function acquireResource(hoistableRoot, resource, props) {
         return (resource.instance = instance);
       case "stylesheet":
         styleProps = getStyleKey(props.href);
-        var instance$256 = hoistableRoot.querySelector(
+        var instance$253 = hoistableRoot.querySelector(
           getStylesheetSelectorFromKey(styleProps)
         );
-        if (instance$256)
+        if (instance$253)
           return (
             (resource.state.loading |= 4),
-            (resource.instance = instance$256),
-            markNodeAsHoistable(instance$256),
-            instance$256
+            (resource.instance = instance$253),
+            markNodeAsHoistable(instance$253),
+            instance$253
           );
         instance = stylesheetPropsFromRawProps(props);
         (styleProps = preloadPropsMap.get(styleProps)) &&
           adoptPreloadPropsForStylesheet(instance, styleProps);
-        instance$256 = (
+        instance$253 = (
           hoistableRoot.ownerDocument || hoistableRoot
         ).createElement("link");
-        markNodeAsHoistable(instance$256);
-        var linkInstance = instance$256;
+        markNodeAsHoistable(instance$253);
+        var linkInstance = instance$253;
         linkInstance._p = new Promise(function (resolve, reject) {
           linkInstance.onload = resolve;
           linkInstance.onerror = reject;
         });
-        setInitialProperties(instance$256, "link", instance);
+        setInitialProperties(instance$253, "link", instance);
         resource.state.loading |= 4;
-        insertStylesheet(instance$256, props.precedence, hoistableRoot);
-        return (resource.instance = instance$256);
+        insertStylesheet(instance$253, props.precedence, hoistableRoot);
+        return (resource.instance = instance$253);
       case "script":
-        instance$256 = getScriptKey(props.src);
+        instance$253 = getScriptKey(props.src);
         if (
           (styleProps = hoistableRoot.querySelector(
-            getScriptSelectorFromKey(instance$256)
+            getScriptSelectorFromKey(instance$253)
           ))
         )
           return (
@@ -15839,7 +15681,7 @@ function acquireResource(hoistableRoot, resource, props) {
             styleProps
           );
         instance = props;
-        if ((styleProps = preloadPropsMap.get(instance$256)))
+        if ((styleProps = preloadPropsMap.get(instance$253)))
           (instance = assign({}, props)),
             adoptPreloadPropsForScript(instance, styleProps);
         hoistableRoot = hoistableRoot.ownerDocument || hoistableRoot;
@@ -16171,7 +16013,6 @@ function FiberRootNode(
   this.pooledCache = null;
   this.pooledCacheLanes = 0;
   this.formState = formState;
-  this.gestures = null;
   this.incompleteTransitions = new Map();
 }
 function createFiberRoot(
@@ -16859,16 +16700,16 @@ ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = function (target) {
     0 === i && attemptExplicitHydrationTarget(target);
   }
 };
-var isomorphicReactPackageVersion$jscomp$inline_1857 = React.version;
+var isomorphicReactPackageVersion$jscomp$inline_1828 = React.version;
 if (
-  "19.1.0-experimental-e670e72f-20250214" !==
-  isomorphicReactPackageVersion$jscomp$inline_1857
+  "19.1.0-experimental-b3a95caf-20250113" !==
+  isomorphicReactPackageVersion$jscomp$inline_1828
 )
   throw Error(
     formatProdErrorMessage(
       527,
-      isomorphicReactPackageVersion$jscomp$inline_1857,
-      "19.1.0-experimental-e670e72f-20250214"
+      isomorphicReactPackageVersion$jscomp$inline_1828,
+      "19.1.0-experimental-b3a95caf-20250113"
     )
   );
 ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
@@ -16888,24 +16729,24 @@ ReactDOMSharedInternals.findDOMNode = function (componentOrElement) {
     null === componentOrElement ? null : componentOrElement.stateNode;
   return componentOrElement;
 };
-var internals$jscomp$inline_2397 = {
+var internals$jscomp$inline_2364 = {
   bundleType: 0,
-  version: "19.1.0-experimental-e670e72f-20250214",
+  version: "19.1.0-experimental-b3a95caf-20250113",
   rendererPackageName: "react-dom",
   currentDispatcherRef: ReactSharedInternals,
-  reconcilerVersion: "19.1.0-experimental-e670e72f-20250214"
+  reconcilerVersion: "19.1.0-experimental-b3a95caf-20250113"
 };
 if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
-  var hook$jscomp$inline_2398 = __REACT_DEVTOOLS_GLOBAL_HOOK__;
+  var hook$jscomp$inline_2365 = __REACT_DEVTOOLS_GLOBAL_HOOK__;
   if (
-    !hook$jscomp$inline_2398.isDisabled &&
-    hook$jscomp$inline_2398.supportsFiber
+    !hook$jscomp$inline_2365.isDisabled &&
+    hook$jscomp$inline_2365.supportsFiber
   )
     try {
-      (rendererID = hook$jscomp$inline_2398.inject(
-        internals$jscomp$inline_2397
+      (rendererID = hook$jscomp$inline_2365.inject(
+        internals$jscomp$inline_2364
       )),
-        (injectedHook = hook$jscomp$inline_2398);
+        (injectedHook = hook$jscomp$inline_2365);
     } catch (err) {}
 }
 exports.createComponentSelector = function (component) {
@@ -16952,7 +16793,9 @@ exports.createRoot = function (container, options) {
     null
   );
   container[internalContainerInstanceKey] = options.current;
-  listenToAllSupportedEvents(container);
+  listenToAllSupportedEvents(
+    8 === container.nodeType ? container.parentNode : container
+  );
   return new ReactDOMRoot(options);
 };
 exports.createTestNameSelector = function (id) {
@@ -17148,4 +16991,4 @@ exports.observeVisibleRects = function (
     }
   };
 };
-exports.version = "19.1.0-experimental-e670e72f-20250214";
+exports.version = "19.1.0-experimental-b3a95caf-20250113";
diff --git a/node_modules/react-dom/cjs/react-dom.development.js b/node_modules/react-dom/cjs/react-dom.development.js
index 5f20b56..1cbf70e 100644
--- a/node_modules/react-dom/cjs/react-dom.development.js
+++ b/node_modules/react-dom/cjs/react-dom.development.js
@@ -416,7 +416,7 @@
     exports.useFormStatus = function () {
       return resolveDispatcher().useHostTransitionStatus();
     };
-    exports.version = "19.1.0-experimental-e670e72f-20250214";
+    exports.version = "19.1.0-experimental-b3a95caf-20250113";
     "undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ &&
       "function" ===
         typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop &&
diff --git a/node_modules/react-dom/cjs/react-dom.production.js b/node_modules/react-dom/cjs/react-dom.production.js
index d15d66f..0f86700 100644
--- a/node_modules/react-dom/cjs/react-dom.production.js
+++ b/node_modules/react-dom/cjs/react-dom.production.js
@@ -207,4 +207,4 @@ exports.useFormState = function (action, initialState, permalink) {
 exports.useFormStatus = function () {
   return ReactSharedInternals.H.useHostTransitionStatus();
 };
-exports.version = "19.1.0-experimental-e670e72f-20250214";
+exports.version = "19.1.0-experimental-b3a95caf-20250113";
diff --git a/node_modules/react-dom/cjs/react-dom.react-server.development.js b/node_modules/react-dom/cjs/react-dom.react-server.development.js
index e1126d2..c369d3a 100644
--- a/node_modules/react-dom/cjs/react-dom.react-server.development.js
+++ b/node_modules/react-dom/cjs/react-dom.react-server.development.js
@@ -336,5 +336,5 @@
             }))
           : Internals.d.m(href));
     };
-    exports.version = "19.1.0-experimental-e670e72f-20250214";
+    exports.version = "19.1.0-experimental-b3a95caf-20250113";
   })();
diff --git a/node_modules/react-dom/cjs/react-dom.react-server.production.js b/node_modules/react-dom/cjs/react-dom.react-server.production.js
index 66caf38..8b3624a 100644
--- a/node_modules/react-dom/cjs/react-dom.react-server.production.js
+++ b/node_modules/react-dom/cjs/react-dom.react-server.production.js
@@ -149,4 +149,4 @@ exports.preloadModule = function (href, options) {
       });
     } else Internals.d.m(href);
 };
-exports.version = "19.1.0-experimental-e670e72f-20250214";
+exports.version = "19.1.0-experimental-b3a95caf-20250113";
diff --git a/node_modules/react-dom/package.json b/node_modules/react-dom/package.json
index 74943b3..f566dfa 100644
--- a/node_modules/react-dom/package.json
+++ b/node_modules/react-dom/package.json
@@ -1,6 +1,6 @@
 {
   "name": "react-dom",
-  "version": "0.0.0-experimental-e670e72f-20250214",
+  "version": "0.0.0-experimental-b3a95caf-20250113",
   "description": "React package for working with the DOM.",
   "main": "index.js",
   "repository": {
@@ -17,10 +17,10 @@
   },
   "homepage": "https://react.dev/",
   "dependencies": {
-    "scheduler": "0.0.0-experimental-e670e72f-20250214"
+    "scheduler": "0.0.0-experimental-b3a95caf-20250113"
   },
   "peerDependencies": {
-    "react": "0.0.0-experimental-e670e72f-20250214"
+    "react": "0.0.0-experimental-b3a95caf-20250113"
   },
   "files": [
     "LICENSE",
